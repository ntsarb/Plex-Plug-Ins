{"version":3,"file":"js/chunk-357-29a987be982490c2d114-plex-0.0.0.47-f01acfe.js","mappings":"mGAEA,MAAMA,EACJ,WAEIC,EAAe,EAAQ,OAE7BC,EAAOC,QAAUF,EAAaD,I,+HCD9B,MAmCA,EAnCiB,oBAA2B,CAG1CI,SAAU,IAGVC,WAAY,WACV,MAAMC,EAAWC,EAAA,GAAiB,YAClCC,KAAKC,SAASH,EAAU,uBAAwBE,KAAKE,QACrDF,KAAKC,SAASH,EAASK,IAAI,QAAS,kBAAmBH,KAAKE,SAI9DE,cAAe,WACb,MAAMN,EAAWC,EAAA,GAAiB,YAC5BM,EAAOP,EAASK,IAAI,QACpBG,EAAUD,EAAKE,UAAY,mBAAc,QACzCC,EAAgBV,EAASK,IAAI,iBAC7BM,EAAO,CACXC,KAAMC,OAAOC,SAASF,KACtBG,UAAWF,OAAOG,UAAUD,UAC5BE,QAAO,IACPT,QAAAA,EACAD,KAAMA,EAAKW,SACXC,YAAaZ,EAAKF,IAAI,uBACtBe,YAAab,EAAKc,OAAOH,SACzBI,eAAgBf,EAAKc,OAAOE,OAM9B,OAJIb,IACDC,EAAaD,cAAgBA,EAAcQ,SAC3CP,EAAaa,iBAAmBd,EAAca,OAE1CZ,K,4BCjCT,OAAO,gBAACc,EAAA,EAAD,CAAqBC,IAAI,WAAWC,KAAM,M,gBCLnD,IAAIC,EAAa,EAAQ,OACzB,SAASC,EAAUC,GAAO,OAAOA,IAAQA,EAAIC,WAAaD,EAAa,QAAIA,GAC3ElC,EAAOC,SAAW+B,EAAoB,SAAKA,GAAY9B,UAAS,SAAU8B,EAAWI,EAAOC,EAAQC,EAASvB,GAC3GT,KAAKiC,aAAe,CAAC,EAAE,YACzBF,EAAU/B,KAAKkC,MAAMH,EAASL,EAAWK,SAAUtB,EAAOA,GAAQ,GAChE,IAAiB0B,EAAbC,EAAS,GAAYC,EAAa,WAAYC,EAAiBtC,KAAKsC,iBAAkBC,EAAKvC,KAsD/F,OA7BAoC,GAAU,kEACNE,SAAmBH,EAAUL,GAAUA,EAAOxB,WAA4B+B,EAAeF,EAAOK,MAAMV,GAAUK,GAChH,qCACJA,EAASJ,EAAY,GAAEU,KAAKX,EAASA,GAAUA,EAAOtB,cAAgB,CAACkC,KAAK,GAAGC,QAAQJ,EAAKK,QAAQ,GAftG,SAAkBd,EAAOrB,GAGvB,MAAO,kDAY0GA,GAAMoC,GAAGN,EAAKK,QAAQ,GA1BzI,SAAkBd,EAAOrB,GAEvB,IAAiB0B,EAMjB,MANa,GACH,6CACNG,SAAmBH,EAAgE,OAArDA,EAAUL,GAAUA,EAAOtB,iBAA6C,IAAX2B,EAAmBA,EAASA,EAAOW,gBAAiCT,EAAeF,EAAOK,MAAMV,GAAUK,GACrM,oDACAG,SAAmBH,EAAgE,OAArDA,EAAUL,GAAUA,EAAOtB,iBAA6C,IAAX2B,EAAmBA,EAASA,EAAO7B,WAA4B+B,EAAeF,EAAOK,MAAMV,GAAUK,GAChM,UAmBgJ1B,GAAMA,KAAKA,MACvI,IAAX0B,KAAgBC,GAAUD,GACvCC,GAAU,8DACNE,SAAmBH,EAAUL,GAAUA,EAAOpB,QAAyB2B,EAAeF,EAAOK,MAAMV,GAAUK,GAC7G,uDACAG,SAAmBH,EAAUL,GAAUA,EAAOjB,aAA8BwB,EAAeF,EAAOK,MAAMV,GAAUK,GAClH,iDACAG,SAAmBH,EAA0D,OAA/CA,EAAUL,GAAUA,EAAOf,WAAuC,IAAXoB,EAAmBA,EAASA,EAAOY,QAAyBV,EAAeF,EAAOK,MAAMV,GAAUK,GACvL,oDACAG,SAAmBH,EAA0D,OAA/CA,EAAUL,GAAUA,EAAOf,WAAuC,IAAXoB,EAAmBA,EAASA,EAAO7B,WAA4B+B,EAAeF,EAAOK,MAAMV,GAAUK,GAC1L,qDACAG,SAAmBH,EAA0D,OAA/CA,EAAUL,GAAUA,EAAOf,WAAuC,IAAXoB,EAAmBA,EAASA,EAAOa,YAA6BX,EAAeF,EAAOK,MAAMV,GAAUK,GAC3L,mDACAG,EAAiBX,EAAU,EAAQ,QAAmDc,KAAKX,EAAyD,OAA/CK,EAAUL,GAAUA,EAAOf,WAAuC,IAAXoB,EAAmBA,EAASA,EAAOc,OAAS,CAACP,KAAK,GAAGjC,KAAKA,KACtN,mEACA6B,SAAmBH,EAAuD,OAA5CA,EAAUL,GAAUA,EAAOzB,QAAoC,IAAX8B,EAAmBA,EAASA,EAAOe,YAA6Bb,EAAeF,EAAOK,MAAMV,GAAUK,GACxL,MACJA,EAASJ,EAAY,GAAEU,KAAKX,EAASA,GAAUA,EAAOb,YAAc,CAACyB,KAAK,GAAGC,QAAQJ,EAAKY,KAAKN,GAAGN,EAAKK,QAAQ,GA1BjH,SAAkBd,EAAOrB,GAGvB,MAAO,gBAuBqHA,GAAMA,KAAKA,MAC/G,IAAX0B,KAAgBC,GAAUD,GACvCC,EAAU,iEACNE,SAAmBH,EAAUL,GAAUA,EAAOV,kBAAmCiB,EAAeF,EAAOK,MAAMV,GAAUK,GACvH,sDACAG,EAAiBX,EAAU,EAAQ,QAAmDc,KAAKX,EAA6D,OAAnDK,EAAUL,GAAUA,EAAOZ,eAA2C,IAAXiB,EAAmBA,EAASA,EAAOiB,UAAY,CAACV,KAAK,GAAGjC,KAAKA,KAC7N,uDACA6B,EAAiBX,EAAU,EAAQ,QAAmDc,KAAKX,EAA6D,OAAnDK,EAAUL,GAAUA,EAAOZ,eAA2C,IAAXiB,EAAmBA,EAASA,EAAOkB,WAAa,CAACX,KAAK,GAAGjC,KAAKA,KAC9N","sources":["webpack://server-manager/./app/js/utils/handlebars/string/formatBoolean.ts","webpack://server-manager/./app/js/views/InfoView.ts","webpack://server-manager/./app/js/v4/features/info/components/InfoViewPage.tsx","webpack://server-manager/./app/templates/InfoView.tpl"],"sourcesContent":["/* eslint-plugin-disable @typescript-eslint */\n\nconst formatBoolean =\n  require('app/js/utils/string/format/formatBoolean').default;\n// @ts-expect-error ts-migrate(2451) FIXME: Cannot redeclare block-scoped variable 'stripOptio... Remove this comment to see the full error message\nconst stripOptions = require('../stripOptions');\n\nmodule.exports = stripOptions(formatBoolean);\n","import * as adapters from 'app/js/adapters/adapters';\nimport Marionette from 'app/js/initializers/extensions/MarionetteExtension';\nimport browser from 'app/js/utils/device/browser';\n// @ts-expect-error ts-migrate(2307) FIXME: Cannot find module 'app/templates/InfoV... Remove this comment to see the full error message\nimport tpl from 'app/templates/InfoView.tpl';\n\nconst InfoView = Marionette.ItemView.extend({\n  //\n  // Properties\n  template: tpl,\n  //\n  // Init\n  initialize: function () {\n    const appModel = adapters.resolve('appModel');\n    this.listenTo(appModel, 'change:primaryServer', this.render);\n    this.listenTo(appModel.get('user'), 'change:signedIn', this.render);\n  },\n  //\n  // Control\n  serializeData: function () {\n    const appModel = adapters.resolve('appModel');\n    const user = appModel.get('user');\n    const version = user.isNinja() ? __RELEASE__ : __VERSION__;\n    const primaryServer = appModel.get('primaryServer');\n    const data = {\n      host: window.location.host,\n      userAgent: window.navigator.userAgent,\n      browser,\n      version,\n      user: user.toJSON(),\n      hasPlexPass: user.get('hasPlexSubscription'),\n      cloudServer: user.server.toJSON(),\n      cloudServerUrl: user.server.url(),\n    };\n    if (primaryServer) {\n      (data as any).primaryServer = primaryServer.toJSON();\n      (data as any).primaryServerUrl = primaryServer.url();\n    }\n    return data;\n  },\n});\nexport default InfoView;\n","import React, { ReactElement } from 'react';\nimport InfoView from 'app/js/views/InfoView';\nimport MarionetteComponent from 'app/js/views/v3/components/MarionetteComponent';\n\nexport default function InfoViewPage(): ReactElement {\n  return <MarionetteComponent key=\"InfoView\" view={InfoView} />;\n}\n","var Handlebars = require(\"../../node_modules/handlebars/runtime.js\");\nfunction __default(obj) { return obj && (obj.__esModule ? obj[\"default\"] : obj); }\nmodule.exports = (Handlebars[\"default\"] || Handlebars).template(function (Handlebars,depth0,helpers,partials,data) {\n  this.compilerInfo = [4,'>= 1.0.0'];\nhelpers = this.merge(helpers, Handlebars.helpers); data = data || {};\n  var buffer = \"\", stack1, functionType=\"function\", escapeExpression=this.escapeExpression, self=this;\n\nfunction program1(depth0,data) {\n  \n  var buffer = \"\", stack1;\n  buffer += \" <p><span class=\\\"text-muted\\\">Name:</span> \"\n    + escapeExpression(((stack1 = ((stack1 = (depth0 && depth0.primaryServer)),stack1 == null || stack1 === false ? stack1 : stack1.friendlyName)),typeof stack1 === functionType ? stack1.apply(depth0) : stack1))\n    + \"</p> <p><span class=\\\"text-muted\\\">Version:</span> \"\n    + escapeExpression(((stack1 = ((stack1 = (depth0 && depth0.primaryServer)),stack1 == null || stack1 === false ? stack1 : stack1.version)),typeof stack1 === functionType ? stack1.apply(depth0) : stack1))\n    + \"</p> \";\n  return buffer;\n  }\n\nfunction program3(depth0,data) {\n  \n  \n  return \" <p><span class=\\\"text-muted\\\">none</span></p> \";\n  }\n\nfunction program5(depth0,data) {\n  \n  \n  return \"(Plex Pass)\";\n  }\n\n  buffer += \" <h3>Plex Web</h3> <p><span class=\\\"text-muted\\\">Version:</span> \"\n    + escapeExpression(((stack1 = (depth0 && depth0.version)),typeof stack1 === functionType ? stack1.apply(depth0) : stack1))\n    + \"</p> <h3>Plex Media Server</h3> \";\n  stack1 = helpers['if'].call(depth0, (depth0 && depth0.primaryServer), {hash:{},inverse:self.program(3, program3, data),fn:self.program(1, program1, data),data:data});\n  if(stack1 || stack1 === 0) { buffer += stack1; }\n  buffer += \" <h3>Browser</h3> <p><span class=\\\"text-muted\\\">Host:</span> \"\n    + escapeExpression(((stack1 = (depth0 && depth0.host)),typeof stack1 === functionType ? stack1.apply(depth0) : stack1))\n    + \"</p> <p><span class=\\\"text-muted\\\">User Agent:</span> \"\n    + escapeExpression(((stack1 = (depth0 && depth0.userAgent)),typeof stack1 === functionType ? stack1.apply(depth0) : stack1))\n    + \"</p> <p><span class=\\\"text-muted\\\">Name:</span> \"\n    + escapeExpression(((stack1 = ((stack1 = (depth0 && depth0.browser)),stack1 == null || stack1 === false ? stack1 : stack1.name)),typeof stack1 === functionType ? stack1.apply(depth0) : stack1))\n    + \"</p> <p><span class=\\\"text-muted\\\">Version:</span> \"\n    + escapeExpression(((stack1 = ((stack1 = (depth0 && depth0.browser)),stack1 == null || stack1 === false ? stack1 : stack1.version)),typeof stack1 === functionType ? stack1.apply(depth0) : stack1))\n    + \"</p> <p><span class=\\\"text-muted\\\">Platform:</span> \"\n    + escapeExpression(((stack1 = ((stack1 = (depth0 && depth0.browser)),stack1 == null || stack1 === false ? stack1 : stack1.platform)),typeof stack1 === functionType ? stack1.apply(depth0) : stack1))\n    + \"</p> <p><span class=\\\"text-muted\\\">Mobile:</span> \"\n    + escapeExpression(__default(require(\"../js/utils/handlebars/string/formatBoolean.ts\")).call(depth0, ((stack1 = (depth0 && depth0.browser)),stack1 == null || stack1 === false ? stack1 : stack1.mobile), {hash:{},data:data}))\n    + \"</p> <h3>User</h3> <p><span class=\\\"text-muted\\\">Username:</span> \"\n    + escapeExpression(((stack1 = ((stack1 = (depth0 && depth0.user)),stack1 == null || stack1 === false ? stack1 : stack1.username)),typeof stack1 === functionType ? stack1.apply(depth0) : stack1))\n    + \" \";\n  stack1 = helpers['if'].call(depth0, (depth0 && depth0.hasPlexPass), {hash:{},inverse:self.noop,fn:self.program(5, program5, data),data:data});\n  if(stack1 || stack1 === 0) { buffer += stack1; }\n  buffer += \"</p> <h3>plex.tv</h3> <p><span class=\\\"text-muted\\\">URL:</span> \"\n    + escapeExpression(((stack1 = (depth0 && depth0.cloudServerUrl)),typeof stack1 === functionType ? stack1.apply(depth0) : stack1))\n    + \"</p> <p><span class=\\\"text-muted\\\">Available:</span> \"\n    + escapeExpression(__default(require(\"../js/utils/handlebars/string/formatBoolean.ts\")).call(depth0, ((stack1 = (depth0 && depth0.cloudServer)),stack1 == null || stack1 === false ? stack1 : stack1.available), {hash:{},data:data}))\n    + \"</p> <p><span class=\\\"text-muted\\\">Authorized:</span> \"\n    + escapeExpression(__default(require(\"../js/utils/handlebars/string/formatBoolean.ts\")).call(depth0, ((stack1 = (depth0 && depth0.cloudServer)),stack1 == null || stack1 === false ? stack1 : stack1.authorized), {hash:{},data:data}))\n    + \"</p> \";\n  return buffer;\n  });"],"names":["formatBoolean","stripOptions","module","exports","template","initialize","appModel","adapters","this","listenTo","render","get","serializeData","user","version","isNinja","primaryServer","data","host","window","location","userAgent","navigator","browser","toJSON","hasPlexPass","cloudServer","server","cloudServerUrl","url","primaryServerUrl","MarionetteComponent","key","view","Handlebars","__default","obj","__esModule","depth0","helpers","partials","compilerInfo","merge","stack1","buffer","functionType","escapeExpression","self","apply","call","hash","inverse","program","fn","friendlyName","name","platform","mobile","username","noop","available","authorized"],"sourceRoot":""}