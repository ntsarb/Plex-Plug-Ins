{"version":3,"file":"js/chunk-292-00749fa3b676e1ee8df3-plex-0.0.0.47-f01acfe.js","mappings":"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","sources":["webpack://server-manager/./app/js/utils/dateTime/formatDate.ts","webpack://server-manager/./app/js/utils/handlebars/dateTime/formatDate.ts","webpack://server-manager/./app/js/utils/handlebars/encodeUrl.ts","webpack://server-manager/./app/js/models/server/ServerAccountModel.ts","webpack://server-manager/./app/js/utils/settingsSidebarKey.ts","webpack://server-manager/./app/js/utils/state/createLibraryProviderEntityID.ts","webpack://server-manager/./app/js/views/lists/activity/AlertListItem.ts","webpack://server-manager/./app/js/views/lists/activity/AlertList.ts","webpack://server-manager/./app/js/views/activity/AlertsView.ts","webpack://server-manager/./app/js/models/FilteredCollection.ts","webpack://server-manager/./app/js/models/library/PlayQueueUpNextCollection.ts","webpack://server-manager/./app/js/models/library/PlayQueueAfterUpNextCollection.ts","webpack://server-manager/./app/js/utils/dateTime/formatMinutes.ts","webpack://server-manager/./app/js/utils/dateTime/formatDuration.ts","webpack://server-manager/./app/js/utils/dateTime/formatHoursMinutes.ts","webpack://server-manager/./app/js/utils/dateTime/formatDaysHours.ts","webpack://server-manager/./app/js/utils/dateTime/formatDays.ts","webpack://server-manager/./app/js/views/activity/CircleProgressBarView.ts","webpack://server-manager/./app/js/views/lists/activity/convert/ConversionStatusView.ts","webpack://server-manager/./app/js/utils/dateTime/formatDurationSecondsLeft.ts","webpack://server-manager/./app/js/views/lists/activity/convert/ConversionQueueListItem.ts","webpack://server-manager/./app/js/views/lists/activity/convert/ConversionQueueList.ts","webpack://server-manager/./app/js/views/lists/activity/convert/ConversionQueueListEmptyView.ts","webpack://server-manager/./app/js/views/activity/ConversionView.ts","webpack://server-manager/./app/js/v4/core/providers/providersTypes.ts","webpack://server-manager/./app/js/v4/core/providers/utils/getProviderFeature.ts","webpack://server-manager/./app/js/v4/core/servers/selectors/createUnstableServerSelector.ts","webpack://server-manager/./app/js/v4/core/providers/selectors/createProviderSelector.ts","webpack://server-manager/./app/js/v4/core/providers/selectors/createProviderContentDirectoriesSelector.ts","webpack://server-manager/./app/js/v4/core/providers/selectors/createProviderContentDirectorySelector.ts","webpack://server-manager/./app/js/v4/core/servers/selectors/selectStableServers.ts","webpack://server-manager/./app/js/v4/core/servers/selectors/createStableServerSelector.ts","webpack://server-manager/./app/js/v4/core/servers/components/SourceContextProvider.tsx","webpack://server-manager/./app/js/v4/core/user/selectors/createUserExperienceSettingSelector.ts","webpack://server-manager/./app/js/v4/core/ui/hooks/usePreviousValueForAtMost.ts","webpack://server-manager/./app/js/v4/features/dashboard/components/ServerDashboardPageHeader.tsx","webpack://server-manager/./app/js/v4/features/dashboard/components/ServerDashboardPageHeader.css?250a","webpack://server-manager/./app/glyphs/selected-560.svg","webpack://server-manager/./app/js/views/v3/components/core/menus/SelectedMenuItem.css?e1cd","webpack://server-manager/./app/js/views/v3/components/core/menus/SelectedMenuItem.tsx","webpack://server-manager/./app/js/views/v3/helpers/hooks/useMenuState.ts","webpack://server-manager/./app/js/v4/features/dashboard/components/menuButtons/ServerDashboardMenuButton.tsx","webpack://server-manager/./app/js/v4/features/dashboard/components/menuButtons/ServerDashboardMenuButton.css?78f3","webpack://server-manager/./app/js/v4/features/dashboard/components/menuButtons/ServerDashboardFilterMenuButton.tsx","webpack://server-manager/./app/js/v4/features/dashboard/dashboardBandwidthTypes.ts","webpack://server-manager/./app/js/v4/features/dashboard/selectors/selectDashboard.ts","webpack://server-manager/./app/js/v4/features/dashboard/selectors/selectDashboardBandwidth.ts","webpack://server-manager/./app/js/v4/features/dashboard/utils/getBandwidthSourceTypeLabel.ts","webpack://server-manager/./app/js/utils/dateTime/isToday.ts","webpack://server-manager/./app/js/utils/metadata/formatBandwidthBitrate.ts","webpack://server-manager/./app/js/v4/features/dashboard/components/ServerDashboardPageMessage.tsx","webpack://server-manager/./app/js/v4/features/dashboard/components/ServerDashboardPageMessage.css?4cb0","webpack://server-manager/./app/js/v4/features/dashboard/components/ServerDashboardSectionContent.tsx","webpack://server-manager/./app/js/v4/features/dashboard/components/ServerDashboardSectionContent.css?07a1","webpack://server-manager/./app/js/v4/features/dashboard/components/ServerDashboardGraph.tsx","webpack://server-manager/./app/js/v4/features/dashboard/components/ServerDashboardGraph.css?cfad","webpack://server-manager/./app/js/v4/features/dashboard/utils/formatRealTimeAgo.ts","webpack://server-manager/./app/js/views/v3/components/core/base/DashSeparator.tsx","webpack://server-manager/./app/js/views/v3/components/core/base/DashSeparator.css?ed4d","webpack://server-manager/./app/js/views/v3/helpers/getDisplayName.ts","webpack://server-manager/./app/js/views/v3/decorators/asyncProps.tsx","webpack://server-manager/./app/js/views/v3/components/core/charts/Bar.tsx","webpack://server-manager/./app/js/views/v3/components/core/charts/LegendLabel.tsx","webpack://server-manager/./app/js/views/v3/components/core/charts/LegendLabel.css?9878","webpack://server-manager/./app/js/views/v3/components/core/charts/ChartTooltip.css?a159","webpack://server-manager/./app/js/views/v3/components/core/charts/ChartTooltip.tsx","webpack://server-manager/./app/js/views/v3/components/core/charts/BarChart.tsx","webpack://server-manager/./app/js/views/v3/components/core/charts/BarChart.css?27a8","webpack://server-manager/./app/js/views/v3/components/core/charts/XAxisTick.tsx","webpack://server-manager/./app/js/views/v3/components/core/charts/LineChart.tsx","webpack://server-manager/./app/js/views/v3/components/core/charts/LineChart.css?c387","webpack://server-manager/./app/js/v4/features/dashboard/components/bandwidth/BandwidthGraph.tsx","webpack://server-manager/./app/js/v4/features/dashboard/components/bandwidth/Bandwidth.tsx","webpack://server-manager/./app/js/v4/features/dashboard/components/bandwidth/Bandwidth.css?52aa","webpack://server-manager/./app/js/v4/core/ui/types/Kind.ts","webpack://server-manager/./app/js/v4/core/ui/buttons/components/Link.css?ffe6","webpack://server-manager/./app/js/v4/core/ui/buttons/components/Link.tsx","webpack://server-manager/./app/js/v4/core/ui/hooks/useMeasure.ts","webpack://server-manager/./app/js/v4/core/ui/portals/components/Portal.tsx","webpack://server-manager/./app/js/v4/core/ui/modals/components/Modal.css?ecc9","webpack://server-manager/./app/js/v4/core/ui/modals/components/Modal.tsx","webpack://server-manager/./app/js/v4/core/ui/metrics/hooks/useMetricsPageViewEffect.ts","webpack://server-manager/./app/js/v4/core/ui/metrics/hooks/useMetricsModalDismissEffect.ts","webpack://server-manager/./app/js/v4/core/ui/modals/components/ModalBody.css?ce23","webpack://server-manager/./app/js/v4/core/ui/modals/components/ModalBody.tsx","webpack://server-manager/./app/js/v4/core/ui/modals/components/ModalContent.tsx","webpack://server-manager/./app/js/v4/core/ui/modals/components/ModalContent.css?b6ca","webpack://server-manager/./app/js/v4/core/ui/modals/components/ModalHeader.tsx","webpack://server-manager/./app/js/v4/core/ui/modals/components/ModalHeader.css?5f87","webpack://server-manager/./app/js/v4/features/dashboard/components/nowPlaying/NowPlayingErrorModal.tsx","webpack://server-manager/./app/js/v4/features/dashboard/components/nowPlaying/NowPlayingErrorModal.css?dda5","webpack://server-manager/./app/js/utils/isPlayerUnstoppable.ts","webpack://server-manager/./app/js/utils/media/getPercentPlayed.ts","webpack://server-manager/./app/js/utils/media/getScreenshotUrl.ts","webpack://server-manager/./app/js/utils/media/getPartByAbsoluteOffset.ts","webpack://server-manager/./app/js/utils/media/getScreenshotIndex.ts","webpack://server-manager/./app/js/utils/media/getRelativeOffset.ts","webpack://server-manager/./app/js/v4/core/servers/selectors/createImageTranscodeURLSelector.ts","webpack://server-manager/./app/js/v4/core/servers/selectors/createActiveConnectionURISelector.ts","webpack://server-manager/./app/js/v4/core/servers/hooks/useTranscodeImage.ts","webpack://server-manager/./app/js/v4/core/ui/hooks/useIsRefHovered.ts","webpack://server-manager/./app/js/v4/core/ui/images/CrossFadeImage.tsx","webpack://server-manager/./app/glyphs/tidal-logo-560.svg","webpack://server-manager/./app/glyphs/watch-together.svg","webpack://server-manager/./app/js/views/v3/components/core/AttributionBadge.tsx","webpack://server-manager/./app/js/views/v3/components/core/images/CrossFadeImage.tsx","webpack://server-manager/./app/js/views/v3/components/core/images/PosterCardImg.tsx","webpack://server-manager/./app/js/utils/constants/metadataIcons.ts","webpack://server-manager/./app/js/utils/metadata/iconsByMediaType.ts","webpack://server-manager/./app/js/views/v3/components/metadata/posters/MetadataIcon.tsx","webpack://server-manager/./app/js/views/v3/components/metadata/posters/MetadataIcon.css?5a82","webpack://server-manager/./app/js/views/v3/components/metadata/posters/MetadataPosterCardIcon.tsx","webpack://server-manager/./app/js/views/v3/components/metadata/posters/MetadataPosterCardIcon.css?8ea9","webpack://server-manager/./app/js/views/v3/components/metadata/posters/MetadataPosterCardImg.tsx","webpack://server-manager/./app/js/views/v3/helpers/metadata/posterRatios.ts","webpack://server-manager/./app/js/utils/getDeviceIcon.ts","webpack://server-manager/./app/js/views/v3/components/core/icons/ServerConnectionStatusIcon.css?f525","webpack://server-manager/./app/js/views/v3/components/core/icons/ServerConnectionStatusIcon.tsx","webpack://server-manager/./app/js/views/v3/components/metadata/titles/StreamTitle.tsx","webpack://server-manager/./app/js/views/v3/components/metadata/titles/AudioStreamTitle.tsx","webpack://server-manager/./app/js/utils/metadata/formatAudioChannels.ts","webpack://server-manager/./app/js/utils/metadata/formatAudioCodec.ts","webpack://server-manager/./app/js/views/v3/components/metadata/titles/SubtitlesStreamTitle.tsx","webpack://server-manager/./app/js/views/v3/components/metadata/titles/VideoStreamTitle.tsx","webpack://server-manager/./app/js/views/v3/components/metadata/titles/StreamTitleConnector.ts","webpack://server-manager/./app/js/views/v3/components/metadata/titles/stream/StreamTitle.tsx","webpack://server-manager/./app/js/v4/features/dashboard/components/nowPlaying/SessionTileDetails.css?ad43","webpack://server-manager/./app/js/v4/features/dashboard/components/nowPlaying/SessionTileDetails.tsx","webpack://server-manager/./app/js/utils/string/case/toTitleCase.ts","webpack://server-manager/./app/js/v4/core/ui/buttons/components/Button.css?2ccb","webpack://server-manager/./app/js/v4/core/ui/buttons/components/Button.tsx","webpack://server-manager/./app/js/v4/core/ui/modals/components/ModalFooter.tsx","webpack://server-manager/./app/js/v4/core/ui/modals/components/ModalFooter.css?e661","webpack://server-manager/./app/js/v4/core/ui/modals/components/ModalFooterButtonBar.tsx","webpack://server-manager/./app/js/v4/core/ui/modals/components/ModalFooterButtonBar.css?56da","webpack://server-manager/./app/js/views/v3/helpers/props/shapes/storeShape.ts","webpack://server-manager/./app/js/views/v3/components/core/forms/Form.tsx","webpack://server-manager/./app/js/views/v3/components/core/forms/FormLabel.tsx","webpack://server-manager/./app/js/views/v3/components/core/forms/FormLabel.css?c79c","webpack://server-manager/./app/js/views/v3/components/core/forms/TextArea.css?b3d1","webpack://server-manager/./app/js/views/v3/components/core/forms/TextArea.tsx","webpack://server-manager/./app/js/v4/features/dashboard/components/nowPlaying/StopServerSessionModal.tsx","webpack://server-manager/./app/js/v4/features/dashboard/components/nowPlaying/StopServerSessionModal.css?b57e","webpack://server-manager/./app/js/v4/features/dashboard/components/nowPlaying/SessionTile.css?024c","webpack://server-manager/./app/js/v4/features/dashboard/components/nowPlaying/SessionTile.tsx","webpack://server-manager/./app/js/v4/core/serverNowPlayingSessions/selectors/createServerNowPlayingSessionSelector.ts","webpack://server-manager/./app/js/v4/features/dashboard/components/nowPlaying/NowPlaying.tsx","webpack://server-manager/./app/js/v4/features/dashboard/components/nowPlaying/NowPlaying.css?742e","webpack://server-manager/./app/js/v4/core/serverAccounts/utils/serverAccountComparator.ts","webpack://server-manager/./app/js/v4/features/dashboard/components/menuButtons/ServerDashboardAccountMenuButton.tsx","webpack://server-manager/./app/js/v4/features/dashboard/dashboardTypes.ts","webpack://server-manager/./app/js/v4/features/dashboard/selectors/selectDashboardPlayHistory.ts","webpack://server-manager/./app/js/v4/features/dashboard/utils/getStatisticsMetadataTypeLabel.ts","webpack://server-manager/./app/js/views/v3/helpers/routes/getPlayHistoryRoute.ts","webpack://server-manager/./app/js/v4/features/dashboard/components/playHistory/PlayHistoryGraph.tsx","webpack://server-manager/./app/js/v4/features/dashboard/components/playHistory/PlayHistory.tsx","webpack://server-manager/./app/js/v4/features/dashboard/components/playHistory/PlayHistory.css?0b5a","webpack://server-manager/./app/js/v4/features/dashboard/components/ServerDashboardPageSection.tsx","webpack://server-manager/./app/js/v4/features/dashboard/components/ServerDashboardPageSection.css?f0d8","webpack://server-manager/./app/js/v4/features/dashboard/dashboardResourcesTypes.ts","webpack://server-manager/./app/js/v4/features/dashboard/selectors/selectDashboardResources.ts","webpack://server-manager/./app/js/v4/features/dashboard/utils/getServerResourceTypeLabel.ts","webpack://server-manager/./app/js/v4/features/dashboard/components/serverResources/ServerResourceGraph.tsx","webpack://server-manager/./app/js/v4/features/dashboard/components/serverResources/ServerResources.css?d6d0","webpack://server-manager/./app/js/v4/features/dashboard/components/serverResources/ServerResources.tsx","webpack://server-manager/./app/js/v4/core/serverAccounts/selectors/createServerAccountsSortedUsersSelector.ts","webpack://server-manager/./app/js/v4/features/dashboard/selectors/selectDashboardTopPlayed.ts","webpack://server-manager/./app/js/v4/features/dashboard/components/topPlayed/TopPlayedColumnHeader.tsx","webpack://server-manager/./app/js/v4/features/dashboard/components/topPlayed/TopPlayedColumnHeader.css?2b99","webpack://server-manager/./app/js/views/v3/helpers/metadata/getFullMetadataTitle.ts","webpack://server-manager/./app/js/views/v3/helpers/routes/getMetadataItemPlayHistoryRoute.ts","webpack://server-manager/./app/js/v4/features/dashboard/components/topPlayed/TopPlayedColumnRow.tsx","webpack://server-manager/./app/js/v4/features/dashboard/components/topPlayed/TopPlayedColumnRow.css?9e82","webpack://server-manager/./app/js/v4/features/dashboard/components/topPlayed/TopPlayedColumn.css?bb80","webpack://server-manager/./app/js/v4/features/dashboard/components/topPlayed/TopPlayedColumn.tsx","webpack://server-manager/./app/js/v4/features/dashboard/components/topPlayed/TopPlayedList.tsx","webpack://server-manager/./app/js/v4/features/dashboard/components/topPlayed/TopPlayedList.css?d92f","webpack://server-manager/./app/js/v4/features/dashboard/components/topPlayed/TopPlayed.tsx","webpack://server-manager/./app/js/v4/core/ui/buttons/components/IconButton.css?3f64","webpack://server-manager/./app/js/v4/core/ui/buttons/components/IconButton.tsx","webpack://server-manager/./app/js/v4/features/dashboard/selectors/selectDashboardTopUsers.ts","webpack://server-manager/./app/js/v4/core/ui/lists/utils/createGridLayout.ts","webpack://server-manager/./app/js/views/v3/helpers/layouts/clampListIndex.ts","webpack://server-manager/./app/js/v4/core/ui/hooks/useResizeObserver.ts","webpack://server-manager/./app/js/v4/core/ui/lists/components/VirtualList.tsx","webpack://server-manager/./app/js/v4/core/ui/lists/utils/pagination.ts","webpack://server-manager/./app/js/v4/core/ui/lists/hooks/useVirtualListCells.tsx","webpack://server-manager/./app/js/v4/core/ui/scrollers/components/VirtualListScroller.css?2183","webpack://server-manager/./app/js/v4/core/ui/scrollers/components/VirtualListScroller.tsx","webpack://server-manager/./app/js/v4/core/ui/scrollers/hooks/useScrollRestore.ts","webpack://server-manager/./app/js/v4/utils/hooks/usePrevious.ts","webpack://server-manager/./app/js/v4/core/ui/lists/hooks/useVirtualCell.ts","webpack://server-manager/./app/js/v4/features/dashboard/components/topUsers/TopUsersCell.tsx","webpack://server-manager/./app/js/v4/features/dashboard/components/topUsers/TopUsersCell.css?f2c9","webpack://server-manager/./app/js/v4/features/dashboard/components/topUsers/TopUsersList.tsx","webpack://server-manager/./app/js/v4/core/ui/lists/utils/createHorizontalLayout.ts","webpack://server-manager/./app/js/v4/features/dashboard/components/topUsers/TopUsersList.css?b156","webpack://server-manager/./app/js/v4/features/dashboard/components/topUsers/TopUsers.css?a9de","webpack://server-manager/./app/js/v4/features/dashboard/components/topUsers/TopUsers.tsx","webpack://server-manager/./app/js/v4/features/dashboard/components/ServerDashboardPageUpsell.css?d24c","webpack://server-manager/./app/js/v4/features/dashboard/components/ServerDashboardPageUpsell.tsx","webpack://server-manager/./app/js/v4/features/dashboard/components/ServerDashboardPage.tsx","webpack://server-manager/./app/js/views/activity/ServerDashboardView.tsx","webpack://server-manager/./app/js/v4/core/providers/selectors/createEPGProviderSelector.ts","webpack://server-manager/./app/js/v4/core/providers/utils/isEPGProvider.ts","webpack://server-manager/./app/js/v4/core/user/selectors/createUserFeatureSelector.ts","webpack://server-manager/./app/js/v4/core/ui/forms/components/FormSectionError.tsx","webpack://server-manager/./app/js/v4/core/ui/forms/components/FormSectionError.css?fc32","webpack://server-manager/./app/js/v4/core/ui/buttons/components/SpinnerButton.css?0376","webpack://server-manager/./app/js/v4/core/ui/buttons/components/SpinnerButton.tsx","webpack://server-manager/./app/js/v4/core/ui/forms/components/FormLabel.css?4220","webpack://server-manager/./app/js/v4/core/ui/forms/components/FormLabel.tsx","webpack://server-manager/./app/js/v4/core/ui/forms/components/Select.css?bc43","webpack://server-manager/./app/js/v4/core/ui/forms/components/Select.tsx","webpack://server-manager/./app/js/v4/features/dvrManagement/components/setup/device/DVRSetupCountryRegionSelectInput.tsx","webpack://server-manager/./app/js/v4/features/dvrManagement/components/setup/device/DVRSetupCountryRegionSelectInput.css","webpack://server-manager/./app/js/v4/features/dvrManagement/components/setup/device/DVRSetupCountrySelectInput.tsx","webpack://server-manager/./app/js/v4/features/dvrManagement/components/setup/device/DVRSetupCountrySelectInput.css?43f1","webpack://server-manager/./app/js/v4/core/ui/forms/components/TextInput.css?0731","webpack://server-manager/./app/js/v4/core/ui/forms/components/TextInput.tsx","webpack://server-manager/./app/js/v4/features/dvrManagement/selectors/selectEPGSettingsPostalCodeExample.ts","webpack://server-manager/./app/js/v4/features/dvrManagement/components/setup/device/DVRSetupPostalCodeInput.tsx","webpack://server-manager/./app/js/v4/features/dvrManagement/components/setup/device/DVRSetupPostalCodeInput.css?5d49","webpack://server-manager/./app/js/v4/features/dvrManagement/selectors/selectLatestEPGLineupGroup.ts","webpack://server-manager/./app/js/v4/features/dvrManagement/selectors/selectSelectedDVRLineups.ts","webpack://server-manager/./app/js/v4/features/dvrManagement/components/setup/addLineup/DVRSetupAddLineup.css?2827","webpack://server-manager/./app/js/v4/features/dvrManagement/components/setup/addLineup/DVRSetupAddLineup.tsx","webpack://server-manager/./app/js/v4/core/serverActivities/selectors/createServerActivitiesSelector.ts","webpack://server-manager/./app/js/v4/core/serverActivities/selectors/createChannelScanActivitySelector.ts","webpack://server-manager/./app/js/v4/features/dvrManagement/selectors/selectAvailableMediaGrabberDevices.ts","webpack://server-manager/./app/js/v4/features/dvrManagement/components/setup/DVRDeviceImage.css?ee32","webpack://server-manager/./app/js/v4/features/dvrManagement/components/setup/DVRDeviceImage.tsx","webpack://server-manager/./app/js/v4/features/dvrManagement/components/setup/device/DVRSetupDeviceSourceSelectInput.tsx","webpack://server-manager/./app/js/v4/features/dvrManagement/components/setup/device/DVRSetupDevice.css?3d6a","webpack://server-manager/./app/js/v4/features/dvrManagement/components/setup/device/DVRSetupDevice.tsx","webpack://server-manager/./app/js/v4/core/ui/types/Direction.ts","webpack://server-manager/./app/js/v4/features/dvrManagement/components/setup/device/DVRSetupManualDevice.tsx","webpack://server-manager/./app/js/v4/features/dvrManagement/components/setup/device/DVRSetupManualDevice.css?1e6d","webpack://server-manager/./app/js/v4/features/dvrManagement/components/setup/device/DVRSetupDeviceList.tsx","webpack://server-manager/./app/js/v4/features/dvrManagement/components/setup/device/DVRSetupDeviceList.css?974c","webpack://server-manager/./app/js/v4/features/directory/utils/getPivotRoute.ts","webpack://server-manager/./app/js/v4/features/directory/utils/isUnknownViewPivot.ts","webpack://server-manager/./app/js/v4/features/dvrManagement/components/setup/download/AdditionalDevice.css?8fd7","webpack://server-manager/./app/js/v4/features/dvrManagement/components/setup/download/AdditionalDevice.tsx","webpack://server-manager/./app/js/v4/features/dvrManagement/components/setup/download/DVRSetupDownload.tsx","webpack://server-manager/./app/js/v4/features/dvrManagement/components/setup/download/DVRSetupDownload.css?5bdd","webpack://server-manager/./app/js/v4/core/ui/badges/components/Badge.tsx","webpack://server-manager/./app/js/v4/core/ui/badges/components/Badge.css?4845","webpack://server-manager/./app/js/v4/features/dvrManagement/components/setup/info/DVRSetupInfoStep.tsx","webpack://server-manager/./app/js/v4/features/dvrManagement/components/setup/info/DVRSetupInfoStep.css?d915","webpack://server-manager/./app/js/v4/features/dvrManagement/components/setup/info/DVRSetupInfo.tsx","webpack://server-manager/./app/js/v4/features/dvrManagement/components/setup/info/DVRSetupInfo.css?3dd1","webpack://server-manager/./app/js/v4/core/serverActivities/selectors/createEPGLineupScanActivitySelector.ts","webpack://server-manager/./app/glyphs/dvr-clock-hour-560.svg","webpack://server-manager/./app/glyphs/dvr-clock-minutes-560.svg","webpack://server-manager/./app/glyphs/dvr-clock-separator-560.svg","webpack://server-manager/./app/js/v4/features/dvrManagement/components/ChannelScanActivity.css?46df","webpack://server-manager/./app/js/v4/features/dvrManagement/components/ChannelScanActivity.tsx","webpack://server-manager/./app/js/views/v3/components/core/forms/FormGroup.tsx","webpack://server-manager/./app/js/views/v3/components/core/forms/FormGroup.css?2f95","webpack://server-manager/./app/js/views/v3/components/core/forms/FormHelp.tsx","webpack://server-manager/./app/js/views/v3/components/core/forms/FormHelp.css?f196","webpack://server-manager/./app/js/views/v3/components/core/forms/InputGroupFormLabel.tsx","webpack://server-manager/./app/js/views/v3/components/core/forms/SelectInput.css?6890","webpack://server-manager/./app/js/views/v3/components/core/forms/SelectInput.tsx","webpack://server-manager/./app/js/views/v3/components/core/forms/formInput.tsx","webpack://server-manager/./app/js/views/v3/components/core/forms/SelectInputGroup.tsx","webpack://server-manager/./app/js/views/v3/components/core/forms/CheckInput.css?3d87","webpack://server-manager/./app/js/views/v3/components/core/forms/CheckInput.tsx","webpack://server-manager/./app/js/views/v3/components/core/forms/CheckInputGroup.tsx","webpack://server-manager/./app/js/views/v3/components/core/forms/TextInput.css?c71b","webpack://server-manager/./app/js/views/v3/components/core/forms/TextInput.tsx","webpack://server-manager/./app/js/views/v3/components/core/forms/NumberInput.tsx","webpack://server-manager/./app/js/views/v3/components/core/forms/NumberInputGroup.tsx","webpack://server-manager/./app/js/views/v3/components/core/forms/NumberInputGroup.css?ce9b","webpack://server-manager/./app/js/utils/number/getPercent.ts","webpack://server-manager/./app/js/views/v3/components/core/Slider.css?64fa","webpack://server-manager/./app/js/views/v3/components/core/Slider.tsx","webpack://server-manager/./app/js/views/v3/components/core/forms/SliderInputGroup.tsx","webpack://server-manager/./app/js/views/v3/components/core/forms/SliderInputGroup.css?faaf","webpack://server-manager/./app/js/views/v3/components/core/forms/TextInputGroup.tsx","webpack://server-manager/./app/js/views/v3/components/core/forms/SettingInputGroup.tsx","webpack://server-manager/./app/js/views/v3/helpers/valueModifiers.ts","webpack://server-manager/./app/js/v4/features/dvrManagement/components/ChannelScanPrefs.css?91e8","webpack://server-manager/./app/js/v4/features/dvrManagement/components/ChannelScanPrefs.tsx","webpack://server-manager/./app/js/v4/core/ui/lists/utils/createVerticalLayout.ts","webpack://server-manager/./app/js/views/v3/styles/variables/dimensions.ts","webpack://server-manager/./app/js/v4/core/ui/forms/components/Checkbox.css?2a80","webpack://server-manager/./app/js/v4/core/ui/forms/components/Checkbox.tsx","webpack://server-manager/./app/js/views/v3/components/core/base/Badge.css?1afd","webpack://server-manager/./app/js/views/v3/components/core/base/Badge.tsx","webpack://server-manager/./app/js/v4/features/dvrManagement/utils/getLineupChannelOptionLabel.ts","webpack://server-manager/./app/js/v4/features/dvrManagement/selectors/selectSelectedLineups.ts","webpack://server-manager/./app/js/v4/features/dvrManagement/selectors/selectGroupedLineupChannels.ts","webpack://server-manager/./app/js/v4/features/dvrManagement/selectors/selectLineupChannels.ts","webpack://server-manager/./app/js/v4/features/dvrManagement/components/LineupChannelSelect.tsx","webpack://server-manager/./app/js/v4/features/dvrManagement/components/SignalQuality.tsx","webpack://server-manager/./app/js/v4/features/dvrManagement/components/DeviceChannelMapping.tsx","webpack://server-manager/./app/js/v4/features/dvrManagement/components/DeviceChannelMapping.css?7404","webpack://server-manager/./app/js/v4/features/dvrManagement/components/DeviceChannelMappingsHeader.css?8bbf","webpack://server-manager/./app/js/v4/features/dvrManagement/components/DeviceChannelMappingsHeader.tsx","webpack://server-manager/./app/js/v4/features/dvrManagement/components/DeviceChannelMappingsForm.tsx","webpack://server-manager/./app/js/v4/features/dvrManagement/components/DeviceChannelMappingsForm.css?198c","webpack://server-manager/./app/js/utils/livetv/channelNumberComparator.ts","webpack://server-manager/./app/js/v4/features/dvrManagement/selectors/createChannelMappingsSelector.ts","webpack://server-manager/./app/js/v4/features/dvrManagement/selectors/createDVRDeviceSelector.ts","webpack://server-manager/./app/js/v4/features/dvrManagement/utils/getMatchedChannelsPerLineupUUID.ts","webpack://server-manager/./app/js/v4/features/dvrManagement/components/setup/mapping/EPGLineupSelect.tsx","webpack://server-manager/./app/js/v4/features/dvrManagement/components/setup/mapping/EPGLineupSelect.css?400c","webpack://server-manager/./app/js/v4/features/dvrManagement/components/setup/mapping/EPGLineups.tsx","webpack://server-manager/./app/js/v4/features/dvrManagement/components/setup/mapping/EPGLineups.css?878e","webpack://server-manager/./app/js/v4/features/dvrManagement/components/setup/mapping/DVRSetupMapping.css?3862","webpack://server-manager/./app/js/v4/features/dvrManagement/components/setup/mapping/DVRSetupMapping.tsx","webpack://server-manager/./app/js/v4/features/dvrManagement/components/setup/xmltv/DVRSetupLanguageSelect.tsx","webpack://server-manager/./app/js/v4/features/dvrManagement/components/setup/xmltv/DVRSetupUseXMLTV.css?2423","webpack://server-manager/./app/js/v4/features/dvrManagement/components/setup/xmltv/DVRSetupUseXMLTV.tsx","webpack://server-manager/./app/js/v4/features/dvrManagement/components/setup/DVRSetupModal.tsx","webpack://server-manager/./app/js/v4/features/dvrManagement/components/setup/DVRSetupModal.css?800f","webpack://server-manager/./app/js/v4/features/dvrManagement/selectors/selectLegacyDVRSettingsUI.ts","webpack://server-manager/./app/js/v4/features/dvrManagement/selectors/selectSelectedDVRDevices.ts","webpack://server-manager/./app/js/v4/features/livetv/selectors/selectLiveTV.ts","webpack://server-manager/./app/js/v4/features/livetv/selectors/selectLiveTVChannels.ts","webpack://server-manager/./app/js/v4/features/livetv/selectors/selectMappedLiveTVChannels.ts","webpack://server-manager/./app/js/v4/core/serverActivities/selectors/createEPGLoadActivitySelector.ts","webpack://server-manager/./app/js/v4/features/dvrManagement/components/settings/LiveTVSettingsChannel.tsx","webpack://server-manager/./app/js/v4/features/dvrManagement/selectors/createDeviceIndicesMatchingGuideChannelSelector.ts","webpack://server-manager/./app/js/v4/features/dvrManagement/components/settings/LiveTVSettingsChannel.css?89b4","webpack://server-manager/./app/js/v4/features/dvrManagement/components/settings/LiveTVSettingsChannelList.css?9b9c","webpack://server-manager/./app/js/v4/features/dvrManagement/components/settings/LiveTVSettingsChannelList.tsx","webpack://server-manager/./app/js/v4/core/servers/hooks/useRedispatchLegacyServerAction.ts","webpack://server-manager/./app/js/views/v3/components/core/modals/ConfirmModal.tsx","webpack://server-manager/./app/js/views/v3/components/core/modals/ConfirmModal.css?4d64","webpack://server-manager/./app/js/stores/selectors/livetv/createDVRSelector.ts","webpack://server-manager/./app/js/views/v3/components/core/forms/FormSectionError.css?9b98","webpack://server-manager/./app/js/views/v3/components/core/forms/FormSectionError.tsx","webpack://server-manager/./app/js/views/v3/components/livetv/dvr/DVRSettingsModalContent.tsx","webpack://server-manager/./app/js/views/v3/components/livetv/dvr/DVRSettingsModalContent.css?ea2a","webpack://server-manager/./app/js/views/v3/components/livetv/dvr/DVRSettingsModalContentConnector.tsx","webpack://server-manager/./app/js/views/v3/components/livetv/dvr/DVRSettingsModal.tsx","webpack://server-manager/./app/glyphs/reload-560.svg","webpack://server-manager/./app/glyphs/settings-560.svg","webpack://server-manager/./app/js/v4/features/dvrManagement/components/settings/LiveTVSettingsDVR.css?147b","webpack://server-manager/./app/js/v4/features/dvrManagement/components/settings/LiveTVSettingsDVR.tsx","webpack://server-manager/./app/glyphs/toolbar-filter-add-560.svg","webpack://server-manager/./app/js/v4/features/dvrManagement/components/settings/DVRManageChannelsModal.css?09d4","webpack://server-manager/./app/js/v4/features/dvrManagement/components/settings/DVRManageChannelsModal.tsx","webpack://server-manager/./app/js/views/v3/components/livetv/device/DVRDeviceImage.tsx","webpack://server-manager/./app/js/views/v3/components/livetv/device/DVRDeviceImage.css?cb12","webpack://server-manager/./app/js/views/v3/components/livetv/device/DVRDeviceSettingsModalContent.tsx","webpack://server-manager/./app/js/views/v3/components/livetv/device/DVRDeviceSettingsModalContent.css?c450","webpack://server-manager/./app/js/views/v3/components/livetv/device/DVRDeviceSettingsModalContentConnector.tsx","webpack://server-manager/./app/js/stores/selectors/livetv/createDVRDeviceSelector.ts","webpack://server-manager/./app/js/views/v3/components/livetv/device/DVRDeviceSettingsModal.tsx","webpack://server-manager/./app/js/v4/features/dvrManagement/components/settings/LiveTVSettingsDevice.css?6918","webpack://server-manager/./app/js/v4/features/dvrManagement/components/settings/LiveTVSettingsDevice.tsx","webpack://server-manager/./app/js/v4/features/dvrManagement/selectors/createDeviceActiveTunerCountSelector.ts","webpack://server-manager/./app/js/v4/features/dvrManagement/components/settings/LiveTVSettingsDeviceList.tsx","webpack://server-manager/./app/js/v4/features/dvrManagement/components/settings/LiveTVSettingsDeviceList.css?1c64","webpack://server-manager/./app/js/views/v3/components/core/PlexPassUpsell.tsx","webpack://server-manager/./app/js/views/v3/components/core/PlexPassUpsell.css?a675","webpack://server-manager/./app/js/views/v3/components/core/PlexPassUpsellInfo.tsx","webpack://server-manager/./app/js/views/v3/components/core/PlexPassUpsellInfo.css?33f6","webpack://server-manager/./app/js/views/v3/components/core/buttons/PlexPassUpsellButton.tsx","webpack://server-manager/./app/js/views/v3/components/core/buttons/ServerFeaturePlexPassUpsellButtonConnector.ts","webpack://server-manager/./app/js/views/v3/components/core/buttons/ServerFeaturePlexPassUpsellButton.tsx","webpack://server-manager/./app/glyphs/marketing-dvr-560.svg","webpack://server-manager/./app/js/v4/features/dvrManagement/components/settings/LiveTVSettingsZeroState.css?9eeb","webpack://server-manager/./app/js/v4/features/dvrManagement/components/settings/LiveTVSettingsZeroState.tsx","webpack://server-manager/./app/js/v4/features/dvrManagement/components/settings/LiveTVSettingsPage.css?4260","webpack://server-manager/./app/js/v4/features/libraryManagement/selectors/selectLibraryManagement.ts","webpack://server-manager/./app/js/v4/features/libraryManagement/components/LibrarySettings.tsx","webpack://server-manager/./app/js/v4/features/libraryManagement/selectors/createMergeRecentlyAddedSettingSelector.ts","webpack://server-manager/./app/js/v4/features/libraryManagement/components/LibrarySettings.css?073c","webpack://server-manager/./app/js/v4/core/metadata/components/icons/MetadataIcon.tsx","webpack://server-manager/./app/js/v4/core/ui/hooks/useIsFocused.ts","webpack://server-manager/./app/js/v4/core/ui/lists/components/ListRow.css?bb1a","webpack://server-manager/./app/js/v4/core/ui/lists/components/ListRow.tsx","webpack://server-manager/./app/js/views/v3/components/upgrade/AgentUpgradeLibraryModals.css?3c68","webpack://server-manager/./app/js/views/v3/components/upgrade/AgentUpgradeLibraryModals.tsx","webpack://server-manager/./app/js/v4/features/libraryManagement/LibraryUpgradeMenuItem.tsx","webpack://server-manager/./app/js/v4/features/libraryManagement/LibraryUpgradeMenuItem.css?2115","webpack://server-manager/./app/js/v4/features/libraryManagement/components/LibraryActionsMenu.tsx","webpack://server-manager/./app/js/v4/features/libraryManagement/components/PromotionWarningModal.css?f7d8","webpack://server-manager/./app/js/v4/features/libraryManagement/components/PromotionWarningModal.tsx","webpack://server-manager/./app/glyphs/reorder-560.svg","webpack://server-manager/./app/js/v4/features/libraryManagement/components/LibraryHubListItem.css?cc55","webpack://server-manager/./app/js/v4/features/libraryManagement/components/LibraryHubListItem.tsx","webpack://server-manager/./app/js/v4/features/libraryManagement/selectors/createLibraryHubsSelector.ts","webpack://server-manager/./app/js/v4/features/libraryManagement/components/LibraryHubList.tsx","webpack://server-manager/./app/js/v4/features/libraryManagement/components/LibraryHubList.css?3ff7","webpack://server-manager/./app/js/v4/features/libraryManagement/components/ManageLibrarySummary.css?9e8b","webpack://server-manager/./app/js/v4/features/libraryManagement/components/ManageLibrarySummary.tsx","webpack://server-manager/./app/js/v4/core/serverActivities/hooks/useLibraryUpdating.ts","webpack://server-manager/./app/js/v4/core/serverActivities/selectors/createLibraryUpdateActivitySelector.ts","webpack://server-manager/./app/js/v4/core/metadata/utils/getMetadataTypeRelations.ts","webpack://server-manager/./app/js/v4/features/libraryManagement/components/ManageLibrariesPane.css?6474","webpack://server-manager/./app/js/models/deprecatedPlugin/DeprecatedPluginModel.ts","webpack://server-manager/./app/js/models/deprecatedPlugin/DeprecatedPluginCollection.ts","webpack://server-manager/./app/js/models/deprecatedPlugin/DeprecatedPluginListModel.ts","webpack://server-manager/./app/js/views/modals/DeprecatedPluginSettingsModal.ts","webpack://server-manager/./app/js/views/deprecatedPlugin/DeprecatedPluginTileListItem.ts","webpack://server-manager/./app/js/views/deprecatedPlugin/DeprecatedPluginTileList.ts","webpack://server-manager/./app/js/views/deprecatedPlugin/DeprecatedPluginsView.ts","webpack://server-manager/./app/js/utils/pubsub/MediaServerLogEventConnection.ts","webpack://server-manager/./app/js/views/v3/components/core/buttons/ToolbarButton.css?3585","webpack://server-manager/./app/js/views/v3/components/core/buttons/ToolbarButton.tsx","webpack://server-manager/./app/js/views/v3/components/core/header/PageHeader.tsx","webpack://server-manager/./app/js/views/v3/components/core/header/PageHeader.css?6279","webpack://server-manager/./app/js/views/v3/components/core/header/PageHeaderLeft.tsx","webpack://server-manager/./app/js/views/v3/components/core/header/PageHeaderLeft.css?3066","webpack://server-manager/./app/js/views/v3/components/core/header/PageHeaderRight.tsx","webpack://server-manager/./app/js/views/v3/components/core/header/PageHeaderRight.css?948e","webpack://server-manager/./app/js/utils/constants/serverLogLevels.ts","webpack://server-manager/./app/js/utils/server/getLogLevelLabel.ts","webpack://server-manager/./app/js/views/v3/components/core/header/PageHeaderBreadcrumbButton.tsx","webpack://server-manager/./app/js/views/v3/components/core/header/PageHeaderBreadcrumbButton.css?f856","webpack://server-manager/./app/js/views/v3/components/pages/serverSettings/panes/logs/ServerLogLevelMenu.tsx","webpack://server-manager/./app/js/views/v3/components/pages/serverSettings/panes/logs/ServerLogLevelMenuConnector.ts","webpack://server-manager/./app/glyphs/circle-backslash-560.svg","webpack://server-manager/./app/glyphs/timer-560.svg","webpack://server-manager/./app/js/views/v3/components/pages/serverSettings/panes/logs/ServerLogFilterInput.tsx","webpack://server-manager/./app/js/views/v3/components/pages/serverSettings/panes/logs/ServerLogFilterInput.css?1dcb","webpack://server-manager/./app/js/views/v3/components/pages/serverSettings/panes/logs/ServerLogTimeFilterInputs.css?b270","webpack://server-manager/./app/js/views/v3/components/pages/serverSettings/panes/logs/ServerLogTimeFilterInputs.tsx","webpack://server-manager/./app/js/views/v3/components/pages/serverSettings/panes/logs/ServerLogPageHeader.tsx","webpack://server-manager/./app/js/views/v3/components/pages/serverSettings/panes/logs/ServerLogPageHeader.css?5d27","webpack://server-manager/./app/js/views/v3/components/pages/serverSettings/panes/logs/ServerLogPageHeaderConnector.ts","webpack://server-manager/./app/js/views/v3/components/core/base/Measure.css?3627","webpack://server-manager/./app/js/views/v3/components/core/base/Measure.tsx","webpack://server-manager/./app/js/views/v3/components/core/lists/VirtualList.tsx","webpack://server-manager/./app/js/views/v3/helpers/createKeyPool.ts","webpack://server-manager/./app/js/views/v3/components/core/lists/VirtualListScroller.tsx","webpack://server-manager/./app/js/views/v3/components/core/lists/VirtualListScroller.css?66cb","webpack://server-manager/./app/js/views/v3/helpers/layouts/createGridLayout.ts","webpack://server-manager/./app/js/views/v3/helpers/hooks/useVirtualCell.ts","webpack://server-manager/./app/js/views/v3/components/pages/serverSettings/panes/logs/ServerLogLine.css?73af","webpack://server-manager/./app/js/views/v3/components/pages/serverSettings/panes/logs/ServerLogLineConnector.ts","webpack://server-manager/./app/js/views/v3/components/pages/serverSettings/panes/logs/ServerLogLine.tsx","webpack://server-manager/./app/js/views/v3/components/pages/serverSettings/panes/logs/formatThreadFilterText.ts","webpack://server-manager/./app/js/views/v3/components/pages/serverSettings/panes/logs/ServerLogLineModal.css?e549","webpack://server-manager/./app/js/views/v3/components/pages/serverSettings/panes/logs/ServerLogLineModal.tsx","webpack://server-manager/./app/js/views/v3/components/pages/serverSettings/panes/logs/ServerLogRawText.tsx","webpack://server-manager/./app/js/views/v3/components/pages/serverSettings/panes/logs/ServerLog.tsx","webpack://server-manager/./app/js/views/v3/helpers/layouts/createVerticalLayout.ts","webpack://server-manager/./app/js/views/v3/components/pages/serverSettings/panes/logs/ServerLog.css?5329","webpack://server-manager/./app/js/views/v3/components/pages/serverSettings/panes/logs/ServerLogConnector.ts","webpack://server-manager/./app/js/views/v3/components/pages/serverSettings/panes/logs/ServerLogPage.tsx","webpack://server-manager/./app/js/views/v3/components/pages/serverSettings/panes/logs/ServerLogPage.css?0e5f","webpack://server-manager/./app/js/views/v3/components/pages/serverSettings/panes/logs/ServerLogPageConnector.tsx","webpack://server-manager/./app/js/stores/selectors/server/createServerActivitySelector.ts","webpack://server-manager/./app/js/stores/selectors/server/createServerActivitiesSelector.ts","webpack://server-manager/./app/js/stores/selectors/server/createServerDownloadUrlSelector.ts","webpack://server-manager/./app/js/views/v3/components/pages/serverSettings/panes/troubleshooting/ServerTroubleshootingPane.css?9b96","webpack://server-manager/./app/js/views/v3/components/pages/serverSettings/panes/troubleshooting/ServerTroubleshootingPane.tsx","webpack://server-manager/./app/js/views/v3/components/pages/serverSettings/panes/troubleshooting/ServerTroubleshootingPaneConnector.tsx","webpack://server-manager/./app/js/views/v3/components/sidebar/settings/ActivityIcon.tsx","webpack://server-manager/./app/js/views/v3/components/sidebar/settings/RemoteAccessStateIcon.css?2e54","webpack://server-manager/./app/js/views/v3/components/sidebar/settings/RemoteAccessStateIcon.tsx","webpack://server-manager/./app/js/views/v3/components/sidebar/settings/ServerIsClaimedIcon.css?4237","webpack://server-manager/./app/js/views/v3/components/sidebar/settings/ServerIsClaimedIcon.tsx","webpack://server-manager/./app/js/utils/constants/serverSettingsSections.tsx","webpack://server-manager/./app/js/v4/features/libraryManagement/components/ManageLibrariesPane.tsx","webpack://server-manager/./app/js/v4/core/serverActivities/selectors/createIsServerLibrariesUpdatingSelector.ts","webpack://server-manager/./app/js/v4/features/dvrManagement/components/settings/LiveTVSettingsPage.tsx","webpack://server-manager/./app/js/views/v3/components/pages/deprecatedPlugins/DeprecatedPluginsPage.tsx","webpack://server-manager/./app/js/stores/selectors/settings/createVisibleSettingsSectionsSelector.ts","webpack://server-manager/./app/js/stores/selectors/server/createServerSettingsSelector.ts","webpack://server-manager/./app/js/utils/getServerSettingsMetricsProps.ts","webpack://server-manager/./app/js/views/lists/settings/AgentListItem.ts","webpack://server-manager/./app/js/views/lists/settings/AgentList.ts","webpack://server-manager/./app/js/views/modals/AgentInfoModal.ts","webpack://server-manager/./app/js/views/lists/settings/ContributorListItem.ts","webpack://server-manager/./app/js/views/lists/settings/ContributorList.ts","webpack://server-manager/./app/js/views/settings/server/ServerSettingsAgentsPane.ts","webpack://server-manager/./app/js/views/settings/server/ServerSettingsPane.ts","webpack://server-manager/./app/js/views/settings/server/ServerSettingsChannelsPane.ts","webpack://server-manager/./app/js/stores/selectors/server/createServerCloudAccountSelector.ts","webpack://server-manager/./app/js/views/v3/components/pages/serverSettings/ServerAvatar.css?f7e9","webpack://server-manager/./app/js/views/v3/components/pages/serverSettings/ServerAvatar.tsx","webpack://server-manager/./app/js/views/v3/components/pages/serverSettings/ClaimedServerAvatarConnector.ts","webpack://server-manager/./app/js/views/v3/components/pages/serverSettings/ClaimedServer.tsx","webpack://server-manager/./app/js/views/v3/components/pages/serverSettings/ClaimedServer.css?1245","webpack://server-manager/./app/js/views/v3/components/pages/serverSettings/ClaimedServerConnector.tsx","webpack://server-manager/./app/js/views/v3/components/pages/serverSettings/ClaimServerButton.tsx","webpack://server-manager/./app/js/views/v3/components/pages/serverSettings/ClaimServerButton.css?6fd1","webpack://server-manager/./app/js/views/v3/components/pages/serverSettings/ClaimServerSignedInButtonConnector.tsx","webpack://server-manager/./app/js/views/v3/components/pages/serverSettings/ClaimServerSignedOutLaunchButtonConnector.tsx","webpack://server-manager/./app/js/views/v3/components/pages/serverSettings/ClaimServerSignedOutPollButtonConnector.tsx","webpack://server-manager/./app/js/views/v3/components/pages/serverSettings/UnclaimedServer.css?9540","webpack://server-manager/./app/js/views/v3/components/pages/serverSettings/UnclaimedServer.tsx","webpack://server-manager/./app/js/views/v3/components/pages/serverSettings/UnclaimedServerConnector.tsx","webpack://server-manager/./app/js/views/v3/components/pages/serverSettings/ClaimServerConnector.tsx","webpack://server-manager/./app/js/stores/selectors/server/createIsServerClaimedSelector.ts","webpack://server-manager/./app/js/views/settings/server/ServerSettingsClaimViewReact.tsx","webpack://server-manager/./app/js/views/modals/ReleaseNotesModal.ts","webpack://server-manager/./app/js/views/settings/server/ServerSettingsUpdateView.ts","webpack://server-manager/./app/js/views/settings/server/ServerSettingsGeneralPane.ts","webpack://server-manager/./app/js/views/settings/server/ServerSettingsLanguagesPane.ts","webpack://server-manager/./app/js/views/settings/server/ServerSettingsRemoteAccessPane.ts","webpack://server-manager/./app/js/views/LoadingView.ts","webpack://server-manager/./app/js/views/lists/library/convert/VersionGeneratorListEmptyView.ts","webpack://server-manager/./app/js/utils/constants/convert/generatorStates.ts","webpack://server-manager/./app/js/views/images/CompositeImage.ts","webpack://server-manager/./app/js/utils/number/bytesToSize.ts","webpack://server-manager/./app/js/utils/constants/convert/backgroundProcessingStates.ts","webpack://server-manager/./app/js/views/lists/library/convert/VersionGeneratorMetadataListItem.ts","webpack://server-manager/./app/js/views/lists/library/convert/VersionGeneratorMetadataList.ts","webpack://server-manager/./app/js/views/modals/convert/VersionGeneratorMetadataModal.ts","webpack://server-manager/./app/js/views/lists/library/convert/VersionGeneratorListItem.ts","webpack://server-manager/./app/js/views/lists/library/convert/VersionGeneratorList.ts","webpack://server-manager/./app/js/views/settings/server/ServerSettingsVersionsErrorView.ts","webpack://server-manager/./app/js/views/settings/server/ServerSettingsVersionsPane.ts","webpack://server-manager/./app/js/views/settings/server/ServerSettingsInnerView.ts","webpack://server-manager/./app/glyphs/alert-round-560.svg","webpack://server-manager/./app/js/views/v3/components/livetv/dvr/DVROutdatedServerBanner.css?2349","webpack://server-manager/./app/js/views/v3/components/livetv/dvr/DVROutdatedServerBanner.tsx","webpack://server-manager/./app/js/views/v3/components/livetv/dvr/DVROutdatedServerBannerConnector.tsx","webpack://server-manager/./app/js/views/v3/components/pages/settings/SettingsPageHeader.tsx","webpack://server-manager/./app/js/views/v3/components/pages/settings/SettingsPageHeader.css?aea7","webpack://server-manager/./app/js/views/v3/helpers/getServerDetail.ts","webpack://server-manager/./app/js/views/v3/helpers/getServerTitle.ts","webpack://server-manager/./app/js/views/v3/components/pages/serverSettings/ServerSettingsPageHeader.tsx","webpack://server-manager/./app/js/views/v3/components/pages/serverSettings/ServerSettingsPageHeaderConnector.ts","webpack://server-manager/./app/js/views/v3/components/pages/settings/SettingsPage.tsx","webpack://server-manager/./app/js/views/v3/components/pages/settings/SettingsPage.css?5c18","webpack://server-manager/./app/js/views/v3/components/pages/serverSettings/ServerSettingsPage.tsx","webpack://server-manager/./app/js/views/v3/components/pages/serverSettings/ServerSettingsPageConnector.ts","webpack://server-manager/./app/js/views/v3/components/core/sidebar/SidebarContainer.tsx","webpack://server-manager/./app/js/views/v3/components/core/sidebar/SidebarContainer.css?1001","webpack://server-manager/./app/js/views/v3/components/core/sidebar/SidebarScroller.tsx","webpack://server-manager/./app/js/views/v3/components/core/sidebar/SidebarScroller.css?b2b1","webpack://server-manager/./app/js/views/v3/components/sidebar/menu/ServerMenuItem.tsx","webpack://server-manager/./app/js/views/v3/components/sidebar/menu/ServerMenuItem.css?8cc5","webpack://server-manager/./app/js/views/v3/components/sidebar/settings/ServerSettingsStatusIcon.tsx","webpack://server-manager/./app/js/views/v3/components/sidebar/settings/ServerSettingsStatusIcon.css?3ed9","webpack://server-manager/./app/js/views/v3/helpers/getServerDetailWithStatus.ts","webpack://server-manager/./app/js/views/v3/helpers/getServerStatus.ts","webpack://server-manager/./app/js/views/v3/components/sidebar/settings/ServerSettingsServerMenuItemConnector.ts","webpack://server-manager/./app/js/views/v3/components/sidebar/settings/ServerSettingsServerMenuItem.tsx","webpack://server-manager/./app/js/views/v3/components/sidebar/settings/ServerSettingsServerMenuItem.css?a421","webpack://server-manager/./app/js/views/v3/components/sidebar/settings/ServerSettingsServerMenu.tsx","webpack://server-manager/./app/js/views/v3/components/sidebar/settings/ServerSettingsServerMenu.css?dd38","webpack://server-manager/./app/js/views/v3/components/core/sidebar/SidebarMenuButton.tsx","webpack://server-manager/./app/js/views/v3/components/core/sidebar/SidebarMenuButton.css?9796","webpack://server-manager/./app/js/views/v3/components/sidebar/menu/SidebarMenuButton.tsx","webpack://server-manager/./app/js/views/v3/components/sidebar/settings/ServerSettingsServerMenuButtonConnector.ts","webpack://server-manager/./app/js/views/v3/components/sidebar/settings/ServerSettingsServerMenuButton.tsx","webpack://server-manager/./app/js/views/v3/components/sidebar/settings/ServerSettingsServerMenuButton.css?53d5","webpack://server-manager/./app/js/views/v3/components/core/sidebar/SidebarLink.tsx","webpack://server-manager/./app/js/views/v3/components/core/sidebar/SidebarLink.css?6694","webpack://server-manager/./app/js/views/v3/helpers/getValidComponents.ts","webpack://server-manager/./app/js/views/v3/components/core/sidebar/SidebarListItem.tsx","webpack://server-manager/./app/js/views/v3/components/core/sidebar/SidebarListItem.css?4520","webpack://server-manager/./app/js/views/v3/components/core/sidebar/SidebarListLink.tsx","webpack://server-manager/./app/js/views/v3/components/core/sidebar/SidebarMessage.tsx","webpack://server-manager/./app/js/views/v3/components/core/sidebar/SidebarMessage.css?3414","webpack://server-manager/./app/js/views/v3/components/sidebar/server/SidebarServerUnavailableMessage.tsx","webpack://server-manager/./app/js/views/v3/components/sidebar/server/SidebarServerUnavailableMessageConnector.ts","webpack://server-manager/./app/js/views/v3/decorators/connectWithMetrics.tsx","webpack://server-manager/./app/js/views/v3/components/core/sidebar/SidebarList.tsx","webpack://server-manager/./app/js/views/v3/components/core/sidebar/SidebarList.css?0766","webpack://server-manager/./app/js/views/v3/components/sidebar/settings/SettingsSidebarList.tsx","webpack://server-manager/./app/js/views/v3/components/sidebar/settings/SettingsSidebarList.css?7fde","webpack://server-manager/./app/js/views/v3/components/sidebar/settings/SettingsSidebarListLink.css?2ab6","webpack://server-manager/./app/js/views/v3/components/sidebar/settings/SettingsSidebarListLink.tsx","webpack://server-manager/./app/js/views/v3/components/sidebar/settings/ServerSettingsSidebarList.tsx","webpack://server-manager/./app/js/views/v3/components/sidebar/settings/ServerSettingsSidebarListConnector.tsx","webpack://server-manager/./app/js/views/v3/components/sidebar/settings/SettingsSidebar.tsx","webpack://server-manager/./app/js/views/v3/components/sidebar/settings/SettingsSidebar.css?eec7","webpack://server-manager/./app/js/views/v3/components/sidebar/settings/SettingsSidebarConnector.ts","webpack://server-manager/./app/js/views/settings/server/ServerSettingsView.tsx","webpack://server-manager/./app/js/v4/features/serverSettings/components/ServerSettingsViewPage.tsx","webpack://server-manager/./app/js/views/activity/CircleProgressBarView.tpl","webpack://server-manager/./app/templates/LoadingView.tpl","webpack://server-manager/./app/templates/activity/AlertsView.tpl","webpack://server-manager/./app/templates/activity/ConversionView.tpl","webpack://server-manager/./app/templates/deprecatedPlugin/DeprecatedPluginSettingsModal.tpl","webpack://server-manager/./app/templates/deprecatedPlugin/DeprecatedPluginTileListItem.tpl","webpack://server-manager/./app/templates/deprecatedPlugin/DeprecatedPluginsView.tpl","webpack://server-manager/./app/templates/lists/activity/AlertListItem.tpl","webpack://server-manager/./app/templates/lists/activity/convert/ConversionQueueListEmptyView.tpl","webpack://server-manager/./app/templates/lists/activity/convert/ConversionQueueListItem.tpl","webpack://server-manager/./app/templates/lists/activity/convert/ConversionStatusView.tpl","webpack://server-manager/./app/templates/lists/library/convert/VersionGeneratorListEmptyView.tpl","webpack://server-manager/./app/templates/lists/library/convert/VersionGeneratorListItem.tpl","webpack://server-manager/./app/templates/lists/library/convert/VersionGeneratorMetadataListItem.tpl","webpack://server-manager/./app/templates/lists/settings/AgentListItem.tpl","webpack://server-manager/./app/templates/lists/settings/ContributorListItem.tpl","webpack://server-manager/./app/templates/modals/AgentInfoModal.tpl","webpack://server-manager/./app/templates/modals/ReleaseNotesModal.tpl","webpack://server-manager/./app/templates/modals/convert/VersionGeneratorMetadataModal.tpl","webpack://server-manager/./app/templates/settings/server/ServerSettingsAgentsPane.tpl","webpack://server-manager/./app/templates/settings/server/ServerSettingsGeneralPane.tpl","webpack://server-manager/./app/templates/settings/server/ServerSettingsPane.tpl","webpack://server-manager/./app/templates/settings/server/ServerSettingsRemoteAccessPane.tpl","webpack://server-manager/./app/templates/settings/server/ServerSettingsUpdateView.tpl","webpack://server-manager/./app/templates/settings/server/ServerSettingsVersionsErrorView.tpl","webpack://server-manager/./app/templates/settings/server/ServerSettingsVersionsPane.tpl","webpack://server-manager/./app/templates/settings/server/ServerSettingsView.tpl"],"sourcesContent":["/* eslint-plugin-disable @typescript-eslint */\n\nimport formatHelper from 'date-fns/format';\n\nfunction formatDate(date: any, format = 'MMMM d, yyyy') {\n  return date ? formatHelper(date, format) : '';\n}\n\nexport default formatDate;\n","/* eslint-plugin-disable @typescript-eslint */\n\nconst formatDate = require('app/js/utils/dateTime/formatDate').default;\n// @ts-expect-error ts-migrate(2451) FIXME: Cannot redeclare block-scoped variable 'stripOptio... Remove this comment to see the full error message\nconst stripOptions = require('../stripOptions');\n\nmodule.exports = stripOptions(formatDate);\n","/* eslint-plugin-disable @typescript-eslint */\n\nfunction encodeUrl(str: any) {\n  return encodeURIComponent(str || '');\n}\n\nmodule.exports = encodeUrl;\n","/* eslint-plugin-disable @typescript-eslint */\n\nimport _ from 'underscore';\nimport BaseModel from 'app/js/models/BaseModel';\nimport parser from 'app/js/utils/parser';\n\nconst ServerAccountModel = BaseModel.extend({\n  //\n  // Properties\n\n  idAttribute: 'key',\n\n  whitelistedAttrs: [\n    'key',\n    'name',\n    'defaultAudioLanguage',\n    'autoSelectAudio',\n    'defaultSubtitleLanguage',\n    'subtitleMode',\n  ],\n\n  url: function () {\n    return this.get('key');\n  },\n\n  //\n  // Control\n\n  convert: function (xml: any) {\n    let json = _.isObject(xml) ? xml : parser.parseXML(xml);\n    if (json.Account) {\n      json = json.Account;\n    }\n\n    parser.parseBoolean(json, 'autoSelectAudio');\n\n    return json;\n  },\n\n  parse: function (response: any) {\n    let json = this.convert(response);\n\n    json = _.pick(json, this.whitelistedAttrs);\n\n    return json;\n  },\n});\n\nexport default ServerAccountModel;\n","/* eslint-plugin-disable @typescript-eslint */\n\nimport createKey from 'app/js/views/v3/helpers/createKey';\n\nexport function createWebClientSettingsSidebarKey(settingsSubset: any) {\n  return createKey('web-client', 'settings', settingsSubset);\n}\nexport function createServerSettingsSidebarKey(\n  machineIdentifier: any,\n  settingsGroup: any,\n  settingsType: any\n) {\n  return createKey('server', machineIdentifier, settingsGroup, settingsType);\n}\n","/* eslint-plugin-disable @typescript-eslint */\n\nimport * as providerIdentifiers from 'app/js/utils/constants/providerIdentifiers';\nimport createEntityID from 'app/js/utils/state/createEntityID';\nimport * as entityTypes from 'app/js/utils/state/entityTypes';\n\nexport default function createLibraryProviderEntityID(serverEntityID: any) {\n  return createEntityID(\n    entityTypes.PROVIDER,\n    providerIdentifiers.LIBRARY,\n    serverEntityID\n  );\n}\n","import _ from 'underscore';\nimport { resolve } from 'app/js/adapters/adapters';\nimport Marionette from 'app/js/initializers/extensions/MarionetteExtension';\nimport t from 'app/js/utils/t';\n// @ts-expect-error ts-migrate(2307) FIXME: Cannot find module 'app/templates/lists... Remove this comment to see the full error message\nimport tpl from 'app/templates/lists/activity/AlertListItem.tpl';\n\nconst AlertListItem = Marionette.ItemView.extend({\n  //\n  // Properties\n\n  tagName: 'li',\n  className: 'card-collapsed striped-list-item alert-list-item',\n  template: tpl,\n\n  //\n  // Control\n\n  serializeData: function () {\n    const experienceSettingsModel = resolve('appModel')\n      .get('user')\n      .get('experienceSettings');\n    const event = this.model.toJSON();\n\n    const data = {\n      serverID: this.model.server.id,\n      itemKey: '/library/metadata/' + this.model.get('itemID'),\n      event: event,\n      escapedServerName: _.escape(this.model.server.get('friendlyName')),\n      escapedEventLabel: _.escape(event.label),\n      escapedEventValue: _.escape(event.value),\n      escapedEventUsername: _.escape(event.username),\n      escapedEventTitle: _.escape(event.title),\n      escapedEventPlayer: _.escape(event.player),\n      timeFormat: experienceSettingsModel.get('timeFormat'),\n    };\n\n    // These values are used as arguments in translate calls, which are not\n    // automatically escaped.\n    event.label = _.escape(event.label);\n    event.value = _.escape(event.value);\n\n    if (event._type === 'playing') {\n      event.username = _.escape(event.username);\n      event.title = _.escape(event.title);\n      event.player = _.escape(event.player);\n    }\n\n    if (event._type === 'timeline') {\n      event.mediaTitle = this.model.get('title') || 'an item';\n\n      switch (this.model.get('state')) {\n        case 0:\n          event.stateString = t('Created');\n          break;\n        case 1:\n          event.stateString = t('Progress for');\n          break;\n        case 2:\n          event.stateString = t('Matching');\n          break;\n        case 3:\n          event.stateString = t('Downloading metadata for');\n          break;\n        case 4:\n          event.stateString = t('Loading metadata for');\n          break;\n        case 5:\n          event.stateString = t('Finished processing');\n          break;\n        case 6:\n          event.stateString = t('Analyzing');\n          break;\n        case 9:\n          event.stateString = t('Deleted');\n          break;\n      }\n    }\n\n    return data;\n  },\n});\n\nexport default AlertListItem;\n","import BaseList from 'app/js/views/lists/BaseList';\nimport AlertListItem from 'app/js/views/lists/activity/AlertListItem';\n\nconst AlertList = BaseList.extend({\n  //\n  // Properties\n\n  tagName: 'ul',\n  className: 'list card-list alert-list',\n  itemView: AlertListItem,\n  reversed: true,\n});\n\nexport default AlertList;\n","import _ from 'underscore';\nimport Marionette from 'app/js/initializers/extensions/MarionetteExtension';\nimport t from 'app/js/utils/t';\nimport AlertList from 'app/js/views/lists/activity/AlertList';\n// @ts-expect-error ts-migrate(2307) FIXME: Cannot find module 'app/templates/activ... Remove this comment to see the full error message\nimport tpl from 'app/templates/activity/AlertsView.tpl';\n\nconst AlertsView = Marionette.Layout.extend({\n  //\n  // Properties\n\n  className: 'alerts-container',\n  template: tpl,\n\n  ui: {\n    pageCount: '.page-count',\n    previousBtn: '.previous-btn',\n    nextBtn: '.next-btn',\n  },\n\n  regions: {\n    serverDropdown: '.filter-bar',\n    list: '.alert-list-container',\n  },\n\n  modelEvents: {\n    'change:shared': 'onSharedChange',\n  },\n\n  collectionEvents: {\n    add: 'onAlertAdd',\n  },\n\n  events: {\n    'click .previous-btn': 'onPreviousClick',\n    'click .next-btn': 'onNextClick',\n  },\n\n  onlyAfterRender: ['onAlertAdd'],\n\n  //\n  // Initialize\n\n  initialize: function () {\n    this.shared = this.model.get('shared');\n    this.page = 1;\n    this.listCollection = this.collection.clone(\n      this.collection.page(this.page, { reverse: true })\n    );\n    this.listCollection.stopListening();\n  },\n\n  //\n  // Control\n\n  serializeData: function () {\n    const pages = this.collection.pages();\n\n    return {\n      shared: this.shared,\n      escapedPage: _.escape(this.page),\n      escapedPages: _.escape(pages),\n      enablePrevious: this.page > 1,\n      enableNext: this.page < pages,\n    };\n  },\n\n  updatePages: function () {\n    const pages = this.collection.pages();\n\n    this.ui.pageCount.text(t('{1} of {2}', this.page, pages));\n    this.ui.previousBtn.toggleClass('disabled', this.page < 2);\n    this.ui.nextBtn.toggleClass('disabled', this.page >= pages);\n  },\n\n  updateList: function () {\n    this.listCollection.reset(\n      this.collection.page(this.page, { reverse: true })\n    );\n  },\n\n  //\n  // Listeners\n\n  onRender: function () {\n    if (!this.shared) {\n      this.list.append(new AlertList({ collection: this.listCollection }));\n    }\n  },\n\n  // @ts-expect-error ts-migrate(6133) FIXME: 'server' is declared but its value is never read.\n  onSharedChange: function (server: any, shared: any) {\n    this.shared = shared;\n    this.render();\n  },\n\n  onAlertAdd: function () {\n    if (this.shared) {\n      return;\n    }\n\n    this.updatePages();\n    this.updateList();\n  },\n\n  onPreviousClick: function (event: any) {\n    event.preventDefault();\n\n    if (this.ui.previousBtn.isDisabled()) {\n      return;\n    }\n\n    this.page--;\n    this.updatePages();\n    this.updateList();\n  },\n\n  onNextClick: function (event: any) {\n    event.preventDefault();\n\n    if (this.ui.nextBtn.isDisabled()) {\n      return;\n    }\n\n    this.page++;\n    this.updatePages();\n    this.updateList();\n  },\n});\n\nexport default AlertsView;\n","/* eslint-plugin-disable @typescript-eslint */\n/* eslint-disable prefer-rest-params, prefer-spread */\n\nimport _ from 'underscore';\nimport Backbone from 'app/js/initializers/extensions/BackboneExtension';\nimport BaseClass from 'app/js/utils/BaseClass';\nimport eventMixin from 'app/js/utils/mixins/eventMixin';\n\n// This is a band-aid over some Obscura issues that were making things more\n// difficult than they needed to be. Obscura.FilteredCollection cannot be\n// extended and used independently easily and Obscura has some worrying\n// performance issues. For example, Obscura resets by default (we've patched\n// this), sort events trigger refilters, and SortedCollection listeners will\n// add and remove models from the collection even when we aren't using any\n// sorts. Our only use of Obscura so far is filters, so this tries to\n// isolate and simplify what we need, improving performance where possible.\n\n// @ts-expect-error ts-migrate(2554) FIXME: Expected 2 arguments, but got 1.\nconst FilteredCollection = BaseClass.extend({\n  mixins: [eventMixin],\n\n  //\n  // Properties\n\n  defaultFilterName: '__default',\n\n  whitelistedEvents: [\n    'add',\n    'remove',\n    'reset',\n    'sort',\n    'destroy',\n    'sync',\n    'request',\n    'error',\n  ],\n\n  blacklistedMethods: [\n    '_onModelEvent',\n    '_prepareModel',\n    '_removeReference',\n    '_reset',\n    'add',\n    'initialize',\n    'sync',\n    'remove',\n    'reset',\n    'set',\n    'push',\n    'pop',\n    'unshift',\n    'shift',\n    'sort',\n    'parse',\n    'fetch',\n    'create',\n    'model',\n    'off',\n    'on',\n    'listenTo',\n    'listenToOnce',\n    'bind',\n    'trigger',\n    'once',\n    'stopListening',\n  ],\n\n  //\n  // Init\n\n  constructor: function (superset: any, options: any) {\n    this.superset = superset;\n\n    this._collection = new Backbone.Collection(superset.toArray());\n    this._proxyCollection(this._collection);\n\n    this.resetFilters();\n\n    this.listenTo(superset, {\n      add: this.onSupersetAdd,\n      remove: this.onSupersetRemove,\n      reset: this.onSupersetReset,\n    });\n\n    this.initialize(options);\n  },\n\n  _proxyCollection: function (collection: any) {\n    this.models = collection.models;\n\n    this._proxyCollectionMethods(collection);\n    this._proxyCollectionLength(collection);\n    this._proxyCollectionEvents(collection);\n  },\n\n  _proxyCollectionMethods: function (collection: any) {\n    const methods = {};\n    _.each(\n      _.functions(Backbone.Collection.prototype),\n      function (method) {\n        // @ts-expect-error ts-migrate(2683) FIXME: 'this' implicitly has type 'any' because it does n... Remove this comment to see the full error message\n        if (!_.contains(this.blacklistedMethods, method)) {\n          // @ts-expect-error ts-migrate(7053) FIXME: Element implicitly has an 'any' type because expre... Remove this comment to see the full error message\n          methods[method] = function () {\n            return collection[method].apply(collection, arguments);\n          };\n        }\n      },\n      this\n    );\n\n    _.extend(this, methods);\n  },\n\n  _proxyCollectionLength: function (collection: any) {\n    const updateLength = function () {\n      // @ts-expect-error ts-migrate(2683) FIXME: 'this' implicitly has type 'any' because it does n... Remove this comment to see the full error message\n      this.length = collection.length;\n    };\n\n    this.listenTo(collection, 'all', updateLength);\n    updateLength.call(this);\n  },\n\n  _proxyCollectionEvents: function (collection: any) {\n    const pipeEvents = function (eventName: any) {\n      const args = _.toArray(arguments);\n      const isChangeEvent =\n        eventName === 'change' || eventName.slice(0, 7) === 'change:';\n      if (eventName === 'reset') {\n        // @ts-expect-error ts-migrate(2683) FIXME: 'this' implicitly has type 'any' because it does n... Remove this comment to see the full error message\n        this.models = collection.models;\n      }\n      // @ts-expect-error ts-migrate(2683) FIXME: 'this' implicitly has type 'any' because it does n... Remove this comment to see the full error message\n      if (_.contains(this.whitelistedEvents, eventName)) {\n        if (_.contains(['add', 'remove', 'destroy'], eventName)) {\n          // @ts-expect-error ts-migrate(2683) FIXME: 'this' implicitly has type 'any' because it does n... Remove this comment to see the full error message\n          args[2] = this;\n        } else if (_.contains(['reset', 'sort'], eventName)) {\n          // @ts-expect-error ts-migrate(2683) FIXME: 'this' implicitly has type 'any' because it does n... Remove this comment to see the full error message\n          args[1] = this;\n        }\n        // @ts-expect-error ts-migrate(2683) FIXME: 'this' implicitly has type 'any' because it does n... Remove this comment to see the full error message\n        this.trigger.apply(this, args);\n      } else if (isChangeEvent) {\n        // @ts-expect-error ts-migrate(2683) FIXME: 'this' implicitly has type 'any' because it does n... Remove this comment to see the full error message\n        if (this.contains(args[1])) {\n          // @ts-expect-error ts-migrate(2683) FIXME: 'this' implicitly has type 'any' because it does n... Remove this comment to see the full error message\n          this.trigger.apply(this, args);\n        }\n      }\n    };\n\n    this.listenTo(collection, 'all', pipeEvents);\n  },\n\n  //\n  // Control\n\n  addFilter: function (filterName: any, filter: any) {\n    if (!filter) {\n      filter = filterName;\n      filterName = this.defaultFilterName;\n    }\n\n    if (_.has(this._filters, filterName)) {\n      this._invalidateCacheForFilter(filterName);\n    }\n    this._filters[filterName] = this._createFilter(filter);\n\n    this._execFilters();\n    this.trigger('filtered:add', filterName);\n\n    return this;\n  },\n\n  removeFilter: function (filterName: any) {\n    if (!filterName) {\n      filterName = this.defaultFilterName;\n    }\n\n    delete this._filters[filterName];\n    this._invalidateCacheForFilter(filterName);\n\n    this._execFilters();\n    this.trigger('filtered:remove', filterName);\n\n    return this;\n  },\n\n  resetFilters: function () {\n    this._filters = {};\n    this._invalidateCache();\n    this._execFilters();\n    this.trigger('filtered:reset');\n\n    return this;\n  },\n\n  getFilters: function () {\n    return _.keys(this._filters);\n  },\n\n  hasFilter: function (name: any) {\n    return _.contains(this.getFilters(), name);\n  },\n\n  refilter: function (arg: any) {\n    if (_.isObject(arg) && arg.cid) {\n      this.onSupersetAdd(arg);\n    } else {\n      this._invalidateCache();\n      this._execFilters();\n    }\n\n    return this;\n  },\n\n  destroy: function () {\n    this.stopListening();\n    this.superset = null;\n    this._collection.reset([]);\n    this.length = 0;\n    this.trigger('filtered:destroy');\n\n    return this;\n  },\n\n  // @ts-expect-error ts-migrate(6133) FIXME: 'keys' is declared but its value is never read.\n  _createFilter: function (filter: any, keys: any) {\n    if (_.isFunction(filter)) {\n      return filter;\n    }\n\n    throw new Error('Unsupported filter type');\n  },\n\n  _execFilters: function (options: any) {\n    options || (options = {});\n\n    let filtered = [];\n    if (this.superset) {\n      filtered = this.superset.filter(_.bind(this._execFiltersOnModel, this));\n    }\n\n    if (options.reset) {\n      this._collection.reset(filtered);\n    } else {\n      this._collection.set(filtered);\n    }\n\n    this.length = this._collection.length;\n  },\n\n  _execFiltersOnModel: function (model: any) {\n    if (!this._filterResultCache[model.cid]) {\n      this._filterResultCache[model.cid] = {};\n    }\n    const cache = this._filterResultCache[model.cid];\n    for (const filterName in this._filters) {\n      if (_.has(this._filters, filterName)) {\n        // If the result isn't already in the cache, run the filter function\n        // and store the result.\n        if (!_.has(cache, filterName)) {\n          cache[filterName] = this._filters[filterName](model);\n        }\n\n        if (!cache[filterName]) {\n          return false;\n        }\n      }\n    }\n    return true;\n  },\n\n  _invalidateCache: function () {\n    this._filterResultCache = {};\n  },\n\n  _invalidateCacheForFilter: function (filterName: any) {\n    for (const cid in this._filterResultCache) {\n      if (_.has(this._filterResultCache, cid)) {\n        delete this._filterResultCache[cid][filterName];\n      }\n    }\n  },\n\n  //\n  // Listeners\n\n  onSupersetAdd: function (model: any) {\n    this._filterResultCache[model.cid] = {};\n\n    if (this._execFiltersOnModel(model)) {\n      if (!this._collection.get(model.cid)) {\n        const index = this.superset.indexOf(model);\n        let filteredIndex = 0;\n\n        for (let i = index - 1; i >= 0; i -= 1) {\n          if (this.contains(this.superset.at(i))) {\n            filteredIndex = this.indexOf(this.superset.at(i)) + 1;\n            break;\n          }\n        }\n\n        this._collection.add(model, { at: filteredIndex });\n      }\n    } else if (this._collection.get(model.cid)) {\n      this._collection.remove(model);\n    }\n\n    this.length = this._collection.length;\n  },\n\n  onSupersetRemove: function (model: any) {\n    if (this.contains(model)) {\n      this._collection.remove(model);\n    }\n\n    this.length = this._collection.length;\n  },\n\n  onSupersetReset: function () {\n    this._execFilters({ reset: true });\n  },\n});\n\nexport default FilteredCollection;\n","/* eslint-plugin-disable @typescript-eslint */\n\nimport _ from 'underscore';\nimport FilteredCollection from 'app/js/models/FilteredCollection';\n\nconst PlayQueueUpNextCollection = FilteredCollection.extend({\n  //\n  // Init\n\n  initialize: function (options: any) {\n    this.playQueue = options.playQueue;\n    this.includeSelectedItem = options.includeSelectedItem;\n\n    this.addFilter(_.bind(this.filterUpNext, this));\n    this.listenForUpNextChanges();\n  },\n\n  listenForUpNextChanges: function () {\n    // @ts-expect-error ts-migrate(2554) FIXME: Expected 2-3 arguments, but got 1.\n    const debouncedPlayQueueChange = _.debounce(this.onPlayQueueChange);\n    const events = [\n      'change:playQueueSelectedItemID',\n      'change:playQueueLastAddedItemID',\n    ];\n\n    this.listenTo(this.playQueue, events.join(' '), debouncedPlayQueueChange);\n    this.listenTo(\n      this.playQueue.get('collection'),\n      'change:queueIndex',\n      debouncedPlayQueueChange\n    );\n  },\n\n  //\n  // Control\n\n  filterUpNext: function (playQueueItem: any) {\n    const index = this.superset.indexOf(playQueueItem);\n    const range = this.playQueue.getUpNextRange();\n    let startIndex = range.start;\n    const endIndex = range.end;\n\n    // If we are not including the selected item as part of this collection,\n    // don't include its index in the filtered range.\n    if (!this.includeSelectedItem) {\n      startIndex += 1;\n    }\n\n    return index >= startIndex && index <= endIndex;\n  },\n\n  //\n  // Listeners\n\n  onPlayQueueChange: function () {\n    this.refilter();\n  },\n});\n\nexport default PlayQueueUpNextCollection;\n","/* eslint-plugin-disable @typescript-eslint */\n\nimport _ from 'underscore';\nimport PlayQueueUpNextCollection from 'app/js/models/library/PlayQueueUpNextCollection';\n\nconst PlayQueueAfterUpNextCollection = PlayQueueUpNextCollection.extend({\n  //\n  // Init\n\n  initialize: function (options: any) {\n    this.playQueue = options.playQueue;\n\n    this.addFilter(_.bind(this.filterAfterUpNext, this));\n    this.listenForUpNextChanges();\n  },\n\n  //\n  // Control\n\n  filterAfterUpNext: function (playQueueItem: any) {\n    const index = this.superset.indexOf(playQueueItem);\n    const range = this.playQueue.getUpNextRange();\n\n    return index > range.end;\n  },\n});\n\nexport default PlayQueueAfterUpNextCollection;\n","/* eslint-plugin-disable @typescript-eslint */\n\nimport durationOf from 'app/js/utils/dateTime/durationOf';\nimport t from 'app/js/utils/t';\n\nfunction formatMinutes(milliseconds: any) {\n  if (milliseconds == null) {\n    return '';\n  }\n  const duration = durationOf(milliseconds);\n  const days = (duration as any).days * 24 * 60;\n  const hours = (duration as any).hours * 60;\n  const min = (duration as any).minutes + hours + days;\n  const sec = (duration as any).seconds;\n  if (min) {\n    return t('{1} min', min);\n  } else if (sec > 0) {\n    return t('{1} sec', sec);\n  } else {\n    return '';\n  }\n}\nexport default formatMinutes;\n","/* eslint-plugin-disable @typescript-eslint */\n\nimport _ from 'underscore';\nimport formatDays from './formatDays';\nimport formatDaysHours from './formatDaysHours';\nimport formatHoursMinutes from './formatHoursMinutes';\nimport formatMinutes from './formatMinutes';\n\nconst cutoffs: [number, (ms: number) => string][] = [\n  [90 * 60 * 1000, formatMinutes], // 1 and a half minutes\n  [24 * 60 * 60 * 1000, formatHoursMinutes], // 1 day\n  [7 * 24 * 60 * 60 * 1000, formatDaysHours], // 1 week\n  [Infinity, formatDays],\n];\n\nfunction formatDuration(milliseconds: any) {\n  if (!milliseconds) {\n    return '';\n  }\n\n  const cutoff = _.find(cutoffs, ([cutoff_]) => {\n    return milliseconds <= cutoff_;\n  });\n\n  return cutoff && cutoff[1](milliseconds);\n}\n\nexport default formatDuration;\n","/* eslint-plugin-disable @typescript-eslint */\n\nimport durationOf from 'app/js/utils/dateTime/durationOf';\nimport t from 'app/js/utils/t';\n\nfunction formatHoursMinutes(milliseconds: any) {\n  if (milliseconds == null) {\n    return '';\n  }\n  const duration = durationOf(milliseconds);\n  const hr = (duration as any).hours + 24 * (duration as any).days;\n  const min = (duration as any).minutes;\n  const sec = (duration as any).seconds;\n  if (hr && min) {\n    return t('{1} hr {2} min', hr, min);\n  } else if (hr) {\n    return t('{1} hr', hr);\n  } else if (min) {\n    return t('{1} min', min);\n  } else if (sec > 0) {\n    return t('{1} sec', sec);\n  } else {\n    return '';\n  }\n}\nexport default formatHoursMinutes;\n","/* eslint-plugin-disable @typescript-eslint */\n\nimport durationOf from 'app/js/utils/dateTime/durationOf';\nimport t from 'app/js/utils/t';\n\nfunction formatDaysHours(milliseconds: any) {\n  if (milliseconds == null) {\n    return '';\n  }\n  const duration = durationOf(milliseconds);\n  const days = (duration as any).days;\n  const hours = (duration as any).hours;\n  const isPlural = days !== 1;\n  if (days && hours) {\n    return isPlural\n      ? t('{1} days {2} hr', days, hours)\n      : t('{1} day {2} hr', days, hours);\n  } else if (days) {\n    return isPlural ? t('{1} days', days) : t('{1} day', days);\n  } else {\n    return t('{1} hr', hours);\n  }\n}\nexport default formatDaysHours;\n","/* eslint-plugin-disable @typescript-eslint */\n\nimport durationOf, {\n  DAYS_PER_MONTH,\n  DAYS_PER_YEAR,\n} from 'app/js/utils/dateTime/durationOf';\nimport t from 'app/js/utils/t';\n\nfunction formatDays(milliseconds: any) {\n  if (milliseconds == null) {\n    return '';\n  }\n  const duration = durationOf(milliseconds);\n  const years = (duration as any).years * DAYS_PER_YEAR;\n  const months = (duration as any).months * DAYS_PER_MONTH;\n  const days = years + months + (duration as any).days;\n  return days !== 1 ? t('{1} days', days) : t('{1} day', days);\n}\nexport default formatDays;\n","import Marionette from 'app/js/initializers/extensions/MarionetteExtension';\n// @ts-expect-error ts-migrate(2307) FIXME: Cannot find module './CircleProgressBarView.tpl' o... Remove this comment to see the full error message\nimport tpl from './CircleProgressBarView.tpl';\n\nconst CircleProgressBarView = Marionette.ItemView.extend({\n  //\n  // Properties\n\n  className: 'circle-progress',\n  template: tpl,\n\n  size: 30,\n  lineWidth: 5,\n  strokeColor: '#cc7b19',\n  hasSize: false,\n\n  ui: {\n    svg: '.circle-progress-bar',\n    svgCircle: '.circle-progress-bar circle',\n  },\n\n  bindings: {\n    '.circle-progress-text': {\n      modelAttribute: 'text',\n    },\n  },\n\n  modelEvents: {\n    'change:progress': 'onProgressChange',\n  },\n\n  //\n  // Init\n\n  initialize: function (options: any) {\n    this.size = options.size || this.size;\n    this.lineWidth = options.lineWidth || this.lineWidth;\n    this.strokeColor = options.strokeColor || this.strokeColor;\n\n    if (this.size) {\n      this.$el.width(this.size);\n      this.$el.height(this.size);\n    }\n  },\n\n  //\n  // Control\n\n  drawProgressBar: function () {\n    const size = this.size;\n    const center = size / 2;\n    const radius = center - this.lineWidth;\n    const circumference = Math.PI * (radius * 2);\n\n    if (!this.hasSize) {\n      this.ui.svg.attr('width', size);\n      this.ui.svg.attr('height', size);\n\n      this.ui.svgCircle.attr('r', radius);\n      this.ui.svgCircle.attr('cx', center);\n      this.ui.svgCircle.attr('cy', center);\n      this.ui.svgCircle.attr('stroke-dasharray', circumference);\n\n      this.ui.svgCircle.css('stroke-width', this.lineWidth);\n      this.ui.svgCircle.css('stroke', this.strokeColor);\n\n      this.hasSize = true;\n    }\n\n    const progress = this.model.get('progress');\n    const percent = ((100 - progress) / 100) * circumference;\n\n    this.ui.svgCircle.css('stroke-dashoffset', percent);\n  },\n\n  //\n  // Listeners\n\n  onRender: function () {\n    this.drawProgressBar();\n  },\n\n  onProgressChange: function () {\n    this.drawProgressBar();\n  },\n});\n\nexport default CircleProgressBarView;\n","import Backbone from 'app/js/initializers/extensions/BackboneExtension';\nimport Marionette from 'app/js/initializers/extensions/MarionetteExtension';\nimport stateMachineMixin from 'app/js/mixins/views/stateMachineMixin';\nimport formatDurationSecondsLeft from 'app/js/utils/dateTime/formatDurationSecondsLeft';\nimport t from 'app/js/utils/t';\nimport CircleProgressBarView from 'app/js/views/activity/CircleProgressBarView';\n// @ts-expect-error ts-migrate(2307) FIXME: Cannot find module 'app/templates/lists... Remove this comment to see the full error message\nimport tpl from 'app/templates/lists/activity/convert/ConversionStatusView.tpl';\n\nconst ConversionStatusView = Marionette.Layout.extend({\n  mixins: [stateMachineMixin],\n  //\n  // Properties\n  className: 'conversion-status',\n  template: tpl,\n  regions: {\n    progressBarRegion: '.progress-bar-region',\n  },\n  //\n  // Init\n  initialize: function (options: any) {\n    this.initialState = options.initialState;\n    this.initialErrorMessage = options.initialErrorMessage;\n    this.generator = options.generator;\n    this.transcodeJobs = options.transcodeJobs;\n    this.pausedSetting = options.pausedSetting;\n    this.progressModel = new Backbone.Model({\n      progress: 0,\n      remaining: 0,\n      speed: 0,\n    });\n  },\n  //\n  // States\n  states: {\n    pending: {\n      onEnter: function () {\n        (this as any).$el.addClass('pending');\n      },\n      onExit: function () {\n        (this as any).$el.removeClass('pending');\n      },\n    },\n    converting: {\n      onEnter: function () {\n        (this as any).$el.addClass('converting');\n      },\n      onExit: function () {\n        (this as any).$el.removeClass('converting');\n      },\n    },\n    processed: {\n      onEnter: function () {\n        (this as any).$el.addClass('processed');\n      },\n      onExit: function () {\n        (this as any).$el.removeClass('processed');\n      },\n    },\n    disabled: {\n      onEnter: function () {\n        (this as any).$el.addClass('disabled');\n      },\n      onExit: function () {\n        (this as any).$el.removeClass('disabled');\n      },\n    },\n    error: {\n      onEnter: function () {\n        (this as any).$el.addClass('error');\n      },\n      onExit: function () {\n        (this as any).$el.removeClass('error');\n      },\n    },\n  },\n  //\n  // Bindings\n  bindingsModel: 'progressModel',\n  bindings: {\n    '.conversion-status-converting-label': {\n      model: 'pausedSetting',\n      modelAttribute: 'value',\n      formatter: function (value: any) {\n        return value ? t('Paused') : t('Converting');\n      },\n    },\n    '.conversion-status-pending-label': {\n      model: 'pausedSetting',\n      modelAttribute: 'value',\n      formatter: function (value: any) {\n        return value ? t('Paused') : t('Waiting');\n      },\n    },\n    '.conversion-status-converting-speed': {\n      modelAttribute: 'speed',\n      autohide: true,\n      // @ts-expect-error ts-migrate(7030) FIXME: Not all code paths return a value.\n      formatter: function (speed: any) {\n        if (speed) {\n          let factor = Math.round(speed * 10) / 10;\n          if (factor > 10) {\n            factor = Math.round(factor);\n          }\n          return '(' + factor + 'x)';\n        }\n      },\n    },\n    '.conversion-status-converting-percentage': {\n      modelAttribute: 'progress',\n      formatter: function (progress: any) {\n        return Math.round(progress) + '%';\n      },\n    },\n    '.conversion-status-converting-progress-separator': {\n      modelAttribute: 'remaining',\n      manual: true,\n      autohide: function (remaining: any) {\n        return remaining && (this as any).progressModel.get('speed');\n      },\n    },\n    '.conversion-status-converting-remaining': {\n      modelAttribute: 'remaining',\n      autohide: true,\n      formatter: function (remaining: any) {\n        if ((this as any).progressModel.get('speed')) {\n          return formatDurationSecondsLeft(remaining);\n        }\n\n        return;\n      },\n    },\n  },\n  //\n  // Control\n  serializeData: function () {\n    return {\n      initialErrorMessage: this.initialErrorMessage,\n    };\n  },\n  findTranscodeJob: function () {\n    // Find the transcode job that matches the background play queue item\n    // and set up some listeners.\n    this.transcodeJob = this.transcodeJobs.find(function (transcodeJob: any) {\n      // @ts-expect-error ts-migrate(2683) FIXME: 'this' implicitly has type 'any' because it does n... Remove this comment to see the full error message\n      const ratingKey = this.model.get('ratingKey');\n      // @ts-expect-error ts-migrate(2683) FIXME: 'this' implicitly has type 'any' because it does n... Remove this comment to see the full error message\n      const generatorID = this.generator\n        ? // @ts-expect-error ts-migrate(2683) FIXME: 'this' implicitly has type 'any' because it does n... Remove this comment to see the full error message\n          this.generator.id\n        : // @ts-expect-error ts-migrate(2683) FIXME: 'this' implicitly has type 'any' because it does n... Remove this comment to see the full error message\n          this.model.get('generatorID');\n      const isItemMatch =\n        ratingKey && ratingKey === transcodeJob.get('ratingKey');\n      const isGeneratorMatch =\n        generatorID && generatorID === transcodeJob.get('generatorID');\n      return isItemMatch && isGeneratorMatch;\n    }, this);\n    if (this.transcodeJob) {\n      // If we find a match, we don't need to continue to listen for new\n      // jobs being added.\n      this.stopListening(this.transcodeJobs);\n      this.enterState('converting');\n      this.progressModel.set({\n        progress: this.transcodeJob.get('progress'),\n        speed: this.transcodeJob.get('speed'),\n        remaining: this.transcodeJob.get('remaining'),\n      });\n      this.listenTo(this.transcodeJob, {\n        remove: this.onTranscodeJobRemove,\n        'change:progress': this.onTranscodeProgressChange,\n        'change:speed': this.onTranscodeSpeedChange,\n        'change:remaining': this.onTranscodeRemainingChange,\n      });\n    }\n    return this.transcodeJob;\n  },\n  //\n  // Listeners\n  onRender: function () {\n    this.enterState(this.initialState || 'pending');\n    if (!this.findTranscodeJob()) {\n      this.listenTo(this.transcodeJobs, 'reset add', this.findTranscodeJob);\n    }\n    this.progressBarRegion.append(\n      new CircleProgressBarView({\n        model: this.progressModel,\n        size: 30,\n        lineWidth: 3,\n      })\n    );\n  },\n  onTranscodeJobRemove: function () {\n    this.enterState('pending');\n  },\n  // @ts-expect-error ts-migrate(6133) FIXME: 'transcodeJob' is declared but its value is never ... Remove this comment to see the full error message\n  onTranscodeProgressChange: function (transcodeJob: any, progress: any) {\n    this.progressModel.set('progress', progress);\n  },\n  // @ts-expect-error ts-migrate(6133) FIXME: 'transcodeJob' is declared but its value is never ... Remove this comment to see the full error message\n  onTranscodeSpeedChange: function (transcodeJob: any, speed: any) {\n    this.progressModel.set('speed', speed);\n  },\n  // @ts-expect-error ts-migrate(6133) FIXME: 'transcodeJob' is declared but its value is never ... Remove this comment to see the full error message\n  onTranscodeRemainingChange: function (transcodeJob: any, remaining: any) {\n    this.progressModel.set('remaining', remaining);\n  },\n});\nexport default ConversionStatusView;\n","/* eslint-plugin-disable @typescript-eslint */\n\nimport t from 'app/js/utils/t';\nimport formatDuration from './formatDuration';\n\nfunction formatDurationSecondsLeft(seconds: any) {\n  if (seconds == null) {\n    return '';\n  }\n\n  const duration = formatDuration(seconds * 1000);\n\n  return duration ? t('{1} left', duration) : '';\n}\n\nexport default formatDurationSecondsLeft;\n","import _ from 'underscore';\nimport commands from 'app/js/commands/commands';\nimport Marionette from 'app/js/initializers/extensions/MarionetteExtension';\nimport VersionGeneratorModel from 'app/js/models/library/convert/VersionGeneratorModel';\nimport contentUtil from 'app/js/utils/contentUtil';\nimport posterPlaceholders from 'app/js/utils/posterPlaceholders';\nimport MediaPosterImage from 'app/js/views/images/MediaPosterImage';\nimport ConversionStatusView from 'app/js/views/lists/activity/convert/ConversionStatusView';\n// @ts-expect-error ts-migrate(2307) FIXME: Cannot find module 'app/templates/lists... Remove this comment to see the full error message\nimport tpl from 'app/templates/lists/activity/convert/ConversionQueueListItem.tpl';\n\nconst ConversionQueueListItem = Marionette.Layout.extend({\n  //\n  // Properties\n  className:\n    'striped-list-item media-list-item playlist-item version-generator-item',\n  tagName: 'li',\n  template: tpl,\n  ui: {\n    poster: '.media-poster',\n  },\n  events: {\n    'click .promote-btn': 'onPromoteClick',\n    'click .delete-btn': 'onDeleteClick',\n  },\n  regions: {\n    statusRegion: '.conversion-status-region',\n  },\n  attributes: function () {\n    return {\n      'data-queue-item-id': this.model.id,\n    };\n  },\n  //\n  // Init\n  initialize: function (options: any) {\n    this.metadataItem = options.model.get('metadataItem');\n    this.playQueue = options.playQueue;\n    this.transcodeJobs = options.transcodeJobs;\n    this.pausedSetting = options.pausedSetting;\n    this.hideDragHandle = options.hideDragHandle;\n    this.type = this.metadataItem.get('type');\n    // @ts-expect-error ts-migrate(7053) FIXME: Element implicitly has an 'any' type because expre... Remove this comment to see the full error message\n    let placeholderClass = posterPlaceholders[this.type];\n    if (this.type === 'movie') {\n      placeholderClass = posterPlaceholders.art;\n    }\n    const posterType = this.type === 'episode' ? 'show' : this.type;\n    this.image = new MediaPosterImage({\n      model: this.metadataItem,\n      type: posterType,\n      placeholderClass: placeholderClass,\n      height: 60,\n      modelAttribute: 'thumb',\n      getUrl: this.getPosterUrl,\n    });\n  },\n  //\n  // Bindings\n  bindings: {\n    '.generator-title': {\n      model: 'metadataItem',\n      modelAttribute: 'title',\n      formatter: function () {\n        // @ts-expect-error ts-migrate(2554) FIXME: Expected 2 arguments, but got 1.\n        return contentUtil.title((this as any).metadataItem);\n      },\n    },\n    '.generator-target': {\n      modelAttribute: 'target',\n      formatter: function (target: any) {\n        return target;\n      },\n    },\n    '.sortable-handle': {\n      model: 'playQueue',\n      modelAttribute: 'playQueueSelectedItemID',\n      manual: true,\n      autohide: function (playQueueSelectedItemID: any) {\n        // The selected item in the background processing queue cannot be\n        // reordered. However, other items can be moved above it.\n        return (\n          (this.model as any).get('playQueueItemID') !== playQueueSelectedItemID\n        );\n      },\n    },\n    '.promote-btn': {\n      modelAttribute: 'queueIndex',\n      manual: true,\n      autohide: function (queueIndex: any) {\n        const currentItem = (this as any).playQueue.getCurrentItem();\n        // Show the promote button if the drag handle is being hidden or if\n        // the item is not already the next item in the up next region.\n        return (\n          (this as any).hideDragHandle ||\n          queueIndex - currentItem.get('queueIndex') > 1\n        );\n      },\n    },\n  },\n  //\n  // Control\n  serializeData: function () {\n    return {\n      hideDragHandle: this.hideDragHandle,\n    };\n  },\n  getPosterUrl: function (thumb: any) {\n    if (this.model.get('type') === 'episode') {\n      return (\n        this.model.get('grandparentThumb') ||\n        this.model.get('parentThumb') ||\n        thumb\n      );\n    } else {\n      return thumb;\n    }\n  },\n  deleteGenerator: function () {\n    const generator = new VersionGeneratorModel(\n      {\n        id: this.model.get('generatorID'),\n      },\n      {\n        server: this.model.server,\n        playlistID: this.metadataItem.get('playlistID'),\n      }\n    );\n    return commands.execute('disableVersionGenerator', {\n      generator: generator,\n      ratingKey: this.metadataItem.get('ratingKey'),\n    });\n  },\n  //\n  // Listeners\n  onRender: function () {\n    this.image.setElement(this.ui.poster);\n    this.statusRegion.show(\n      new ConversionStatusView({\n        model: this.model,\n        transcodeJobs: this.transcodeJobs,\n        pausedSetting: this.pausedSetting,\n      })\n    );\n  },\n  onClose: function () {\n    this.image.close();\n  },\n  onCollectionSort: function () {\n    this.trigger('sort');\n  },\n  onPromoteClick: function (event: any) {\n    event.preventDefault();\n    // The list will not detect a change in the order, and we don't want to\n    // refilter on every sort event. We know that we will not refilter after\n    // this particular batch of sorts events though. Collection filtering on\n    // play queue changes is debouncd, so we need to debounce our sort event\n    // as well.\n    const collection = this.playQueue.get('collection');\n    // @ts-expect-error ts-migrate(2554) FIXME: Expected 2-3 arguments, but got 1.\n    this.listenToOnce(collection, 'sort', _.debounce(this.onCollectionSort));\n    const itemID = this.model.get('playQueueItemID');\n    const selectedItemID = this.playQueue.get('playQueueSelectedItemID');\n    this.playQueue.moveItem(itemID, selectedItemID);\n  },\n  onDeleteClick: function (event: any) {\n    event.preventDefault();\n    this.deleteGenerator();\n  },\n});\nexport default ConversionQueueListItem;\n","import $ from 'jquery';\nimport Sortable from 'sortablejs';\nimport _ from 'underscore';\nimport dispatcher from 'app/js/utils/dispatcher';\nimport t from 'app/js/utils/t';\nimport BaseList from 'app/js/views/lists/BaseList';\nimport ConversionQueueListItem from 'app/js/views/lists/activity/convert/ConversionQueueListItem';\nimport ConfirmModal from 'app/js/views/modals/ConfirmModal';\n\nconst ConversionQueueList = BaseList.extend({\n  //\n  // Properties\n\n  tagName: 'ol',\n  className: 'list media-list playlist-items',\n  itemView: ConversionQueueListItem,\n  sorted: true,\n\n  itemEvents: {\n    sort: 'onSort',\n  },\n\n  //\n  // Init\n\n  initialize: function () {\n    _.bindAll(this, 'onItemMove');\n  },\n\n  //\n  // Listeners\n\n  onRender: function () {\n    if (this.sortable) {\n      this.sortable.destroy();\n    }\n\n    this.sortable = new Sortable(\n      this.el,\n      _.extend(\n        {\n          onAdd: this.onItemMove,\n          onUpdate: this.onItemMove,\n          handle: '.sortable-handle',\n          animation: 200,\n          scroll: true,\n          scrollSensitivity: 100,\n          scrollSpeed: 2,\n        },\n        this.options.sortableOptions\n      )\n    );\n  },\n\n  onClose: function () {\n    if (this.sortable) {\n      this.sortable.destroy();\n    }\n  },\n\n  onSort: function () {\n    this.render();\n  },\n\n  onItemMove: function (event: any) {\n    const movedItemID = $(event.item).data('queue-item-id');\n    const afterItemID = $(event.item).prev().data('queue-item-id');\n    const playQueue = this.options.playQueue;\n\n    if (afterItemID) {\n      playQueue.moveItem(movedItemID, afterItemID);\n      return;\n    }\n\n    // If the item is being moved above the current item, we should confirm\n    // before performing the move since conversion progress will be lost.\n\n    const selectedMetadataItem = playQueue\n      .get('selectedItem')\n      .get('metadataItem');\n    const selectedMetadataItemTitle = selectedMetadataItem.get('title');\n    const confirmModal = new ConfirmModal({\n      title: t('Convert Immediately'),\n      message: t(\n        \"Do you want to start converting this item immediately? Any conversion progress for '{1}' will be lost.\",\n        selectedMetadataItemTitle\n      ),\n    });\n\n    const confirmPromise = confirmModal.promise;\n\n    confirmPromise.done(function () {\n      playQueue.moveItem(movedItemID);\n    });\n\n    // Re-render the list so we restore the order before the move.\n    confirmPromise.fail(_.bind(this.render, this));\n\n    dispatcher.trigger('show:modal', confirmModal);\n  },\n});\n\nexport default ConversionQueueList;\n","/* eslint-plugin-disable @typescript-eslint */\n\nimport Marionette from 'app/js/initializers/extensions/MarionetteExtension';\nimport getServerSettingsRoute from 'app/js/views/v3/helpers/routes/getServerSettingsRoute';\n// @ts-expect-error ts-migrate(2307) FIXME: Cannot find module 'app/templates/lists... Remove this comment to see the full error message\nimport tpl from 'app/templates/lists/activity/convert/ConversionQueueListEmptyView.tpl';\n\nconst ConversionQueueListEmptyView = Marionette.ItemView.extend({\n  //\n  // Properties\n\n  template: tpl,\n\n  //\n  // Control\n\n  serializeData() {\n    return {\n      manageVersionsRoute: getServerSettingsRoute('manage', 'versions'),\n    };\n  },\n});\n\nexport default ConversionQueueListEmptyView;\n","import _ from 'underscore';\nimport Marionette from 'app/js/initializers/extensions/MarionetteExtension';\nimport PlayQueueAfterUpNextCollection from 'app/js/models/library/PlayQueueAfterUpNextCollection';\nimport PlayQueueUpNextCollection from 'app/js/models/library/PlayQueueUpNextCollection';\nimport serverFeatures from 'app/js/models/server/serverFeatures';\nimport t from 'app/js/utils/t';\nimport ConversionQueueList from 'app/js/views/lists/activity/convert/ConversionQueueList';\nimport ConversionQueueListEmptyView from 'app/js/views/lists/activity/convert/ConversionQueueListEmptyView';\nimport getServerSettingsRoute from 'app/js/views/v3/helpers/routes/getServerSettingsRoute';\n// @ts-expect-error ts-migrate(2307) FIXME: Cannot find module 'app/templates/activ... Remove this comment to see the full error message\nimport tpl from 'app/templates/activity/ConversionView.tpl';\n\nconst ConversionView = Marionette.Layout.extend({\n  //\n  // Properties\n\n  className: 'conversion-container',\n  template: tpl,\n\n  ui: {\n    filterBar: '.filter-bar',\n    pauseBtn: '.pause-btn',\n    resumeBtn: '.resume-btn',\n    divider: '.conversion-queue-divider',\n  },\n\n  regions: {\n    filterBar: '.filter-bar',\n    upNextList: '.conversion-queue-up-next-list-region',\n    afterUpNextList: '.conversion-queue-after-up-next-list-region',\n    emptyRegion: '.conversion-queue-empty-region',\n  },\n\n  events: {\n    'click .pause-btn': 'onTogglePauseClick',\n    'click .resume-btn': 'onTogglePauseClick',\n  },\n\n  //\n  // Init\n\n  initialize: function (options: any) {\n    this.playQueue = options.playQueue;\n    this.transcodeJobs = options.transcodeJobs;\n    this.generators = options.generators;\n\n    this.items = this.playQueue.get('collection');\n\n    this.upNextItems = new PlayQueueUpNextCollection(this.items, {\n      playQueue: this.playQueue,\n      includeSelectedItem: true,\n    });\n\n    this.afterUpNextItems = new PlayQueueAfterUpNextCollection(this.items, {\n      playQueue: this.playQueue,\n    });\n\n    this.settings = this.model.get(__PLATFORM__).get('settings');\n    this.pausedSetting = this.settings.get('BackgroundQueueIdlePaused');\n\n    this.listenTo(this.upNextItems, 'reset add remove', this.onUpNextChange);\n    this.listenTo(\n      this.afterUpNextItems,\n      'reset add remove',\n      this.onAfterUpNextChange\n    );\n  },\n\n  //\n  // Control\n\n  serializeData: function () {\n    return {\n      shouldShowList: this.model.supports('streamReady'),\n      shouldShowDivider: !!this.afterUpNextItems.length,\n      escapedMinServerVersion: _.escape(serverFeatures.streamReady),\n      hasPausedSetting: !!this.pausedSetting,\n      isPaused: this.pausedSetting?.get('value'),\n      errorMessage: this.getErrorMessage(),\n      manageVersionsRoute: getServerSettingsRoute('manage', 'versions'),\n    };\n  },\n\n  toggleEmptyView: function () {\n    const hasItems = this.upNextItems.length + this.afterUpNextItems.length > 0;\n\n    if (hasItems) {\n      this.emptyRegion.close();\n    } else {\n      this.emptyRegion.show(\n        new ConversionQueueListEmptyView({ model: this.model })\n      );\n    }\n\n    this.$el.toggleClass('is-empty', !hasItems);\n    this.ui.filterBar.toggleClass('hide-actions', !hasItems);\n  },\n\n  getErrorMessage: function () {\n    const failedCount = this.generators.reduce(function (\n      count: any,\n      generator: any\n    ) {\n      const status = generator.get('status');\n\n      if (status.get('state') === 'failed') {\n        // Always increment by at least one, in case the generator has no\n        // items because of a failed path or similar issue.\n        count += Math.max(status.get('itemsCount'), 1);\n      } else if (status.get('itemsFailedCount')) {\n        count += status.get('itemsFailedCount');\n      }\n\n      return count;\n    },\n    0);\n\n    if (failedCount) {\n      return failedCount === 1\n        ? t('There was a problem converting 1 item.')\n        : t('There were problems converting {1} items.', failedCount);\n    }\n\n    return;\n  },\n\n  //\n  // Listeners\n\n  onRender: function () {\n    const listOptions = {\n      playQueue: this.playQueue,\n    };\n\n    const itemViewOptions = {\n      playQueue: this.playQueue,\n      transcodeJobs: this.transcodeJobs,\n      pausedSetting: this.pausedSetting,\n    };\n\n    this.upNextList.show(\n      new ConversionQueueList(\n        _.extend({}, listOptions, {\n          collection: this.upNextItems,\n          itemViewOptions: itemViewOptions,\n          sortableOptions: {\n            sort: true,\n            group: {\n              name: 'upNext',\n              pull: false,\n              put: ['afterUpNext'],\n            },\n          },\n        })\n      )\n    );\n\n    this.afterUpNextList.show(\n      new ConversionQueueList(\n        _.extend({}, listOptions, {\n          collection: this.afterUpNextItems,\n          itemViewOptions: _.extend({}, itemViewOptions, {\n            hideDragHandle: true,\n          }),\n          sortableOptions: {\n            sort: false,\n            group: {\n              name: 'afterUpNext',\n              pull: true,\n              put: false,\n            },\n          },\n        })\n      )\n    );\n\n    this.toggleEmptyView();\n  },\n\n  onClose: function () {\n    this.upNextItems.destroy();\n    this.afterUpNextItems.destroy();\n  },\n\n  onUpNextChange: function () {\n    this.toggleEmptyView();\n  },\n\n  onAfterUpNextChange: function () {\n    this.ui.divider.toggleClass('hidden', !this.afterUpNextItems.length);\n    this.toggleEmptyView();\n  },\n\n  onTogglePauseClick: function (event: any) {\n    event.preventDefault();\n\n    const isPaused = this.pausedSetting.get('value');\n\n    this.ui.pauseBtn.toggleClass('hidden', !isPaused);\n    this.ui.resumeBtn.toggleClass('hidden', isPaused);\n\n    this.pausedSetting.set('value', !isPaused);\n    this.settings.first().save(this.pausedSetting.id, isPaused ? 0 : 1);\n  },\n});\n\nexport default ConversionView;\n","import {\n  MetadataSubtype,\n  MetadataType,\n} from 'app/js/v4/core/metadata/metadataTypes';\nimport { PlainError } from 'app/js/v4/utils/data/api';\n\nexport enum ProviderProtocol {\n  Download = 'download',\n  LiveTV = 'livetv',\n  Stream = 'stream',\n}\n\nexport enum ProviderFeatureType {\n  Action = 'action',\n  Actions = 'actions',\n  Collection = 'collection',\n  Content = 'content',\n  ContinueWatching = 'continuewatching',\n  Grid = 'grid',\n  ImageTranscoder = 'imagetranscoder',\n  Integrations = 'integrations',\n  Lineups = 'lineups',\n  Location = 'location',\n  Manage = 'manage',\n  Match = 'match',\n  Metadata = 'metadata',\n  Playlist = 'playlist',\n  PlayQueue = 'playqueue',\n  Promoted = 'promoted',\n  QueryParser = 'queryParser',\n  Rate = 'rate',\n  Search = 'search',\n  Settings = 'settings',\n  Subscribe = 'subscribe',\n  Timeline = 'timeline',\n  Universal = 'universal',\n  UniversalSearch = 'universalsearch',\n}\n\nexport enum ProviderFlavorType {\n  Download = 'download',\n  Record = 'record',\n  Universal = 'universal',\n}\n\nexport enum ProviderActionID {\n  AddToCatalog = 'addToCatalog',\n  AddToWatchlist = 'addToWatchlist',\n  Pick = 'pick',\n  Rate = 'rate',\n  RemoveFromContinueWatching = 'removeFromContinueWatching',\n  Save = 'save',\n  Scrobble = 'scrobble',\n}\n\nexport enum ProviderSettingID {\n  PlaybackSpeed = 'playbackSpeed',\n  Lineup = 'lineup',\n  RecentChannelsInGrid = 'recentChannelsInGrid',\n  NumRecentChannelsInGrid = 'numRecentChannelsInGrid',\n}\n\nexport enum ProviderSettingType {\n  Bool = 'bool',\n  Double = 'double',\n  Group = 'group',\n  Int = 'int',\n  Lineup = 'lineup',\n  Location = 'location',\n  Select = 'select',\n  Text = 'text',\n}\nexport interface Provider {\n  entityID: string;\n  identifier: string;\n  metricsIdentifier: string;\n  providerIdentifier?: string;\n  baseURL?: string;\n  title: string;\n  sourceTitle?: string;\n  protocols: ProviderProtocol[];\n  features: ProviderFeature[];\n  isPending: boolean;\n  isPopulated: boolean;\n  error: PlainError | null;\n}\n\nexport interface ProviderFeature {\n  actions?: ProviderAction[];\n  automaticLibraryFolders?: boolean;\n  directories?: ContentDirectory[];\n  flavor?: string;\n  id?: string;\n  key?: string;\n  public?: boolean;\n  requires?: string;\n  reverseKey?: string;\n  scrobbleKey?: string;\n  storageTotal?: string;\n  type?: ProviderFeatureType;\n  unscrobbleKey?: string;\n  settings?: ProviderSetting[];\n  isSettingsPending?: boolean;\n  isSettingsPopulated?: boolean;\n}\n\nexport interface ProviderSetting {\n  id: ProviderSettingID;\n  key: string;\n  value: boolean | number | string;\n  enumValues: string;\n  type: ProviderSettingType;\n  hidden: boolean;\n  isRecentChannelsInGridPending: boolean;\n  isRecentChannelsInGridPopulated: boolean;\n  recentChannelsInGridError: PlainError | null;\n}\n\nexport enum PivotType {\n  Hub = 'hub',\n  List = 'list',\n  View = 'view',\n}\n\nexport enum PivotView {\n  RecordingSchedule = 'view://dvr/recording-schedule',\n  Guide = 'view://dvr/guide',\n  Timeline = 'view://photo/timeline',\n  SharedItems = 'view://shared-items',\n  HomeRecommended = 'view://home/recommended',\n  HomeWatchlist = 'view://home/watchlist',\n}\n\nexport interface Pivot {\n  active?: boolean;\n  context?: string;\n  directory?: boolean;\n  id?: string;\n  key: string;\n  requires?: boolean;\n  symbol?: string;\n  title: string;\n  type: PivotType;\n}\n\nexport enum Agent {\n  Freebase = 'com.plexapp.agents.freebase',\n  IMDB = 'com.plexapp.agents.imdb',\n  LastFM = 'com.plexapp.agents.lastfm',\n  Lyricfind = 'com.plexapp.agents.lyricfind',\n  None = 'com.plexapp.agents.none',\n  PlexGame = 'tv.plex.agents.game',\n  PlexMovie = 'tv.plex.agents.movie',\n  PlexMusic = 'tv.plex.agents.music',\n  PlexPremiumMusic = 'com.plexapp.agents.plexmusic',\n  TheMovieDB = 'com.plexapp.agents.themoviedb',\n  TheTVDB = 'com.plexapp.agents.thetvdb',\n}\n\nexport interface ContentDirectory {\n  agent: Agent;\n  hubKey?: string;\n  icon?: string;\n  id: string;\n  key?: string;\n  pivots?: Pivot[];\n  refreshing?: boolean;\n  subtype?: MetadataSubtype;\n  title: string;\n  type?: MetadataType;\n}\n\nexport interface ProviderAction {\n  id: ProviderActionID;\n  key?: string;\n  requires?: string;\n  reverseKey?: string;\n}\n","import {\n  Provider,\n  ProviderFeature,\n  ProviderFeatureType,\n  ProviderFlavorType,\n} from 'app/js/v4/core/providers/providersTypes';\n\nexport default function getProviderFeature(\n  provider: Provider,\n  featureType: ProviderFeatureType,\n  featureFlavor?: ProviderFlavorType\n): ProviderFeature | undefined {\n  return provider.features.find(\n    (feature) =>\n      feature.type === featureType &&\n      (!featureFlavor || feature.flavor === featureFlavor)\n  );\n}\n","import { createSelector, Selector } from 'reselect';\nimport selectServers from 'app/js/stores/selectors/server/selectServers';\nimport { UnstableServer } from 'app/js/v4/core/servers/serversTypes';\nimport unknownServer from 'app/js/v4/core/servers/utils/unknownServer';\nimport { LegacyRootState } from 'app/js/v4/root/rootTypes';\nimport memoize from 'app/js/v4/utils/memoize';\n\n// This selector may be created frequently in components and saga workers,\n// but there is a limited number of possible selectors based on the arguments.\n// Rather than independently memoize in each component or saga, add a layer of\n// memoization on top of reselect here.\n\nfunction createUnstableServerSelector(\n  machineIdentifier: string\n): Selector<LegacyRootState, UnstableServer> {\n  return createSelector(\n    selectServers,\n    (servers: UnstableServer[]) =>\n      servers.find(\n        (server) => server.machineIdentifier === machineIdentifier\n      ) || unknownServer\n  );\n}\n\nexport default memoize(createUnstableServerSelector);\n","import { createSelector, Selector } from 'reselect';\nimport selectAllProviderEntities from 'app/js/stores/selectors/provider/selectAllProviderEntities';\nimport createUserAttributeSelector from 'app/js/stores/selectors/user/createUserAttributeSelector';\nimport { Provider } from 'app/js/v4/core/providers/providersTypes';\nimport unknownProvider from 'app/js/v4/core/providers/utils/unknownProvider';\nimport createUnstableServerSelector from 'app/js/v4/core/servers/selectors/createUnstableServerSelector';\nimport { LegacyRootState } from 'app/js/v4/root/rootTypes';\nimport memoize from 'app/js/v4/utils/memoize';\n\n// This selector may be created frequently in components and saga workers,\n// but there is a limited number of possible selectors based on the arguments.\n// Rather than independently memoize in each component or saga, add a layer of\n// memoization on top of reselect here.\n\nfunction createProviderSelector(\n  machineIdentifier: string,\n  providerIdentifier?: string\n): Selector<LegacyRootState, Provider> {\n  return createSelector(\n    selectAllProviderEntities,\n    createUnstableServerSelector(machineIdentifier),\n    createUserAttributeSelector('providers'),\n    (providerEntities, unstableServer, cloudProviders: string[]) => {\n      const providerEntityIDs =\n        !unstableServer || unstableServer.isCloud\n          ? cloudProviders\n          : unstableServer.providers;\n\n      const matchingProviderEntityID = providerEntityIDs.find(\n        (providerEntityID) =>\n          providerEntities[providerEntityID].identifier === providerIdentifier\n      );\n\n      return matchingProviderEntityID\n        ? providerEntities[matchingProviderEntityID]\n        : unknownProvider;\n    }\n  );\n}\n\nexport default memoize(createProviderSelector);\n","import { createSelector, Selector } from 'reselect';\nimport {\n  ContentDirectory,\n  ProviderFeatureType,\n} from 'app/js/v4/core/providers/providersTypes';\nimport getProviderFeature from 'app/js/v4/core/providers/utils/getProviderFeature';\nimport { LegacyRootState } from 'app/js/v4/root/rootTypes';\nimport memoize from 'app/js/v4/utils/memoize';\nimport createProviderSelector from './createProviderSelector';\n\n// This selector may be created frequently in components and saga workers,\n// but there is a limited number of possible selectors based on the arguments.\n// Rather than independently memoize in each component or saga, add a layer of\n// memoization on top of reselect here.\n\nfunction createProviderContentDirectoriesSelector(\n  machineIdentifier: string,\n  providerIdentifier: string\n): Selector<LegacyRootState, ContentDirectory[]> {\n  return createSelector(\n    createProviderSelector(machineIdentifier, providerIdentifier),\n    (provider) => {\n      const contentFeature = getProviderFeature(\n        provider,\n        ProviderFeatureType.Content\n      );\n\n      return contentFeature?.directories ?? [];\n    }\n  );\n}\n\nexport default memoize(createProviderContentDirectoriesSelector);\n","import { createSelector, Selector } from 'reselect';\nimport { ContentDirectory } from 'app/js/v4/core/providers/providersTypes';\nimport { LegacyRootState } from 'app/js/v4/root/rootTypes';\nimport memoize from 'app/js/v4/utils/memoize';\nimport createProviderContentDirectoriesSelector from './createProviderContentDirectoriesSelector';\n\n// This selector may be created frequently in components and saga workers,\n// but there is a limited number of possible selectors based on the arguments.\n// Rather than independently memoize in each component or saga, add a layer of\n// memoization on top of reselect here.\n\nfunction createProviderContentDirectorySelector(\n  machineIdentifier: string,\n  providerIdentifier: string,\n  contentDirectoryID?: string\n): Selector<LegacyRootState, ContentDirectory | undefined> {\n  return createSelector(\n    createProviderContentDirectoriesSelector(\n      machineIdentifier,\n      providerIdentifier\n    ),\n    (contentDirectories) => {\n      return contentDirectories.find(\n        (contentDirectory) => contentDirectoryID === contentDirectory.id\n      );\n    }\n  );\n}\n\nexport default memoize(createProviderContentDirectorySelector);\n","import { createSelector, Selector } from 'reselect';\nimport createDeepEqualSelector from 'app/js/stores/selectors/createDeepEqualSelector';\nimport selectServers from 'app/js/stores/selectors/server/selectServers';\nimport { Server } from 'app/js/v4/core/servers/serversTypes';\nimport toStableServerObject from 'app/js/v4/core/servers/utils/toStableServerObject';\nimport { LegacyRootState } from 'app/js/v4/root/rootTypes';\n\nconst selectStableServers: Selector<LegacyRootState, Server[]> =\n  createDeepEqualSelector(\n    createSelector(selectServers, (servers) => {\n      return servers.map(toStableServerObject);\n    }),\n    (servers: Server[]) => servers\n  );\n\nexport default selectStableServers;\n","import { createSelector, Selector } from 'reselect';\nimport createDeepEqualSelector from 'app/js/stores/selectors/createDeepEqualSelector';\nimport { Server } from 'app/js/v4/core/servers/serversTypes';\nimport unknownServer from 'app/js/v4/core/servers/utils/unknownServer';\nimport { LegacyRootState } from 'app/js/v4/root/rootTypes';\nimport memoize from 'app/js/v4/utils/memoize';\nimport selectStableServers from './selectStableServers';\n\n// This selector may be created frequently in components and saga workers,\n// but there is a limited number of possible selectors based on the arguments.\n// Rather than independently memoize in each component or saga, add a layer of\n// memoization on top of reselect here.\n\nfunction createStableServerSelector(\n  machineIdentifier: string\n): Selector<LegacyRootState, Server> {\n  return createDeepEqualSelector(\n    createSelector(\n      selectStableServers,\n      (servers) =>\n        servers.find(\n          (server) => server.machineIdentifier === machineIdentifier\n        ) || unknownServer\n    ),\n    (server: Server) => server\n  );\n}\n\nexport default memoize(createStableServerSelector);\n","import React, {\n  createContext,\n  ReactElement,\n  ReactNode,\n  useContext,\n  useMemo,\n} from 'react';\nimport { useSelector } from 'react-redux';\nimport {\n  ContentDirectory,\n  Provider,\n} from 'app/js/v4/core/providers/providersTypes';\nimport createProviderContentDirectorySelector from 'app/js/v4/core/providers/selectors/createProviderContentDirectorySelector';\nimport createProviderSelector from 'app/js/v4/core/providers/selectors/createProviderSelector';\nimport unknownProvider from 'app/js/v4/core/providers/utils/unknownProvider';\nimport createStableServerSelector from 'app/js/v4/core/servers/selectors/createStableServerSelector';\nimport { Server } from 'app/js/v4/core/servers/serversTypes';\nimport unknownServer from 'app/js/v4/core/servers/utils/unknownServer';\n\ninterface SourceContextProviderProps {\n  machineIdentifier: string;\n  providerIdentifier: string;\n  contentDirectoryID?: string;\n  children: ReactNode;\n}\n\ntype Source = [Server, Provider, ContentDirectory | undefined];\n\nexport const SourceContext = createContext<Source>([\n  unknownServer,\n  unknownProvider,\n  undefined,\n]);\n\nexport function useSourceContext(): Source {\n  return useContext<Source>(SourceContext);\n}\n\nexport default function SourceContextProvider({\n  machineIdentifier,\n  providerIdentifier,\n  contentDirectoryID,\n  children,\n}: SourceContextProviderProps): ReactElement {\n  const server = useSelector(createStableServerSelector(machineIdentifier));\n\n  const provider = useSelector(\n    createProviderSelector(machineIdentifier, providerIdentifier)\n  );\n\n  const contentDirectory = useSelector(\n    createProviderContentDirectorySelector(\n      machineIdentifier,\n      providerIdentifier,\n      contentDirectoryID\n    )\n  );\n\n  const source = useMemo<Source>(() => {\n    return [server, provider, contentDirectory];\n  }, [server, provider, contentDirectory]);\n\n  return (\n    <SourceContext.Provider value={source}>{children}</SourceContext.Provider>\n  );\n}\n","import { createSelector, Selector } from 'reselect';\nimport selectUserExperienceSettings from 'app/js/stores/selectors/user/selectUserExperienceSettings';\nimport { LegacyRootState } from 'app/js/v4/root/rootTypes';\nimport memoize from 'app/js/v4/utils/memoize';\n\n// This selector may be created frequently in components and saga workers,\n// but there is a limited number of possible selectors based on the arguments.\n// Rather than independently memoize in each component or saga, add a layer of\n// memoization on top of reselect here.\n\nfunction createUserExperienceSettingSelector(\n  setting: string\n): Selector<LegacyRootState, any> {\n  return createSelector(\n    selectUserExperienceSettings,\n    (settings) => settings[setting]\n  );\n}\n\nexport default memoize(createUserExperienceSettingSelector);\n","import { useEffect, useState } from 'react';\n\n/**\n * This hook can be used when wanting to avoid showing a pending state quickly\n * between two populated states by not showing the pending state at all and\n * transitioning straight to the next populated state. Allow a certain amount of\n * time to pass before finally showing the pending state. The `delayValue` is\n * used to match on `currentValue` such that if they match, there is a delay\n * before that value is used.\n *\n * For example: `currentValue` becomes true, matching the `delayValue`, the\n * `forcedValue` doesn't become true until after the delay. If `currentValue`\n * becomes false, that change takes effect immediately.\n *\n * @param currentValue The currently rendered value\n * @param delayValue The value to compare to currentValue\n */\nfunction usePreviousValueForAtMost<Value>(\n  currentValue: Value,\n  delayValue: Value,\n  maxDuration = 500\n): Value {\n  const [forcedValue, setForcedValue] = useState(currentValue);\n\n  useEffect(() => {\n    let timeoutID: number | undefined;\n\n    if (currentValue === delayValue) {\n      timeoutID = window.setTimeout(() => {\n        setForcedValue(currentValue);\n      }, maxDuration);\n    } else {\n      setForcedValue(currentValue);\n    }\n\n    return () => window.clearTimeout(timeoutID);\n  }, [currentValue, delayValue, maxDuration]);\n\n  return forcedValue;\n}\n\nexport default usePreviousValueForAtMost;\n","import React, { ReactElement, ReactNode } from 'react';\nimport styles from './ServerDashboardPageHeader.css';\n\ninterface ServerDashboardPageHeaderProps {\n  children: ReactNode;\n  title: string;\n}\n\nexport default function ServerDashboardPageHeader({\n  children,\n  title,\n}: ServerDashboardPageHeaderProps): ReactElement {\n  return (\n    <div className={styles.header}>\n      <div className={styles.headerTitle}>{title}</div>\n\n      {children}\n    </div>\n  );\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"header\":\"DrbkH\",\"headerTitle\":\"yTqmj\"};","\n    import PropTypes from 'prop-types';\n    import React from 'react';\n    import styles from 'app/js/views/v3/components/core/base/PlexIcon.css';\n\n    function IconSelected(props) {\n      const label = props['aria-label'];\n      const className = props.className;\n      const style = props.style;\n\n      const svgProps = {\"viewBox\":\"0 0 560 560\",\"xmlns\":\"http://www.w3.org/2000/svg\",\"strokeMiterlimit\":\"1.414\",\"strokeLinejoin\":\"round\",\"id\":\"plex-icon-selected-560\"};\n\n      svgProps['aria-hidden'] = !label;\n      svgProps.style = style;\n      svgProps.className = styles.plexIcon + (className ? ' ' + className : '');\n\n      const children = [React.createElement.apply(React, ['path', {\"d\":\"m78.756 298.564l-40 69.282 242.488 140 240-415.692-69.282-40-200 346.41-173.206-100\"}].concat([]))];\n\n      if (label) {\n        children.unshift(React.createElement('title', null, label));\n      }\n\n      // Arrays require a key, but a fixed number of elements don't.\n      // Spread the elements since it'll be a fixed number anyways\n      return React.createElement.apply(React, ['svg', svgProps].concat(children));\n    };\n\n    IconSelected.propTypes = {\n      'aria-label': PropTypes.string,\n      className: PropTypes.string,\n      style: PropTypes.object\n    };\n\n    export default IconSelected;\n  ","// extracted by mini-css-extract-plugin\nexport default {\"menuItemContainer\":\"EqS19\",\"menuLabel\":\"bkLMy\",\"selectedIcon\":\"H3HYm\",\"isSelected\":\"vRvKI\"};","/* eslint-plugin-disable @typescript-eslint */\n\nimport classNames from 'classnames';\nimport React, { PropsWithChildren, useCallback } from 'react';\nimport t from 'app/js/utils/t';\nimport IconSelected from 'app/glyphs/selected-560.svg';\nimport MenuItem from './MenuItem';\nimport styles from './SelectedMenuItem.css';\n\ninterface SelectedMenuItemProps {\n  className?: string;\n  menuLabelClassName?: string;\n  value?: number | string;\n  iconComponent?: React.ReactElement;\n  isSelected?: boolean;\n  selectedIconAriaLabel?: string;\n  onSelect?: (...args: any[]) => any;\n  onPress?: (...args: any[]) => any;\n}\n\nfunction SelectedMenuItem(props: PropsWithChildren<SelectedMenuItemProps>) {\n  const {\n    children,\n    className = styles.menuItemContainer,\n    menuLabelClassName = styles.menuLabel,\n    iconComponent: Icon = IconSelected,\n    isSelected,\n    selectedIconAriaLabel = t('Selected'),\n    value,\n    onPress,\n    onSelect,\n    ...otherProps\n  } = props;\n\n  const onMenuItemPress = useCallback(\n    (event: any) => {\n      if (onSelect) {\n        onSelect(value);\n      }\n\n      if (onPress) {\n        onPress(event);\n      }\n    },\n    [onPress, onSelect, value]\n  );\n\n  return (\n    <MenuItem\n      className={classNames(className, isSelected && styles.isSelected)}\n      {...otherProps}\n      onPress={onMenuItemPress}\n    >\n      <div className={styles.menuItemContainer}>\n        <div className={menuLabelClassName}>{children}</div>\n\n        {isSelected ? (\n          <div className={styles.selectedIcon}>\n            {/* @ts-expect-error ts-migrate(2604) FIXME: JSX element type 'Icon' does not have any construc... Remove this comment to see the full error message */}\n            <Icon aria-label={selectedIconAriaLabel} />\n          </div>\n        ) : null}\n      </div>\n    </MenuItem>\n  );\n}\n\nexport default SelectedMenuItem;\n","/* eslint-plugin-disable @typescript-eslint */\n\nimport { useCallback, useState } from 'react';\nimport useUniqueElementID from 'app/js/views/v3/helpers/hooks/useUniqueElementID';\n\nexport default function useMenuState() {\n  const menuButtonID = useUniqueElementID();\n\n  const [isMenuOpen, setMenuState] = useState(false);\n\n  const onMenuButtonPress = useCallback(() => {\n    setMenuState(!isMenuOpen);\n  }, [isMenuOpen, setMenuState]);\n\n  const onMenuClose = useCallback(() => {\n    setMenuState(false);\n  }, [setMenuState]);\n\n  return {\n    menuButtonID,\n    isMenuOpen,\n    onMenuButtonPress,\n    onMenuClose,\n  };\n}\n","import React, { ReactElement, ReactNode } from 'react';\nimport DisclosureArrowButton from 'app/js/views/v3/components/core/buttons/DisclosureArrowButton';\nimport * as directions from 'app/js/views/v3/helpers/props/directions';\nimport * as sizes from 'app/js/views/v3/helpers/props/sizes';\nimport styles from './ServerDashboardMenuButton.css';\n\ninterface ServerDashboardMenuButtonProps {\n  children: ReactNode;\n  id: string;\n  className?: string;\n  isMenuOpen: boolean;\n  onPress(): void;\n}\n\nexport default function ServerDashboardMenuButton({\n  children,\n  id,\n  className = styles.menuButton,\n  isMenuOpen,\n  onPress,\n}: ServerDashboardMenuButtonProps): ReactElement {\n  return (\n    <DisclosureArrowButton\n      className={className}\n      direction={isMenuOpen ? directions.UP : directions.DOWN}\n      // @ts-expect-error ts-migrate(2769) FIXME: No overload matches this call.\n      id={id}\n      isSelected={false}\n      size={sizes.LARGE}\n      onPress={onPress}\n    >\n      {children}\n    </DisclosureArrowButton>\n  );\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"menuButton\":\"QK9F5 IZ0cW x5jRQ\"};","import React, { ReactElement, ReactNode, useCallback } from 'react';\nimport Menu from 'app/js/views/v3/components/core/menus/Menu';\nimport SelectedMenuItem from 'app/js/views/v3/components/core/menus/SelectedMenuItem';\nimport useMenuState from 'app/js/views/v3/helpers/hooks/useMenuState';\nimport ServerDashboardMenuButton from './ServerDashboardMenuButton';\n\ninterface ServerDashboardFilterMenuButtonProps<T> {\n  className?: string;\n  values: T[];\n  activeValue: T;\n  formatter(item: T): ReactNode;\n  onSelect(item: T): void;\n}\n\nexport default function ServerDashboardFilterMenuButton<\n  T extends number | string\n>({\n  className,\n  values,\n  activeValue,\n  formatter,\n  onSelect: onSelectFromProps,\n}: ServerDashboardFilterMenuButtonProps<T>): ReactElement {\n  const { menuButtonID, isMenuOpen, onMenuButtonPress, onMenuClose } =\n    useMenuState();\n\n  const onSelect = useCallback(\n    (value) => {\n      onMenuClose();\n      onSelectFromProps(value);\n    },\n    [onMenuClose, onSelectFromProps]\n  );\n\n  return (\n    <>\n      <ServerDashboardMenuButton\n        className={className}\n        id={menuButtonID}\n        isMenuOpen={isMenuOpen}\n        onPress={onMenuButtonPress}\n      >\n        {formatter(activeValue)}\n      </ServerDashboardMenuButton>\n\n      <Menu isOpen={isMenuOpen} target={menuButtonID} onMenuClose={onMenuClose}>\n        {values.map((value) => {\n          return (\n            <SelectedMenuItem\n              key={String(value)}\n              isSelected={activeValue === value}\n              value={value}\n              onSelect={onSelect}\n            >\n              {formatter(value)}\n            </SelectedMenuItem>\n          );\n        })}\n      </Menu>\n    </>\n  );\n}\n","import { PayloadAction } from '@reduxjs/toolkit';\nimport { Server } from 'app/js/v4/core/servers/serversTypes';\nimport { PlainError } from 'app/js/v4/utils/data/api';\nimport { AsyncState } from 'app/js/v4/utils/data/asyncStateMarkers';\n\nexport enum BandwidthSourceType {\n  All = 'all',\n  Remote = 'remote',\n  Local = 'local',\n}\n\nexport interface BandwidthState extends AsyncState {\n  statistics: BandwidthStatistics[];\n  requestTimestampMilliseconds: number | null;\n  responseTimestampMilliseconds: number | null;\n}\n\nexport interface BandwidthStatistics {\n  accountID: number;\n  deviceID: number;\n  timespan: number;\n  at: number;\n  lan: boolean;\n  bytes: number;\n}\n\nexport type BandwidthFetchRequestedAction = PayloadAction<{\n  server: Server;\n  timespan?: number;\n  after?: number;\n}>;\n\nexport type BandwidthFetchSucceededAction = PayloadAction<{\n  data: [];\n  requestTimestampMilliseconds: number;\n  responseTimestampMilliseconds: number;\n}>;\n\nexport type BandwidthFetchFailedAction = PayloadAction<{\n  error: PlainError;\n}>;\n","import { createSelector, Selector } from 'reselect';\nimport { DashboardState } from 'app/js/v4/features/dashboard/dashboardTypes';\nimport selectFeatures from 'app/js/v4/features/selectFeatures';\nimport { LegacyRootState } from 'app/js/v4/root/rootTypes';\n\nconst selectDashboard: Selector<LegacyRootState, DashboardState> =\n  createSelector(selectFeatures, (features) => features.dashboard);\n\nexport default selectDashboard;\n","import { createSelector, Selector } from 'reselect';\nimport { BandwidthState } from 'app/js/v4/features/dashboard/dashboardBandwidthTypes';\nimport { LegacyRootState } from 'app/js/v4/root/rootTypes';\nimport selectDashboard from './selectDashboard';\n\nconst selectDashboardBandwidth: Selector<LegacyRootState, BandwidthState> =\n  createSelector(selectDashboard, (dashboard) => dashboard.bandwidth);\n\nexport default selectDashboardBandwidth;\n","import t from 'app/js/utils/t';\nimport { BandwidthSourceType } from 'app/js/v4/features/dashboard/dashboardBandwidthTypes';\n\nexport default function getBandwidthSourceTypeLabel(\n  resourceType: BandwidthSourceType\n): string {\n  switch (resourceType) {\n    case BandwidthSourceType.All:\n      return t('All');\n    case BandwidthSourceType.Remote:\n      return t('Remote');\n    case BandwidthSourceType.Local:\n      return t('Local');\n    default:\n      return '';\n  }\n}\n","/* eslint-plugin-disable @typescript-eslint */\n\nimport fromUnixTime from 'date-fns/fromUnixTime';\nimport isSameDay from 'date-fns/isSameDay';\n\nexport default function isToday(timestamp: any) {\n  if (timestamp == null) {\n    return false;\n  }\n\n  const date = fromUnixTime(timestamp);\n\n  return isSameDay(new Date(), date);\n}\n","/* eslint-plugin-disable @typescript-eslint */\n\nconst suffixes = ['bps', 'Kbps', 'Mbps', 'Gbps', 'Tbps'];\n\nfunction formatBandwidthBitrate(bits: any, digits = 2) {\n  if (bits === 0) {\n    return `${(0).toFixed(digits)} ${suffixes[0]}`;\n  }\n\n  // @ts-expect-error ts-migrate(2345) FIXME: Argument of type 'number' is not assignable to par... Remove this comment to see the full error message\n  const i = parseInt(Math.floor(Math.log(bits) / Math.log(1024)), 10);\n\n  return `${(bits / Math.pow(1024, i)).toFixed(digits)} ${suffixes[i]}`;\n}\n\nexport default formatBandwidthBitrate;\n","import React, { ReactElement, ReactNode } from 'react';\nimport styles from './ServerDashboardPageMessage.css';\n\ninterface ServerDashboardPageMessageProps {\n  children: ReactNode;\n  className?: string;\n}\n\nexport default function ServerDashboardPageMessage({\n  children,\n  className = styles.container,\n}: ServerDashboardPageMessageProps): ReactElement {\n  return (\n    <div className={className}>\n      <div className={styles.message}>{children}</div>\n    </div>\n  );\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"container\":\"X6zHM\",\"message\":\"kmWp2\"};","import React, { ReactElement, ReactNode } from 'react';\nimport Spinner from 'app/js/v4/core/ui/spinners/components/Spinner';\nimport Size from 'app/js/v4/core/ui/types/Size';\nimport ServerDashboardPageMessage from './ServerDashboardPageMessage';\nimport styles from './ServerDashboardSectionContent.css';\n\nexport interface ServerDashboardSectionContentProps {\n  children: ReactNode;\n  className?: string;\n  errorClassName?: string;\n  isSpinnerVisible?: boolean;\n  errorMessage?: string;\n}\n\nexport default function ServerDashboardSectionContent({\n  children,\n  className = styles.container,\n  errorClassName = styles.errorMessage,\n  isSpinnerVisible,\n  errorMessage,\n}: ServerDashboardSectionContentProps): ReactElement {\n  return (\n    <div className={className}>\n      {errorMessage ? (\n        <ServerDashboardPageMessage className={errorClassName}>\n          {errorMessage}\n        </ServerDashboardPageMessage>\n      ) : (\n        <>\n          {isSpinnerVisible ? (\n            <Spinner className={styles.spinner} size={Size.Large} />\n          ) : null}\n\n          {children}\n        </>\n      )}\n    </div>\n  );\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"container\":\"htorZ\",\"spinner\":\"s1fnz RD8jJ m_4Rc\",\"errorMessage\":\"o5_75 X6zHM\"};","import React, { ReactElement } from 'react';\nimport ServerDashboardSectionContent, {\n  ServerDashboardSectionContentProps,\n} from './ServerDashboardSectionContent';\nimport styles from './ServerDashboardGraph.css';\n\ntype ServerDashboardGraphProps = Omit<\n  ServerDashboardSectionContentProps,\n  'className' | 'errorClassName'\n>;\n\nexport default function ServerDashboardGraph(\n  props: ServerDashboardGraphProps\n): ReactElement {\n  return (\n    <ServerDashboardSectionContent\n      {...props}\n      className={styles.container}\n      errorClassName={styles.errorMessage}\n    />\n  );\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"container\":\"R3jtt htorZ\",\"errorMessage\":\"L5Op_ o5_75 X6zHM\"};","import t from 'app/js/utils/t';\n\nexport default function formatRealTimeAgo(secondsAgo?: number): string {\n  if (secondsAgo == null) {\n    return '';\n  }\n\n  if (secondsAgo === 0) {\n    return t('Now').toUpperCase();\n  } else if (secondsAgo % 60 === 0) {\n    return `${Math.floor(secondsAgo / 60)}m`;\n  } else if (secondsAgo > 60) {\n    return `${Math.floor(secondsAgo / 60)}m ${secondsAgo % 60}s`;\n  } else {\n    return `${secondsAgo}s`;\n  }\n}\n","/* eslint-plugin-disable @typescript-eslint */\n\nimport React from 'react';\nimport styles from './DashSeparator.css';\n\nexport const SEPARATOR = '—';\n\ninterface DashSeparatorProps {\n  className?: string;\n  separator?: string;\n}\n\nfunction DashSeparator({ className, separator }: DashSeparatorProps) {\n  return <span className={className}>{separator}</span>;\n}\n\nDashSeparator.defaultProps = {\n  className: styles.separator,\n  separator: SEPARATOR,\n};\n\nexport default DashSeparator;\n","// extracted by mini-css-extract-plugin\nexport default {\"separator\":\"HX7Y1\"};","/* eslint-plugin-disable @typescript-eslint */\n\nexport default function getDisplayName(Component: any) {\n  return Component.displayName || Component.name || 'Component';\n}\n","/* eslint-plugin-disable @typescript-eslint */\n\nimport React, { Component } from 'react';\nimport makeCancelable from 'app/js/utils/promise/makeCancelable';\nimport getDisplayName from 'app/js/views/v3/helpers/getDisplayName';\n\nfunction asyncProps(WrappedComponent: any, map: any) {\n  const mapKeys = Object.keys(map);\n  return class extends Component {\n    static displayName = `AsyncProps(${getDisplayName(\n      WrappedComponent\n    )}:${mapKeys.join(',')})`;\n    // eslint-disable-next-line react/sort-comp\n    static WrappedComponent = WrappedComponent;\n    _pairs: any;\n    //\n    // Lifecycle\n    constructor(props: any, context: any) {\n      super(props, context);\n      this.state = mapKeys.reduce((acc, key) => {\n        // @ts-expect-error ts-migrate(7053) FIXME: Element implicitly has an 'any' type because expre... Remove this comment to see the full error message\n        acc[key] = null;\n        return acc;\n      }, {});\n    }\n    componentDidMount() {\n      this._pairs = mapKeys.map((key) => [key, makeCancelable(map[key]())]);\n      // @ts-expect-error ts-migrate(7031) FIXME: Binding element 'key' implicitly has an 'any' type... Remove this comment to see the full error message\n      this._pairs.forEach(([key, cancelable]) => {\n        cancelable.promise.then((result: any) => {\n          this.setState({ [key]: result });\n        });\n      });\n    }\n    componentWillUnmount() {\n      // @ts-expect-error ts-migrate(6133) FIXME: 'key' is declared but its value is never read.\n      this._pairs.forEach(([key, cancelable]) => {\n        cancelable.cancel();\n      });\n    }\n    //\n    // Render\n    render() {\n      return <WrappedComponent {...this.props} {...this.state} />;\n    }\n  };\n}\nexport default asyncProps;\n","/* eslint-plugin-disable @typescript-eslint */\n\nimport React from 'react';\n\nfunction getPath(\n  x: any,\n  y: any,\n  width: any,\n  height: any,\n  initialRadius: any,\n  offset: any\n) {\n  const finalY = y - offset;\n\n  // Code adapted from https://github.com/recharts/recharts/blob/master/src/shape/Rectangle.js#L12\n  const sign = height >= 0 ? 1 : -1;\n  const clockWise = height >= 0 ? 1 : 0;\n  const maxRadius = Math.min(Math.abs(width) / 2, Math.abs(height) / 2);\n  const radius = Math.min(maxRadius, initialRadius);\n\n  return `M ${x},${finalY + sign * radius}\n    A ${radius},${radius},0,0,${clockWise},${x + radius},${finalY}\n    L ${x + width - radius},${finalY}\n    A ${radius},${radius},0,0,${clockWise},${x + width},${\n    finalY + sign * radius\n  }\n    L ${x + width},${finalY + height - sign * radius}\n    A ${radius},${radius},0,0,${clockWise},${x + width - radius},${\n    finalY + height\n  }\n    L ${x + radius},${finalY + height}\n    A ${radius},${radius},0,0,${clockWise},${x},${\n    finalY + height - sign * radius\n  } Z`;\n}\n\ntype BarProps = {\n  x: number;\n  y: number;\n  width: number;\n  height: number;\n  radius?: number;\n  fill?: string;\n  barGap?: number;\n  data: any[];\n  dataKey: string;\n  seriesOrdering: any[];\n  seriesIndex: number;\n};\n\nfunction Bar(props: BarProps) {\n  const {\n    x,\n    y,\n    width,\n    height,\n    radius,\n    fill,\n    barGap,\n    data,\n    dataKey,\n    seriesOrdering,\n    seriesIndex,\n  } = props;\n\n  // In order to add a gap between stacked bar chart segments we need to\n  // calculate the offset each segment is shifted by. This offset depends on\n  // how many previous segments were rendered.\n  const previousSeries = seriesOrdering.slice(0, seriesIndex);\n  // @ts-expect-error ts-migrate(7053) FIXME: Element implicitly has an 'any' type because expre... Remove this comment to see the full error message\n  const barValues = data.find((values) => values[dataKey] === props[dataKey]);\n\n  // Count how many previous non-zero value bar segments were rendered.\n  const previousBarSegmentsCount = previousSeries.reduce((acc, seriesKey) => {\n    if (barValues[seriesKey] !== 0) {\n      acc++;\n    }\n\n    return acc;\n  }, 0);\n\n  // @ts-expect-error ts-migrate(2532) FIXME: Object is possibly 'undefined'.\n  const offset = previousBarSegmentsCount * barGap;\n\n  return <path d={getPath(x, y, width, height, radius, offset)} fill={fill} />;\n}\n\nexport default Bar;\n","/* eslint-plugin-disable @typescript-eslint */\n\nimport React, { Component } from 'react';\nimport Link from 'app/js/views/v3/components/core/buttons/Link';\nimport styles from './LegendLabel.css';\n\ntype LegendLabelProps = {\n  className?: string;\n  dataKey?: string;\n  title: string;\n  labelColor: string;\n  onPress?: (...args: any[]) => any;\n  onMouseEnter?: (...args: any[]) => any;\n  onMouseLeave?: (...args: any[]) => any;\n};\n\nclass LegendLabel extends Component<LegendLabelProps> {\n  static defaultProps = {\n    className: styles.legendLabel,\n  };\n\n  //\n  // Listeners\n\n  onPress = () => {\n    const { dataKey, onPress } = this.props;\n\n    if (onPress) {\n      onPress(dataKey);\n    }\n  };\n\n  onMouseEnter = () => {\n    const { dataKey, onMouseEnter } = this.props;\n\n    if (onMouseEnter) {\n      onMouseEnter(dataKey);\n    }\n  };\n\n  //\n  // Render\n\n  render() {\n    const { className, title, labelColor, onMouseLeave } = this.props;\n\n    return (\n      <Link\n        className={className}\n        // @ts-expect-error ts-migrate(2322) FIXME: Type '{ children: (string | Element)[]; className:... Remove this comment to see the full error message\n        onMouseEnter={this.onMouseEnter}\n        onMouseLeave={onMouseLeave}\n        onPress={this.onPress}\n      >\n        <span\n          className={styles.dot}\n          style={{\n            backgroundColor: labelColor,\n          }}\n        />\n        {title}\n      </Link>\n    );\n  }\n}\n\nexport default LegendLabel;\n","// extracted by mini-css-extract-plugin\nexport default {\"legendLabel\":\"PI9ro x5jRQ\",\"dot\":\"N7S9L\"};","// extracted by mini-css-extract-plugin\nexport default {\"container\":\"vEuYD\",\"separator\":\"Gh_NK\",\"LegendLabel\":\"eQLBw PI9ro x5jRQ\",\"legendLabel\":\"eQLBw PI9ro x5jRQ\",\"label\":\"eT0Nn\",\"values\":\"iCSq7\",\"valueRow\":\"twSgA\",\"total\":\"S5_3x\"};","/* eslint-plugin-disable @typescript-eslint */\n\nimport React, { Component } from 'react';\nimport t from 'app/js/utils/t';\nimport DashSeparator from 'app/js/views/v3/components/core/base/DashSeparator';\nimport LegendLabel from './LegendLabel';\nimport styles from './ChartTooltip.css';\n\ntype ChartTooltipProps = {\n  active: boolean;\n  label?: string | number;\n  payload?: any[];\n  series: any[];\n  showTotal?: boolean;\n  labelFormatter?: (...args: any[]) => any;\n  valueFormatter: (...args: any[]) => any;\n  onActive?: (...args: any[]) => any;\n  onInactive?: (...args: any[]) => any;\n};\n\nclass ChartTooltip extends Component<ChartTooltipProps> {\n  static defaultProps = {\n    showTotal: true,\n  };\n\n  //\n  // Lifecycle\n\n  // @ts-expect-error ts-migrate(6133) FIXME: 'prevState' is declared but its value is never rea... Remove this comment to see the full error message\n  componentDidUpdate(prevProps: ChartTooltipProps, prevState: any) {\n    const { active, onActive, onInactive } = this.props;\n\n    const { active: prevActive } = prevProps;\n\n    if (!prevActive && active && onActive) {\n      onActive();\n    } else if (prevActive && !active && onInactive) {\n      onInactive();\n    }\n  }\n\n  //\n  // Render\n\n  render() {\n    const {\n      active,\n      label,\n      payload,\n      series,\n      showTotal,\n      labelFormatter,\n      valueFormatter,\n    } = this.props;\n\n    if (!active || !payload) {\n      return null;\n    }\n\n    const finalLabel = labelFormatter ? labelFormatter(label) : label;\n\n    const total = showTotal\n      ? payload.reduce((acc, entry) => acc + entry.value, 0)\n      : null;\n\n    return (\n      <div className={styles.container}>\n        <div className={styles.label}>{finalLabel}</div>\n\n        <div className={styles.separator} />\n\n        <div>\n          <div className={styles.values}>\n            {payload.map((segment) => {\n              const title = series.find(\n                (points) => points.dataKey === segment.dataKey\n              ).title;\n\n              return (\n                <div key={segment.dataKey} className={styles.valueRow}>\n                  <LegendLabel\n                    className={styles.LegendLabel}\n                    labelColor={segment.color}\n                    title={title}\n                  />\n                  <DashSeparator />\n                  {valueFormatter(segment.value)}\n                </div>\n              );\n            })}\n          </div>\n\n          {showTotal ? (\n            <>\n              <div className={styles.separator} />\n\n              <div className={styles.total}>\n                {t('Total')}\n                <DashSeparator />\n                {valueFormatter(total)}\n              </div>\n            </>\n          ) : null}\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default ChartTooltip;\n","/* eslint-plugin-disable @typescript-eslint */\n\nimport React, { Component } from 'react';\nimport asyncProps from 'app/js/views/v3/decorators/asyncProps';\nimport Bar from './Bar';\nimport ChartTooltip from './ChartTooltip';\nimport LegendLabel from './LegendLabel';\nimport styles from './BarChart.css';\n\nfunction areAllSeriesVisible(series: any) {\n  return series.every((points: any) => points.visible);\n}\n\nfunction createTooltip(props: any) {\n  return function renderTooltip(tooltipProps: any) {\n    return <ChartTooltip {...tooltipProps} {...props} />;\n  };\n}\n\nfunction createBar(props: any) {\n  return function renderBar(barProps: any) {\n    return <Bar {...barProps} {...props} />;\n  };\n}\n\ntype BarChartProps = {\n  className?: string;\n  recharts?: any;\n  width?: number | string;\n  height?: number | string;\n  series: any[];\n  data: any[];\n  legendSummary?: React.ReactNode;\n  xAxisKey: string;\n  stacked?: boolean;\n  isAnimationActive?: boolean;\n  showTooltipTotal?: boolean;\n  chartMargin?: any;\n  gridLinesStyles?: any;\n  barGap?: number;\n  legendHeight?: number;\n  tooltipLabelFormatter: (...args: any[]) => any;\n  tooltipValueFormatter: (...args: any[]) => any;\n  xAxisDomain?: any[];\n  xAxisStyle?: any | boolean;\n  xAxisPadding?: any;\n  xAxisTick?: boolean | ((...args: any[]) => any) | any;\n  xAxisTickMargin?: number;\n  xAxisTickLineStyle?: any | boolean;\n  xAxisTickFormatter: (...args: any[]) => any;\n  yAxisDomain?: any[];\n  yAxisWidth?: number;\n  yAxisStyle?: any | boolean;\n  yAxisPadding?: any;\n  yAxisTick?: boolean | ((...args: any[]) => any) | any;\n  yAxisTickMargin?: number;\n  yAxisTickLineStyle?: any | boolean;\n  yAxisTickFormatter: (...args: any[]) => any;\n  onLegendPress?: (...args: any[]) => any;\n  onChartReady?: (...args: any[]) => any;\n};\n\ntype BarChartState = any;\n\nclass BarChart extends Component<BarChartProps, BarChartState> {\n  static defaultProps = {\n    xAxisKey: 'date',\n    stacked: true,\n    isAnimationActive: true,\n    chartMargin: {\n      top: 15,\n      right: 20,\n      bottom: 10,\n      left: 0,\n    },\n    gridLinesStyles: {\n      horizontal: true,\n      vertical: false,\n      stroke: 'rgba(255, 255, 255, 0.1)',\n    },\n    barGap: 2,\n    legendHeight: 20,\n    xAxisStyle: false,\n    xAxisPadding: {\n      left: 0,\n      right: 0,\n    },\n    xAxisTick: {\n      fill: 'rgba(255, 255, 255, 0.45)',\n      fontSize: '10px',\n    },\n    xAxisTickMargin: 15,\n    xAxisTickLineStyle: {\n      fill: 'rgba(255, 255, 255, 0.1)',\n      strokeWidth: 5,\n    },\n    yAxisWidth: 60,\n    yAxisStyle: false,\n    yAxisPadding: {\n      top: 0,\n      bottom: 0,\n    },\n    yAxisTick: {\n      fill: 'rgba(255, 255, 255, 0.45)',\n      fontSize: '10px',\n    },\n    yAxisTickMargin: 5,\n    yAxisTickLineStyle: false,\n  };\n\n  //\n  // Lifecycle\n\n  constructor(props: any, context: any) {\n    super(props, context);\n\n    this.state = {\n      hoveredDataKey: null,\n    };\n  }\n\n  // @ts-expect-error ts-migrate(6133) FIXME: 'prevState' is declared but its value is never rea... Remove this comment to see the full error message\n  componentDidUpdate(prevProps: BarChartProps, prevState: BarChartState) {\n    const { recharts, onChartReady } = this.props;\n\n    if (!prevProps.recharts && recharts && onChartReady) {\n      onChartReady();\n    }\n  }\n\n  //\n  // Listeners\n\n  onMouseEnter = (hoveredDataKey: any) => {\n    this.setState({ hoveredDataKey });\n  };\n\n  onMouseLeave = () => {\n    this.setState({ hoveredDataKey: null });\n  };\n\n  //\n  // Render\n\n  renderLegend = () => {\n    const { series, legendSummary, onLegendPress } = this.props;\n\n    const { hoveredDataKey } = this.state;\n\n    return (\n      <div className={styles.legendContainer}>\n        <div className={styles.legendLabels}>\n          {series.map((points) => {\n            const isTranslucent =\n              !points.visible ||\n              (hoveredDataKey &&\n                hoveredDataKey !== points.dataKey &&\n                !points.selected);\n\n            return (\n              <LegendLabel\n                key={points.dataKey}\n                className={\n                  isTranslucent\n                    ? styles.translucentLegendLabel\n                    : styles.legendLabel\n                }\n                dataKey={points.dataKey}\n                labelColor={points.color}\n                title={points.title}\n                onMouseEnter={this.onMouseEnter}\n                onMouseLeave={this.onMouseLeave}\n                onPress={onLegendPress}\n              />\n            );\n          })}\n        </div>\n\n        {legendSummary ? (\n          <div className={styles.legendSummary}>{legendSummary}</div>\n        ) : null}\n      </div>\n    );\n  };\n\n  render() {\n    const {\n      className,\n      recharts,\n      width,\n      height,\n      series,\n      data,\n      xAxisKey,\n      stacked,\n      isAnimationActive,\n      showTooltipTotal,\n      chartMargin,\n      gridLinesStyles,\n      barGap,\n      legendHeight,\n      tooltipLabelFormatter,\n      tooltipValueFormatter,\n      xAxisDomain,\n      xAxisStyle,\n      xAxisPadding,\n      xAxisTick,\n      xAxisTickMargin,\n      xAxisTickLineStyle,\n      xAxisTickFormatter,\n      yAxisDomain,\n      yAxisWidth,\n      yAxisStyle,\n      yAxisPadding,\n      yAxisTick,\n      yAxisTickMargin,\n      yAxisTickLineStyle,\n      yAxisTickFormatter,\n    } = this.props;\n\n    const { hoveredDataKey } = this.state;\n\n    if (!recharts) {\n      return null;\n    }\n\n    const {\n      CartesianGrid,\n      Legend,\n      BarChart: RechartsBarChart,\n      Bar: RechartsBar,\n      ResponsiveContainer,\n      Tooltip,\n      XAxis,\n      YAxis,\n    } = recharts;\n\n    const seriesOrdering = series.map((points) => points.dataKey);\n\n    return (\n      <ResponsiveContainer className={className} height={height} width={width}>\n        <RechartsBarChart data={data} margin={chartMargin}>\n          <CartesianGrid {...gridLinesStyles} />\n\n          <XAxis\n            axisLine={xAxisStyle}\n            dataKey={xAxisKey}\n            domain={xAxisDomain}\n            minTickGap={0}\n            padding={xAxisPadding}\n            tick={xAxisTick}\n            tickFormatter={xAxisTickFormatter}\n            tickLine={xAxisTickLineStyle}\n            tickMargin={xAxisTickMargin}\n          />\n\n          <YAxis\n            axisLine={yAxisStyle}\n            domain={yAxisDomain}\n            padding={yAxisPadding}\n            tick={yAxisTick}\n            tickCount={6}\n            tickFormatter={yAxisTickFormatter}\n            tickLine={yAxisTickLineStyle}\n            tickMargin={yAxisTickMargin}\n            width={yAxisWidth}\n          />\n\n          <Tooltip\n            content={createTooltip({\n              series,\n              showTotal: showTooltipTotal,\n              labelFormatter: tooltipLabelFormatter,\n              valueFormatter: tooltipValueFormatter,\n            })}\n            cursor={false}\n            isAnimationActive={false}\n          />\n\n          {series.map((points, index) => (\n            /* eslint-disable react/jsx-no-bind */\n            <RechartsBar\n              key={points.dataKey}\n              className={\n                hoveredDataKey &&\n                hoveredDataKey !== points.dataKey &&\n                areAllSeriesVisible(series)\n                  ? styles.translucentBar\n                  : styles.bar\n              }\n              dataKey={points.dataKey}\n              fill={points.color}\n              isAnimationActive={isAnimationActive}\n              radius={2}\n              shape={createBar({\n                barGap: stacked ? barGap : 0,\n                data,\n                dataKey: xAxisKey,\n                seriesOrdering,\n                seriesIndex: index,\n              })}\n              stackId={stacked ? 'stacked' : null}\n              onMouseEnter={this.onMouseEnter.bind(null, points.dataKey)}\n              onMouseLeave={this.onMouseLeave}\n            />\n            /* eslint-enable react/jsx-no-bind */\n          ))}\n\n          <Legend\n            content={this.renderLegend}\n            height={legendHeight}\n            wrapperStyle={{\n              paddingLeft: `${yAxisWidth}px`,\n            }}\n          />\n        </RechartsBarChart>\n      </ResponsiveContainer>\n    );\n  }\n}\n\nexport default asyncProps(BarChart, {\n  // @ts-expect-error ts-migrate(7016) FIXME: Could not find a declaration file for module 'rech... Remove this comment to see the full error message\n  recharts: () => import('recharts'),\n});\n","// extracted by mini-css-extract-plugin\nexport default {\"bar\":\"dqedf\",\"translucentBar\":\"TL1Eb dqedf\",\"legendContainer\":\"j4sxJ\",\"legendLabels\":\"TzaLt\",\"legendSummary\":\"BHoMQ\",\"legendLabel\":\"ReiTg PI9ro x5jRQ\",\"translucentLegendLabel\":\"ui2rm ReiTg PI9ro x5jRQ\"};","/* eslint-plugin-disable @typescript-eslint */\n\nimport React from 'react';\n\ntype XAxisTickProps = {\n  x: number;\n  y: number;\n  margin: number;\n  fill?: string;\n  fontSize?: string;\n  index: number;\n  visibleTicksCount: number;\n  payload: any;\n  tickFormatter?: (...args: any[]) => any;\n};\n\nfunction XAxisTick(props: XAxisTickProps) {\n  const {\n    x,\n    y,\n    margin,\n    fill,\n    fontSize,\n    index,\n    visibleTicksCount,\n    payload,\n    tickFormatter,\n  } = props;\n\n  // Align the start and end labels with the axis ends.\n  let textAnchor = 'middle';\n  if (index === 0) {\n    textAnchor = 'start';\n  } else if (index + 1 === visibleTicksCount) {\n    textAnchor = 'end';\n  }\n\n  const finalLabel = tickFormatter\n    ? tickFormatter(payload.value)\n    : payload.value;\n\n  return (\n    <g transform={`translate(${x},${y})`}>\n      <text dy={margin} fill={fill} fontSize={fontSize} textAnchor={textAnchor}>\n        {finalLabel}\n      </text>\n    </g>\n  );\n}\n\nexport default XAxisTick;\n","/* eslint-plugin-disable @typescript-eslint */\n\nimport React, { Component } from 'react';\nimport asyncProps from 'app/js/views/v3/decorators/asyncProps';\nimport ChartTooltip from './ChartTooltip';\nimport LegendLabel from './LegendLabel';\nimport XAxisTick from './XAxisTick';\nimport styles from './LineChart.css';\n\nfunction areAllSeriesVisible(series: any) {\n  return series.every((points: any) => points.visible);\n}\n\nfunction createTooltip(props: any) {\n  return function renderTooltip(tooltipProps: any) {\n    return <ChartTooltip {...tooltipProps} {...props} />;\n  };\n}\n\nfunction createXAxisTick(props: any) {\n  return function renderXAxisTick(tickProps: any) {\n    return <XAxisTick {...tickProps} {...props} />;\n  };\n}\n\ntype LineChartProps = {\n  className?: string;\n  recharts?: any;\n  width: number | string;\n  height: number | string;\n  series: any[];\n  data: any[];\n  legendSummary?: React.ReactNode;\n  xAxisKey: string;\n  connectNulls?: boolean;\n  lineType: string;\n  lineStrokeWidth?: number;\n  isAnimationActive?: boolean;\n  showTooltipTotal?: boolean;\n  chartMargin?: any;\n  gridLinesStyles?: any;\n  legendHeight?: number;\n  tooltipLabelFormatter: (...args: any[]) => any;\n  tooltipValueFormatter: (...args: any[]) => any;\n  dot?: any | React.ReactElement | ((...args: any[]) => any) | boolean;\n  xAxisDomain?: any[];\n  xAxisStyle?: any | boolean;\n  xAxisPadding?: any;\n  xAxisTick?: boolean | ((...args: any[]) => any) | any;\n  xAxisTickInterval?: string | number;\n  xAxisTickMargin?: number;\n  xAxisTickLineStyle?: any | boolean;\n  xAxisTickFormatter: (...args: any[]) => any;\n  yAxisDomain?: any[];\n  yAxisWidth?: number;\n  yAxisStyle?: any | boolean;\n  yAxisPadding?: any;\n  yAxisTick?: boolean | ((...args: any[]) => any) | any;\n  yAxisTickMargin?: number;\n  yAxisTickLineStyle?: any | boolean;\n  yAxisTickFormatter: (...args: any[]) => any;\n  onChartReady?: (...args: any[]) => any;\n  onLegendPress?: (...args: any[]) => any;\n  onTooltipActive?: (...args: any[]) => any;\n  onTooltipInactive?: (...args: any[]) => any;\n};\n\ntype LineChartState = any;\n\nclass LineChart extends Component<LineChartProps, LineChartState> {\n  static defaultProps = {\n    xAxisKey: 'date',\n    connectNulls: false,\n    lineType: 'monotone',\n    lineStrokeWidth: 3,\n    isAnimationActive: true,\n    chartMargin: {\n      top: 15,\n      right: 20,\n      bottom: 10,\n      left: 0,\n    },\n    gridLinesStyles: {\n      horizontal: true,\n      vertical: false,\n      stroke: 'rgba(255, 255, 255, 0.1)',\n    },\n    legendHeight: 20,\n    dot: false,\n    xAxisStyle: false,\n    xAxisPadding: {\n      left: 0,\n      right: 0,\n    },\n    xAxisTick: {\n      fill: 'rgba(255, 255, 255, 0.45)',\n      fontSize: '10px',\n    },\n    xAxisTickMargin: 20,\n    xAxisTickLineStyle: {\n      fill: 'rgba(255, 255, 255, 0.1)',\n      strokeWidth: 5,\n    },\n    yAxisWidth: 75,\n    yAxisStyle: false,\n    yAxisPadding: {\n      top: 0,\n      bottom: 0,\n    },\n    yAxisTick: {\n      fill: 'rgba(255, 255, 255, 0.45)',\n      fontSize: '10px',\n    },\n    yAxisTickMargin: 5,\n    yAxisTickLineStyle: false,\n  };\n\n  //\n  // Lifecycle\n\n  constructor(props: any, context: any) {\n    super(props, context);\n\n    this.state = {\n      hoveredDataKey: null,\n    };\n  }\n\n  // @ts-expect-error ts-migrate(6133) FIXME: 'prevState' is declared but its value is never rea... Remove this comment to see the full error message\n  componentDidUpdate(prevProps: LineChartProps, prevState: LineChartState) {\n    const { recharts, onChartReady } = this.props;\n\n    if (!prevProps.recharts && recharts && onChartReady) {\n      onChartReady();\n    }\n  }\n\n  //\n  // Listeners\n\n  onMouseEnter = (hoveredDataKey: any) => {\n    this.setState({ hoveredDataKey });\n  };\n\n  onMouseLeave = () => {\n    this.setState({ hoveredDataKey: null });\n  };\n\n  //\n  // Render\n\n  renderLegend = () => {\n    const { series, legendSummary, onLegendPress } = this.props;\n\n    const { hoveredDataKey } = this.state;\n\n    return (\n      <div className={styles.legendContainer}>\n        <div className={styles.legendLabels}>\n          {series.map((points) => {\n            const isTranslucent =\n              !points.visible ||\n              (hoveredDataKey &&\n                hoveredDataKey !== points.dataKey &&\n                !points.selected);\n\n            return (\n              <LegendLabel\n                key={points.dataKey}\n                className={\n                  isTranslucent\n                    ? styles.translucentLegendLabel\n                    : styles.legendLabel\n                }\n                dataKey={points.dataKey}\n                labelColor={points.color}\n                title={points.title}\n                onMouseEnter={this.onMouseEnter}\n                onMouseLeave={this.onMouseLeave}\n                onPress={onLegendPress}\n              />\n            );\n          })}\n        </div>\n\n        {legendSummary ? (\n          <div className={styles.legendSummary}>{legendSummary}</div>\n        ) : null}\n      </div>\n    );\n  };\n\n  render() {\n    const {\n      className,\n      recharts,\n      width,\n      height,\n      series,\n      data,\n      xAxisKey,\n      connectNulls,\n      lineType,\n      lineStrokeWidth,\n      isAnimationActive,\n      showTooltipTotal,\n      chartMargin,\n      gridLinesStyles,\n      legendHeight,\n      tooltipLabelFormatter,\n      tooltipValueFormatter,\n      dot,\n      xAxisDomain,\n      xAxisStyle,\n      xAxisPadding,\n      xAxisTick,\n      xAxisTickInterval,\n      xAxisTickMargin,\n      xAxisTickLineStyle,\n      xAxisTickFormatter,\n      yAxisDomain,\n      yAxisWidth,\n      yAxisStyle,\n      yAxisPadding,\n      yAxisTick,\n      yAxisTickMargin,\n      yAxisTickLineStyle,\n      yAxisTickFormatter,\n      onTooltipActive,\n      onTooltipInactive,\n    } = this.props;\n\n    const { hoveredDataKey } = this.state;\n\n    if (!recharts) {\n      return null;\n    }\n\n    const {\n      CartesianGrid,\n      Legend,\n      LineChart: RechartsLineChart,\n      Line,\n      ResponsiveContainer,\n      Tooltip,\n      XAxis,\n      YAxis,\n    } = recharts;\n\n    // SVG path rendering order is important. The last to be rendered will\n    // overlay previous paths, and so we want to ensure that the 'primary' path\n    // is rendered last.\n    const reorderedSeries = [...series].reverse();\n\n    return (\n      <ResponsiveContainer className={className} height={height} width={width}>\n        <RechartsLineChart data={data} margin={chartMargin}>\n          <CartesianGrid {...gridLinesStyles} />\n\n          <XAxis\n            axisLine={xAxisStyle}\n            dataKey={xAxisKey}\n            domain={xAxisDomain}\n            interval={xAxisTickInterval}\n            minTickGap={0}\n            padding={xAxisPadding}\n            tick={createXAxisTick({\n              ...xAxisTick,\n              margin: xAxisTickMargin,\n              tickFormatter: xAxisTickFormatter,\n            })}\n            tickLine={xAxisTickLineStyle}\n          />\n\n          <YAxis\n            axisLine={yAxisStyle}\n            domain={yAxisDomain}\n            padding={yAxisPadding}\n            tick={yAxisTick}\n            tickCount={6}\n            tickFormatter={yAxisTickFormatter}\n            tickLine={yAxisTickLineStyle}\n            tickMargin={yAxisTickMargin}\n            width={yAxisWidth}\n          />\n\n          <Tooltip\n            content={createTooltip({\n              series,\n              showTotal: showTooltipTotal,\n              labelFormatter: tooltipLabelFormatter,\n              valueFormatter: tooltipValueFormatter,\n              onActive: onTooltipActive,\n              onInactive: onTooltipInactive,\n            })}\n            cursor={false}\n            isAnimationActive={false}\n          />\n\n          {reorderedSeries.map((points) => (\n            /* eslint-disable react/jsx-no-bind */\n            <Line\n              key={points.dataKey}\n              className={\n                hoveredDataKey &&\n                hoveredDataKey !== points.dataKey &&\n                areAllSeriesVisible(series)\n                  ? styles.translucentLine\n                  : styles.line\n              }\n              connectNulls={connectNulls}\n              dataKey={points.dataKey}\n              dot={dot}\n              isAnimationActive={isAnimationActive}\n              stroke={points.color}\n              strokeWidth={lineStrokeWidth}\n              type={lineType}\n              onMouseEnter={this.onMouseEnter.bind(null, points.dataKey)}\n              onMouseLeave={this.onMouseLeave}\n            />\n            /* eslint-enable react/jsx-no-bind */\n          ))}\n\n          <Legend\n            content={this.renderLegend}\n            height={legendHeight}\n            wrapperStyle={{\n              paddingLeft: `${yAxisWidth}px`,\n            }}\n          />\n        </RechartsLineChart>\n      </ResponsiveContainer>\n    );\n  }\n}\n\nexport default asyncProps(LineChart, {\n  // @ts-expect-error ts-migrate(7016) FIXME: Could not find a declaration file for module 'rech... Remove this comment to see the full error message\n  recharts: () => import('recharts'),\n});\n","// extracted by mini-css-extract-plugin\nexport default {\"line\":\"Xc4Fb\",\"translucentLine\":\"rnJha Xc4Fb\",\"legendContainer\":\"URG_G\",\"legendLabels\":\"e0zOT\",\"legendSummary\":\"zC3H8\",\"legendLabel\":\"VwX5U PI9ro x5jRQ\",\"translucentLegendLabel\":\"th4ST VwX5U PI9ro x5jRQ\"};","import addWeeks from 'date-fns/addWeeks';\nimport format from 'date-fns/format';\nimport fromUnixTime from 'date-fns/fromUnixTime';\nimport getUnixTime from 'date-fns/getUnixTime';\nimport startOfDay from 'date-fns/startOfDay';\nimport React, { ReactElement, useCallback, useMemo, useState } from 'react';\nimport isToday from 'app/js/utils/dateTime/isToday';\nimport formatBandwidthBitrate from 'app/js/utils/metadata/formatBandwidthBitrate';\nimport formatBytes from 'app/js/utils/metadata/formatBytes';\nimport t from 'app/js/utils/t';\nimport ServerDashboardGraph from 'app/js/v4/features/dashboard/components/ServerDashboardGraph';\nimport {\n  BandwidthSourceType,\n  BandwidthStatistics,\n} from 'app/js/v4/features/dashboard/dashboardBandwidthTypes';\nimport formatRealTimeAgo from 'app/js/v4/features/dashboard/utils/formatRealTimeAgo';\nimport getBandwidthSourceTypeLabel from 'app/js/v4/features/dashboard/utils/getBandwidthSourceTypeLabel';\nimport {\n  getTimePeriodDateFormat,\n  getTimePeriodTimespan,\n  TimePeriod,\n  Timespan,\n} from 'app/js/v4/utils/timePeriods';\nimport DashSeparator from 'app/js/views/v3/components/core/base/DashSeparator';\nimport BarChart from 'app/js/views/v3/components/core/charts/BarChart';\nimport LineChart from 'app/js/views/v3/components/core/charts/LineChart';\n\ntype Data = (PerTypeData & {\n  at: number;\n  date: number;\n})[];\n\ntype PerTypeData = {\n  [sourceType in BandwidthSourceType]?: number;\n};\n\ninterface BandwidthGraphProps {\n  statistics: BandwidthStatistics[];\n  activeBandwidthSourceType: BandwidthSourceType;\n  responseTimestampMilliseconds: number | null;\n  activeTimePeriod: TimePeriod;\n  isPending: boolean;\n  isPopulated: boolean;\n  errorMessage?: string;\n  onGraphBandwidthSourceTypeSelect(\n    BandwidthSourceType: BandwidthSourceType\n  ): void;\n  onGraphTooltipActive(): void;\n  onGraphTooltipInactive(): void;\n}\n\ninterface LegendSummaryProps {\n  isRemoteVisible: boolean;\n  isLocalVisible: boolean;\n  summedData: PerTypeData;\n}\n\nconst REAL_TIME_PERIOD_SPAN_SECONDS = 120;\n\nfunction isTodayOrAfter(date: number): boolean {\n  return isToday(date) || getUnixTime(startOfDay(new Date())) <= date;\n}\n\nfunction formatDate(\n  date: number,\n  activeTimePeriod: TimePeriod,\n  dateFormat: string,\n  toUpperCase = false\n): string {\n  const isDayToday =\n    getTimePeriodTimespan(activeTimePeriod) === Timespan.Day && isToday(date);\n\n  if (isDayToday) {\n    const today = t('Today');\n    return toUpperCase ? today.toUpperCase() : today;\n  }\n\n  return format(fromUnixTime(date), dateFormat);\n}\n\nfunction formatRealTimeData(\n  statistics: BandwidthStatistics[],\n  activeBandwidthSourceType: BandwidthSourceType,\n  responseTimestampMilliseconds: number | null\n): {\n  data: Data;\n  summedData: PerTypeData;\n} {\n  if (responseTimestampMilliseconds == null) {\n    return {\n      data: [],\n      summedData: {},\n    };\n  }\n\n  const isRemoteVisible =\n    activeBandwidthSourceType === BandwidthSourceType.All ||\n    activeBandwidthSourceType === BandwidthSourceType.Remote;\n\n  const isLocalVisible =\n    activeBandwidthSourceType === BandwidthSourceType.All ||\n    activeBandwidthSourceType === BandwidthSourceType.Local;\n\n  const startTimeSeconds =\n    Math.floor(responseTimestampMilliseconds / 1000) -\n    REAL_TIME_PERIOD_SPAN_SECONDS -\n    1;\n\n  const data = Array.from(\n    new Array(REAL_TIME_PERIOD_SPAN_SECONDS + 1),\n    (_, index) => {\n      return {\n        at: startTimeSeconds + index,\n        date: REAL_TIME_PERIOD_SPAN_SECONDS - index,\n        [BandwidthSourceType.Remote]: isRemoteVisible ? 0 : undefined,\n        [BandwidthSourceType.Local]: isLocalVisible ? 0 : undefined,\n      };\n    }\n  );\n\n  const summedData: PerTypeData = {};\n\n  statistics.forEach((bandwidthStatistic) => {\n    const { at, lan, bytes } = bandwidthStatistic;\n\n    const index = data.findIndex((entry) => entry.at === Number(at));\n\n    if (index === -1) {\n      return;\n    }\n\n    const timestampData = data[index];\n\n    if (!lan && isRemoteVisible) {\n      timestampData[BandwidthSourceType.Remote] =\n        (timestampData[BandwidthSourceType.Remote] || 0) + bytes;\n      summedData[BandwidthSourceType.Remote] =\n        (summedData[BandwidthSourceType.Remote] || 0) + bytes;\n    }\n\n    if (lan && isLocalVisible) {\n      timestampData[BandwidthSourceType.Local] =\n        (timestampData[BandwidthSourceType.Local] || 0) + bytes;\n      summedData[BandwidthSourceType.Local] =\n        (summedData[BandwidthSourceType.Local] || 0) + bytes;\n    }\n\n    data[index] = timestampData;\n  });\n\n  return { data, summedData };\n}\n\nfunction formatHistoricalData(\n  statistics: BandwidthStatistics[],\n  activeBandwidthSourceType: BandwidthSourceType\n): {\n  data: Data;\n  summedData: PerTypeData;\n} {\n  const isRemoteVisible =\n    activeBandwidthSourceType === BandwidthSourceType.All ||\n    activeBandwidthSourceType === BandwidthSourceType.Remote;\n  const isLocalVisible =\n    activeBandwidthSourceType === BandwidthSourceType.All ||\n    activeBandwidthSourceType === BandwidthSourceType.Local;\n\n  const aggregatedData: {\n    [atKey: string]: PerTypeData;\n  } = {};\n\n  const summedData: PerTypeData = {};\n\n  statistics.forEach((bandwidthStatistic) => {\n    const { at, lan, bytes } = bandwidthStatistic;\n    const atKey = String(at);\n\n    if (!aggregatedData[atKey]) {\n      aggregatedData[atKey] = {};\n    }\n\n    if (!lan && isRemoteVisible) {\n      aggregatedData[atKey][BandwidthSourceType.Remote] =\n        (aggregatedData[atKey][BandwidthSourceType.Remote] || 0) + bytes;\n      summedData[BandwidthSourceType.Remote] =\n        (summedData[BandwidthSourceType.Remote] || 0) + bytes;\n    }\n\n    if (lan && isLocalVisible) {\n      aggregatedData[atKey][BandwidthSourceType.Local] =\n        (aggregatedData[atKey][BandwidthSourceType.Local] || 0) + bytes;\n      summedData[BandwidthSourceType.Local] =\n        (summedData[BandwidthSourceType.Local] || 0) + bytes;\n    }\n  });\n\n  const data = Object.keys(aggregatedData)\n    .sort()\n    .map((atKey) => {\n      const aggregatedTimespan = aggregatedData[atKey];\n      const at = parseInt(atKey, 10);\n\n      return {\n        ...aggregatedTimespan,\n        at,\n        date: at,\n      };\n    });\n\n  return { data, summedData };\n}\n\nfunction AveragesLegendSummary({\n  isRemoteVisible,\n  isLocalVisible,\n  summedData,\n}: LegendSummaryProps): ReactElement {\n  const isAllVisible = isRemoteVisible && isLocalVisible;\n\n  return (\n    <>\n      {isAllVisible ? t('Averages') : t('Average')}\n      {': '}\n\n      {isAllVisible ? (\n        <>\n          {getBandwidthSourceTypeLabel(BandwidthSourceType.Remote)}\n          <DashSeparator />\n        </>\n      ) : null}\n      {isRemoteVisible\n        ? formatBandwidthBitrate(\n            ((summedData[BandwidthSourceType.Remote] || 0) * 8) /\n              REAL_TIME_PERIOD_SPAN_SECONDS,\n            0\n          )\n        : null}\n\n      {isAllVisible ? (\n        <>\n          {' | '}\n          {getBandwidthSourceTypeLabel(BandwidthSourceType.Local)}\n          <DashSeparator />\n        </>\n      ) : null}\n      {isLocalVisible\n        ? formatBandwidthBitrate(\n            ((summedData[BandwidthSourceType.Local] || 0) * 8) /\n              REAL_TIME_PERIOD_SPAN_SECONDS,\n            0\n          )\n        : null}\n    </>\n  );\n}\n\nfunction TotalsLegendSummary({\n  isRemoteVisible,\n  isLocalVisible,\n  summedData,\n}: LegendSummaryProps): ReactElement {\n  const isAllVisible = isRemoteVisible && isLocalVisible;\n\n  return (\n    <>\n      {isAllVisible ? t('Totals') : t('Total')}\n      {': '}\n\n      {isAllVisible ? (\n        <>\n          {getBandwidthSourceTypeLabel(BandwidthSourceType.Remote)}\n          <DashSeparator />\n        </>\n      ) : null}\n      {isRemoteVisible\n        ? formatBytes(summedData[BandwidthSourceType.Remote], 0)\n        : null}\n\n      {isAllVisible ? (\n        <>\n          {' | '}\n          {getBandwidthSourceTypeLabel(BandwidthSourceType.Local)}\n          <DashSeparator />\n        </>\n      ) : null}\n      {isLocalVisible\n        ? formatBytes(summedData[BandwidthSourceType.Local], 0)\n        : null}\n    </>\n  );\n}\n\nexport default function BandwidthGraph({\n  statistics,\n  activeBandwidthSourceType,\n  responseTimestampMilliseconds,\n  activeTimePeriod,\n  isPending,\n  isPopulated,\n  errorMessage,\n  onGraphBandwidthSourceTypeSelect,\n  onGraphTooltipActive,\n  onGraphTooltipInactive,\n}: BandwidthGraphProps): ReactElement {\n  const [isChartReady, setIsChartReady] = useState(false);\n\n  const isRealTime = activeTimePeriod === TimePeriod.RealTime;\n\n  const { data, summedData } = useMemo(() => {\n    return isRealTime\n      ? formatRealTimeData(\n          statistics,\n          activeBandwidthSourceType,\n          responseTimestampMilliseconds\n        )\n      : formatHistoricalData(statistics, activeBandwidthSourceType);\n  }, [\n    activeBandwidthSourceType,\n    isRealTime,\n    responseTimestampMilliseconds,\n    statistics,\n  ]);\n\n  const isRemoteVisible =\n    activeBandwidthSourceType === BandwidthSourceType.All ||\n    activeBandwidthSourceType === BandwidthSourceType.Remote;\n  const isLocalVisible =\n    activeBandwidthSourceType === BandwidthSourceType.All ||\n    activeBandwidthSourceType === BandwidthSourceType.Local;\n\n  const series = [\n    {\n      dataKey: BandwidthSourceType.Remote,\n      title: getBandwidthSourceTypeLabel(BandwidthSourceType.Remote),\n      visible: isRemoteVisible,\n      selected: activeBandwidthSourceType === BandwidthSourceType.Remote,\n      color: '#366dfc',\n    },\n    {\n      dataKey: BandwidthSourceType.Local,\n      title: getBandwidthSourceTypeLabel(BandwidthSourceType.Local),\n      visible: isLocalVisible,\n      selected: activeBandwidthSourceType === BandwidthSourceType.Local,\n      color: '#e69f23',\n    },\n  ];\n\n  const ChartComponent = isRealTime ? LineChart : BarChart;\n  const LegendSummary = isRealTime\n    ? AveragesLegendSummary\n    : TotalsLegendSummary;\n\n  const isSpinnerVisible =\n    !isChartReady || (isRealTime ? !isPopulated : isPending);\n\n  const isGraphVisible = isRealTime ? isPopulated : !isPending && isPopulated;\n\n  //\n  // Callbacks\n\n  const realTimeTooltipLabelFormatter = useCallback((seconds: number) => {\n    return seconds === 0\n      ? t('Now')\n      : t('{unitOfTime} ago', { unitOfTime: formatRealTimeAgo(seconds) });\n  }, []);\n\n  const tooltipLabelFormatter = useCallback(\n    (dateTimestamp: number) => {\n      // For week long timespans show the period the timespan covers, rather than\n      // just a single date.\n      if (getTimePeriodTimespan(activeTimePeriod) === Timespan.Week) {\n        const startDate = formatDate(\n          dateTimestamp,\n          activeTimePeriod,\n          getTimePeriodDateFormat(activeTimePeriod, true)\n        );\n\n        const endDateTimestamp = getUnixTime(\n          addWeeks(fromUnixTime(dateTimestamp), 1)\n        );\n\n        // Check to make sure the week doesn't start and end today/after.\n        const isFutureTimePeriod =\n          isToday(dateTimestamp) && isTodayOrAfter(endDateTimestamp);\n\n        if (isFutureTimePeriod) {\n          return t('Today');\n        } else {\n          const endDate = formatDate(\n            endDateTimestamp,\n            activeTimePeriod,\n            getTimePeriodDateFormat(activeTimePeriod, true)\n          );\n          return `${startDate} - ${endDate}`;\n        }\n      }\n\n      return formatDate(\n        dateTimestamp,\n        activeTimePeriod,\n        getTimePeriodDateFormat(activeTimePeriod, true)\n      );\n    },\n    [activeTimePeriod]\n  );\n\n  const realTimeTooltipValueFormatter = useCallback((bytes: number) => {\n    return formatBandwidthBitrate(bytes * 8, 0);\n  }, []);\n\n  const tooltipValueFormatter = useCallback((bytes: number) => {\n    return formatBytes(bytes, 0);\n  }, []);\n\n  const realTimeXAxisTickFormatter = useCallback((seconds: number) => {\n    return formatRealTimeAgo(seconds);\n  }, []);\n\n  const xAxisTickFormatter = useCallback(\n    (dateTimestamp: number) => {\n      // For the month long timespans show the period the timespan covers, rather\n      // than just a single date.\n      if (activeTimePeriod === TimePeriod.Month) {\n        const startDate = formatDate(\n          dateTimestamp,\n          activeTimePeriod,\n          getTimePeriodDateFormat(activeTimePeriod)\n        );\n\n        const endDateTimestamp = getUnixTime(\n          addWeeks(fromUnixTime(dateTimestamp), 1)\n        );\n\n        // Check to make sure the week doesn't start and end today/after.\n        const isFutureTimePeriod =\n          isToday(dateTimestamp) && isTodayOrAfter(endDateTimestamp);\n\n        if (isFutureTimePeriod) {\n          return t('Today').toUpperCase();\n        } else {\n          const endDate = formatDate(\n            endDateTimestamp,\n            activeTimePeriod,\n            getTimePeriodDateFormat(activeTimePeriod)\n          );\n          return `${startDate} - ${endDate}`;\n        }\n      }\n\n      return formatDate(\n        dateTimestamp,\n        activeTimePeriod,\n        getTimePeriodDateFormat(activeTimePeriod),\n        true\n      );\n    },\n    [activeTimePeriod]\n  );\n\n  const yAxisTickFormatter = useCallback(\n    (bytes: number) => {\n      if (bytes === 0) {\n        return '';\n      }\n\n      if (isRealTime) {\n        return formatBandwidthBitrate(bytes * 8, 0);\n      } else {\n        return formatBytes(bytes, 0);\n      }\n    },\n    [isRealTime]\n  );\n\n  const onChartReady = useCallback(() => {\n    setIsChartReady(true);\n  }, []);\n\n  //\n  // Render\n\n  return (\n    <ServerDashboardGraph\n      errorMessage={errorMessage}\n      isSpinnerVisible={isSpinnerVisible}\n    >\n      {isGraphVisible ? (\n        <ChartComponent\n          // @ts-expect-error ts-migrate(2322) FIXME: Type '{ width: string; height: number; series: { d... Remove this comment to see the full error message\n          data={data}\n          height={280}\n          isAnimationActive={!isRealTime}\n          legendSummary={\n            <LegendSummary\n              isLocalVisible={isLocalVisible}\n              isRemoteVisible={isRemoteVisible}\n              summedData={summedData}\n            />\n          }\n          series={series}\n          tooltipLabelFormatter={\n            isRealTime ? realTimeTooltipLabelFormatter : tooltipLabelFormatter\n          }\n          tooltipValueFormatter={\n            isRealTime ? realTimeTooltipValueFormatter : tooltipValueFormatter\n          }\n          width=\"100%\"\n          xAxisTickFormatter={\n            isRealTime ? realTimeXAxisTickFormatter : xAxisTickFormatter\n          }\n          xAxisTickInterval={isRealTime ? 9 : null}\n          yAxisTickFormatter={yAxisTickFormatter}\n          onChartReady={onChartReady}\n          onLegendPress={onGraphBandwidthSourceTypeSelect}\n          onTooltipActive={onGraphTooltipActive}\n          onTooltipInactive={onGraphTooltipInactive}\n        />\n      ) : null}\n    </ServerDashboardGraph>\n  );\n}\n","import React, {\n  ReactElement,\n  useCallback,\n  useEffect,\n  useMemo,\n  useRef,\n  useState,\n} from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport t from 'app/js/utils/t';\nimport { useSourceContext } from 'app/js/v4/core/servers/components/SourceContextProvider';\nimport usePreviousValueForAtMost from 'app/js/v4/core/ui/hooks/usePreviousValueForAtMost';\nimport ServerDashboardPageHeader from 'app/js/v4/features/dashboard/components/ServerDashboardPageHeader';\nimport ServerDashboardFilterMenuButton from 'app/js/v4/features/dashboard/components/menuButtons/ServerDashboardFilterMenuButton';\nimport dashboardBandwidthSlice from 'app/js/v4/features/dashboard/dashboardBandwidthSlice';\nimport { BandwidthSourceType } from 'app/js/v4/features/dashboard/dashboardBandwidthTypes';\nimport selectDashboardBandwidth from 'app/js/v4/features/dashboard/selectors/selectDashboardBandwidth';\nimport getBandwidthSourceTypeLabel from 'app/js/v4/features/dashboard/utils/getBandwidthSourceTypeLabel';\nimport {\n  getTimePeriodAfter,\n  getTimePeriodLabel,\n  getTimePeriodTimespan,\n  TimePeriod,\n} from 'app/js/v4/utils/timePeriods';\nimport BandwidthGraph from './BandwidthGraph';\nimport styles from './Bandwidth.css';\n\nconst REAL_TIME_DATA_FETCH_MIN_INTERVAL = 1000;\n\nexport default function Bandwidth(): ReactElement {\n  const dispatch = useDispatch();\n  const [server] = useSourceContext();\n  const realtimeTimeoutIDRef = useRef<number | null>(null);\n\n  const [activeBandwidthSourceType, setActiveBandwidthSourceType] = useState(\n    BandwidthSourceType.All\n  );\n\n  const bandwidthSourceTypes = useMemo(() => {\n    return [\n      BandwidthSourceType.All,\n      BandwidthSourceType.Remote,\n      BandwidthSourceType.Local,\n    ];\n  }, []);\n\n  const [activeTimePeriod, setActiveTimePeriod] = useState(TimePeriod.RealTime);\n  const [lockedTimePeriod, setLockedTimePeriod] = useState(activeTimePeriod);\n\n  const timePeriods = useMemo(() => {\n    return [\n      TimePeriod.RealTime,\n      TimePeriod.TwelveHours,\n      TimePeriod.Day,\n      TimePeriod.Week,\n      TimePeriod.Month,\n      TimePeriod.NinetyDays,\n      TimePeriod.Year,\n      TimePeriod.AllTime,\n    ];\n  }, []);\n\n  const {\n    statistics,\n    isPending,\n    isPopulated,\n    error,\n    requestTimestampMilliseconds,\n    responseTimestampMilliseconds,\n  } = useSelector(selectDashboardBandwidth);\n\n  const isDelayedPending = usePreviousValueForAtMost(isPending, true);\n\n  //\n  // Callbacks\n\n  const onFetch = useCallback(() => {\n    dispatch(\n      dashboardBandwidthSlice.actions.bandwidthFetchRequested({\n        server,\n        timespan: getTimePeriodTimespan(activeTimePeriod),\n        after: getTimePeriodAfter(activeTimePeriod),\n      })\n    );\n  }, [activeTimePeriod, dispatch, server]);\n\n  const onAbort = useCallback(() => {\n    dispatch(dashboardBandwidthSlice.actions.bandwidthAbortRequested());\n  }, [dispatch]);\n\n  const onBandwidthSourceTypeSelect = useCallback(\n    (bandwidthSourceType: BandwidthSourceType) => {\n      setActiveBandwidthSourceType(bandwidthSourceType);\n    },\n    []\n  );\n\n  const onTimePeriodSelect = useCallback((timePeriod: TimePeriod) => {\n    setActiveTimePeriod(timePeriod);\n  }, []);\n\n  const onGraphBandwidthSourceTypeSelect = useCallback(\n    (bandwidthSourceType: BandwidthSourceType) => {\n      const nextBandwidthSourceType =\n        bandwidthSourceType === activeBandwidthSourceType\n          ? BandwidthSourceType.All\n          : bandwidthSourceType;\n\n      setActiveBandwidthSourceType(nextBandwidthSourceType);\n    },\n    [activeBandwidthSourceType]\n  );\n\n  const onGraphTooltipActive = useCallback(() => {\n    if (activeTimePeriod === TimePeriod.RealTime) {\n      if (realtimeTimeoutIDRef.current) {\n        window.clearTimeout(realtimeTimeoutIDRef.current);\n      }\n      onAbort();\n    }\n  }, [activeTimePeriod, onAbort]);\n\n  const onGraphTooltipInactive = useCallback(() => {\n    if (activeTimePeriod === TimePeriod.RealTime) {\n      onFetch();\n    }\n  }, [activeTimePeriod, onFetch]);\n\n  //\n  // Effects\n\n  useEffect(() => {\n    onFetch();\n\n    return onAbort;\n  }, [onFetch, onAbort]);\n\n  useEffect(() => {\n    // If some real time bandwidth statistics have just been fetched, then fire\n    // off the next request with a delay.\n    if (\n      activeTimePeriod === TimePeriod.RealTime &&\n      requestTimestampMilliseconds\n    ) {\n      const requestLatency = Date.now() - requestTimestampMilliseconds;\n      const delay = Math.max(\n        REAL_TIME_DATA_FETCH_MIN_INTERVAL - requestLatency,\n        0\n      );\n\n      realtimeTimeoutIDRef.current = window.setTimeout(onFetch, delay);\n    }\n\n    return () => {\n      if (realtimeTimeoutIDRef.current) {\n        window.clearTimeout(realtimeTimeoutIDRef.current);\n      }\n    };\n  }, [requestTimestampMilliseconds, onFetch, activeTimePeriod]);\n\n  useEffect(() => {\n    // Do not pass the new active time period to the graph with statistics for\n    // the previous time period. Once the statistics are updated, then update\n    // the time period that is passed to the graph.\n\n    setLockedTimePeriod(activeTimePeriod);\n\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [statistics]);\n\n  useEffect(() => {\n    return () => {\n      dispatch(dashboardBandwidthSlice.actions.reset());\n    };\n  }, [dispatch]);\n\n  //\n  // Render\n\n  return (\n    <div className={styles.container}>\n      <ServerDashboardPageHeader title={t('Bandwidth')}>\n        <div>\n          <ServerDashboardFilterMenuButton\n            activeValue={activeBandwidthSourceType}\n            formatter={getBandwidthSourceTypeLabel}\n            values={bandwidthSourceTypes}\n            onSelect={onBandwidthSourceTypeSelect}\n          />\n\n          <ServerDashboardFilterMenuButton\n            activeValue={activeTimePeriod}\n            formatter={getTimePeriodLabel}\n            values={timePeriods}\n            onSelect={onTimePeriodSelect}\n          />\n        </div>\n      </ServerDashboardPageHeader>\n\n      <div className={styles.graph}>\n        <BandwidthGraph\n          activeBandwidthSourceType={activeBandwidthSourceType}\n          activeTimePeriod={lockedTimePeriod}\n          errorMessage={error ? t('Unable to load statistics') : undefined}\n          isPending={isDelayedPending}\n          isPopulated={isPopulated}\n          responseTimestampMilliseconds={responseTimestampMilliseconds}\n          statistics={statistics}\n          onGraphBandwidthSourceTypeSelect={onGraphBandwidthSourceTypeSelect}\n          onGraphTooltipActive={onGraphTooltipActive}\n          onGraphTooltipInactive={onGraphTooltipInactive}\n        />\n      </div>\n    </div>\n  );\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"container\":\"AdedN\",\"graph\":\"rsQfD\"};","enum Kind {\n  Default = 'default',\n  Primary = 'primary',\n  Success = 'success',\n  Danger = 'danger',\n}\n\nexport default Kind;\n","// extracted by mini-css-extract-plugin\nexport default {\"link\":\"IYkbp\",\"isHrefLink\":\"GFJ4F\",\"default\":\"MreM3\",\"primary\":\"u0jYf\",\"success\":\"ymaAO\",\"danger\":\"ga9l7\",\"small\":\"IT79I\",\"medium\":\"hG3YJ\",\"large\":\"LEBgA\"};","import classNames from 'classnames';\nimport React, {\n  AnchorHTMLAttributes,\n  ButtonHTMLAttributes,\n  InputHTMLAttributes,\n  MouseEvent,\n  ReactElement,\n  Ref,\n  TouchEvent,\n  useCallback,\n  useEffect,\n  useRef,\n  useState,\n} from 'react';\nimport Kind from 'app/js/v4/core/ui/types/Kind';\nimport Size from 'app/js/v4/core/ui/types/Size';\nimport {\n  IS_ACTIVE,\n  IS_DISABLED,\n  IS_FOCUSED,\n} from 'app/js/views/v3/helpers/modifierClassNames';\nimport styles from './Link.css';\n\nexport type LinkElement =\n  | HTMLButtonElement\n  | HTMLInputElement\n  | HTMLLinkElement;\nexport type HTMLLink = AnchorHTMLAttributes<HTMLLinkElement> &\n  ButtonHTMLAttributes<HTMLButtonElement> &\n  InputHTMLAttributes<HTMLInputElement>;\n\ninterface InnerLinkProps extends Omit<HTMLLink, 'size' | 'value'> {\n  forwardedRef: Ref<LinkElement>;\n  to?: string;\n  component?: string;\n  role?: string;\n  className?: string;\n  kind?: Kind;\n  size?: Size;\n  isDisabled?: boolean;\n  onPress?(event: MouseEvent | TouchEvent): void;\n}\n\nexport type LinkProps = Omit<InnerLinkProps, 'forwardedRef'>;\n\nfunction Link({\n  forwardedRef,\n  children,\n  to,\n  component = to ? 'a' : 'button',\n  type = component === 'button' || component === 'input' ? 'button' : undefined,\n  role = to ? 'link' : 'button',\n  className = styles.link,\n  kind = Kind.Default,\n  size, // No default size, instead inheriting font-size by default.\n  isDisabled = false,\n  onPress,\n  onTouchStart: onTouchStartFromProps,\n  onTouchMove: onTouchMoveFromProps,\n  onTouchEnd: onTouchEndFromProps,\n  onTouchCancel: onTouchCancelFromProps,\n  onMouseDown: onMouseDownFromProps,\n  onMouseUp: onMouseUpFromProps,\n  onMouseLeave: onMouseLeaveFromProps,\n  onClick: onClickFromProps,\n  onFocus: onFocusFromProps,\n  onBlur: onBlurFromProps,\n  ...linkProps\n}: InnerLinkProps): ReactElement {\n  const [isActive, setIsActive] = useState(false);\n  const [isFocused, setIsFocused] = useState(false);\n\n  // Focus is suppressed after a touch or mouse event in order to prevent the\n  // focused style on press. Focused style is still used when an item is focused\n  // after keyboard events, like tab focus.\n\n  const isFocusSuppressed = useRef(false);\n\n  // Touch events trigger an immediate `onPress`, avoiding the click delay that\n  // can happen in mobile browsers. If a press is being handled as part of a\n  // touch event sequence, avoid also triggering `onPress` in `onClick`.\n\n  const isClickSuppressed = useRef(false);\n  const isTouchPress = useRef(false);\n\n  //\n  // Listeners\n\n  const onTouchStart = useCallback(\n    (event) => {\n      isFocusSuppressed.current = true;\n      isClickSuppressed.current = true;\n\n      if (event.touches.length === 1) {\n        isTouchPress.current = true;\n        setIsActive(true);\n      }\n\n      onTouchStartFromProps?.(event);\n    },\n    [onTouchStartFromProps]\n  );\n\n  const onTouchMove = useCallback(\n    (event) => {\n      isTouchPress.current = false;\n      setIsActive(false);\n\n      onTouchMoveFromProps?.(event);\n    },\n    [onTouchMoveFromProps]\n  );\n\n  const onTouchEnd = useCallback(\n    (event) => {\n      setIsActive(false);\n\n      if (isTouchPress.current) {\n        isTouchPress.current = false;\n        onPress?.(event);\n      }\n\n      onTouchEndFromProps?.(event);\n    },\n    [onPress, onTouchEndFromProps]\n  );\n\n  const onTouchCancel = useCallback(\n    (event) => {\n      isFocusSuppressed.current = false;\n      isClickSuppressed.current = false;\n      isTouchPress.current = false;\n      setIsActive(false);\n\n      onTouchCancelFromProps?.(event);\n    },\n    [onTouchCancelFromProps]\n  );\n\n  const onMouseDown = useCallback(\n    (event) => {\n      isFocusSuppressed.current = true;\n      setIsActive(true);\n\n      onMouseDownFromProps?.(event);\n    },\n    [onMouseDownFromProps]\n  );\n\n  const onMouseUp = useCallback(\n    (event) => {\n      setIsActive(false);\n\n      onMouseUpFromProps?.(event);\n    },\n    [onMouseUpFromProps]\n  );\n\n  const onMouseLeave = useCallback(\n    (event) => {\n      isFocusSuppressed.current = false;\n      setIsActive(false);\n\n      onMouseLeaveFromProps?.(event);\n    },\n    [onMouseLeaveFromProps]\n  );\n\n  const onFocus = useCallback(\n    (event) => {\n      if (isFocusSuppressed.current) {\n        isFocusSuppressed.current = false;\n        return;\n      }\n\n      setIsFocused(true);\n      onFocusFromProps?.(event);\n    },\n    [onFocusFromProps]\n  );\n\n  const onBlur = useCallback(\n    (event) => {\n      isFocusSuppressed.current = false;\n      setIsFocused(false);\n\n      onBlurFromProps?.(event);\n    },\n    [onBlurFromProps]\n  );\n\n  const onClick = useCallback(\n    (event) => {\n      isFocusSuppressed.current = false;\n      setIsActive(false);\n\n      if (isClickSuppressed.current) {\n        isClickSuppressed.current = false;\n      } else {\n        onPress?.(event);\n        onClickFromProps?.(event);\n      }\n    },\n    [onPress, onClickFromProps]\n  );\n\n  const onWindowMouseMove = useCallback(() => {\n    // If the element is focused without a mouse or touch interaction, like\n    // when refocusing the browser window, suppress the focus style when the\n    // mouse moves within the window.\n\n    setIsFocused(false);\n  }, []);\n\n  //\n  // Effects\n\n  useEffect(() => {\n    if (isFocused) {\n      window.addEventListener('mousemove', onWindowMouseMove);\n    }\n\n    return () => {\n      if (isFocused) {\n        window.removeEventListener('mousemove', onWindowMouseMove);\n      }\n    };\n  }, [isFocused, onWindowMouseMove]);\n\n  //\n  // Render\n\n  const callbacks = isDisabled\n    ? {}\n    : {\n        onTouchStart,\n        onTouchMove,\n        onTouchEnd,\n        onTouchCancel,\n        onMouseDown,\n        onMouseUp,\n        onMouseLeave,\n        onFocus,\n        onBlur,\n        onClick,\n      };\n\n  return React.createElement(component, {\n    ...linkProps,\n    ...callbacks,\n    ref: forwardedRef,\n    children,\n    type,\n    href: to,\n    role,\n    className: classNames(\n      className,\n      styles[kind],\n      size && styles[size],\n      to && styles.isHrefLink,\n      isActive && IS_ACTIVE,\n      isFocused && IS_FOCUSED,\n      isDisabled && IS_DISABLED\n    ),\n    disabled: isDisabled,\n  });\n}\n\nexport default React.forwardRef<LinkElement, LinkProps>((props, ref) => {\n  return <Link {...props} forwardedRef={ref} />;\n});\n","import {\n  Options,\n  RectReadOnly,\n  default as useMeasureHook,\n} from 'react-use-measure';\nimport { ResizeObserver as Polyfill } from '@juggle/resize-observer';\n\nconst ResizeObserver = window.ResizeObserver || Polyfill;\n\nexport type Measurements = RectReadOnly;\n\nfunction useMeasure(\n  options?: Omit<Options, 'polyfill'>\n): ReturnType<typeof useMeasureHook> {\n  return useMeasureHook({\n    polyfill: ResizeObserver,\n    ...options,\n  });\n}\n\nexport default useMeasure;\n","import React, {\n  CSSProperties,\n  FocusEvent,\n  MouseEvent,\n  ReactElement,\n  ReactNode,\n  Ref,\n  TouchEvent,\n  useCallback,\n  useEffect,\n  useState,\n} from 'react';\nimport ReactDOM from 'react-dom';\n\n// A portal can be used to transport a component rendered in the component tree\n// to the document body. This allows us to create modals, menus, etc. where they\n// are needed, but render them in a way that they overlay the entire\n// application.\n\ninterface InnerPortalProps {\n  forwardedRef: Ref<HTMLDivElement>;\n  children?: ReactNode;\n  className?: string;\n  style?: CSSProperties;\n  isOpen?: boolean;\n  closeDelayMilliseconds?: number;\n  allowInteractionEventBubbling?: boolean;\n  onOpen?(): void;\n  onClose?(): void;\n}\n\nexport type PortalProps = Omit<InnerPortalProps, 'forwardedRef'>;\n\nfunction PortalWithRef({\n  className,\n  style,\n  children,\n  forwardedRef,\n  isOpen = true,\n  closeDelayMilliseconds = 0,\n  allowInteractionEventBubbling = false,\n  onOpen,\n  onClose,\n}: InnerPortalProps): ReactElement | null {\n  const [isOpenInternal, setIsOpenInternal] = useState(isOpen);\n\n  //\n  // Callbacks\n\n  const onInteractionEvent = useCallback(\n    (event: FocusEvent | MouseEvent | TouchEvent) => {\n      // React 16 portals allow events to bubble up through the component tree, so\n      // a click event can bubble up to the button that opened the portal. This\n      // can lead to unexpected behavior, so stop propagation of interaction\n      // events up from the portal.\n\n      if (!allowInteractionEventBubbling) {\n        event.stopPropagation();\n      }\n    },\n    [allowInteractionEventBubbling]\n  );\n\n  //\n  // Effects\n\n  useEffect(() => {\n    let timeoutID: number;\n\n    if (isOpen) {\n      setIsOpenInternal(true);\n      onOpen?.();\n    } else {\n      timeoutID = window.setTimeout(() => {\n        setIsOpenInternal(false);\n        onClose?.();\n      }, closeDelayMilliseconds);\n    }\n\n    return () => {\n      if (timeoutID) {\n        window.clearTimeout(timeoutID);\n      }\n    };\n  }, [closeDelayMilliseconds, isOpen, onClose, onOpen]);\n\n  //\n  // Render\n\n  if (!isOpenInternal) {\n    return null;\n  }\n\n  return ReactDOM.createPortal(\n    <div\n      ref={forwardedRef}\n      className={className}\n      style={style}\n      onBlur={onInteractionEvent}\n      onClick={onInteractionEvent}\n      onFocus={onInteractionEvent}\n      onMouseDown={onInteractionEvent}\n      onMouseUp={onInteractionEvent}\n      onTouchCancel={onInteractionEvent}\n      onTouchEnd={onInteractionEvent}\n      onTouchMove={onInteractionEvent}\n      onTouchStart={onInteractionEvent}\n    >\n      {children}\n    </div>,\n    document.body\n  );\n}\n\nexport default React.forwardRef<HTMLDivElement, PortalProps>((props, ref) => {\n  return <PortalWithRef {...props} forwardedRef={ref} />;\n});\n","// extracted by mini-css-extract-plugin\nexport default {\"modalContainer\":\"d58TY\",\"modalBackdrop\":\"AsxYA\",\"modal\":\"vgxAm\",\"small\":\"kye6Z vgxAm\",\"medium\":\"H6pvS vgxAm\",\"large\":\"ZEn0l vgxAm\"};","import { AnimatePresence, motion } from 'framer-motion';\nimport React, {\n  ReactElement,\n  MouseEvent as ReactMouseEvent,\n  ReactNode,\n  TouchEvent as ReactTouchEvent,\n  useCallback,\n  useEffect,\n  useRef,\n} from 'react';\nimport ReactDOM from 'react-dom';\nimport * as keyCodes from 'app/js/utils/constants/keyCodes';\nimport useMetricsModalDismissEffect from 'app/js/v4/core/ui/metrics/hooks/useMetricsModalDismissEffect';\nimport useMetricsPageViewEffect from 'app/js/v4/core/ui/metrics/hooks/useMetricsPageViewEffect';\nimport Portal from 'app/js/v4/core/ui/portals/components/Portal';\nimport Size from 'app/js/v4/core/ui/types/Size';\nimport cssDurationToSeconds from 'app/js/views/v3/helpers/css/cssDurationToSeconds';\nimport * as focusManager from 'app/js/views/v3/helpers/focus/focusManager';\nimport animations from 'app/styles/variables/animations';\nimport easings from 'app/styles/variables/easings';\nimport styles from './Modal.css';\n\nexport interface ModalProps {\n  children: ReactNode;\n  className?: string;\n  backdropClassName?: string;\n  containerClassName?: string;\n  size?: Size;\n  isOpen: boolean;\n  shouldTrackOnClose?: boolean;\n  preventCloseOnBackdropPress?: boolean;\n  onModalClose(): void;\n}\n\nconst modalSpeedSeconds = cssDurationToSeconds(animations.modalSpeed);\nconst modalSpeedMilliseconds = modalSpeedSeconds * 1000;\n\nconst opacityTransition = {\n  ease: 'easeOut',\n  duration: modalSpeedSeconds,\n};\n\nconst scaleTransition = {\n  ease: easings.motionEasing,\n  duration: modalSpeedSeconds,\n};\n\nconst backdropTransition = {\n  opacity: opacityTransition,\n};\n\nconst backdropVariants = {\n  enter: {\n    opacity: 1,\n    transition: backdropTransition,\n  },\n  exit: {\n    opacity: 0,\n    transition: backdropTransition,\n  },\n};\n\nconst containerTransition = {\n  scale: scaleTransition,\n  opacity: opacityTransition,\n};\n\nconst modalContainerVariants = {\n  enter: {\n    opacity: 1,\n    scale: 1,\n    transition: containerTransition,\n  },\n  exit: {\n    opacity: 0,\n    scale: 0.95,\n    transition: containerTransition,\n  },\n};\n\nfunction isMouseEvent(\n  event: ReactMouseEvent | ReactTouchEvent\n): event is ReactMouseEvent {\n  return event.nativeEvent instanceof MouseEvent;\n}\n\nfunction findEventTarget(\n  event: ReactMouseEvent | ReactTouchEvent\n): Element | null {\n  if (isMouseEvent(event)) {\n    return event.target as Element;\n  }\n\n  const changedTouches = event.changedTouches;\n\n  if (changedTouches.length === 1) {\n    const touch = changedTouches[0];\n\n    return document.elementFromPoint(touch.clientX, touch.clientY);\n  }\n\n  return null;\n}\n\nfunction isBackdropTarget(\n  event: ReactMouseEvent | ReactTouchEvent,\n  modalElement: HTMLDivElement | null\n): boolean {\n  const targetElement = findEventTarget(event);\n\n  if (targetElement) {\n    const modalNode = ReactDOM.findDOMNode(modalElement);\n\n    return !modalNode || !modalNode.contains(targetElement);\n  }\n\n  return false;\n}\n\nexport default function Modal({\n  children,\n  className,\n  backdropClassName = styles.modalBackdrop,\n  containerClassName = styles.modalContainer,\n  size = Size.Medium,\n  isOpen,\n  shouldTrackOnClose = false,\n  preventCloseOnBackdropPress = false,\n  onModalClose,\n}: ModalProps): ReactElement {\n  const modalRef = useRef<HTMLDivElement | null>(null);\n  const isBackdropPressedRef = useRef(false);\n\n  //\n  // Callbacks\n\n  const onBackdropBeginPress = useCallback(\n    (event: ReactMouseEvent | ReactTouchEvent) => {\n      isBackdropPressedRef.current = isBackdropTarget(event, modalRef.current);\n    },\n    []\n  );\n\n  const onBackdropEndPress = useCallback(\n    (event: ReactMouseEvent | ReactTouchEvent) => {\n      if (\n        !preventCloseOnBackdropPress &&\n        isBackdropPressedRef.current &&\n        isBackdropTarget(event, modalRef.current)\n      ) {\n        onModalClose();\n      }\n\n      isBackdropPressedRef.current = false;\n    },\n    [onModalClose, preventCloseOnBackdropPress]\n  );\n\n  const onTouchMove = useCallback((_event: ReactTouchEvent) => {\n    isBackdropPressedRef.current = false;\n  }, []);\n\n  const onTouchCancel = useCallback((_event: ReactTouchEvent) => {\n    isBackdropPressedRef.current = false;\n  }, []);\n\n  const onKeyDown = useCallback(\n    (event) => {\n      const keyCode = event.keyCode;\n\n      if (keyCode === keyCodes.TAB) {\n        focusManager.scopeTabEvent(event);\n      } else if (keyCode === keyCodes.ESCAPE) {\n        event.preventDefault();\n        event.stopPropagation();\n\n        onModalClose();\n\n        // Since the user used the keyboard to close the modal, attempt to\n        // automatically restore the previously focused element to retain the\n        // focus position.\n\n        focusManager.restorePreviousFocus();\n      }\n    },\n    [onModalClose]\n  );\n\n  const onRef = useCallback((node: HTMLDivElement | null) => {\n    modalRef.current = node;\n\n    if (node) {\n      focusManager.startScopedFocus(ReactDOM.findDOMNode(node));\n    }\n  }, []);\n\n  //\n  // Effects\n\n  useMetricsPageViewEffect({}, isOpen);\n\n  useMetricsModalDismissEffect(isOpen, shouldTrackOnClose);\n\n  useEffect(() => {\n    let autoFocusTimeoutID: number;\n\n    if (isOpen) {\n      autoFocusTimeoutID = window.setTimeout(\n        focusManager.scopeAutoFocus,\n        modalSpeedMilliseconds\n      );\n\n      document.addEventListener('keydown', onKeyDown);\n    }\n\n    return () => {\n      if (autoFocusTimeoutID) {\n        window.clearTimeout(autoFocusTimeoutID);\n      }\n\n      if (isOpen) {\n        document.removeEventListener('keydown', onKeyDown);\n      }\n    };\n  }, [isOpen, onKeyDown]);\n\n  //\n  // Render\n\n  return (\n    <Portal\n      className={containerClassName}\n      closeDelayMilliseconds={modalSpeedMilliseconds}\n      isOpen={isOpen}\n    >\n      <AnimatePresence>\n        {isOpen ? (\n          <motion.div\n            key=\"backdrop\"\n            animate=\"enter\"\n            className={backdropClassName}\n            exit=\"exit\"\n            initial=\"exit\"\n            variants={backdropVariants}\n            onMouseDown={onBackdropBeginPress}\n            onMouseUp={onBackdropEndPress}\n            onTouchCancel={onTouchCancel}\n            onTouchEnd={onBackdropEndPress}\n            onTouchMove={onTouchMove}\n            onTouchStart={onBackdropBeginPress}\n          >\n            <motion.div\n              key=\"modal\"\n              ref={onRef}\n              animate=\"enter\"\n              className={className || styles[size]}\n              exit=\"exit\"\n              initial=\"exit\"\n              variants={modalContainerVariants}\n            >\n              {children}\n            </motion.div>\n          </motion.div>\n        ) : // PoseGroup expects React.ReactElement<T> | false | void\n        undefined}\n      </AnimatePresence>\n    </Portal>\n  );\n}\n","import { useEffect } from 'react';\nimport { resolve } from 'app/js/adapters/adapters';\nimport performance from 'app/js/utils/metrics/performance';\nimport { useMetricsContext } from 'app/js/v4/core/ui/metrics/components/MetricsContextProvider';\nimport { MetricsProperties } from 'app/js/v4/core/ui/metrics/metricsTypes';\n\nexport default function useMetricsPageViewEffect(\n  metricsProperties?: Omit<MetricsProperties, 'context'>,\n  isReady = true\n): void {\n  const { metricsPage, metricsContextTuple } = useMetricsContext();\n\n  useEffect(() => {\n    if (isReady) {\n      // This ends the `client:view:${metricsPage}` period.\n      resolve('metrics').trackView({\n        ...metricsProperties,\n        page: metricsPage,\n        contextTuple: metricsContextTuple,\n      });\n    } else {\n      performance.startPeriod(`client:view:${metricsPage}`);\n    }\n\n    // The `metricsProperties` reference will change with each render, but only\n    // track a new page view if the property values change.\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [\n    isReady,\n    metricsContextTuple,\n    metricsPage,\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    JSON.stringify(metricsProperties),\n  ]);\n}\n","import { useEffect } from 'react';\nimport { resolve } from 'app/js/adapters/adapters';\nimport * as metricsActions from 'app/js/utils/constants/metrics/metricsActions';\nimport { useMetricsContext } from 'app/js/v4/core/ui/metrics/components/MetricsContextProvider';\nimport usePrevious from 'app/js/views/v3/helpers/hooks/usePrevious';\n\nexport default function useMetricsModalDismissEffect(\n  isOpen: boolean,\n  shouldTrackOnClose = false\n): void {\n  const { metricsPage } = useMetricsContext();\n\n  const prevIsOpen = usePrevious(isOpen);\n\n  useEffect(() => {\n    if (prevIsOpen && !isOpen && shouldTrackOnClose) {\n      resolve('metrics').trackView({\n        page: metricsPage,\n        action: metricsActions.DISMISS,\n      });\n    }\n  }, [isOpen, prevIsOpen, shouldTrackOnClose, metricsPage]);\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"modalBody\":\"BSp3D\",\"modalScroller\":\"u5YPF BSp3D\",\"innerModalBody\":\"KNNpd\"};","import React, { ReactNode } from 'react';\nimport Scroller, {\n  ScrollDirection,\n  ScrollerProps,\n} from 'app/js/v4/core/ui/scrollers/components/Scroller';\nimport styles from './ModalBody.css';\n\nexport interface ModalBodyProps extends ScrollerProps {\n  children: ReactNode;\n  className?: string;\n  innerClassName?: string;\n}\n\nconst ModalBody = React.forwardRef<HTMLDivElement, ModalBodyProps>(\n  (\n    {\n      children,\n      className,\n      innerClassName = styles.innerModalBody,\n      ...scrollerProps\n    },\n    forwardedRef\n  ) => {\n    const isScroller = scrollerProps.scrollDirection !== ScrollDirection.None;\n\n    if (!className) {\n      className = isScroller ? styles.modalScroller : styles.modalBody;\n    }\n\n    return (\n      <Scroller ref={forwardedRef} {...scrollerProps} className={className}>\n        {isScroller ? (\n          <div className={innerClassName}>{children}</div>\n        ) : (\n          children\n        )}\n      </Scroller>\n    );\n  }\n);\n\nexport default ModalBody;\n","import React, { ReactElement, ReactNode } from 'react';\nimport Link from 'app/js/v4/core/ui/buttons/components/Link';\nimport IconRemove from 'app/glyphs/remove-560.svg';\nimport styles from './ModalContent.css';\n\nexport interface ModalContentProps {\n  children: ReactNode;\n  className?: string;\n  onModalClose(): void;\n}\n\nexport default function ModalContent({\n  children,\n  className = styles.modalContent,\n  onModalClose,\n}: ModalContentProps): ReactElement {\n  return (\n    <div className={className}>\n      <Link className={styles.closeButton} onPress={onModalClose}>\n        <IconRemove />\n      </Link>\n\n      {children}\n    </div>\n  );\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"modalContent\":\"xu8Ro\",\"closeButton\":\"IxM64 IYkbp\"};","import React, { ReactElement, ReactNode } from 'react';\nimport styles from './ModalHeader.css';\n\nexport interface ModalHeaderProps {\n  children: ReactNode;\n  className?: string;\n}\n\nexport default function ModalHeader({\n  children,\n  className = styles.modalHeader,\n}: ModalHeaderProps): ReactElement {\n  return <div className={className}>{children}</div>;\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"modalHeader\":\"hFGAH\"};","import React, { ReactElement } from 'react';\nimport t from 'app/js/utils/t';\nimport MetricsContextProvider from 'app/js/v4/core/ui/metrics/components/MetricsContextProvider';\nimport { MetricsPage } from 'app/js/v4/core/ui/metrics/metricsTypes';\nimport Modal from 'app/js/v4/core/ui/modals/components/Modal';\nimport ModalBody from 'app/js/v4/core/ui/modals/components/ModalBody';\nimport ModalContent from 'app/js/v4/core/ui/modals/components/ModalContent';\nimport ModalHeader from 'app/js/v4/core/ui/modals/components/ModalHeader';\nimport Size from 'app/js/v4/core/ui/types/Size';\nimport styles from './NowPlayingErrorModal.css';\n\ninterface NowPlayingErrorModalProps {\n  isOpen: boolean;\n  errorMessage: string;\n  metricsPage: MetricsPage;\n  onModalClose(): void;\n}\n\nexport default function NowPlayingErrorModal({\n  isOpen,\n  errorMessage,\n  metricsPage,\n  onModalClose,\n}: NowPlayingErrorModalProps): ReactElement {\n  return (\n    <MetricsContextProvider metricsPage={metricsPage}>\n      <Modal isOpen={isOpen} size={Size.Small} onModalClose={onModalClose}>\n        <ModalContent onModalClose={onModalClose}>\n          <ModalHeader className={styles.modalHeader}>{t('Error')}</ModalHeader>\n          <ModalBody>{errorMessage}</ModalBody>\n        </ModalContent>\n      </Modal>\n    </MetricsContextProvider>\n  );\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"modalHeader\":\"LZlhG GB5xN\"};","/* eslint-plugin-disable @typescript-eslint */\n\n// A product is considered unstoppable if playback cannot be stopped remotely.\nconst unstoppableProducts = [/alexa/i, /sonos/i];\n\nconst unstoppableProductMemo = {};\n\nexport default function isPlayerUnstoppable(player: any) {\n  const { product } = player;\n\n  if (!unstoppableProductMemo.hasOwnProperty(product)) {\n    // @ts-expect-error ts-migrate(7053) FIXME: Element implicitly has an 'any' type because expre... Remove this comment to see the full error message\n    unstoppableProductMemo[product] = unstoppableProducts.some((regex) =>\n      regex.test(product)\n    );\n  }\n\n  // @ts-expect-error ts-migrate(7053) FIXME: Element implicitly has an 'any' type because expre... Remove this comment to see the full error message\n  return unstoppableProductMemo[product];\n}\n","/* eslint-plugin-disable @typescript-eslint */\n\nfunction getPercentPlayed(viewOffset: any, duration: any) {\n  if (viewOffset > duration) {\n    // When the duration is untrustworthy fallback to a synthetic\n    // percentage watched.\n    // See: https://github.com/plexinc/plex-media-player/issues/104\n    return 50;\n  } else if (viewOffset <= 0 || duration <= 0) {\n    return 0;\n  } else {\n    return parseFloat(((viewOffset / duration) * 100).toFixed(2));\n  }\n}\n\nexport default getPercentPlayed;\n","/* eslint-plugin-disable @typescript-eslint */\n\nimport getPartByAbsoluteOffset from './getPartByAbsoluteOffset';\nimport getRelativeOffset from './getRelativeOffset';\nimport getScreenshotIndex from './getScreenshotIndex';\n\nfunction getScreenshotUrl(media: any, absoluteOffset: any, index: any) {\n  const part = getPartByAbsoluteOffset(media, absoluteOffset);\n  index = getScreenshotIndex(part, index);\n\n  if (!index) {\n    return;\n  }\n\n  const relativeOffset = getRelativeOffset(media, part, absoluteOffset);\n\n  return (\n    '/library/parts/' + part.id + '/indexes/' + index + '/' + relativeOffset\n  );\n}\n\nexport default getScreenshotUrl;\n","/* eslint-plugin-disable @typescript-eslint */\n\nimport _ from 'underscore';\n\nfunction getPartByAbsoluteOffset(media: any, absoluteOffset: any) {\n  let part;\n\n  if (media.Part.length > 1) {\n    let duration = 0;\n\n    for (let i = 0, len = media.Part.length; i < len; i++) {\n      part = media.Part[i];\n\n      // If the part doesn't have a duration, we can't accurately\n      // estimate which part should be returned.\n\n      if (!part.duration) {\n        break;\n      }\n\n      // Add to the duration until we figure out which part the\n      // absolute offset falls under.\n\n      duration += part.duration;\n\n      if (duration > absoluteOffset) {\n        break;\n      }\n    }\n  } else {\n    part = _.first(media.Part);\n  }\n\n  return part;\n}\n\nexport default getPartByAbsoluteOffset;\n","/* eslint-plugin-disable @typescript-eslint */\n\nimport _ from 'underscore';\n\nfunction getScreenshotIndex(part: any, index: any) {\n  if (!part.indexes) {\n    return;\n  }\n\n  const indexes = part.indexes.split(',');\n  if (!indexes.length) {\n    return;\n  }\n\n  if (_.indexOf(indexes, index) > -1) {\n    return index;\n  } else {\n    return indexes[0];\n  }\n}\n\nexport default getScreenshotIndex;\n","/* eslint-plugin-disable @typescript-eslint */\n\nfunction getRelativeOffset(media: any, part: any, absoluteOffset: any) {\n  let relativeOffset = absoluteOffset;\n\n  // Get the offset for a specific part based on the offset for the\n  // entire video.\n\n  if (media.Part.length > 1) {\n    for (let i = 0, len = media.Part.length; i < len; i++) {\n      const earlierPart = media.Part[i];\n\n      // If the part doesn't have a duration, we can't accurately\n      // estimate which part should be returned.\n\n      if (!earlierPart.duration) {\n        break;\n      }\n\n      // Once we reach the part the absolute offset falls within,\n      // we don't need to go any further.\n\n      if (part.key === earlierPart.key) {\n        break;\n      }\n\n      relativeOffset -= earlierPart.duration;\n    }\n  }\n\n  return relativeOffset;\n}\n\nexport default getRelativeOffset;\n","import { createSelector, Selector } from 'reselect';\nimport isAbsoluteUrl from 'app/js/utils/url/isAbsoluteUrl';\nimport path from 'app/js/utils/url/path';\nimport { ProviderFeatureType } from 'app/js/v4/core/providers/providersTypes';\nimport createProviderSelector from 'app/js/v4/core/providers/selectors/createProviderSelector';\nimport getProviderFeature from 'app/js/v4/core/providers/utils/getProviderFeature';\nimport createActiveConnectionURISelector from 'app/js/v4/core/servers/selectors/createActiveConnectionURISelector';\nimport createStableServerSelector from 'app/js/v4/core/servers/selectors/createStableServerSelector';\nimport { LegacyRootState } from 'app/js/v4/root/rootTypes';\nimport memoize from 'app/js/v4/utils/memoize';\n\nfunction createImageTranscodeURLSelector(\n  machineIdentifier: string,\n  providerIdentifier?: string,\n  url?: string,\n  urlParams?: object\n): Selector<LegacyRootState, string | undefined> {\n  if (!url) {\n    return () => undefined;\n  }\n\n  return createSelector(\n    createStableServerSelector(machineIdentifier),\n    createActiveConnectionURISelector(machineIdentifier),\n    createProviderSelector(machineIdentifier, providerIdentifier),\n    (server, connectionURI, provider) => {\n      let transcodeKey = '/photo/:/transcode';\n      let isAbsoluteTranscodeKey = false;\n      let isPublicTranscoder = false;\n      let baseUrl;\n\n      if (!connectionURI) {\n        return;\n      }\n\n      if (provider) {\n        const imageTranscoderFeature = getProviderFeature(\n          provider,\n          ProviderFeatureType.ImageTranscoder\n        );\n\n        if (imageTranscoderFeature?.key) {\n          transcodeKey = imageTranscoderFeature.key;\n          isAbsoluteTranscodeKey = isAbsoluteUrl(transcodeKey);\n          isPublicTranscoder = !!imageTranscoderFeature.public;\n        }\n      }\n\n      // Use a relative path if the transcoder is relative to the image's\n      // server. If the transcoder is hosted separately or part of a\n      // different server, use the absolute path.\n\n      if (isAbsoluteTranscodeKey) {\n        baseUrl = provider.baseURL ?? connectionURI;\n      } else {\n        baseUrl = '';\n      }\n\n      let imageUrl;\n\n      if (isAbsoluteUrl(url)) {\n        imageUrl = url;\n      } else {\n        const params = { 'X-Plex-Token': server.accessToken, ...urlParams };\n        imageUrl = path.join([baseUrl, url], params);\n      }\n\n      const pathParts = isAbsoluteTranscodeKey\n        ? transcodeKey\n        : [connectionURI, transcodeKey];\n\n      const transcodeUrl = path.join(pathParts, {\n        url: imageUrl,\n        'X-Plex-Token': isPublicTranscoder ? undefined : server.accessToken,\n      });\n\n      return transcodeUrl;\n    }\n  );\n}\n\nexport default memoize(createImageTranscodeURLSelector);\n","import { createSelector, Selector } from 'reselect';\nimport createUnstableServerSelector from 'app/js/v4/core/servers/selectors/createUnstableServerSelector';\nimport { LegacyRootState } from 'app/js/v4/root/rootTypes';\n\nexport default function createActiveConnectionURISelector(\n  machineIdentifier: string\n): Selector<LegacyRootState, string | undefined> {\n  return createSelector(\n    createUnstableServerSelector(machineIdentifier),\n    (server) => server?.activeConnection?.uri\n  );\n}\n","import { useSelector } from 'react-redux';\nimport getPixelRatio from 'app/js/utils/constants/getPixelRatio';\nimport * as imageSizes from 'app/js/utils/constants/imageSizes';\nimport path from 'app/js/utils/url/path';\nimport { Provider } from 'app/js/v4/core/providers/providersTypes';\nimport createImageTranscodeURLSelector from 'app/js/v4/core/servers/selectors/createImageTranscodeURLSelector';\nimport { Server } from 'app/js/v4/core/servers/serversTypes';\nimport assert from 'app/js/v4/utils/assert';\n\nconst sizeMemo: Record<string, ImageSize> = {};\nconst widthMemo: Record<string, number> = {};\n\ntype ImageSize = typeof imageSizes[keyof typeof imageSizes];\n\nconst sortedImageSizes = [\n  imageSizes.SMALL_60,\n  imageSizes.SMALL_120,\n  imageSizes.MEDIUM_240,\n  imageSizes.MEDIUM_360,\n  imageSizes.LARGE_480,\n  imageSizes.LARGE_720,\n  imageSizes.LARGE_1280,\n  imageSizes.LARGE_1920,\n].sort((a, b) => getWidthForSize(a) - getWidthForSize(b)) as ImageSize[];\n\nfunction getWidthForSize(imageSize: string): number {\n  if (widthMemo.hasOwnProperty(imageSize)) {\n    return widthMemo[imageSize];\n  }\n\n  const width = parseInt(imageSize.split('-')[1], 10);\n  widthMemo[imageSize] = width;\n\n  return width;\n}\n\nfunction getSizeForWidth(width: number): ImageSize {\n  if (sizeMemo.hasOwnProperty(width)) {\n    return sizeMemo[width];\n  }\n\n  const size =\n    sortedImageSizes.find((imageSize) => getWidthForSize(imageSize) >= width) ||\n    sortedImageSizes[sortedImageSizes.length - 1];\n\n  sizeMemo[width] = size;\n  return size;\n}\n\ninterface BaseParams {\n  format?: string;\n  quality?: number;\n}\n\ninterface DimensionsParams extends BaseParams {\n  width: number;\n  height: number;\n  minSize: 1 | undefined;\n  upscale: 1 | undefined;\n}\n\ninterface SizeParams extends BaseParams {\n  size: ImageSize;\n  scale: number;\n}\n\ntype TranscodeOptions = TranscodeImageOptions & {\n  supportsSize: boolean;\n};\n\nfunction getDimensionsParams(\n  options: TranscodeOptions\n): DimensionsParams | SizeParams {\n  const {\n    allowPixelRatioSize = true,\n    minSize = true,\n    upscale = true,\n  } = options;\n\n  if (__DEV__) {\n    assert(\n      'size' in options ||\n        (options.width && (options.height || options.supportsSize)),\n      'TranscodeImage requires `width` to determine `size` or both `width` and `height`'\n    );\n  }\n\n  if (__DEV__) {\n    assert(\n      !('size' in options) || options.supportsSize,\n      'TranscodeImage cannot use `size` directly if the server does not support the param'\n    );\n  }\n\n  const pxRatio = allowPixelRatioSize ? getPixelRatio() : 1;\n  const size =\n    'size' in options ? options.size : getSizeForWidth(options.width);\n\n  if (options.supportsSize) {\n    return {\n      size,\n      scale: Math.ceil(pxRatio),\n    };\n  } else {\n    assert(\n      !('size' in options) && options.height != null,\n      'Both width and height required'\n    );\n    const bracketedWidth = getWidthForSize(size);\n    const aspectRatio = options.height / options.width;\n\n    return {\n      width: Math.ceil(bracketedWidth * pxRatio),\n      height: Math.ceil(aspectRatio * bracketedWidth * pxRatio),\n      minSize: minSize ? 1 : undefined,\n      upscale: upscale ? 1 : undefined,\n    };\n  }\n}\n\nfunction appendTranscodeParams(\n  url: string | undefined,\n  options: TranscodeOptions\n): string | undefined {\n  if (!url) {\n    return;\n  }\n\n  const params = Object.assign(getDimensionsParams(options), options.filters);\n\n  if (options.format) {\n    params.format = options.format;\n  }\n\n  if (options.quality) {\n    params.quality = options.quality;\n  }\n\n  // Move existing params to the end of the url. Plex Media Server expects\n  // X-Plex- params at the end of the query string because they can be headers\n  // as well as params.\n\n  const queryIndex = url.indexOf('?');\n\n  let urlWithParams = url;\n\n  if (queryIndex > -1) {\n    urlWithParams = path.join(url.substring(0, queryIndex), params);\n    urlWithParams += urlWithParams.indexOf('?') === -1 ? '?' : '&';\n    urlWithParams += url.substring(queryIndex + 1);\n  } else {\n    urlWithParams = path.join(urlWithParams, params);\n  }\n\n  return urlWithParams;\n}\n\ninterface BaseTranscodeImageOptions {\n  url?: string;\n  minSize?: boolean;\n  upscale?: boolean;\n  format?: string;\n  quality?: number;\n  filters?: {\n    blur?: number;\n    background?: string;\n    opacity?: number;\n    saturation?: number;\n  };\n  allowPixelRatioSize?: boolean;\n}\n\nexport interface SizeTranscodeImageOptions extends BaseTranscodeImageOptions {\n  size: ImageSize;\n}\n\nexport interface WidthSizeTranscodeImageOptions\n  extends BaseTranscodeImageOptions {\n  width: number;\n  height?: number;\n}\n\nexport interface DimensionTranscodeImageOptions\n  extends BaseTranscodeImageOptions {\n  width: number;\n  height: number;\n}\n\ntype TranscodeImageOptions =\n  | DimensionTranscodeImageOptions\n  | SizeTranscodeImageOptions\n  | WidthSizeTranscodeImageOptions;\n\nexport type UseTranscodeImageProps = TranscodeImageOptions & {\n  server: Server;\n  provider?: Provider;\n};\n\nexport default function useTranscodeImage({\n  server,\n  provider,\n  url,\n  ...options\n}: UseTranscodeImageProps): string | undefined {\n  const transcodeImageUrl = useSelector(\n    createImageTranscodeURLSelector(\n      server.machineIdentifier,\n      provider?.identifier,\n      url\n    )\n  );\n\n  return appendTranscodeParams(transcodeImageUrl, {\n    ...options,\n    // The size parameter is only supported by the provider cloud transcoder\n    // currently, not the plex.tv or PMS transcoders.\n    supportsSize: server.isCloud && !!provider,\n  });\n}\n","import { RefObject, useCallback, useEffect, useRef, useState } from 'react';\n\nexport default function useIsRefHovered(): [\n  boolean,\n  RefObject<HTMLDivElement>\n] {\n  const [isHovered, setIsHovered] = useState(false);\n  const ref = useRef<HTMLDivElement>(null);\n  const onMouseEnter = useCallback(() => setIsHovered(true), []);\n  const onMouseLeave = useCallback(() => setIsHovered(false), []);\n\n  // Rather than relying on React's event system for detecting hovered state,\n  // which can have unexpected behavior when elements are removed or portals are\n  // used, use basic DOM event listeners.\n\n  useEffect(() => {\n    const node = ref.current;\n\n    if (node) {\n      node.addEventListener('mouseenter', onMouseEnter);\n      node.addEventListener('mouseleave', onMouseLeave);\n    }\n\n    return () => {\n      if (node) {\n        node.removeEventListener('mouseenter', onMouseEnter);\n        node.removeEventListener('mouseleave', onMouseLeave);\n      }\n    };\n  }, [onMouseEnter, onMouseLeave]);\n\n  return [isHovered, ref];\n}\n","import React, {\n  CSSProperties,\n  memo,\n  ReactElement,\n  useLayoutEffect,\n  useRef,\n} from 'react';\nimport cssDurationToMilliseconds from 'app/js/views/v3/helpers/css/cssDurationToMilliseconds';\nimport animations from 'app/styles/variables/animations';\n\nconst DEFAULT_DURATION = cssDurationToMilliseconds(animations.slowSpeed);\n\nexport enum ImageFit {\n  Fill = 'fill',\n  Contain = 'contain',\n  Cover = 'cover',\n  ScaleDown = 'scale-down',\n  None = 'none',\n}\n\nexport interface CrossFadeImageProps {\n  className?: string;\n  src?: string;\n  alt?: string;\n  width?: CSSProperties['width'];\n  height?: CSSProperties['height'];\n  fit?: ImageFit;\n  durationMilliseconds?: number;\n}\n\nfunction CrossFadeImage({\n  className,\n  src,\n  alt,\n  width,\n  height,\n  fit,\n  durationMilliseconds = DEFAULT_DURATION,\n}: CrossFadeImageProps): ReactElement {\n  const containerRef = useRef<HTMLDivElement>(null);\n\n  //\n  // Effects\n\n  useLayoutEffect(() => {\n    const containerEl = containerRef.current;\n\n    if (!containerEl || !src) {\n      return;\n    }\n\n    const imgEl = document.createElement('img');\n\n    if (alt) {\n      imgEl.alt = alt;\n    }\n\n    Object.assign<CSSStyleDeclaration, CSSProperties>(imgEl.style, {\n      position: 'absolute',\n      width: '100%',\n      height: '100%',\n      objectFit: fit,\n      opacity: '0',\n    });\n\n    containerEl.appendChild(imgEl);\n\n    imgEl.onload = () => {\n      // If the onLoad handler fires in less than 50 milliseconds assume that it\n      // was loaded from cache and immediately display the image with out any\n      // animation\n      const loadTime = Date.now() - loadTimeStart;\n      const isCached = isComplete || loadTime < 50;\n      const shouldCrossFade = containerEl.childNodes.length > 1;\n\n      if (\n        typeof imgEl.animate !== 'function' ||\n        (isCached && !shouldCrossFade)\n      ) {\n        imgEl.style.opacity = '1';\n      } else {\n        const animated = imgEl.animate(\n          [{ opacity: 0 }, { opacity: 1 }],\n          durationMilliseconds\n        );\n\n        animated.onfinish = animated.oncancel = () => {\n          imgEl.style.opacity = '1';\n\n          while (containerEl.childNodes.length > 1) {\n            containerEl.removeChild(containerEl.childNodes[0]);\n          }\n        };\n      }\n    };\n\n    imgEl.onerror = () => {\n      while (containerEl.childNodes.length > 0) {\n        containerEl.removeChild(containerEl.childNodes[0]);\n      }\n    };\n\n    imgEl.src = src;\n    const loadTimeStart = Date.now();\n    const isComplete = imgEl.complete;\n\n    return () => {\n      imgEl.onload = imgEl.onerror = null;\n    };\n  }, [src, alt, fit, durationMilliseconds]);\n\n  //\n  // Render\n\n  return (\n    <div\n      ref={containerRef}\n      className={className}\n      style={{\n        position: 'relative',\n        overflow: 'hidden',\n        width,\n        height,\n      }}\n    />\n  );\n}\n\nexport default memo(CrossFadeImage);\n","\n    import PropTypes from 'prop-types';\n    import React from 'react';\n    import styles from 'app/js/views/v3/components/core/base/PlexIcon.css';\n\n    function IconTidalLogo(props) {\n      const label = props['aria-label'];\n      const className = props.className;\n      const style = props.style;\n\n      const svgProps = {\"xmlns\":\"http://www.w3.org/2000/svg\",\"viewBox\":\"0 0 560 560\",\"id\":\"plex-icon-tidal-logo-560\"};\n\n      svgProps['aria-hidden'] = !label;\n      svgProps.style = style;\n      svgProps.className = styles.plexIcon + (className ? ' ' + className : '');\n\n      const children = [React.createElement.apply(React, ['path', {\"d\":\"M373.331 186.32l-93.324 93.332-93.337-93.341L280.007 93l93.332 93.309L466.67 93 560 186.318l-93.33 93.341-93.339-93.339zm.01 186.669l-93.334 93.34-93.337-93.34 93.337-93.337 93.334 93.337zm-186.67-186.67l-93.338 93.34L0 186.32 93.333 93l93.337 93.318z\"}].concat([]))];\n\n      if (label) {\n        children.unshift(React.createElement('title', null, label));\n      }\n\n      // Arrays require a key, but a fixed number of elements don't.\n      // Spread the elements since it'll be a fixed number anyways\n      return React.createElement.apply(React, ['svg', svgProps].concat(children));\n    };\n\n    IconTidalLogo.propTypes = {\n      'aria-label': PropTypes.string,\n      className: PropTypes.string,\n      style: PropTypes.object\n    };\n\n    export default IconTidalLogo;\n  ","\n    import PropTypes from 'prop-types';\n    import React from 'react';\n    import styles from 'app/js/views/v3/components/core/base/PlexIcon.css';\n\n    function IconWatchTogether(props) {\n      const label = props['aria-label'];\n      const className = props.className;\n      const style = props.style;\n\n      const svgProps = {\"xmlns\":\"http://www.w3.org/2000/svg\",\"viewBox\":\"0 0 48 48\",\"id\":\"plex-icon-watch-together\"};\n\n      svgProps['aria-hidden'] = !label;\n      svgProps.style = style;\n      svgProps.className = styles.plexIcon + (className ? ' ' + className : '');\n\n      const children = [React.createElement.apply(React, ['path', {\"clipRule\":\"evenodd\",\"d\":\"M32 21c3.32 0 5.98-2.68 5.98-6S35.32 9 32 9c-3.32 0-6 2.68-6 6s2.68 6 6 6zm-15.999 0c3.32 0 5.979-2.68 5.979-6s-2.659-6-5.979-6c-3.32 0-6 2.68-6 6s2.68 6 6 6zm0 4C11.341 25 2 27.73 2 33.167V39h28v-5.833C30 27.73 20.66 25 16.001 25zM32 25c-.58 0-1.24.047-1.94.117 2.32 1.96 3.94 4.596 3.94 8.05V39h12v-5.833C46 27.73 36.66 25 32 25z\"}].concat([]))];\n\n      if (label) {\n        children.unshift(React.createElement('title', null, label));\n      }\n\n      // Arrays require a key, but a fixed number of elements don't.\n      // Spread the elements since it'll be a fixed number anyways\n      return React.createElement.apply(React, ['svg', svgProps].concat(children));\n    };\n\n    IconWatchTogether.propTypes = {\n      'aria-label': PropTypes.string,\n      className: PropTypes.string,\n      style: PropTypes.object\n    };\n\n    export default IconWatchTogether;\n  ","/* eslint-plugin-disable @typescript-eslint */\n\nimport React from 'react';\nimport * as attributionIdentifiers from 'app/js/utils/constants/attributionIdentifiers';\nimport IconTidalLogo from 'app/glyphs/tidal-logo-560.svg';\nimport IconWatchTogether from 'app/glyphs/watch-together.svg';\n\nconst attributionIcons = {\n  [attributionIdentifiers.TIDAL]: IconTidalLogo,\n  [attributionIdentifiers.WATCH_TOGETHER]: IconWatchTogether,\n};\n\ninterface AttributionBadgeProps {\n  className?: string;\n  attribution?: string;\n}\n\nfunction AttributionBadge(props: AttributionBadgeProps) {\n  // @ts-expect-error ts-migrate(2538) FIXME: Type 'undefined' cannot be used as an index type.\n  const Icon = attributionIcons[props.attribution];\n\n  if (!Icon) {\n    return null;\n  }\n\n  return (\n    <div className={props.className}>\n      <Icon />\n    </div>\n  );\n}\n\nexport default AttributionBadge;\n","/* eslint-plugin-disable @typescript-eslint */\n\nimport React, { useLayoutEffect, useRef } from 'react';\nimport cssDurationToMilliseconds from 'app/js/views/v3/helpers/css/cssDurationToMilliseconds';\nimport animations from 'app/styles/variables/animations';\nimport BackgroundImage from './BackgroundImage';\n\nfunction addImageToTop(src: any, containerEl: any, options: any) {\n  const { className, style, styleProps, durationMilliseconds, useCrossFade } =\n    options;\n\n  const imageEl = document.createElement('div');\n\n  imageEl.className = className;\n\n  Object.assign(imageEl.style, {\n    position: 'absolute',\n    backgroundImage: `url(${src})`,\n    width: '100%',\n    height: '100%',\n    ...styleProps,\n    ...style,\n  });\n\n  containerEl.appendChild(imageEl);\n\n  // Safari 12 does not support the Web Animation API, so we need to check if it\n  // exists on the element before calling it\n  if (useCrossFade && typeof imageEl.animate === 'function') {\n    imageEl.animate(\n      [\n        {\n          opacity: 0,\n        },\n        {\n          opacity: 1,\n        },\n      ],\n      durationMilliseconds\n    );\n  }\n}\n\nfunction removeImageFromBottom(containerEl: any) {\n  containerEl.removeChild(containerEl.childNodes[0]);\n}\n\n/*\n(ts-migrate) TODO: Migrate the remaining prop types\n...BackgroundImage.propTypes\n*/\ninterface CrossFadeImageProps {\n  containerClassName?: string;\n  containerStyle?: any;\n  animateOnMount?: boolean;\n  disableCrossFade?: boolean;\n  durationMilliseconds: number;\n}\n\nfunction CrossFadeImage(props: CrossFadeImageProps) {\n  const {\n    // @ts-expect-error ts-migrate(2339) FIXME: Property 'className' does not exist on type 'Cross... Remove this comment to see the full error message\n    className,\n    // @ts-expect-error ts-migrate(2339) FIXME: Property 'style' does not exist on type 'CrossFade... Remove this comment to see the full error message\n    style,\n    containerClassName,\n    containerStyle,\n    // @ts-expect-error ts-migrate(2339) FIXME: Property 'src' does not exist on type 'CrossFadeIm... Remove this comment to see the full error message\n    src,\n    // @ts-expect-error ts-migrate(2339) FIXME: Property 'width' does not exist on type 'CrossFade... Remove this comment to see the full error message\n    width,\n    // @ts-expect-error ts-migrate(2339) FIXME: Property 'height' does not exist on type 'CrossFad... Remove this comment to see the full error message\n    height,\n    // @ts-expect-error ts-migrate(2339) FIXME: Property 'backgroundSize' does not exist on type '... Remove this comment to see the full error message\n    backgroundSize,\n    // @ts-expect-error ts-migrate(2339) FIXME: Property 'backgroundPosition' does not exist on ty... Remove this comment to see the full error message\n    backgroundPosition,\n    // @ts-expect-error ts-migrate(2339) FIXME: Property 'backgroundRepeat' does not exist on type... Remove this comment to see the full error message\n    backgroundRepeat,\n    animateOnMount,\n    disableCrossFade,\n    durationMilliseconds,\n  } = props;\n\n  const containerElRef = useRef(null);\n  const isInitialRenderRef = useRef(true);\n\n  const finalContainerStyle = {\n    position: 'relative',\n    width,\n    height,\n    ...containerStyle,\n  };\n\n  // Prefer `useLayoutEffect` over `useEffect`. This ensures that an initial\n  // image is added to the top synchronously after DOM mutations are performed.\n  // Particularly if `animateOnMount={false}`, we want the initial image to be\n  // added before the browser has a chance to paint.\n\n  useLayoutEffect(() => {\n    const isInitialRender = isInitialRenderRef.current;\n    isInitialRenderRef.current = false;\n\n    const addOptions = {\n      className,\n      style,\n      styleProps: {\n        backgroundSize,\n        backgroundPosition,\n        backgroundRepeat,\n      },\n      durationMilliseconds,\n      useCrossFade: isInitialRender ? animateOnMount : true,\n    };\n\n    if (disableCrossFade) {\n      addOptions.useCrossFade = false;\n    }\n\n    let animationFrameID: any;\n    let timeoutID: any;\n\n    if (isInitialRender) {\n      addImageToTop(src, containerElRef.current, addOptions);\n    } else {\n      animationFrameID = window.requestAnimationFrame(() => {\n        animationFrameID = null;\n\n        addImageToTop(src, containerElRef.current, addOptions);\n\n        // After the top image is able to animate in, remove the bottom image\n        // that is no longer visible. Use a longer delay in case the animation\n        // is not smooth and does not complete on time.\n\n        timeoutID = window.setTimeout(() => {\n          // @ts-expect-error ts-migrate(2531) FIXME: Object is possibly 'null'.\n          while (containerElRef.current.childNodes.length > 1) {\n            removeImageFromBottom(containerElRef.current);\n          }\n        }, durationMilliseconds * 2);\n      });\n    }\n\n    return () => {\n      if (animationFrameID) {\n        window.cancelAnimationFrame(animationFrameID);\n      }\n\n      if (timeoutID) {\n        window.clearTimeout(timeoutID);\n      }\n    };\n    // Do not re-run the effect when a prop like `disableCrossFade` changes.\n    // These only apply to new images.\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [\n    className,\n    style,\n    src,\n    backgroundSize,\n    backgroundPosition,\n    backgroundRepeat,\n  ]);\n\n  return (\n    <div\n      ref={containerElRef}\n      className={containerClassName}\n      style={finalContainerStyle}\n    />\n  );\n}\n\nCrossFadeImage.defaultProps = {\n  ...BackgroundImage.defaultProps,\n  animateOnMount: true,\n  disableCrossFade: false,\n  durationMilliseconds: cssDurationToMilliseconds(animations.slowSpeed),\n};\n\nexport default CrossFadeImage;\n","/* eslint-plugin-disable @typescript-eslint */\n\nimport React from 'react';\nimport CrossFadeImage from 'app/js/views/v3/components/core/images/CrossFadeImage';\nimport TranscodeImageConnector from 'app/js/views/v3/components/core/images/TranscodeImageConnector';\n\nconst containerStyle = {\n  position: 'relative',\n  top: 0,\n  left: 0,\n  display: 'block',\n  width: '100%',\n  height: '100%',\n};\n\nfunction PosterCardImg(props: any) {\n  return (\n    <TranscodeImageConnector\n      {...props}\n      component={CrossFadeImage}\n      containerStyle={containerStyle}\n    />\n  );\n}\n\nexport default PosterCardImg;\n","/* eslint-plugin-disable @typescript-eslint */\n\nexport const SMART_PLAYLIST = 'playlist://image.smart';\nexport const FAVORITE_PLAYLIST = 'playlist://image.favorite';\nexport const RADIO = 'playlist://image.radio';\nexport const FOLDER = 'folder';\nexport const WATCH_TOGETHER = 'watchtogether';\n","import {\n  IconArtist,\n  IconBook,\n  IconCamera,\n  IconMovie,\n  IconMusic,\n  IconRadio,\n  IconTv,\n  IconVideo,\n} from '@plex/react-chroma-icon';\n\nconst iconsByMediaType = {\n  movie: IconMovie,\n  show: IconTv,\n  season: IconTv,\n  episode: IconTv,\n  artist: IconArtist,\n  album: IconMusic,\n  track: IconMusic,\n  photo: IconCamera,\n  photoalbum: IconCamera,\n  clip: IconVideo,\n  station: IconRadio,\n  audiobook: IconBook,\n};\n\nexport default iconsByMediaType;\n","/* eslint-plugin-disable @typescript-eslint */\n\nimport classNames from 'classnames';\nimport React from 'react';\nimport {\n  IconFolderFilled,\n  IconRadio,\n  IconWatchTogether,\n} from '@plex/react-chroma-icon';\nimport * as metadataIcons from 'app/js/utils/constants/metadataIcons';\nimport iconsByMediaType from 'app/js/utils/metadata/iconsByMediaType';\nimport styles from './MetadataIcon.css';\n\nfunction getIconByName(name: any) {\n  switch (name) {\n    case metadataIcons.RADIO:\n      return IconRadio;\n    case metadataIcons.FOLDER:\n      return IconFolderFilled;\n    case metadataIcons.WATCH_TOGETHER:\n      return IconWatchTogether;\n  }\n\n  return undefined;\n}\n\ntype MetadataIconProps = {\n  className?: string;\n  type?: string;\n  icon?: string;\n  width: number;\n  height: number;\n  isFolder?: boolean;\n};\n\nfunction MetadataIcon(props: MetadataIconProps) {\n  const { className, type, width, height, icon } = props;\n\n  // @ts-expect-error ts-migrate(2538) FIXME: Type 'undefined' cannot be used as an index type.\n  const Icon = getIconByName(icon) || iconsByMediaType[type];\n\n  if (!Icon) {\n    return null;\n  }\n\n  const iconStyle = {\n    fontSize: Math.max(14, Math.min(Math.round(width / 4), 42)),\n    lineHeight: `${height}px`,\n  };\n\n  const containerStyle = {\n    width: `${width}px`,\n    height: `${height}px`,\n  };\n\n  return (\n    <div\n      className={classNames(className, styles.container)}\n      style={containerStyle}\n    >\n      <div style={iconStyle}>\n        <Icon />\n      </div>\n    </div>\n  );\n}\n\nexport default MetadataIcon;\n","// extracted by mini-css-extract-plugin\nexport default {\"container\":\"MBkKq\"};","/* eslint-plugin-disable @typescript-eslint */\n\nimport classNames from 'classnames';\nimport React from 'react';\nimport * as metadataIcons from 'app/js/utils/constants/metadataIcons';\nimport MetadataIcon from './MetadataIcon';\nimport styles from './MetadataPosterCardIcon.css';\n\ntype MetadataPosterCardIconProps = {\n  className?: string;\n  type?: string;\n  icon?: string;\n  width: number;\n  height: number;\n  isFolder?: boolean;\n};\n\nfunction MetadataPosterCardIcon(props: MetadataPosterCardIconProps) {\n  const { className, type, icon, width, height, isFolder } = props;\n\n  return (\n    <MetadataIcon\n      className={classNames(className, styles.placeholderIcon)}\n      height={height}\n      icon={isFolder ? metadataIcons.FOLDER : icon}\n      type={type}\n      width={width}\n    />\n  );\n}\n\nexport default MetadataPosterCardIcon;\n","// extracted by mini-css-extract-plugin\nexport default {\"placeholderIcon\":\"tT35P\"};","/* eslint-plugin-disable @typescript-eslint */\n\nimport React from 'react';\nimport PosterCardImg from 'app/js/views/v3/components/core/images/PosterCardImg';\nimport MetadataPosterCardIcon from './MetadataPosterCardIcon';\n\ntype MetadataPosterCardImgProps = {\n  serverEntityID?: string;\n  providerEntityID?: string;\n  itemServerEntityID?: string;\n  itemProviderEntityID?: string;\n  type?: string;\n  icon?: string;\n  width: number;\n  height: number;\n  url?: string;\n  src?: string;\n  backgroundSize?: string;\n  isOffscreen?: boolean;\n  isFolder?: boolean;\n  disableCrossFade?: boolean;\n  onLoad?: (...args: any[]) => any;\n  onError?: (...args: any[]) => any;\n};\n\nfunction MetadataPosterCardImg(props: MetadataPosterCardImgProps) {\n  const {\n    serverEntityID,\n    providerEntityID,\n    itemServerEntityID,\n    itemProviderEntityID,\n    type,\n    isOffscreen,\n    url,\n    src,\n    width,\n    height,\n    icon,\n    backgroundSize,\n    isFolder,\n    disableCrossFade,\n    onLoad,\n    onError,\n  } = props;\n\n  if (isOffscreen) {\n    return null;\n  }\n\n  if (!url && !src) {\n    return (\n      <MetadataPosterCardIcon\n        height={height}\n        icon={icon}\n        isFolder={isFolder}\n        type={type}\n        width={width}\n      />\n    );\n  }\n\n  return (\n    <PosterCardImg\n      backgroundPosition={type === 'artist' ? 'center top' : 'center'}\n      backgroundSize={type === 'game' ? 'contain' : backgroundSize}\n      disableCrossFade={disableCrossFade}\n      height={height}\n      providerEntityID={itemProviderEntityID || providerEntityID}\n      serverEntityID={itemServerEntityID || serverEntityID}\n      src={src}\n      url={url}\n      width={width}\n      onError={onError}\n      onLoad={onLoad}\n    />\n  );\n}\n\nexport default MetadataPosterCardImg;\n","/* eslint-plugin-disable @typescript-eslint */\n\nimport * as metadataSubtypes from 'app/js/utils/types/metadataSubtypes';\nimport * as metadataContexts from 'app/js/views/v3/helpers/props/metadataContext';\n\nexport const PORTRAIT = 1 / 1.5;\nexport const PORTRAIT_WIDE = 3 / 4;\nexport const SQUARE = 1;\nexport const LANDSCAPE = 16 / 9;\n\nexport function getAspectRatio(type: any, subtype: any, context: any) {\n  if (context) {\n    switch (context) {\n      case metadataContexts.QUICK_SEARCH:\n        switch (type) {\n          case 'genre':\n            return SQUARE;\n          case 'channel':\n            return SQUARE;\n        }\n        break;\n\n      case metadataContexts.PRE_PLAY:\n      case metadataContexts.WATCH_TOGETHER_LOBBY:\n        switch (type) {\n          case 'episode':\n            return LANDSCAPE;\n        }\n        break;\n\n      case metadataContexts.CONTINUE_WATCHING:\n      case metadataContexts.WATCH_TOGETHER:\n        return LANDSCAPE;\n\n      case metadataContexts.PLAYER:\n        switch (type) {\n          case 'movie':\n            return LANDSCAPE;\n          case 'episode':\n            return LANDSCAPE;\n          case 'game':\n            return LANDSCAPE;\n        }\n        break;\n\n      case metadataContexts.PLAY_QUEUE:\n      case metadataContexts.PLAYLIST:\n      case metadataContexts.DOWNLOADS:\n      case metadataContexts.SHARED:\n        switch (type) {\n          case 'episode':\n            return LANDSCAPE;\n        }\n        break;\n\n      case metadataContexts.NOW_PLAYING:\n        switch (type) {\n          case 'clip':\n            return SQUARE;\n        }\n        break;\n\n      case metadataContexts.LIVE_TV_GRID:\n      case metadataContexts.LIVE_TV_TIMELINE:\n        switch (type) {\n          case 'clip':\n            return PORTRAIT;\n        }\n        break;\n    }\n  }\n\n  switch (subtype) {\n    case metadataSubtypes.PODCAST:\n    case metadataSubtypes.WEBSHOW:\n      switch (type) {\n        case 'show':\n          return SQUARE;\n        case 'episode':\n          return LANDSCAPE;\n      }\n  }\n\n  switch (type) {\n    case 'channels':\n      return SQUARE;\n    case 'movie':\n      return PORTRAIT;\n    case 'show':\n      return PORTRAIT;\n    case 'season':\n      return PORTRAIT;\n    case 'episode':\n      return PORTRAIT;\n    case 'artist':\n      return SQUARE;\n    case 'album':\n      return SQUARE;\n    case 'track':\n      return SQUARE;\n    case 'photo':\n      return SQUARE;\n    case 'photoalbum':\n      return SQUARE;\n    case 'clip':\n      return LANDSCAPE;\n    case 'collection':\n      return PORTRAIT;\n    case 'extra':\n      return LANDSCAPE;\n    case 'musicVideo':\n      return LANDSCAPE;\n\n    // Lists with a \"mixed\" type should be portrait by default, with non-\n    // portrait items having shorter posters.\n    case 'mixed':\n      return PORTRAIT;\n\n    // Game platforms are `directory` containers.\n    case 'platform':\n    case 'directory':\n      return LANDSCAPE;\n\n    case 'genre':\n      return LANDSCAPE;\n\n    case 'content':\n    case 'channel':\n    case 'hub':\n    case 'list':\n      return SQUARE;\n\n    case 'game':\n      return PORTRAIT_WIDE;\n\n    default:\n      return SQUARE;\n  }\n}\n\nexport function getWidth(height: any, type: any, subtype: any, context: any) {\n  const aspectRatio = getAspectRatio(type, subtype, context);\n\n  return Math.round(height * aspectRatio);\n}\n\nexport function getHeight(width: any, type: any, subtype: any, context: any) {\n  const aspectRatio = getAspectRatio(type, subtype, context);\n\n  return Math.round(width / aspectRatio);\n}\n","/* eslint-plugin-disable @typescript-eslint */\n\nimport _ from 'underscore';\nimport alexaImg from 'app/img/devices/alexa.svg';\nimport androidImg from 'app/img/devices/android.svg';\nimport atvImg from 'app/img/devices/atv.svg';\nimport chromeImg from 'app/img/devices/chrome.svg';\nimport dashImg from 'app/img/devices/dash.svg';\nimport defaultImg from 'app/img/devices/default.svg';\nimport dlnaImg from 'app/img/devices/dlna.svg';\nimport edgeImg from 'app/img/devices/edge.svg';\nimport firefoxImg from 'app/img/devices/firefox.svg';\nimport gtvImg from 'app/img/devices/gtv.svg';\nimport ieImg from 'app/img/devices/ie.svg';\nimport iosImg from 'app/img/devices/ios.svg';\nimport linuxImg from 'app/img/devices/linux.svg';\nimport operaImg from 'app/img/devices/opera.svg';\nimport osxImg from 'app/img/devices/osx.svg';\nimport phtImg from 'app/img/devices/pht.svg';\nimport plexampImg from 'app/img/devices/plexamp.svg';\nimport pmsImg from 'app/img/devices/pms.svg';\nimport psxImg from 'app/img/devices/psx.svg';\nimport rokuImg from 'app/img/devices/roku.svg';\nimport safariImg from 'app/img/devices/safari.svg';\nimport samsungImg from 'app/img/devices/samsung.svg';\nimport sonosImg from 'app/img/devices/sonos.svg';\nimport vrImg from 'app/img/devices/vr.svg';\nimport wiiuImg from 'app/img/devices/wiiu.svg';\nimport win8Img from 'app/img/devices/win8.svg';\nimport wpImg from 'app/img/devices/wp.svg';\nimport xboxImg from 'app/img/devices/xbox.svg';\n\nconst iconMap = {\n  [alexaImg]: /alexa/i,\n  [androidImg]: /android/i,\n  [atvImg]: /plex.*atv|tvos/i,\n  [chromeImg]: /chrome/i,\n  [dashImg]: /plex.*dash/i,\n  [dlnaImg]: /dlna/i,\n  [edgeImg]: /edge/i,\n  [firefoxImg]: /firefox/i,\n  [gtvImg]: /google.*tv/i,\n  [ieImg]: /internet.*explorer|explorer.*windows/i,\n  [iosImg]: /ios/i,\n  [linuxImg]: /linux/i,\n  [operaImg]: /opera/i,\n  [osxImg]: /mac/i,\n  [phtImg]: /konvergo|plex.*home.*theater|plex.*media.*center/i,\n  [plexampImg]: /plexamp/i,\n  [pmsImg]: /plex.*media.*server/i,\n  [psxImg]: /WebMAF|playstation|mystery.*3/i,\n  [rokuImg]: /roku/i,\n  [safariImg]: /safari/i,\n  [samsungImg]: /samsung/i,\n  [sonosImg]: /sonos/i,\n  [vrImg]: /plex.*vr/i,\n  [wiiuImg]: /wii.*u/i,\n  [win8Img]: /windows/i,\n  [wpImg]: /windows.*phone|wince/i,\n  [xboxImg]: /xbox|mystery.*5/i,\n};\n\nconst iconPairs = _.pairs(iconMap);\nconst memo = {};\n\n// @ts-expect-error ts-migrate(7030) FIXME: Not all code paths return a value.\nfunction findIcon(str: any) {\n  for (let i = 0, len = iconPairs.length; i < len; i++) {\n    const [icon, regex] = iconPairs[i];\n\n    if (regex.test(str)) {\n      return icon;\n    }\n  }\n}\n\nexport default function getDeviceIcon(product: any, platform: any) {\n  // @ts-expect-error ts-migrate(7053) FIXME: Element implicitly has an 'any' type because expre... Remove this comment to see the full error message\n  let icon = memo[product] || memo[platform];\n\n  if (icon) {\n    return icon;\n  }\n\n  icon = product && findIcon(product);\n\n  if (icon) {\n    // @ts-expect-error ts-migrate(7053) FIXME: Element implicitly has an 'any' type because expre... Remove this comment to see the full error message\n    memo[product] = icon;\n    return icon;\n  }\n\n  icon = platform && findIcon(platform);\n\n  if (icon) {\n    // @ts-expect-error ts-migrate(7053) FIXME: Element implicitly has an 'any' type because expre... Remove this comment to see the full error message\n    memo[platform] = icon;\n    return icon;\n  }\n\n  return defaultImg;\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"secureIcon\":\"ruQfN\",\"alertIcon\":\"V4Hqr\",\"warningIcon\":\"tHG4b\",\"circleBadge\":\"em5sx\",\"triangleBadge\":\"VGd2j\"};","/* eslint-plugin-disable @typescript-eslint */\n\nimport classNames from 'classnames';\nimport React, { Component } from 'react';\nimport {\n  IconExclamationCircledFilled,\n  IconLockLockedCircledFilled,\n  IconWarning,\n} from '@plex/react-chroma-icon';\nimport t from 'app/js/utils/t';\nimport shouldPureComponentUpdate from 'app/js/views/v3/helpers/shouldPureComponentUpdate';\nimport styles from './ServerConnectionStatusIcon.css';\n\ntype ServerConnectionStatusIconProps = {\n  className?: string;\n  isBadge?: boolean;\n  isConnected?: boolean;\n  isUnavailable?: boolean;\n  isSecure?: boolean;\n  isRelayed?: boolean;\n};\n\nclass ServerConnectionStatusIcon extends Component<ServerConnectionStatusIconProps> {\n  //\n  // Lifecycle\n\n  shouldComponentUpdate(\n    nextProps: ServerConnectionStatusIconProps,\n    nextState: any\n  ) {\n    // @ts-expect-error ts-migrate(2554) FIXME: Expected 5 arguments, but got 3.\n    return shouldPureComponentUpdate(this, nextProps, nextState);\n  }\n\n  //\n  // Render\n\n  render() {\n    const {\n      className,\n      isBadge,\n      isConnected,\n      isUnavailable,\n      isSecure,\n      isRelayed,\n    } = this.props;\n\n    if (isRelayed) {\n      return (\n        <div\n          className={classNames(\n            className,\n            styles.warningIcon,\n            isBadge && styles.circleBadge\n          )}\n          title={t('Indirect')}\n        >\n          <IconExclamationCircledFilled aria-label={t('Indirect')} />\n        </div>\n      );\n    } else if (isUnavailable) {\n      return (\n        <div\n          className={classNames(\n            className,\n            styles.alertIcon,\n            isBadge && styles.triangleBadge\n          )}\n          title={t('Unavailable')}\n        >\n          <IconWarning aria-label={t('Unavailable')} />\n        </div>\n      );\n    } else if (isSecure && isConnected) {\n      return (\n        <div\n          className={classNames(\n            className,\n            styles.secureIcon,\n            isBadge && styles.circleBadge\n          )}\n          title={t('Secure')}\n        >\n          <IconLockLockedCircledFilled aria-label={t('Secure')} />\n        </div>\n      );\n    }\n\n    // If the server is connected, but not secure, don't show any icon.\n    return null;\n  }\n}\n\nexport default ServerConnectionStatusIcon;\n","/* eslint-plugin-disable @typescript-eslint */\n\nimport React from 'react';\nimport getSelectedVideo from 'app/js/utils/media/getSelectedVideo';\nimport t from 'app/js/utils/t';\nimport AudioStreamTitle from './AudioStreamTitle';\nimport SubtitlesStreamTitle from './SubtitlesStreamTitle';\nimport VideoStreamTitle from './VideoStreamTitle';\n\nconst streamTitleComponents = {\n  audio: AudioStreamTitle,\n  subtitles: SubtitlesStreamTitle,\n  video: VideoStreamTitle,\n};\n\ninterface StreamTitleProps {\n  type: 'audio' | 'subtitles' | 'video';\n  stream?: any;\n  mediaItem?: any;\n  isDisplayTitleSupported: boolean;\n}\n\nfunction StreamTitle(props: StreamTitleProps) {\n  const { type, stream, mediaItem, isDisplayTitleSupported, ...otherProps } =\n    props;\n\n  if (!stream && !mediaItem) {\n    return <span data-testid={`${type}Stream`}>{t('None')}</span>;\n  }\n\n  if (isDisplayTitleSupported) {\n    let displayTitle;\n    if (type === 'video') {\n      const videoStream = getSelectedVideo(mediaItem);\n      displayTitle = videoStream ? videoStream.displayTitle : t('None');\n    } else {\n      // `None` streams inserted by ourselves will not have a `displayTitle`\n      // attribute, so fall back to the language for those.\n      displayTitle = stream.displayTitle || stream.language;\n    }\n\n    return (\n      <span aria-label={displayTitle} data-testid={`${type}Stream`}>\n        {displayTitle}\n      </span>\n    );\n  }\n\n  const StreamTitleComponent = streamTitleComponents[type];\n\n  return (\n    // @ts-expect-error ts-migrate(2741) FIXME: Property 'separatorComponent' is missing in type '... Remove this comment to see the full error message\n    <StreamTitleComponent\n      {...otherProps}\n      mediaItem={mediaItem}\n      stream={stream}\n    />\n  );\n}\n\nexport default StreamTitle;\n","/* eslint-plugin-disable @typescript-eslint */\n\nimport React from 'react';\nimport formatAudioChannels from 'app/js/utils/metadata/formatAudioChannels';\nimport formatAudioCodec from 'app/js/utils/metadata/formatAudioCodec';\nimport t from 'app/js/utils/t';\n\ninterface AudioStreamTitleProps {\n  separatorComponent: React.ReactElement;\n  stream?: {\n    language?: string;\n    codec?: string;\n    channels?: number;\n  };\n}\n\nfunction AudioStreamTitle(props: AudioStreamTitleProps) {\n  const { stream, separatorComponent: Separator } = props;\n\n  const details = [];\n\n  // @ts-expect-error ts-migrate(2532) FIXME: Object is possibly 'undefined'.\n  if (stream.codec) {\n    // @ts-expect-error ts-migrate(2532) FIXME: Object is possibly 'undefined'.\n    details.push(formatAudioCodec(stream.codec));\n  }\n\n  // @ts-expect-error ts-migrate(2532) FIXME: Object is possibly 'undefined'.\n  if (stream.channels) {\n    // @ts-expect-error ts-migrate(2532) FIXME: Object is possibly 'undefined'.\n    details.push(formatAudioChannels(stream.channels));\n  }\n\n  const label = stream?.language || t('Unknown');\n\n  const finalDetails = details && details.length > 0 ? details.join(' ') : null;\n\n  const ariaLabel = finalDetails\n    ? t('{label}, {details}', { label, details: finalDetails })\n    : label;\n\n  return (\n    <span aria-label={ariaLabel} data-testid=\"audioStream\">\n      {label}\n      {/* @ts-expect-error ts-migrate(2604) FIXME: JSX element type 'Separator' does not have any con... Remove this comment to see the full error message */}\n      {finalDetails ? <Separator /> : null}\n      {finalDetails}\n    </span>\n  );\n}\n\nexport default AudioStreamTitle;\n","/* eslint-plugin-disable @typescript-eslint */\n\nimport t from 'app/js/utils/t';\n\nfunction formatAudioChannels(channels: any) {\n  channels = parseInt(channels, 10);\n\n  if (!channels) {\n    return '';\n  }\n\n  if (channels < 2) {\n    return t('Mono');\n  } else if (channels < 3) {\n    return t('Stereo');\n  } else {\n    // Note, this approach returns an incorrect value in some situations.\n    // See: https://github.com/plexinc/plex-web-client/issues/11833\n    return (channels - 1).toString() + '.1';\n  }\n}\n\nexport default formatAudioChannels;\n","/* eslint-plugin-disable @typescript-eslint */\n\nfunction formatAudioCodec(codec: any) {\n  if (!codec) {\n    return '';\n  }\n\n  return codec === 'dca' ? 'DTS' : codec.toUpperCase();\n}\n\nexport default formatAudioCodec;\n","/* eslint-plugin-disable @typescript-eslint */\n\nimport React from 'react';\nimport t from 'app/js/utils/t';\n\ninterface SubtitlesStreamTitleProps {\n  separatorComponent: React.ReactElement;\n  stream?: {\n    language?: string;\n    codec?: string;\n    key?: string;\n    forced?: boolean;\n  };\n}\n\nfunction SubtitlesStreamTitle(props: SubtitlesStreamTitleProps) {\n  const { stream, separatorComponent: Separator } = props;\n\n  const details = [];\n\n  // @ts-expect-error ts-migrate(2532) FIXME: Object is possibly 'undefined'.\n  if (stream.codec) {\n    // @ts-expect-error ts-migrate(2532) FIXME: Object is possibly 'undefined'.\n    details.push(stream.codec.toUpperCase());\n  }\n\n  // @ts-expect-error ts-migrate(2532) FIXME: Object is possibly 'undefined'.\n  if (stream.key) {\n    // External (sidecar, not embedded) subs have a `key` property.\n    details.push(t('External'));\n  }\n\n  // @ts-expect-error ts-migrate(2532) FIXME: Object is possibly 'undefined'.\n  if (stream.forced) {\n    details.push(t('Forced'));\n  }\n\n  // @ts-expect-error ts-migrate(2532) FIXME: Object is possibly 'undefined'.\n  const label = stream.language || t('Unknown');\n\n  const finalDetails = details && details.length > 0 ? details.join(' ') : null;\n\n  const ariaLabel = finalDetails\n    ? t('{label}, {details}', { label, details: finalDetails })\n    : label;\n\n  return (\n    <span aria-label={ariaLabel} data-testid=\"subtitlesStream\">\n      {label}\n      {/* @ts-expect-error ts-migrate(2604) FIXME: JSX element type 'Separator' does not have any con... Remove this comment to see the full error message */}\n      {finalDetails ? <Separator /> : null}\n      {finalDetails}\n    </span>\n  );\n}\n\nexport default SubtitlesStreamTitle;\n","/* eslint-plugin-disable @typescript-eslint */\n\nimport React from 'react';\nimport getSelectedVideo from 'app/js/utils/media/getSelectedVideo';\nimport formatResolution from 'app/js/utils/metadata/formatResolution';\nimport t from 'app/js/utils/t';\n\ninterface VideoStreamTitleProps {\n  separatorComponent: React.ReactElement;\n  mediaItem?: {\n    videoResolution?: string;\n    videoCodec?: string;\n    Part?: any[];\n  };\n}\n\nfunction VideoStreamTitle(props: VideoStreamTitleProps) {\n  const { mediaItem, separatorComponent: Separator } = props;\n\n  let details;\n\n  // @ts-expect-error ts-migrate(2532) FIXME: Object is possibly 'undefined'.\n  if (mediaItem.videoCodec) {\n    // @ts-expect-error ts-migrate(2532) FIXME: Object is possibly 'undefined'.\n    details = [mediaItem.videoCodec.toUpperCase()];\n  }\n\n  const videoStream = getSelectedVideo(mediaItem);\n  const scanType = videoStream && videoStream.scanType;\n  const label =\n    // @ts-expect-error ts-migrate(2532) FIXME: Object is possibly 'undefined'.\n    formatResolution(mediaItem.videoResolution, scanType) || t('Unknown');\n\n  const finalDetails = details && details.length > 0 ? details.join(' ') : null;\n\n  const ariaLabel = finalDetails\n    ? t('{label}, {details}', { label, details: finalDetails })\n    : label;\n\n  return (\n    <span aria-label={ariaLabel} data-testid=\"videoStream\">\n      {label}\n      {/* @ts-expect-error ts-migrate(2604) FIXME: JSX element type 'Separator' does not have any con... Remove this comment to see the full error message */}\n      {finalDetails ? <Separator /> : null}\n      {finalDetails}\n    </span>\n  );\n}\n\nexport default VideoStreamTitle;\n","/* eslint-plugin-disable @typescript-eslint */\n\nimport { connect } from 'react-redux';\nimport { createSelector } from 'reselect';\nimport serverFeatures from 'app/js/models/server/serverFeatures';\nimport createUnstableServerSelector from 'app/js/stores/selectors/server/createUnstableServerSelector';\nimport isVersionOrNewer from 'app/js/utils/isVersionOrNewer';\nimport StreamTitle from './StreamTitle';\n\nfunction createMapStateToProps() {\n  return createSelector(createUnstableServerSelector(), (server) => {\n    return {\n      isDisplayTitleSupported:\n        server.isCloud ||\n        isVersionOrNewer(\n          server.shortVersion,\n          serverFeatures.streamDisplayTitles\n        ),\n    };\n  });\n}\n\nexport default connect(createMapStateToProps)(StreamTitle);\n","/* eslint-plugin-disable @typescript-eslint */\n\nimport React from 'react';\nimport DashSeparator from 'app/js/views/v3/components/core/base/DashSeparator';\nimport CommonStreamTitleConnector from 'app/js/views/v3/components/metadata/titles/StreamTitleConnector';\n\nfunction StreamTitle(props: any) {\n  return (\n    <CommonStreamTitleConnector {...props} separatorComponent={DashSeparator} />\n  );\n}\n\nexport default StreamTitle;\n","// extracted by mini-css-extract-plugin\nexport default {\"playerContainer\":\"wWryX\",\"playerIcon\":\"ihf4N\",\"productLogo\":\"xTcKr\",\"statusIcon\":\"XeCGW\",\"playerInformation\":\"IpKoY\",\"title\":\"zLH1w\",\"subtitle\":\"NFYG9\",\"streamInformation\":\"gjX97\",\"videoStreamInformation\":\"LWQqV gjX97\",\"audioStreamInformation\":\"GDdLz gjX97\",\"subtitlesStreamInformation\":\"IyeRM gjX97\",\"streamType\":\"sibBm\",\"streams\":\"P_H5q\",\"rightArrow\":\"J8_cH\",\"rightArrowForEdge\":\"TksIY J8_cH\"};","import React, { ReactElement, ReactNode } from 'react';\nimport formatPlayerTime from 'app/js/utils/dateTime/formatPlayerTime';\nimport getDeviceIcon from 'app/js/utils/getDeviceIcon';\nimport getSelectedAudio from 'app/js/utils/media/getSelectedAudio';\nimport getSelectedSubtitles from 'app/js/utils/media/getSelectedSubtitles';\nimport getStreams from 'app/js/utils/media/getStreams';\nimport formatBandwidthBitrate from 'app/js/utils/metadata/formatBandwidthBitrate';\nimport formatResolution from 'app/js/utils/metadata/formatResolution';\nimport isEdge from 'app/js/utils/predicates/device/isEdge';\nimport toTitleCase from 'app/js/utils/string/case/toTitleCase';\nimport toUpperCase from 'app/js/utils/string/case/toUpperCase';\nimport t from 'app/js/utils/t';\nimport streamTypes from 'app/js/utils/types/streamTypes';\nimport { ServerNowPlayingSession } from 'app/js/v4/core/serverNowPlayingSessions/serverNowPlayingSessionsTypes';\nimport { Server } from 'app/js/v4/core/servers/serversTypes';\nimport DashSeparator, {\n  SEPARATOR,\n} from 'app/js/views/v3/components/core/base/DashSeparator';\nimport ServerConnectionStatusIcon from 'app/js/views/v3/components/core/icons/ServerConnectionStatusIcon';\nimport StreamTitle from 'app/js/views/v3/components/metadata/titles/stream/StreamTitle';\nimport styles from './SessionTileDetails.css';\n\ninterface StreamOutputRowProps {\n  children: ReactNode;\n}\n\nfunction StreamOutputRow({ children }: StreamOutputRowProps): ReactElement {\n  return (\n    <span>\n      <span\n        className={isEdge() ? styles.rightArrowForEdge : styles.rightArrow}\n      />\n      {children}\n    </span>\n  );\n}\n\ninterface PlayerLocationProps {\n  local: boolean;\n  relayed: boolean;\n}\n\nfunction PlayerLocation({ local, relayed }: PlayerLocationProps): ReactElement {\n  let label;\n\n  if (relayed) {\n    label = t('Indirect');\n  } else if (local) {\n    label = 'Local';\n  } else {\n    label = t('Remote');\n  }\n\n  return <span>{label}</span>;\n}\n\ninterface SessionTileDetailsProps {\n  className?: string;\n  server: Server;\n  session: ServerNowPlayingSession;\n  internalViewOffset: number;\n}\n\nexport default function SessionTileDetails({\n  className,\n  server,\n  session,\n  internalViewOffset,\n}: SessionTileDetailsProps): ReactElement {\n  const { duration, Media = [], Player, Session, TranscodeSession } = session;\n\n  const selectedMediaItem =\n    Media.find((mediaItem) => mediaItem.selected) || Media[0];\n  const selectedSubtitles = getSelectedSubtitles(selectedMediaItem);\n  let selectedAudio = getSelectedAudio(selectedMediaItem);\n\n  if (!selectedAudio) {\n    // In some cases the session metadataItem will only contain a single audio\n    // track that is unselected.\n    // See: https://github.com/plexinc/plex-media-server/issues/9561\n    const streamType = streamTypes.get('audio').id;\n    selectedAudio = getStreams(selectedMediaItem, { streamType })[0];\n  }\n\n  const showVideo = !!selectedMediaItem.videoCodec;\n  const showAudio = !!selectedMediaItem.audioCodec;\n  const showSubtitles = !!selectedSubtitles;\n\n  return (\n    <div className={className}>\n      <div className={styles.playerContainer}>\n        <div className={styles.playerIcon}>\n          <img\n            className={styles.productLogo}\n            height={44}\n            src={getDeviceIcon(Player.product, Player.platform)}\n            width={44}\n          />\n\n          <ServerConnectionStatusIcon\n            className={styles.statusIcon}\n            isBadge={true}\n            isConnected={true}\n            isRelayed={Player.relayed}\n            isSecure={Player.secure}\n          />\n        </div>\n\n        <div className={styles.playerInformation}>\n          <div\n            className={styles.title}\n            title={`${Player.product} ${SEPARATOR} ${Player.title}`}\n          >\n            {Player.product} <DashSeparator /> {Player.title}\n          </div>\n          <div className={styles.subtitle}>\n            {toTitleCase(Player.state)}\n            {duration ? (\n              <>\n                <DashSeparator />\n                {`${formatPlayerTime(internalViewOffset)} / ${formatPlayerTime(\n                  duration\n                )}`}\n              </>\n            ) : null}\n          </div>\n\n          <div className={styles.subtitle}>\n            <PlayerLocation local={Player.local} relayed={Player.relayed} />\n\n            {!Player.relayed ? ` (${Player.address})` : null}\n\n            {Session ? (\n              <>\n                <DashSeparator />\n                <span\n                  title={t(\n                    'The amount of outgoing bandwidth reserved for this playback session'\n                  )}\n                >\n                  {formatBandwidthBitrate(session.Session.bandwidth * 1024, 0)}\n                </span>\n              </>\n            ) : null}\n          </div>\n        </div>\n      </div>\n\n      {showVideo ? (\n        <div className={styles.videoStreamInformation}>\n          <div className={styles.streamType}>{t('Video')}</div>\n\n          <div className={styles.streams}>\n            <div className={styles.title}>\n              <StreamTitle\n                mediaItem={selectedMediaItem}\n                serverEntityID={server.entityID}\n                type=\"video\"\n              />\n              {TranscodeSession?.transcodeHwDecoding ? ' (hw)' : null}\n            </div>\n\n            <div className={styles.title}>\n              {!!Session &&\n              (!TranscodeSession || TranscodeSession.videoDecision == null) ? (\n                <StreamOutputRow>{t('Direct Play')}</StreamOutputRow>\n              ) : null}\n\n              {TranscodeSession && TranscodeSession.videoDecision === 'copy' ? (\n                <StreamOutputRow>{t('Direct Stream')}</StreamOutputRow>\n              ) : null}\n\n              {TranscodeSession &&\n              TranscodeSession.videoDecision === 'transcode' ? (\n                <StreamOutputRow>\n                  {`${\n                    formatResolution(\n                      selectedMediaItem.videoResolution,\n                      TranscodeSession.scanType\n                    ) || t('Unknown')\n                  } `}\n                  ({toUpperCase(TranscodeSession.videoCodec)})\n                  <DashSeparator />\n                  {t('Transcode')}\n                  {TranscodeSession.transcodeHwEncoding ? ' (hw)' : null}\n                </StreamOutputRow>\n              ) : null}\n            </div>\n          </div>\n        </div>\n      ) : null}\n\n      {showAudio ? (\n        <div className={styles.audioStreamInformation}>\n          <div className={styles.streamType}>{t('Audio')}</div>\n\n          <div className={styles.streams}>\n            <div className={styles.title}>\n              <StreamTitle\n                serverEntityID={server.entityID}\n                stream={selectedAudio}\n                type=\"audio\"\n              />\n            </div>\n\n            <div className={styles.title}>\n              {!!Session &&\n              (!TranscodeSession || TranscodeSession.audioDecision == null) ? (\n                <StreamOutputRow>{t('Direct Play')}</StreamOutputRow>\n              ) : null}\n\n              {TranscodeSession && TranscodeSession.audioDecision === 'copy' ? (\n                <StreamOutputRow>{t('Direct Stream')}</StreamOutputRow>\n              ) : null}\n\n              {TranscodeSession &&\n              TranscodeSession.audioDecision === 'transcode' ? (\n                <StreamOutputRow>\n                  {toUpperCase(TranscodeSession.audioCodec)}\n                  <DashSeparator />\n                  {t('Transcode')}\n                </StreamOutputRow>\n              ) : null}\n            </div>\n          </div>\n        </div>\n      ) : null}\n\n      {showSubtitles ? (\n        <div className={styles.subtitlesStreamInformation}>\n          <div className={styles.streamType}>{t('Subtitles')}</div>\n\n          <div className={styles.title}>\n            <StreamTitle\n              serverEntityID={server.entityID}\n              stream={getSelectedSubtitles(selectedMediaItem)}\n              type=\"subtitles\"\n            />\n          </div>\n        </div>\n      ) : null}\n    </div>\n  );\n}\n","/* eslint-plugin-disable @typescript-eslint */\n\nfunction toTitleCase(str: any) {\n  if (!str) {\n    return '';\n  }\n\n  return str.replace(/\\w\\S*/g, function (txt: any) {\n    return txt.charAt(0).toUpperCase() + txt.substr(1).toLowerCase();\n  });\n}\n\nexport default toTitleCase;\n","// extracted by mini-css-extract-plugin\nexport default {\"button\":\"MRjYA IYkbp\",\"default\":\"UaDq7\",\"primary\":\"MYFtZ\",\"success\":\"LprGK\",\"danger\":\"YqUJu\",\"small\":\"LkMb2\",\"medium\":\"qJvny\",\"large\":\"mCRDP\"};","import classNames from 'classnames';\nimport React, { ReactElement } from 'react';\nimport Kind from 'app/js/v4/core/ui/types/Kind';\nimport Size from 'app/js/v4/core/ui/types/Size';\nimport Link, { LinkProps } from './Link';\nimport styles from './Button.css';\n\nexport type ButtonProps = LinkProps;\n\nexport default function Button({\n  className = styles.button,\n  kind = Kind.Default,\n  size = Size.Medium,\n  ...linkProps\n}: ButtonProps): ReactElement {\n  return (\n    <Link\n      {...linkProps}\n      className={classNames(\n        className,\n        styles.button,\n        styles[kind],\n        styles[size]\n      )}\n    />\n  );\n}\n","import React, { ReactElement, ReactNode } from 'react';\nimport styles from './ModalFooter.css';\n\nexport interface ModalFooterProps {\n  children: ReactNode;\n  className?: string;\n}\n\nexport default function ModalFooter({\n  children,\n  className = styles.modalFooter,\n}: ModalFooterProps): ReactElement {\n  return <div className={className}>{children}</div>;\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"modalFooter\":\"GVJEo\",\"button\":\"DWHtQ r2dcz x5jRQ\",\"splitButton\":\"hV4YV DWHtQ r2dcz x5jRQ\"};","import React, { ReactElement, ReactNode } from 'react';\nimport styles from './ModalFooterButtonBar.css';\n\nexport interface ModalFooterButtonBarProps {\n  children: ReactNode;\n  className?: string;\n}\n\nexport default function ModalFooterButtonBar({\n  children,\n  className = styles.buttonBar,\n}: ModalFooterButtonBarProps): ReactElement {\n  return <div className={className}>{children}</div>;\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"buttonBar\":\"s5Y6S\"};","/* eslint-plugin-disable @typescript-eslint */\n\nimport PropTypes from 'prop-types';\n\nexport interface Store {\n  subscribe: (...args: any[]) => any;\n  dispatch: (...args: any[]) => any;\n  getState: (...args: any[]) => any;\n}\n\nconst storeShape: PropTypes.Requireable<Store> = PropTypes.shape({\n  subscribe: PropTypes.func.isRequired,\n  dispatch: PropTypes.func.isRequired,\n  getState: PropTypes.func.isRequired,\n});\n\nexport default storeShape;\n","/* eslint-plugin-disable @typescript-eslint */\n\nimport React, { Component } from 'react';\nimport { bindActionCreators, createStore } from 'redux';\nimport _ from 'underscore';\nimport createActionCreator from 'app/js/stores/actions/createActionCreator';\nimport storeShape from 'app/js/views/v3/helpers/props/shapes/storeShape';\n\nexport const actionTypes = {\n  CHANGE: 'CHANGE',\n  REPLACE_STATE: 'REPLACE_STATE',\n  RESET: 'RESET',\n  SHOW_ERRORS: 'SHOW_ERRORS',\n};\n\nexport const actions = {\n  change: createActionCreator(actionTypes.CHANGE),\n  replaceState: createActionCreator(actionTypes.REPLACE_STATE),\n  reset: createActionCreator(actionTypes.RESET),\n  showErrors: createActionCreator(actionTypes.SHOW_ERRORS),\n};\n\nfunction handleFormState(state = {}, { type, payload }: any) {\n  switch (type) {\n    case actionTypes.CHANGE: {\n      const { name, change } = payload;\n\n      if (change == null) {\n        const newState = {\n          ...state,\n        };\n\n        // @ts-expect-error ts-migrate(7053) FIXME: Element implicitly has an 'any' type because expre... Remove this comment to see the full error message\n        delete newState[name];\n\n        return newState;\n      }\n\n      return {\n        ...state,\n        [name]: change,\n      };\n    }\n\n    case actionTypes.REPLACE_STATE:\n      return payload;\n\n    case actionTypes.RESET:\n      return {};\n\n    case actionTypes.SHOW_ERRORS:\n      return _.mapObject(state, (inputState: { errors: string[] }) => {\n        return {\n          ...inputState,\n          showErrors: inputState.errors.length !== 0,\n        };\n      });\n\n    default:\n      return state;\n  }\n}\n\ninterface FormProps {\n  formState?: any;\n  onSubmit?: (...args: any[]) => any;\n  onChange?: (...args: any[]) => any;\n}\n\nclass Form extends Component<FormProps> {\n  static childContextTypes = {\n    formStore: storeShape,\n  };\n\n  static defaultProps = {\n    onSubmit() {},\n    onChange() {},\n  };\n\n  // eslint-disable-next-line react/sort-comp\n  actions: any;\n  prevState: any;\n  store: any;\n  unsubscribe: any;\n\n  //\n  // Lifecycle\n\n  constructor(props: any, context: any) {\n    super(props, context);\n\n    this.store = createStore(handleFormState);\n    this.prevState = this.store.getState();\n    this.actions = bindActionCreators(actions, this.store.dispatch);\n  }\n\n  getChildContext() {\n    return {\n      formStore: this.store,\n    };\n  }\n\n  UNSAFE_componentWillMount() {\n    this.unsubscribe = this.store.subscribe(this.onFormStoreChange);\n  }\n\n  UNSAFE_componentWillReceiveProps(nextProps: FormProps) {\n    if (nextProps.formState && this.store.getState() !== nextProps.formState) {\n      this.actions.replaceState(nextProps.formState);\n    }\n  }\n\n  componentWillUnmount() {\n    if (this.unsubscribe) {\n      this.unsubscribe();\n      // While the children are unmounting freeze the current state of the form,\n      // so that as `formInput`s remove themselves from `formState` we don't\n      // cause errors in validation functions.\n      this.store.replaceReducer((state: any) => state);\n    }\n  }\n\n  //\n  // Listeners\n\n  onFormStoreChange = () => {\n    const state = this.store.getState();\n\n    if (state !== this.prevState) {\n      this.prevState = state;\n      // @ts-expect-error ts-migrate(2722) FIXME: Cannot invoke an object which is possibly 'undefin... Remove this comment to see the full error message\n      this.props.onChange(state);\n    }\n  };\n\n  onSubmit = (event: any) => {\n    event.preventDefault();\n    event.nativeEvent.preventDefault();\n\n    const state = this.store.getState();\n\n    // @ts-expect-error ts-migrate(6133) FIXME: 'key' is declared but its value is never read.\n    const hasErrors = _.some(state, (val, key) => {\n      return val.errors.length !== 0;\n    });\n\n    if (!hasErrors) {\n      // @ts-expect-error ts-migrate(6133) FIXME: 'key' is declared but its value is never read.\n      const data = _.mapObject(state, (val, key) => {\n        return val.value;\n      });\n\n      // @ts-expect-error ts-migrate(2722) FIXME: Cannot invoke an object which is possibly 'undefin... Remove this comment to see the full error message\n      this.props.onSubmit(data, state);\n    } else {\n      this.actions.showErrors();\n    }\n  };\n\n  //\n  // Render\n\n  render() {\n    const { children, formState, onChange, ...otherProps } = this.props;\n\n    return (\n      <form {...otherProps} onSubmit={this.onSubmit}>\n        {children}\n      </form>\n    );\n  }\n}\n\nexport default Form;\n","/* eslint-plugin-disable @typescript-eslint */\n\nimport classNames from 'classnames';\nimport React from 'react';\nimport styles from './FormLabel.css';\n\ninterface FormLabelProps {\n  children: React.ReactNode;\n  className?: string;\n  errorClassName?: string;\n  name?: string;\n  hasError?: boolean;\n}\n\nfunction FormLabel({\n  children,\n  className,\n  errorClassName,\n  name,\n  hasError,\n  ...otherProps\n}: FormLabelProps) {\n  return (\n    <label\n      {...otherProps}\n      className={classNames(className, hasError && errorClassName)}\n      htmlFor={name}\n    >\n      {children}\n    </label>\n  );\n}\n\nFormLabel.defaultProps = {\n  className: styles.label,\n  errorClassName: styles.hasError,\n};\n\nexport default FormLabel;\n","// extracted by mini-css-extract-plugin\nexport default {\"label\":\"x_7jd\",\"hasError\":\"wnJNN\"};","// extracted by mini-css-extract-plugin\nexport default {\"textArea\":\"YHWsX kasAI\",\"small\":\"DhQAK\",\"large\":\"RV5jG\",\"isDisabled\":\"AHAe3 uRoc_\",\"hasError\":\"LQR4c AHiNZ\"};","/* eslint-plugin-disable @typescript-eslint */\n\nimport classNames from 'classnames';\nimport React, { Component } from 'react';\n// @ts-expect-error ts-migrate(6133) FIXME: 'SMALL' is declared but its value is never read.\nimport { LARGE, SMALL } from 'app/js/views/v3/helpers/props/sizes';\nimport styles from './TextArea.css';\n\ninterface TextAreaProps {\n  className?: string;\n  errorClassName?: string;\n  disabledClassName?: string;\n  initialValue?: string;\n  isDisabled?: boolean;\n  size?: any; // TODO: PropTypes.oneOf([SMALL, LARGE])\n  name: string;\n  hasError?: boolean;\n  onChange: (...args: any[]) => any;\n  rows?: number;\n  value?: string;\n}\n\nclass TextArea extends Component<TextAreaProps> {\n  static defaultProps = {\n    className: styles.textArea,\n    errorClassName: styles.hasError,\n    disabledClassName: styles.isDisabled,\n    isDisabled: false,\n    size: LARGE,\n    hasError: false,\n    rows: 2,\n  };\n\n  //\n  // Listeners\n\n  onChange = (event: any) => {\n    this.props.onChange(event.target.value);\n  };\n\n  //\n  // Render\n\n  render() {\n    const {\n      className,\n      errorClassName,\n      disabledClassName,\n      initialValue,\n      isDisabled,\n      size,\n      name,\n      hasError,\n      ...otherProps\n    } = this.props;\n\n    return (\n      <textarea\n        {...otherProps}\n        className={classNames(\n          className,\n          styles[size],\n          isDisabled && disabledClassName,\n          hasError && errorClassName\n        )}\n        disabled={isDisabled}\n        id={name}\n        name={name}\n        onChange={this.onChange}\n      />\n    );\n  }\n}\n\nexport default TextArea;\n","import React, { ReactElement, useCallback, useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport * as metricsPages from 'app/js/utils/constants/metrics/metricsPages';\nimport getSeasonEpisodeIndex from 'app/js/utils/media/getSeasonEpisodeIndex';\nimport t from 'app/js/utils/t';\nimport * as metadataTypes from 'app/js/utils/types/metadataTypes';\nimport serverNowPlayingSessionsSlice from 'app/js/v4/core/serverNowPlayingSessions/serverNowPlayingSessionsSlice';\nimport { ServerNowPlayingSession } from 'app/js/v4/core/serverNowPlayingSessions/serverNowPlayingSessionsTypes';\nimport { useSourceContext } from 'app/js/v4/core/servers/components/SourceContextProvider';\nimport Button from 'app/js/v4/core/ui/buttons/components/Button';\nimport MetricsContextProvider from 'app/js/v4/core/ui/metrics/components/MetricsContextProvider';\nimport Modal from 'app/js/v4/core/ui/modals/components/Modal';\nimport ModalBody from 'app/js/v4/core/ui/modals/components/ModalBody';\nimport ModalContent from 'app/js/v4/core/ui/modals/components/ModalContent';\nimport ModalFooter from 'app/js/v4/core/ui/modals/components/ModalFooter';\nimport ModalFooterButtonBar from 'app/js/v4/core/ui/modals/components/ModalFooterButtonBar';\nimport ModalHeader from 'app/js/v4/core/ui/modals/components/ModalHeader';\nimport Kind from 'app/js/v4/core/ui/types/Kind';\nimport Size from 'app/js/v4/core/ui/types/Size';\nimport DashSeparator from 'app/js/views/v3/components/core/base/DashSeparator';\nimport Form from 'app/js/views/v3/components/core/forms/Form';\nimport FormLabel from 'app/js/views/v3/components/core/forms/FormLabel';\nimport TextArea from 'app/js/views/v3/components/core/forms/TextArea';\nimport AvatarImg from 'app/js/views/v3/components/core/images/AvatarImg';\nimport styles from './StopServerSessionModal.css';\n\ninterface StopServerSessionModalProps {\n  session: ServerNowPlayingSession;\n  isOpen: boolean;\n  onModalClose(): void;\n}\n\nexport default function StopServerSessionModal({\n  session,\n  isOpen,\n  onModalClose,\n}: StopServerSessionModalProps): ReactElement {\n  const dispatch = useDispatch();\n  const [server] = useSourceContext();\n  const [message, setMessage] = useState('');\n\n  const {\n    type,\n    grandparentTitle,\n    parentTitle,\n    title,\n    parentIndex,\n    index,\n    originallyAvailableAt,\n    User,\n  } = session;\n\n  const seasonEpisodeIndex =\n    type === metadataTypes.EPISODE\n      ? getSeasonEpisodeIndex({\n          seasonIndex: parentIndex,\n          episodeIndex: index,\n          date: originallyAvailableAt,\n          noLeadingZero: true,\n          separator: ' · ',\n        })\n      : null;\n\n  //\n  // Callbacks\n\n  const onStop = useCallback(() => {\n    dispatch(\n      serverNowPlayingSessionsSlice.actions.stopRequested({\n        server,\n        session,\n        reason: message,\n      })\n    );\n\n    onModalClose();\n  }, [dispatch, message, server, session, onModalClose]);\n\n  const onFormSubmit = useCallback(\n    (event) => {\n      event.preventDefault();\n      event.stopPropagation();\n\n      onStop();\n    },\n    [onStop]\n  );\n\n  //\n  // Render\n\n  return (\n    <MetricsContextProvider metricsPage={metricsPages.STOP_SERVER_SESSION}>\n      <Modal isOpen={isOpen} size={Size.Small} onModalClose={onModalClose}>\n        <ModalContent onModalClose={onModalClose}>\n          <ModalHeader>\n            {t('Stop {title}', {\n              title: grandparentTitle || parentTitle || title,\n            })}\n            {seasonEpisodeIndex ? (\n              <>\n                <DashSeparator />\n                {seasonEpisodeIndex}\n              </>\n            ) : null}\n          </ModalHeader>\n\n          <ModalBody>\n            <div className={styles.topContainer}>\n              <AvatarImg\n                className={styles.avatarImg}\n                height={76}\n                serverEntityID={server.entityID}\n                url={User.thumb}\n                width={76}\n              />\n\n              <div className={styles.description}>\n                <p>{t(\"Do you wish to stop this item's playback?\")}</p>\n                <p>\n                  {t(\n                    'You may supply a message that will be displayed to {username}.',\n                    { username: User.title }\n                  )}\n                </p>\n              </div>\n            </div>\n          </ModalBody>\n\n          <ModalFooter className={styles.modalFooter}>\n            <FormLabel className={styles.formLabel} name=\"message\">\n              {t('Message')}\n            </FormLabel>\n\n            {/* @ts-expect-error ts-migrate(2322) FIXME: Type '{ children: Element; className: string; onSu... Remove this comment to see the full error message */}\n            <Form className={styles.form} onSubmit={onFormSubmit}>\n              <TextArea\n                className={styles.textArea}\n                data-autofocus={true}\n                name=\"message\"\n                rows={4}\n                value={message}\n                onChange={setMessage}\n              />\n            </Form>\n\n            <ModalFooterButtonBar className={styles.buttonBar}>\n              <Button onPress={onModalClose}>{t('Cancel')}</Button>\n              <Button kind={Kind.Primary} onPress={onStop}>\n                {t('Stop')}\n              </Button>\n            </ModalFooterButtonBar>\n          </ModalFooter>\n        </ModalContent>\n      </Modal>\n    </MetricsContextProvider>\n  );\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"topContainer\":\"s9roc\",\"avatarImg\":\"pZRJZ hdLnl\",\"description\":\"o7XyU\",\"modalFooter\":\"_x8ud GVJEo\",\"formLabel\":\"IVETS x_7jd\",\"form\":\"Ei96f\",\"textArea\":\"sEcn6 YHWsX kasAI\",\"buttonBar\":\"E8Son s5Y6S\"};","// extracted by mini-css-extract-plugin\nexport default {\"listItem\":\"Ai0de\",\"mediaInformationContainer\":\"Rq1D7\",\"posterContainer\":\"WQo51\",\"attribution\":\"yshYx\",\"infoContainer\":\"T0U90\",\"previewThumbnailContainer\":\"fWfWS\",\"metadataText\":\"AAnGn\",\"visibleProgressBar\":\"uihvr\",\"title\":\"iHTgE\",\"subtitle\":\"fbXnf\",\"progressTrack\":\"iZ1lg\",\"progressPercent\":\"QxzL1\",\"playProgressPercent\":\"Y2Yo1 QxzL1\",\"transcodeProgressPercent\":\"h1FL1 QxzL1\",\"detailsContainer\":\"J05ph\",\"detailsContainerExpanded\":\"c2jzF\",\"userContainer\":\"XFzd6\",\"stopButton\":\"TBifT IYkbp\",\"stopIcon\":\"G6mn4\",\"avatarImg\":\"CXKIM hdLnl\",\"username\":\"fkfsL\"};","import classNames from 'classnames';\nimport React, {\n  memo,\n  ReactElement,\n  useCallback,\n  useEffect,\n  useMemo,\n  useState,\n} from 'react';\nimport { useSelector } from 'react-redux';\nimport { IconX } from '@plex/react-chroma-icon';\nimport { Row } from '@plex/react-chroma-layout';\nimport { Align, Size } from '@plex/react-chroma-types';\nimport formatDuration from 'app/js/utils/dateTime/formatDuration';\nimport isPlayerUnstoppable from 'app/js/utils/isPlayerUnstoppable';\nimport getPercentPlayed from 'app/js/utils/media/getPercentPlayed';\nimport getScreenshotUrl from 'app/js/utils/media/getScreenshotUrl';\nimport getSeasonEpisodeIndex from 'app/js/utils/media/getSeasonEpisodeIndex';\nimport playerUtil from 'app/js/utils/playerUtil';\nimport t from 'app/js/utils/t';\nimport { MetadataType } from 'app/js/v4/core/metadata/metadataTypes';\nimport { Provider } from 'app/js/v4/core/providers/providersTypes';\nimport createServerNowPlayingSessionSelector from 'app/js/v4/core/serverNowPlayingSessions/selectors/createServerNowPlayingSessionSelector';\nimport { ServerNowPlayingSession } from 'app/js/v4/core/serverNowPlayingSessions/serverNowPlayingSessionsTypes';\nimport { useSourceContext } from 'app/js/v4/core/servers/components/SourceContextProvider';\nimport useTranscodeImage from 'app/js/v4/core/servers/hooks/useTranscodeImage';\nimport { Server } from 'app/js/v4/core/servers/serversTypes';\nimport Link from 'app/js/v4/core/ui/buttons/components/Link';\nimport useIsRefHovered from 'app/js/v4/core/ui/hooks/useIsRefHovered';\nimport CrossFadeImage, {\n  ImageFit,\n} from 'app/js/v4/core/ui/images/CrossFadeImage';\nimport AttributionBadge from 'app/js/views/v3/components/core/AttributionBadge';\nimport AvatarImg from 'app/js/views/v3/components/core/images/AvatarImg';\nimport MetadataPosterCardImg from 'app/js/views/v3/components/metadata/posters/MetadataPosterCardImg';\nimport { getWidth } from 'app/js/views/v3/helpers/metadata/posterRatios';\nimport * as metadataContexts from 'app/js/views/v3/helpers/props/metadataContext';\nimport getPrePlayRoute from 'app/js/views/v3/helpers/routes/getPrePlayRoute';\nimport SessionTileDetails from './SessionTileDetails';\nimport StopServerSessionModal from './StopServerSessionModal';\nimport styles from './SessionTile.css';\n\nconst TILE_POSTER_HEIGHT = 100;\nconst TILE_POSTER_HEIGHT_FULL = 104;\n\nfunction isLiveTVSession(session: ServerNowPlayingSession): boolean {\n  if (!session.Media) {\n    return false;\n  }\n\n  const selectedMediaItem =\n    session.Media.find((mediaItem) => mediaItem.selected) || session.Media[0];\n\n  return selectedMediaItem.origin === 'livetv';\n}\n\nfunction getTilePrePlayRoute(\n  server: Server,\n  provider: Provider,\n  session: ServerNowPlayingSession\n): string | undefined {\n  const {\n    key,\n    parentKey,\n    grandparentKey,\n    type,\n    skipDetails,\n    skipParent,\n    extraType,\n  } = session;\n\n  if (\n    extraType ||\n    skipDetails ||\n    type === MetadataType.Photo ||\n    isLiveTVSession(session)\n  ) {\n    return;\n  }\n\n  let finalKey: string | undefined = key;\n\n  // If the search result is a track, link to the album or artist.\n  if (type === MetadataType.Track) {\n    finalKey = skipParent ? grandparentKey : parentKey;\n  }\n\n  // @ts-expect-error ts-migrate(2554) FIXME: Expected 5 arguments, but got 3.\n  return getPrePlayRoute(server, provider, finalKey);\n}\n\nfunction getPosterUrl(session: ServerNowPlayingSession): string | undefined {\n  if (session.type === MetadataType.Track) {\n    return session.parentThumb;\n  }\n\n  if (session.type === MetadataType.Photo) {\n    return session.thumb;\n  }\n\n  return session.grandparentThumb || session.parentThumb || session.thumb;\n}\n\nfunction getTitleText(session: ServerNowPlayingSession): string {\n  const { type, grandparentTitle, parentTitle, title } = session;\n\n  if (isLiveTVSession(session)) {\n    return t('Live TV');\n  }\n\n  if (type === MetadataType.Track || type === MetadataType.Photo) {\n    return title;\n  }\n\n  return grandparentTitle || parentTitle || title;\n}\n\nfunction getSubtitleText(session: ServerNowPlayingSession): string | undefined {\n  const {\n    type,\n    index,\n    parentIndex,\n    originallyAvailableAt,\n    grandparentTitle,\n    parentTitle,\n    title,\n    year,\n  } = session;\n\n  if (type === MetadataType.Track || type === MetadataType.Photo) {\n    return parentTitle;\n  }\n\n  const parts: string[] = [];\n\n  if (type === MetadataType.Episode) {\n    parts.push(\n      getSeasonEpisodeIndex({\n        seasonIndex: parentIndex,\n        episodeIndex: index,\n        date: originallyAvailableAt,\n        noLeadingZero: true,\n        separator: ' · ',\n      })\n    );\n  }\n\n  if (grandparentTitle || parentTitle) {\n    parts.push(title);\n  } else if (year) {\n    parts.push(String(year));\n  }\n\n  return parts.join(' ');\n}\n\nfunction getSecondSubtitleText(\n  session: ServerNowPlayingSession\n): string | undefined {\n  const { type, grandparentTitle, parentTitle, year, duration } = session;\n\n  if (type === MetadataType.Movie || type === MetadataType.Episode) {\n    return formatDuration(duration);\n  } else if (type === MetadataType.Album || type === MetadataType.Track) {\n    return grandparentTitle || parentTitle;\n  } else if (type === MetadataType.Photo) {\n    return String(year);\n  }\n\n  return;\n}\n\ninterface SessionTileProps {\n  sessionKey: string;\n  isDetailsExpanded: boolean;\n  canStopSessions: boolean;\n}\n\nfunction SessionTile({\n  sessionKey,\n  isDetailsExpanded,\n  canStopSessions,\n}: SessionTileProps): ReactElement {\n  const [server, provider] = useSourceContext();\n\n  const selectSession = useMemo(() => {\n    return createServerNowPlayingSessionSelector(\n      server.machineIdentifier,\n      sessionKey\n    );\n  }, [server.machineIdentifier, sessionKey]);\n\n  const session = useSelector(selectSession);\n  const isPlaying = session.Player.state === playerUtil.states.PLAYING;\n\n  const [isHovered, hoverRef] = useIsRefHovered();\n  const [internalViewOffset, setInternalViewOffset] = useState(\n    session.viewOffset || 0\n  );\n  const [isStopSessionModalOpen, setIsStopSessionModalOpen] = useState(false);\n\n  const {\n    type,\n    subtype,\n    duration,\n    attribution,\n    Media,\n    User,\n    Session,\n    TranscodeSession,\n    Player,\n  } = session;\n\n  const showProgressBar = session.viewOffset != null;\n\n  const isGame = type === MetadataType.Game;\n\n  let screenshotUrl: string | undefined;\n\n  if (Media) {\n    screenshotUrl =\n      isGame && TranscodeSession\n        ? `${TranscodeSession.key}/frame?t=${Date.now()}`\n        : getScreenshotUrl(Media[0], internalViewOffset, 'hd');\n  }\n\n  const showPreviewThumbnail = isHovered && screenshotUrl;\n  const prePlayRoute = getTilePrePlayRoute(server, provider, session);\n  const MediaBackgroundComponent = prePlayRoute ? Link : 'div';\n\n  const canShowStopButton = !!(\n    canStopSessions &&\n    Session &&\n    !isPlayerUnstoppable(Player)\n  );\n\n  const titleText = getTitleText(session);\n  const subtitleText = getSubtitleText(session);\n  const secondSubtitleText = getSecondSubtitleText(session);\n\n  const posterUrl = getPosterUrl(session);\n  const posterHeight = showProgressBar\n    ? TILE_POSTER_HEIGHT\n    : TILE_POSTER_HEIGHT_FULL;\n  const posterWidth = getWidth(\n    posterHeight,\n    type,\n    subtype,\n    metadataContexts.NOW_PLAYING\n  );\n  const previewWidth = isGame ? 180 : 214;\n\n  const imageSrc = useTranscodeImage({\n    server,\n    provider,\n    width: previewWidth,\n    height: posterHeight,\n    url: screenshotUrl,\n  });\n\n  //\n  // Callbacks\n\n  const onStopPress = useCallback((event) => {\n    event.preventDefault();\n    event.stopPropagation();\n\n    setIsStopSessionModalOpen(true);\n  }, []);\n\n  const onModalClose = useCallback(() => {\n    setIsStopSessionModalOpen(false);\n  }, []);\n\n  //\n  // Effects\n\n  useEffect(() => {\n    let intervalID: number;\n\n    setInternalViewOffset(session.viewOffset || 0);\n\n    // If the item is actively playing, keep ticking the current time even\n    // without an update to the session.\n    if (isPlaying) {\n      const timestamp = Date.now();\n\n      intervalID = window.setInterval(() => {\n        setInternalViewOffset(\n          (session.viewOffset || 0) + (Date.now() - timestamp)\n        );\n      }, 1000);\n    }\n\n    return () => window.clearInterval(intervalID);\n  }, [isPlaying, session.viewOffset]);\n\n  //\n  // Render\n\n  return (\n    <div ref={hoverRef} className={styles.listItem}>\n      <MediaBackgroundComponent\n        className={styles.mediaInformationContainer}\n        to={prePlayRoute}\n      >\n        <div className={styles.posterContainer} style={{ width: posterWidth }}>\n          <MetadataPosterCardImg\n            height={posterHeight}\n            serverEntityID={server.entityID}\n            type={type}\n            url={posterUrl}\n            width={posterWidth}\n          />\n\n          {attribution ? (\n            <AttributionBadge\n              attribution={attribution}\n              className={styles.attribution}\n            />\n          ) : null}\n        </div>\n\n        <div\n          className={classNames(\n            styles.infoContainer,\n            showProgressBar ? styles.visibleProgressBar : undefined\n          )}\n        >\n          {showPreviewThumbnail ? (\n            <div className={styles.previewThumbnailContainer}>\n              <CrossFadeImage\n                fit={isGame ? ImageFit.Contain : ImageFit.Cover}\n                height={posterHeight}\n                src={imageSrc}\n                width={previewWidth}\n              />\n            </div>\n          ) : (\n            <div className={styles.metadataText}>\n              <div className={styles.title} title={titleText}>\n                {titleText}\n              </div>\n              <div className={styles.subtitle} title={subtitleText}>\n                {subtitleText}\n              </div>\n              <div className={styles.subtitle} title={secondSubtitleText}>\n                {secondSubtitleText}\n              </div>\n            </div>\n          )}\n        </div>\n\n        {showProgressBar ? (\n          <div className={styles.progressTrack}>\n            <div\n              className={styles.playProgressPercent}\n              style={{\n                width: `${getPercentPlayed(internalViewOffset, duration)}%`,\n              }}\n            />\n\n            {TranscodeSession?.progress ? (\n              <div\n                className={styles.transcodeProgressPercent}\n                style={{ width: `${TranscodeSession.progress}%` }}\n              />\n            ) : null}\n          </div>\n        ) : null}\n      </MediaBackgroundComponent>\n\n      <SessionTileDetails\n        className={classNames(\n          styles.detailsContainer,\n          isDetailsExpanded ? styles.detailsContainerExpanded : undefined\n        )}\n        internalViewOffset={internalViewOffset}\n        server={server}\n        session={session}\n      />\n\n      <div className={styles.userContainer}>\n        <AvatarImg\n          className={styles.avatarImg}\n          height={40}\n          serverEntityID={server.entityID}\n          url={User.thumb}\n          width={40}\n        />\n\n        <div className={styles.username}>{User.title}</div>\n\n        {canShowStopButton ? (\n          <Link className={styles.stopButton} onPress={onStopPress}>\n            <Row\n              align={Align.SpaceBetween}\n              gap={Size.L}\n              verticalAlign={Align.Center}\n            >\n              <div className={styles.stopIcon}>\n                <IconX aria-label={t('Stop playback')} />\n              </div>\n\n              {t('Stop playback')}\n            </Row>\n          </Link>\n        ) : null}\n      </div>\n\n      <StopServerSessionModal\n        isOpen={isStopSessionModalOpen}\n        session={session}\n        onModalClose={onModalClose}\n      />\n    </div>\n  );\n}\n\nexport default memo(SessionTile);\n","import { createSelector, Selector } from 'reselect';\nimport { ServerNowPlayingSession } from 'app/js/v4/core/serverNowPlayingSessions/serverNowPlayingSessionsTypes';\nimport { LegacyRootState } from 'app/js/v4/root/rootTypes';\nimport createServerNowPlayingSessionsSelector from './createServerNowPlayingSessionsSelector';\n\nexport default function createServerNowPlayingSessionSelector(\n  machineIdentifier: string,\n  sessionKey: string\n): Selector<LegacyRootState, ServerNowPlayingSession> {\n  return createSelector(\n    createServerNowPlayingSessionsSelector(machineIdentifier),\n    (serverNowPlayingSessions) =>\n      serverNowPlayingSessions.sessionsByKey[sessionKey]\n  );\n}\n","import React, { ReactElement, useCallback, useEffect, useMemo } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { createSelector, Selector } from 'reselect';\nimport { IconListRow } from '@plex/react-chroma-icon';\nimport { saveExperienceSettings } from 'app/js/stores/actions/userActions';\nimport * as metricsPages from 'app/js/utils/constants/metrics/metricsPages';\nimport { scheduleImmediateUpdate } from 'app/js/utils/state/stateUpdateScheduler';\nimport t from 'app/js/utils/t';\nimport createServerNowPlayingSessionsSelector from 'app/js/v4/core/serverNowPlayingSessions/selectors/createServerNowPlayingSessionsSelector';\nimport serverNowPlayingSessionsSlice from 'app/js/v4/core/serverNowPlayingSessions/serverNowPlayingSessionsSlice';\nimport { ServerNowPlayingSessionsPerServerState } from 'app/js/v4/core/serverNowPlayingSessions/serverNowPlayingSessionsTypes';\nimport { useSourceContext } from 'app/js/v4/core/servers/components/SourceContextProvider';\nimport Link from 'app/js/v4/core/ui/buttons/components/Link';\nimport useMeasure from 'app/js/v4/core/ui/hooks/useMeasure';\nimport createUserExperienceSettingSelector from 'app/js/v4/core/user/selectors/createUserExperienceSettingSelector';\nimport ServerDashboardPageHeader from 'app/js/v4/features/dashboard/components/ServerDashboardPageHeader';\nimport ServerDashboardPageMessage from 'app/js/v4/features/dashboard/components/ServerDashboardPageMessage';\nimport { LegacyRootState } from 'app/js/v4/root/rootTypes';\nimport { PlainError } from 'app/js/v4/utils/data/api';\nimport TooltipTrigger from 'app/js/views/v3/components/core/tooltips/TooltipTrigger';\nimport NowPlayingErrorModal from './NowPlayingErrorModal';\nimport SessionTile from './SessionTile';\nimport styles from './NowPlaying.css';\n\nconst COLUMN_WIDTH = 280;\nconst COLUMN_MARGIN = 40;\nconst SERVER_SESSIONS_POLL_INTERVAL = 5000;\n\ntype SessionKeys = ServerNowPlayingSessionsPerServerState['sessionKeys'];\n\nfunction mapSessionKeysToColumns(\n  sessionKeys: SessionKeys,\n  width: number\n): SessionKeys[] {\n  const numberOfColumns = Math.max(\n    Math.floor((width + COLUMN_MARGIN) / (COLUMN_WIDTH + COLUMN_MARGIN)),\n    1\n  );\n\n  const columns = Array.from(new Array(numberOfColumns), () => []);\n\n  return sessionKeys.reduce<string[][]>((acc, sessionKey, index) => {\n    acc[index % numberOfColumns].push(sessionKey);\n\n    return acc;\n  }, columns);\n}\n\nfunction createServerNowPlayingSessionKeysSelector(\n  machineIdentifier: string\n): Selector<LegacyRootState, SessionKeys> {\n  return createSelector(\n    createServerNowPlayingSessionsSelector(machineIdentifier),\n    (serverNowPlayingSessions) => serverNowPlayingSessions.sessionKeys\n  );\n}\n\nfunction createServerNowPlayingStopSessionErrorSelector(\n  machineIdentifier: string\n): Selector<LegacyRootState, PlainError | null> {\n  return createSelector(\n    createServerNowPlayingSessionsSelector(machineIdentifier),\n    (serverNowPlayingSessions) => serverNowPlayingSessions.stopSessionError\n  );\n}\n\nexport default function NowPlaying(): ReactElement {\n  const dispatch = useDispatch();\n  const [server] = useSourceContext();\n\n  const [ref, { width }] = useMeasure();\n\n  const selectServerNowPlayingSessionKeys = useMemo(() => {\n    return createServerNowPlayingSessionKeysSelector(server.machineIdentifier);\n  }, [server.machineIdentifier]);\n\n  const sessionKeys = useSelector(selectServerNowPlayingSessionKeys);\n\n  const selectServerNowPlayingStopSessionError = useMemo(() => {\n    return createServerNowPlayingStopSessionErrorSelector(\n      server.machineIdentifier\n    );\n  }, [server.machineIdentifier]);\n\n  const stopSessionError = useSelector(selectServerNowPlayingStopSessionError);\n\n  const isDetailsExpanded = useSelector(\n    createUserExperienceSettingSelector('dashboardNowPlayingShowDetails')\n  );\n\n  const canStopSessions = !!server.ownerFeatures?.includes('session_kick');\n  const hasSessions = sessionKeys.length > 0;\n\n  //\n  // Callbacks\n\n  const onStopErrorDismiss = useCallback(() => {\n    scheduleImmediateUpdate(() => {\n      dispatch(\n        serverNowPlayingSessionsSlice.actions.stopErrorDismissed({ server })\n      );\n    });\n  }, [dispatch, server]);\n\n  const onTogglePress = useCallback(() => {\n    scheduleImmediateUpdate(() => {\n      dispatch(\n        saveExperienceSettings({\n          dashboardNowPlayingShowDetails: !isDetailsExpanded,\n        })\n      );\n    });\n  }, [dispatch, isDetailsExpanded]);\n\n  //\n  // Effects\n\n  useEffect(() => {\n    let intervalID: number;\n\n    if (hasSessions) {\n      // Socket notifications will accurately tell us when sessions come and go,\n      // but during the lifetime of a session periodically poll to ensure the\n      // sessions are kept up to date.\n\n      intervalID = window.setInterval(\n        () =>\n          dispatch(\n            serverNowPlayingSessionsSlice.actions.fetchRequested({ server })\n          ),\n        SERVER_SESSIONS_POLL_INTERVAL\n      );\n    }\n\n    return () => window.clearInterval(intervalID);\n  }, [dispatch, hasSessions, server]);\n\n  //\n  // Render\n\n  return (\n    <div ref={ref}>\n      <NowPlayingErrorModal\n        errorMessage={t('There was a problem stopping playback')}\n        isOpen={!!stopSessionError}\n        metricsPage={metricsPages.STOP_SERVER_SESSION_ERROR}\n        onModalClose={onStopErrorDismiss}\n      />\n\n      <ServerDashboardPageHeader title={t('Now Playing')}>\n        {hasSessions ? (\n          <TooltipTrigger\n            className={styles.toggle}\n            // @ts-expect-error ts-migrate(2739) FIXME: Type 'ForwardRefExoticComponent<Pick<InnerLinkProp... Remove this comment to see the full error message\n            component={Link}\n            data-testid=\"toolbarToggleNowPlayingDetails\"\n            hideOnPress={false}\n            tooltip={isDetailsExpanded ? t('Hide Details') : t('Show Details')}\n            onPress={onTogglePress}\n          >\n            <IconListRow />\n          </TooltipTrigger>\n        ) : null}\n      </ServerDashboardPageHeader>\n\n      <div className={styles.tilesContainer}>\n        {hasSessions && width != null ? (\n          <div className={styles.nowPlayingList}>\n            {mapSessionKeysToColumns(sessionKeys, width).map(\n              (column, index) => {\n                return (\n                  <div\n                    key={index}\n                    className={styles.column}\n                    style={{\n                      width: `${COLUMN_WIDTH}px`,\n                    }}\n                  >\n                    {column.map((sessionKey) => {\n                      return (\n                        <SessionTile\n                          key={sessionKey}\n                          canStopSessions={canStopSessions}\n                          isDetailsExpanded={isDetailsExpanded}\n                          sessionKey={sessionKey}\n                        />\n                      );\n                    })}\n                  </div>\n                );\n              }\n            )}\n          </div>\n        ) : null}\n\n        {!hasSessions ? (\n          <ServerDashboardPageMessage className={styles.emptyMessage}>\n            {t('Nothing is currently being played')}\n          </ServerDashboardPageMessage>\n        ) : null}\n      </div>\n    </div>\n  );\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"toggle\":\"SjkLj IYkbp\",\"tilesContainer\":\"T7YUp\",\"nowPlayingList\":\"LblPL\",\"column\":\"HugA8\",\"emptyMessage\":\"WnRvC X6zHM\"};","import { ServerAccount } from 'app/js/v4/core/serverAccounts/serverAccountsTypes';\n\nconst SERVER_OWNER_ID = 1;\n\nexport default function serverAccountComparator(\n  accountA: ServerAccount,\n  accountB: ServerAccount\n): number {\n  // Always sort the server owner first.\n  if (accountA.id === SERVER_OWNER_ID) {\n    return -1;\n  }\n\n  if (accountB.id === SERVER_OWNER_ID) {\n    return 1;\n  }\n\n  // Otherwise sort alphabetically, ignoring case.\n  const nameA = accountA.name.trim().toUpperCase();\n  const nameB = accountB.name.trim().toUpperCase();\n\n  if (nameA < nameB) {\n    return -1;\n  }\n\n  if (nameA > nameB) {\n    return 1;\n  }\n\n  return 0;\n}\n","import React, { ReactElement, useCallback } from 'react';\nimport t from 'app/js/utils/t';\nimport { ServerAccount } from 'app/js/v4/core/serverAccounts/serverAccountsTypes';\nimport Menu from 'app/js/views/v3/components/core/menus/Menu';\nimport SelectedMenuItem from 'app/js/views/v3/components/core/menus/SelectedMenuItem';\nimport useMenuState from 'app/js/views/v3/helpers/hooks/useMenuState';\nimport ServerDashboardMenuButton from './ServerDashboardMenuButton';\n\ninterface ServerDashboardAccountMenuButtonProps {\n  className?: string;\n  accounts: ServerAccount[];\n  activeAccount: ServerAccount | null;\n  onAccountSelect(account?: ServerAccount): void;\n}\n\nexport default function ServerDashboardAccountMenuButton({\n  className,\n  accounts,\n  activeAccount,\n  onAccountSelect: onAccountSelectFromProps,\n}: ServerDashboardAccountMenuButtonProps): ReactElement {\n  const { menuButtonID, isMenuOpen, onMenuButtonPress, onMenuClose } =\n    useMenuState();\n\n  const onSelect = useCallback(\n    (accountID) => {\n      const nextAccount = accounts.find((account) => account.id === accountID);\n\n      onMenuClose();\n      onAccountSelectFromProps(nextAccount);\n    },\n    [accounts, onMenuClose, onAccountSelectFromProps]\n  );\n\n  return (\n    <>\n      <ServerDashboardMenuButton\n        className={className}\n        id={menuButtonID}\n        isMenuOpen={isMenuOpen}\n        onPress={onMenuButtonPress}\n      >\n        {activeAccount ? activeAccount.name : t('All Users')}\n      </ServerDashboardMenuButton>\n\n      <Menu isOpen={isMenuOpen} target={menuButtonID} onMenuClose={onMenuClose}>\n        <SelectedMenuItem\n          isSelected={!activeAccount}\n          value={undefined}\n          onSelect={onSelect}\n        >\n          {t('All Users')}\n        </SelectedMenuItem>\n\n        {accounts.map((account) => {\n          return (\n            <SelectedMenuItem\n              key={account.id}\n              isSelected={activeAccount?.id === account.id}\n              value={account.id}\n              onSelect={onSelect}\n            >\n              {account.name}\n            </SelectedMenuItem>\n          );\n        })}\n      </Menu>\n    </>\n  );\n}\n","import dashboardReducer from './dashboardReducer';\n\nexport enum StatisticsMetadataType {\n  All = 0,\n  Movie = 1,\n  TV = 4,\n  Music = 10,\n  Photo = 13,\n  Game = 19,\n}\n\nexport type DashboardState = ReturnType<typeof dashboardReducer>;\n","import { createSelector, Selector } from 'reselect';\nimport { PlayHistoryState } from 'app/js/v4/features/dashboard/dashboardPlayHistoryTypes';\nimport { LegacyRootState } from 'app/js/v4/root/rootTypes';\nimport selectDashboard from './selectDashboard';\n\nconst selectDashboardPlayHistory: Selector<LegacyRootState, PlayHistoryState> =\n  createSelector(selectDashboard, (dashboard) => dashboard.playHistory);\n\nexport default selectDashboardPlayHistory;\n","import t from 'app/js/utils/t';\nimport { StatisticsMetadataType } from 'app/js/v4/features/dashboard/dashboardTypes';\n\nexport default function getStatisticsMetadataTypeLabel(\n  statisticsMetadataType: StatisticsMetadataType\n): string {\n  switch (statisticsMetadataType) {\n    case StatisticsMetadataType.All:\n      return t('All Media');\n    case StatisticsMetadataType.Movie:\n      return t('Movies');\n    case StatisticsMetadataType.TV:\n      return t('TV');\n    case StatisticsMetadataType.Music:\n      return t('Music');\n    case StatisticsMetadataType.Photo:\n      return t('Photos');\n    case StatisticsMetadataType.Game:\n      return t('Games');\n    default:\n      return '';\n  }\n}\n","/* eslint-plugin-disable @typescript-eslint */\n\nimport path from 'app/js/utils/url/path';\n\nexport default function getPlayHistoryRoute(\n  machineIdentifier: any,\n  params: any\n) {\n  return path.join(\n    `#!/server/${encodeURIComponent(machineIdentifier)}/playHistory`,\n    params\n  );\n}\n","import addWeeks from 'date-fns/addWeeks';\nimport format from 'date-fns/format';\nimport fromUnixTime from 'date-fns/fromUnixTime';\nimport getUnixTime from 'date-fns/getUnixTime';\nimport startOfDay from 'date-fns/startOfDay';\nimport React, { ReactElement, useCallback, useMemo, useState } from 'react';\nimport isToday from 'app/js/utils/dateTime/isToday';\nimport t from 'app/js/utils/t';\nimport { MetadataType } from 'app/js/v4/core/metadata/metadataTypes';\nimport { ServerAccount } from 'app/js/v4/core/serverAccounts/serverAccountsTypes';\nimport ServerDashboardGraph from 'app/js/v4/features/dashboard/components/ServerDashboardGraph';\nimport { PlayHistoryStatistics } from 'app/js/v4/features/dashboard/dashboardPlayHistoryTypes';\nimport { StatisticsMetadataType } from 'app/js/v4/features/dashboard/dashboardTypes';\nimport getStatisticsMetadataTypeLabel from 'app/js/v4/features/dashboard/utils/getStatisticsMetadataTypeLabel';\nimport {\n  getTimePeriodDateFormat,\n  getTimePeriodTimespan,\n  TimePeriod,\n  Timespan,\n} from 'app/js/v4/utils/timePeriods';\nimport DashSeparator from 'app/js/views/v3/components/core/base/DashSeparator';\nimport BarChart from 'app/js/views/v3/components/core/charts/BarChart';\n\ntype Data = PerDateData[];\n\ntype PerDateData = PerTypeData & { date: number };\n\ntype PerTypeData = {\n  [metadataType in StatisticsMetadataType]?: number;\n};\n\ninterface PlayHistoryGraphProps {\n  statistics: PlayHistoryStatistics[];\n  activeStatisticsMetadataType: StatisticsMetadataType;\n  activeAccount: ServerAccount | null;\n  activeTimePeriod: TimePeriod;\n  isPending: boolean;\n  isPopulated: boolean;\n  errorMessage?: string;\n  hasGameStatistics: boolean;\n  onGraphMetadataTypeSelect(type: MetadataType): void;\n}\n\ninterface LegendSummaryProps {\n  isMoviesVisible: boolean;\n  isTVVisible: boolean;\n  isMusicVisible: boolean;\n  isPhotosVisible: boolean;\n  isGamesVisible: boolean;\n  summedData?: PerTypeData;\n  hasGameStatistics: boolean;\n}\n\nfunction sortByDate(a: PerDateData, b: PerDateData): number {\n  // The `StatisticsMedia` data entries returned by PMS are not necessarily\n  // chronologically sorted.\n  // See: https://github.com/plexinc/plex-media-server/issues/11218\n\n  return a.date - b.date;\n}\n\nfunction isTodayOrAfter(date: number): boolean {\n  return isToday(date) || getUnixTime(startOfDay(new Date())) <= date;\n}\n\nfunction formatDate(\n  date: number,\n  activeTimePeriod: TimePeriod,\n  dateFormat: string,\n  toUpperCase = false\n): string {\n  const isDayToday =\n    getTimePeriodTimespan(activeTimePeriod) === Timespan.Day && isToday(date);\n\n  if (isDayToday) {\n    const today = t('Today');\n    return toUpperCase ? today.toUpperCase() : today;\n  }\n\n  return format(fromUnixTime(date), dateFormat);\n}\n\nfunction formatDuration(seconds: number): string {\n  const minutes = seconds / 60;\n  const hours = minutes / 60;\n  const days = hours / 24;\n  const years = days / 365;\n\n  let finalValue;\n  let suffix;\n\n  if (minutes < 1) {\n    finalValue = seconds.toFixed();\n    suffix = 's';\n  } else if (hours < 1) {\n    finalValue = minutes.toFixed();\n    suffix = 'm';\n  } else if (days < 1) {\n    finalValue = hours.toFixed(1);\n    suffix = 'h';\n  } else if (years < 1) {\n    finalValue = days.toFixed(1);\n    suffix = 'd';\n  } else {\n    finalValue = years.toFixed(1);\n    suffix = 'y';\n  }\n\n  return `${finalValue}${suffix}`;\n}\n\nfunction LegendSummary({\n  isMoviesVisible,\n  isTVVisible,\n  isMusicVisible,\n  isPhotosVisible,\n  isGamesVisible,\n  summedData,\n  hasGameStatistics,\n}: LegendSummaryProps): ReactElement | null {\n  if (!summedData) {\n    return null;\n  }\n\n  const isAllVisible =\n    isMoviesVisible && isTVVisible && isMusicVisible && isPhotosVisible;\n\n  return (\n    <>\n      {isAllVisible ? t('Totals') : t('Total')}\n      {': '}\n\n      {isAllVisible ? (\n        <>\n          {getStatisticsMetadataTypeLabel(StatisticsMetadataType.Movie)}\n          <DashSeparator />\n        </>\n      ) : null}\n      {isMoviesVisible\n        ? formatDuration(summedData[StatisticsMetadataType.Movie] || 0)\n        : null}\n\n      {isAllVisible ? (\n        <>\n          {' | '}\n          {getStatisticsMetadataTypeLabel(StatisticsMetadataType.TV)}\n          <DashSeparator />\n        </>\n      ) : null}\n      {isTVVisible\n        ? formatDuration(summedData[StatisticsMetadataType.TV] || 0)\n        : null}\n\n      {isAllVisible ? (\n        <>\n          {' | '}\n          {getStatisticsMetadataTypeLabel(StatisticsMetadataType.Music)}\n          <DashSeparator />\n        </>\n      ) : null}\n      {isMusicVisible\n        ? formatDuration(summedData[StatisticsMetadataType.Music] || 0)\n        : null}\n\n      {isAllVisible ? (\n        <>\n          {' | '}\n          {getStatisticsMetadataTypeLabel(StatisticsMetadataType.Photo)}\n          <DashSeparator />\n        </>\n      ) : null}\n      {isPhotosVisible\n        ? formatDuration(summedData[StatisticsMetadataType.Photo] || 0)\n        : null}\n\n      {hasGameStatistics && isAllVisible ? (\n        <>\n          {' | '}\n          {getStatisticsMetadataTypeLabel(StatisticsMetadataType.Game)}\n          <DashSeparator />\n        </>\n      ) : null}\n      {hasGameStatistics && isGamesVisible\n        ? formatDuration(summedData[StatisticsMetadataType.Game] || 0)\n        : null}\n    </>\n  );\n}\n\nfunction formatData(\n  statistics: PlayHistoryStatistics[],\n  activeStatisticsMetadataType: StatisticsMetadataType,\n  activeAccount: ServerAccount | null\n): {\n  data: Data;\n  summedData: PerTypeData;\n} {\n  const summedData: PerTypeData = {};\n\n  const data = statistics.reduce((acc: Data, mediaStatistics) => {\n    const { accountID, at, metadataType, duration } = mediaStatistics;\n\n    if (!(metadataType in StatisticsMetadataType)) {\n      // Skip over metadata types we're not interested in.\n      return acc;\n    }\n\n    const index = acc.findIndex((item) => item.date === at);\n    const hasExistingEntry = index !== -1;\n\n    let dateStatistics;\n    if (hasExistingEntry) {\n      dateStatistics = acc[index];\n    } else {\n      dateStatistics = {\n        date: at,\n      };\n    }\n\n    if (activeAccount && activeAccount.id !== accountID) {\n      // If a single user is selected, skip over any data that belongs to another\n      // user.\n      if (!hasExistingEntry) {\n        // Make sure to insert the new data into the array before we return.\n        acc.push(dateStatistics);\n      }\n\n      return acc;\n    }\n\n    if (\n      activeStatisticsMetadataType === StatisticsMetadataType.All ||\n      activeStatisticsMetadataType === metadataType\n    ) {\n      dateStatistics[metadataType] =\n        (dateStatistics[metadataType] || 0) + duration;\n\n      summedData[metadataType] = (summedData[metadataType] || 0) + duration;\n\n      dateStatistics[StatisticsMetadataType.All] =\n        (dateStatistics[StatisticsMetadataType.All] || 0) + duration;\n\n      summedData[StatisticsMetadataType.All] =\n        (summedData[StatisticsMetadataType.All] || 0) + duration;\n    }\n\n    if (hasExistingEntry) {\n      acc[index] = dateStatistics;\n    } else {\n      acc.push(dateStatistics);\n    }\n\n    return acc;\n  }, []);\n\n  return { data: data.sort(sortByDate), summedData };\n}\n\nexport default function PlayHistoryGraph({\n  statistics,\n  activeStatisticsMetadataType,\n  activeAccount,\n  activeTimePeriod,\n  hasGameStatistics,\n  isPending,\n  isPopulated,\n  errorMessage,\n  onGraphMetadataTypeSelect,\n}: PlayHistoryGraphProps): ReactElement {\n  const [isChartReady, setIsChartReady] = useState(false);\n\n  const { data, summedData } = useMemo(() => {\n    return formatData(statistics, activeStatisticsMetadataType, activeAccount);\n  }, [activeAccount, activeStatisticsMetadataType, statistics]);\n\n  const isMoviesSelected =\n    activeStatisticsMetadataType === StatisticsMetadataType.Movie;\n  const isMoviesVisible =\n    isMoviesSelected ||\n    activeStatisticsMetadataType === StatisticsMetadataType.All;\n  const isTVSelected =\n    activeStatisticsMetadataType === StatisticsMetadataType.TV;\n  const isTVVisible =\n    isTVSelected || activeStatisticsMetadataType === StatisticsMetadataType.All;\n  const isMusicSelected =\n    activeStatisticsMetadataType === StatisticsMetadataType.Music;\n  const isMusicVisible =\n    isMusicSelected ||\n    activeStatisticsMetadataType === StatisticsMetadataType.All;\n  const isPhotosSelected =\n    activeStatisticsMetadataType === StatisticsMetadataType.Photo;\n  const isPhotosVisible =\n    isPhotosSelected ||\n    activeStatisticsMetadataType === StatisticsMetadataType.All;\n  const isGamesSelected =\n    activeStatisticsMetadataType === StatisticsMetadataType.Game;\n  const isGamesVisible =\n    isGamesSelected ||\n    activeStatisticsMetadataType === StatisticsMetadataType.All;\n\n  const series = [\n    {\n      dataKey: String(StatisticsMetadataType.Movie),\n      title: getStatisticsMetadataTypeLabel(StatisticsMetadataType.Movie),\n      visible: isMoviesVisible,\n      selected: isMoviesSelected,\n      color: '#9ad186',\n    },\n    {\n      dataKey: String(StatisticsMetadataType.TV),\n      title: getStatisticsMetadataTypeLabel(StatisticsMetadataType.TV),\n      visible: isTVVisible,\n      selected: isTVSelected,\n      color: '#f1335e',\n    },\n    {\n      dataKey: String(StatisticsMetadataType.Music),\n      title: getStatisticsMetadataTypeLabel(StatisticsMetadataType.Music),\n      visible: isMusicVisible,\n      selected: isMusicSelected,\n      color: '#366dfc',\n    },\n    {\n      dataKey: String(StatisticsMetadataType.Photo),\n      title: getStatisticsMetadataTypeLabel(StatisticsMetadataType.Photo),\n      visible: isPhotosVisible,\n      selected: isPhotosSelected,\n      color: '#e69f23',\n    },\n  ];\n\n  if (hasGameStatistics) {\n    series.push({\n      dataKey: String(StatisticsMetadataType.Game),\n      title: getStatisticsMetadataTypeLabel(StatisticsMetadataType.Game),\n      visible: isGamesVisible,\n      selected: isGamesSelected,\n      color: '#bc9bb7',\n    });\n  }\n\n  //\n  // Callbacks\n\n  const tooltipLabelFormatter = useCallback(\n    (dateTimestamp: number) => {\n      // For week long timespans show the period the timespan covers, rather than\n      // just a single date.\n      if (getTimePeriodTimespan(activeTimePeriod) === Timespan.Week) {\n        const startDate = formatDate(\n          dateTimestamp,\n          activeTimePeriod,\n          getTimePeriodDateFormat(activeTimePeriod, true)\n        );\n\n        const endDateTimestamp = getUnixTime(\n          addWeeks(fromUnixTime(dateTimestamp), 1)\n        );\n\n        // Check to make sure the week doesn't start and end today/after.\n        const isFutureTimePeriod =\n          isToday(dateTimestamp) && isTodayOrAfter(endDateTimestamp);\n\n        if (isFutureTimePeriod) {\n          return t('Today');\n        } else {\n          const endDate = formatDate(\n            endDateTimestamp,\n            activeTimePeriod,\n            getTimePeriodDateFormat(activeTimePeriod, true)\n          );\n          return `${startDate} - ${endDate}`;\n        }\n      }\n\n      return formatDate(\n        dateTimestamp,\n        activeTimePeriod,\n        getTimePeriodDateFormat(activeTimePeriod, true)\n      );\n    },\n    [activeTimePeriod]\n  );\n\n  const tooltipValueFormatter = useCallback((duration: number) => {\n    return formatDuration(duration);\n  }, []);\n\n  const xAxisTickFormatter = useCallback(\n    (dateTimestamp: number) => {\n      // For the month long timespans show the period the timespan covers, rather\n      // than just a single date.\n      if (activeTimePeriod === TimePeriod.Month) {\n        const startDate = formatDate(\n          dateTimestamp,\n          activeTimePeriod,\n          getTimePeriodDateFormat(activeTimePeriod)\n        );\n\n        const endDateTimestamp = getUnixTime(\n          addWeeks(fromUnixTime(dateTimestamp), 1)\n        );\n\n        // Check to make sure the week doesn't start and end today/after.\n        const isFutureTimePeriod =\n          isToday(dateTimestamp) && isTodayOrAfter(endDateTimestamp);\n\n        if (isFutureTimePeriod) {\n          return t('Today').toUpperCase();\n        } else {\n          const endDate = formatDate(\n            endDateTimestamp,\n            activeTimePeriod,\n            getTimePeriodDateFormat(activeTimePeriod)\n          );\n          return `${startDate} - ${endDate}`;\n        }\n      }\n\n      return formatDate(\n        dateTimestamp,\n        activeTimePeriod,\n        getTimePeriodDateFormat(activeTimePeriod),\n        true\n      );\n    },\n    [activeTimePeriod]\n  );\n\n  const yAxisTickFormatter = useCallback((duration: number) => {\n    if (duration === 0) {\n      return '';\n    }\n\n    return formatDuration(duration);\n  }, []);\n\n  const onChartReady = useCallback(() => {\n    setIsChartReady(true);\n  }, []);\n\n  //\n  // Render\n\n  return (\n    <ServerDashboardGraph\n      errorMessage={errorMessage}\n      isSpinnerVisible={isPending || !isChartReady}\n    >\n      {!isPending && isPopulated ? (\n        <BarChart\n          // @ts-expect-error ts-migrate(2322) FIXME: Type '{ width: string; height: number; series: { d... Remove this comment to see the full error message\n          data={data}\n          height={280}\n          legendSummary={\n            <LegendSummary\n              hasGameStatistics={hasGameStatistics}\n              isGamesVisible={isGamesVisible}\n              isMoviesVisible={isMoviesVisible}\n              isMusicVisible={isMusicVisible}\n              isPhotosVisible={isPhotosVisible}\n              isTVVisible={isTVVisible}\n              summedData={summedData}\n            />\n          }\n          series={series}\n          tooltipLabelFormatter={tooltipLabelFormatter}\n          tooltipValueFormatter={tooltipValueFormatter}\n          width=\"100%\"\n          xAxisTickFormatter={xAxisTickFormatter}\n          yAxisTickFormatter={yAxisTickFormatter}\n          onChartReady={onChartReady}\n          onLegendPress={onGraphMetadataTypeSelect}\n        />\n      ) : null}\n    </ServerDashboardGraph>\n  );\n}\n","import React, {\n  ReactElement,\n  useCallback,\n  useEffect,\n  useMemo,\n  useState,\n} from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport t from 'app/js/utils/t';\nimport { ServerAccount } from 'app/js/v4/core/serverAccounts/serverAccountsTypes';\nimport serverAccountComparator from 'app/js/v4/core/serverAccounts/utils/serverAccountComparator';\nimport { useSourceContext } from 'app/js/v4/core/servers/components/SourceContextProvider';\nimport Link from 'app/js/v4/core/ui/buttons/components/Link';\nimport usePreviousValueForAtMost from 'app/js/v4/core/ui/hooks/usePreviousValueForAtMost';\nimport ServerDashboardPageHeader from 'app/js/v4/features/dashboard/components/ServerDashboardPageHeader';\nimport ServerDashboardAccountMenuButton from 'app/js/v4/features/dashboard/components/menuButtons/ServerDashboardAccountMenuButton';\nimport ServerDashboardFilterMenuButton from 'app/js/v4/features/dashboard/components/menuButtons/ServerDashboardFilterMenuButton';\nimport dashboardPlayHistorySlice from 'app/js/v4/features/dashboard/dashboardPlayHistorySlice';\nimport { StatisticsMetadataType } from 'app/js/v4/features/dashboard/dashboardTypes';\nimport selectDashboardPlayHistory from 'app/js/v4/features/dashboard/selectors/selectDashboardPlayHistory';\nimport getStatisticsMetadataTypeLabel from 'app/js/v4/features/dashboard/utils/getStatisticsMetadataTypeLabel';\nimport {\n  getTimePeriodAfter,\n  getTimePeriodLabel,\n  getTimePeriodTimespan,\n  TimePeriod,\n} from 'app/js/v4/utils/timePeriods';\nimport DashSeparator from 'app/js/views/v3/components/core/base/DashSeparator';\nimport getPlayHistoryRoute from 'app/js/views/v3/helpers/routes/getPlayHistoryRoute';\nimport PlayHistoryGraph from './PlayHistoryGraph';\nimport styles from './PlayHistory.css';\n\nexport default function PlayHistory(): ReactElement {\n  const dispatch = useDispatch();\n  const [server] = useSourceContext();\n\n  const [activeAccount, setActiveAccount] = useState<ServerAccount | null>(\n    null\n  );\n\n  const [activeTimePeriod, setActiveTimePeriod] = useState(TimePeriod.Month);\n  const [lockedTimePeriod, setLockedTimePeriod] = useState(activeTimePeriod);\n\n  const timePeriods = useMemo(() => {\n    return [\n      TimePeriod.Week,\n      TimePeriod.Month,\n      TimePeriod.NinetyDays,\n      TimePeriod.Year,\n      TimePeriod.AllTime,\n    ];\n  }, []);\n\n  const [activeStatisticsMetadataType, setActiveStatisticsMetadataType] =\n    useState(StatisticsMetadataType.All);\n\n  const { accounts, statistics, isPending, isPopulated, error } = useSelector(\n    selectDashboardPlayHistory\n  );\n\n  const hasGameStatistics = !!statistics.find(\n    (userStatistics) =>\n      userStatistics.metadataType === StatisticsMetadataType.Game\n  );\n\n  const statisticsMetadataTypes = useMemo(() => {\n    const result = [\n      StatisticsMetadataType.All,\n      StatisticsMetadataType.Movie,\n      StatisticsMetadataType.TV,\n      StatisticsMetadataType.Music,\n      StatisticsMetadataType.Photo,\n    ];\n\n    return hasGameStatistics\n      ? result.concat([StatisticsMetadataType.Game])\n      : result;\n  }, [hasGameStatistics]);\n\n  // Rather than showing all the server accounts, show the subset of accounts\n  // that have play history in the active time period.\n\n  const sortedAccounts = useMemo(() => {\n    return accounts.slice().sort(serverAccountComparator);\n  }, [accounts]);\n\n  const isDelayedPending = usePreviousValueForAtMost(isPending, true);\n\n  //\n  // Callbacks\n\n  const onMetadataTypeSelect = useCallback(\n    (statisticsMetadataType: StatisticsMetadataType) => {\n      setActiveStatisticsMetadataType(statisticsMetadataType);\n    },\n    []\n  );\n\n  const onAccountSelect = useCallback((account: ServerAccount) => {\n    setActiveAccount(account);\n  }, []);\n\n  const onTimePeriodSelect = useCallback((timePeriod: TimePeriod) => {\n    setActiveTimePeriod(timePeriod);\n  }, []);\n\n  const onGraphMetadataTypeSelect = useCallback(\n    (statisticsMetadataTypeKey: string) => {\n      const statisticsMetadataType = parseInt(statisticsMetadataTypeKey, 10);\n      const nextStatisticsMetadataType =\n        statisticsMetadataType === activeStatisticsMetadataType\n          ? StatisticsMetadataType.All\n          : statisticsMetadataType;\n\n      setActiveStatisticsMetadataType(nextStatisticsMetadataType);\n    },\n    [activeStatisticsMetadataType]\n  );\n\n  //\n  // Effects\n\n  useEffect(() => {\n    dispatch(\n      dashboardPlayHistorySlice.actions.playHistoryFetchRequested({\n        server,\n        timespan: getTimePeriodTimespan(activeTimePeriod),\n        after: getTimePeriodAfter(activeTimePeriod),\n      })\n    );\n  }, [activeTimePeriod, dispatch, server]);\n\n  useEffect(() => {\n    // Do not pass the new active time period to the graph with statistics for\n    // the previous time period. Once the statistics are updated, then update\n    // the time period that is passed to the graph.\n\n    setLockedTimePeriod(activeTimePeriod);\n\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [statistics]);\n\n  useEffect(() => {\n    return () => {\n      dispatch(dashboardPlayHistorySlice.actions.reset());\n    };\n  }, [dispatch]);\n\n  //\n  // Render\n\n  return (\n    <div className={styles.container}>\n      <ServerDashboardPageHeader title={t('Play History')}>\n        <div className={styles.link}>\n          <DashSeparator />\n\n          {/* @ts-expect-error ts-migrate(2554) FIXME: Expected 2 arguments, but got 1. */}\n          <Link to={getPlayHistoryRoute(server.machineIdentifier)}>\n            {t('View Full History')}\n          </Link>\n        </div>\n\n        <div>\n          <ServerDashboardFilterMenuButton\n            activeValue={activeStatisticsMetadataType}\n            formatter={getStatisticsMetadataTypeLabel}\n            values={statisticsMetadataTypes}\n            onSelect={onMetadataTypeSelect}\n          />\n\n          <ServerDashboardAccountMenuButton\n            accounts={sortedAccounts}\n            activeAccount={activeAccount}\n            onAccountSelect={onAccountSelect}\n          />\n\n          <ServerDashboardFilterMenuButton\n            activeValue={activeTimePeriod}\n            formatter={getTimePeriodLabel}\n            values={timePeriods}\n            onSelect={onTimePeriodSelect}\n          />\n        </div>\n      </ServerDashboardPageHeader>\n\n      <PlayHistoryGraph\n        activeAccount={activeAccount}\n        activeStatisticsMetadataType={activeStatisticsMetadataType}\n        activeTimePeriod={lockedTimePeriod}\n        errorMessage={error ? t('Unable to load history') : undefined}\n        hasGameStatistics={hasGameStatistics}\n        isPending={isDelayedPending}\n        isPopulated={isPopulated}\n        statistics={statistics}\n        onGraphMetadataTypeSelect={onGraphMetadataTypeSelect}\n      />\n    </div>\n  );\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"container\":\"f1MY1\",\"link\":\"y8GE0\"};","import React, { ReactElement, ReactNode } from 'react';\nimport styles from './ServerDashboardPageSection.css';\n\ninterface ServerDashboardPageSectionProps {\n  children: ReactNode;\n}\n\nexport default function ServerDashboardPageSection({\n  children,\n}: ServerDashboardPageSectionProps): ReactElement {\n  return <div className={styles.section}>{children}</div>;\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"section\":\"yogFh\"};","import { PayloadAction } from '@reduxjs/toolkit';\nimport { Server } from 'app/js/v4/core/servers/serversTypes';\nimport { PlainError } from 'app/js/v4/utils/data/api';\nimport { AsyncState } from 'app/js/v4/utils/data/asyncStateMarkers';\n\nexport enum ServerResourceType {\n  All = 'all',\n  System = 'system',\n  PlexMediaServer = 'plex-media-server',\n}\n\nexport interface ResourcesState extends AsyncState {\n  statistics: ResourcesStatistics[];\n  isUnsupported: boolean;\n  requestTimestampMilliseconds: number | null;\n}\n\nexport interface ResourcesStatistics {\n  timespan: number;\n  at: number;\n  hostCpuUtilization: number;\n  processCpuUtilization: number;\n  hostMemoryUtilization: number;\n  processMemoryUtilization: number;\n}\n\nexport type ResourcesFetchRequestedAction = PayloadAction<{\n  server: Server;\n}>;\n\nexport type ResourcesFetchSucceededAction = PayloadAction<{\n  data: [];\n  requestTimestampMilliseconds: number;\n}>;\n\nexport type ResourcesFetchFailedAction = PayloadAction<{\n  error: PlainError;\n}>;\n","import { createSelector, Selector } from 'reselect';\nimport { ResourcesState } from 'app/js/v4/features/dashboard/dashboardResourcesTypes';\nimport { LegacyRootState } from 'app/js/v4/root/rootTypes';\nimport selectDashboard from './selectDashboard';\n\nconst selectDashboardResources: Selector<LegacyRootState, ResourcesState> =\n  createSelector(selectDashboard, (dashboard) => dashboard.resources);\n\nexport default selectDashboardResources;\n","import t from 'app/js/utils/t';\nimport { ServerResourceType } from 'app/js/v4/features/dashboard/dashboardResourcesTypes';\n\nexport default function getServerResourceTypeLabel(\n  resourceType: ServerResourceType\n): string {\n  switch (resourceType) {\n    case ServerResourceType.All:\n      return t('All');\n    case ServerResourceType.PlexMediaServer:\n      return 'Plex Media Server';\n    case ServerResourceType.System:\n      return t('System');\n    default:\n      return '';\n  }\n}\n","import React, { ReactElement, useCallback, useMemo, useState } from 'react';\nimport t from 'app/js/utils/t';\nimport ServerDashboardGraph from 'app/js/v4/features/dashboard/components/ServerDashboardGraph';\nimport {\n  ResourcesStatistics,\n  ServerResourceType,\n} from 'app/js/v4/features/dashboard/dashboardResourcesTypes';\nimport formatRealTimeAgo from 'app/js/v4/features/dashboard/utils/formatRealTimeAgo';\nimport getServerResourceTypeLabel from 'app/js/v4/features/dashboard/utils/getServerResourceTypeLabel';\nimport DashSeparator from 'app/js/views/v3/components/core/base/DashSeparator';\nimport LineChart from 'app/js/views/v3/components/core/charts/LineChart';\n\ntype HostKey = 'hostCpuUtilization' | 'hostMemoryUtilization';\ntype ProcessKey = 'processCpuUtilization' | 'processMemoryUtilization';\n\ntype Data = {\n  at: number;\n  date: number;\n  [ServerResourceType.PlexMediaServer]: number | null;\n  [ServerResourceType.System]: number | null;\n}[];\n\ninterface SummedData {\n  [ServerResourceType.PlexMediaServer]: number;\n  [ServerResourceType.System]: number;\n}\n\ninterface LegendSummaryProps {\n  isPlexMediaServerVisible: boolean;\n  isSystemVisible: boolean;\n  summedData?: SummedData;\n}\n\ninterface ServerResourceGraphProps {\n  statistics: ResourcesStatistics[];\n  activeResourceType: ServerResourceType;\n  hostKey: HostKey;\n  processKey: ProcessKey;\n  hostColor: string;\n  processColor: string;\n  isPopulated: boolean;\n  errorMessage?: string;\n  onGraphResourceTypeSelect(resourceType: ServerResourceType): void;\n  onGraphTooltipActive(): void;\n  onGraphTooltipInactive(): void;\n}\n\nconst TIME_PERIOD_SPAN_SECONDS = 120;\nconst TIME_PERIOD_INTERVAL_SECONDS = 5;\nconst TIME_PERIOD_ENTRIES_COUNT =\n  TIME_PERIOD_SPAN_SECONDS / TIME_PERIOD_INTERVAL_SECONDS + 1;\n\nfunction formatData(\n  statistics: ResourcesStatistics[],\n  hostKey: HostKey,\n  processKey: ProcessKey,\n  activeResourceType: ServerResourceType\n): {\n  data: Data;\n  summedData: SummedData;\n} {\n  const isSystemVisible =\n    activeResourceType === ServerResourceType.All ||\n    activeResourceType === ServerResourceType.System;\n  const isPlexMediaServerVisible =\n    activeResourceType === ServerResourceType.All ||\n    activeResourceType === ServerResourceType.PlexMediaServer;\n\n  const summedData = {\n    [ServerResourceType.System]: 0,\n    [ServerResourceType.PlexMediaServer]: 0,\n  };\n\n  const data = statistics\n    .slice(-TIME_PERIOD_ENTRIES_COUNT)\n    .map((intervalStatistics, index) => {\n      summedData[ServerResourceType.PlexMediaServer] =\n        summedData[ServerResourceType.PlexMediaServer] +\n        (intervalStatistics[processKey] || 0);\n\n      summedData[ServerResourceType.System] =\n        summedData[ServerResourceType.System] +\n        (intervalStatistics[hostKey] || 0);\n\n      return {\n        at: intervalStatistics.at,\n        date: TIME_PERIOD_SPAN_SECONDS - TIME_PERIOD_INTERVAL_SECONDS * index,\n        [ServerResourceType.PlexMediaServer]: isPlexMediaServerVisible\n          ? intervalStatistics[processKey]\n          : null,\n        [ServerResourceType.System]: isSystemVisible\n          ? intervalStatistics[hostKey]\n          : null,\n      };\n    });\n\n  return { data, summedData };\n}\n\nfunction tooltipLabelFormatter(seconds: number): string {\n  return seconds === 0\n    ? t('Now')\n    : t('{timeAgo} ago', { timeAgo: formatRealTimeAgo(seconds) });\n}\n\nfunction tooltipValueFormatter(utilization: number): string {\n  return `${utilization.toFixed(2)}%`;\n}\n\nfunction xAxisTickFormatter(seconds: number): string {\n  return formatRealTimeAgo(seconds);\n}\n\nfunction yAxisTickFormatter(utilization: number): string {\n  if (utilization === 0) {\n    return '';\n  }\n\n  return `${Math.round(utilization)}%`;\n}\n\nfunction LegendSummary({\n  isPlexMediaServerVisible,\n  isSystemVisible,\n  summedData,\n}: LegendSummaryProps): ReactElement | null {\n  if (!summedData) {\n    return null;\n  }\n\n  const isAllVisible = isPlexMediaServerVisible && isSystemVisible;\n\n  return (\n    <>\n      {isAllVisible ? t('Averages') : t('Average')}\n      {': '}\n\n      {isAllVisible ? (\n        <>\n          {getServerResourceTypeLabel(ServerResourceType.PlexMediaServer)}\n          <DashSeparator />\n        </>\n      ) : null}\n      {isPlexMediaServerVisible\n        ? `${(\n            summedData[ServerResourceType.PlexMediaServer] /\n            TIME_PERIOD_ENTRIES_COUNT\n          ).toFixed(2)}%`\n        : null}\n\n      {isAllVisible ? (\n        <>\n          {' | '}\n          {getServerResourceTypeLabel(ServerResourceType.System)}\n          <DashSeparator />\n        </>\n      ) : null}\n      {isSystemVisible\n        ? `${(\n            summedData[ServerResourceType.System] / TIME_PERIOD_ENTRIES_COUNT\n          ).toFixed(2)}%`\n        : null}\n    </>\n  );\n}\n\nexport default function ServerResourceGraph({\n  statistics,\n  activeResourceType,\n  hostKey,\n  processKey,\n  hostColor,\n  processColor,\n  isPopulated,\n  errorMessage,\n  onGraphResourceTypeSelect,\n  onGraphTooltipActive,\n  onGraphTooltipInactive,\n}: ServerResourceGraphProps): ReactElement {\n  const [isChartReady, setIsChartReady] = useState(false);\n\n  const { data, summedData } = useMemo(() => {\n    return formatData(statistics, hostKey, processKey, activeResourceType);\n  }, [activeResourceType, hostKey, processKey, statistics]);\n\n  const isPlexMediaServerVisible =\n    activeResourceType === ServerResourceType.All ||\n    activeResourceType === ServerResourceType.PlexMediaServer;\n  const isSystemVisible =\n    activeResourceType === ServerResourceType.All ||\n    activeResourceType === ServerResourceType.System;\n\n  const series = [\n    {\n      dataKey: ServerResourceType.PlexMediaServer,\n      title: getServerResourceTypeLabel(ServerResourceType.PlexMediaServer),\n      visible: isPlexMediaServerVisible,\n      selected: activeResourceType === ServerResourceType.PlexMediaServer,\n      color: hostColor,\n    },\n    {\n      dataKey: ServerResourceType.System,\n      title: getServerResourceTypeLabel(ServerResourceType.System),\n      visible: isSystemVisible,\n      selected: activeResourceType === ServerResourceType.System,\n      color: processColor,\n    },\n  ];\n\n  //\n  // Callbacks\n\n  const onChartReady = useCallback(() => {\n    setIsChartReady(true);\n  }, []);\n\n  //\n  // Render\n\n  return (\n    <ServerDashboardGraph\n      errorMessage={errorMessage}\n      isSpinnerVisible={!isPopulated || !isChartReady}\n    >\n      {isPopulated ? (\n        <LineChart\n          // @ts-expect-error ts-migrate(2322) FIXME: Type '{ width: string; height: number; series: { d... Remove this comment to see the full error message\n          data={data}\n          height={280}\n          isAnimationActive={false}\n          legendSummary={\n            <LegendSummary\n              isPlexMediaServerVisible={isPlexMediaServerVisible}\n              isSystemVisible={isSystemVisible}\n              summedData={summedData}\n            />\n          }\n          series={series}\n          showTooltipTotal={false}\n          tooltipLabelFormatter={tooltipLabelFormatter}\n          tooltipValueFormatter={tooltipValueFormatter}\n          width=\"100%\"\n          xAxisTickFormatter={xAxisTickFormatter}\n          xAxisTickInterval={1}\n          yAxisDomain={[0, 100]}\n          yAxisTickFormatter={yAxisTickFormatter}\n          onChartReady={onChartReady}\n          onLegendPress={onGraphResourceTypeSelect}\n          onTooltipActive={onGraphTooltipActive}\n          onTooltipInactive={onGraphTooltipInactive}\n        />\n      ) : null}\n    </ServerDashboardGraph>\n  );\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"container\":\"kEeoN\",\"graph\":\"WS5zL\"};","import React, {\n  ReactElement,\n  useCallback,\n  useEffect,\n  useMemo,\n  useRef,\n  useState,\n} from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport t from 'app/js/utils/t';\nimport { useSourceContext } from 'app/js/v4/core/servers/components/SourceContextProvider';\nimport ServerDashboardPageHeader from 'app/js/v4/features/dashboard/components/ServerDashboardPageHeader';\nimport ServerDashboardPageSection from 'app/js/v4/features/dashboard/components/ServerDashboardPageSection';\nimport ServerDashboardFilterMenuButton from 'app/js/v4/features/dashboard/components/menuButtons/ServerDashboardFilterMenuButton';\nimport dashboardResourcesSlice from 'app/js/v4/features/dashboard/dashboardResourcesSlice';\nimport { ServerResourceType } from 'app/js/v4/features/dashboard/dashboardResourcesTypes';\nimport selectDashboardResources from 'app/js/v4/features/dashboard/selectors/selectDashboardResources';\nimport getServerResourceTypeLabel from 'app/js/v4/features/dashboard/utils/getServerResourceTypeLabel';\nimport ServerResourceGraph from './ServerResourceGraph';\nimport styles from './ServerResources.css';\n\nconst DATA_FETCH_MIN_INTERVAL = 5000;\n\nexport default function ServerResources(): ReactElement | null {\n  const dispatch = useDispatch();\n  const [server] = useSourceContext();\n  const realtimeTimeoutIDRef = useRef<number | null>(null);\n\n  const [activeCPUResourceType, setActiveCPUResourceType] = useState(\n    ServerResourceType.All\n  );\n\n  const [activeRAMResourceType, setActiveRAMResourceType] = useState(\n    ServerResourceType.All\n  );\n\n  const resourceTypes = useMemo(() => {\n    return [\n      ServerResourceType.All,\n      ServerResourceType.PlexMediaServer,\n      ServerResourceType.System,\n    ];\n  }, []);\n\n  const {\n    statistics,\n    isPopulated,\n    isUnsupported,\n    error,\n    requestTimestampMilliseconds,\n  } = useSelector(selectDashboardResources);\n\n  //\n  // Callbacks\n\n  const onFetch = useCallback(() => {\n    dispatch(\n      dashboardResourcesSlice.actions.resourcesFetchRequested({\n        server,\n      })\n    );\n  }, [dispatch, server]);\n\n  const onCPUSourceTypeSelect = useCallback(\n    (cpuResourceType: ServerResourceType) => {\n      setActiveCPUResourceType(cpuResourceType);\n    },\n    []\n  );\n\n  const onRAMSourceTypeSelect = useCallback(\n    (ramResourceType: ServerResourceType) => {\n      setActiveRAMResourceType(ramResourceType);\n    },\n    []\n  );\n\n  const onGraphCPUResourceTypeSelect = useCallback(\n    (cpuResourceType: ServerResourceType) => {\n      const nextCPUResourceType =\n        cpuResourceType === activeCPUResourceType\n          ? ServerResourceType.All\n          : cpuResourceType;\n\n      setActiveCPUResourceType(nextCPUResourceType);\n    },\n    [activeCPUResourceType]\n  );\n\n  const onGraphRAMResourceTypeSelect = useCallback(\n    (ramResourceType: ServerResourceType) => {\n      const nextRAMResourceType =\n        ramResourceType === activeRAMResourceType\n          ? ServerResourceType.All\n          : ramResourceType;\n\n      setActiveRAMResourceType(nextRAMResourceType);\n    },\n    [activeRAMResourceType]\n  );\n\n  const onTooltipActive = useCallback(() => {\n    if (realtimeTimeoutIDRef.current) {\n      window.clearTimeout(realtimeTimeoutIDRef.current);\n    }\n  }, []);\n\n  //\n  // Effects\n\n  useEffect(() => {\n    onFetch();\n  }, [onFetch]);\n\n  useEffect(() => {\n    // If the server resources statistics have just been fetched, then fire off\n    // the next request with a delay.\n    if (requestTimestampMilliseconds) {\n      const requestLatency = Date.now() - requestTimestampMilliseconds;\n      const delay = Math.max(DATA_FETCH_MIN_INTERVAL - requestLatency, 0);\n\n      realtimeTimeoutIDRef.current = window.setTimeout(onFetch, delay);\n    }\n\n    return () => {\n      if (realtimeTimeoutIDRef.current) {\n        window.clearTimeout(realtimeTimeoutIDRef.current);\n      }\n    };\n  }, [requestTimestampMilliseconds, onFetch]);\n\n  useEffect(() => {\n    return () => {\n      dispatch(dashboardResourcesSlice.actions.reset());\n    };\n  }, [dispatch]);\n\n  //\n  // Render\n\n  if (isUnsupported) {\n    return null;\n  }\n\n  return (\n    <>\n      <ServerDashboardPageSection>\n        <div className={styles.container}>\n          <ServerDashboardPageHeader title={t('CPU')}>\n            <div>\n              <ServerDashboardFilterMenuButton\n                activeValue={activeCPUResourceType}\n                formatter={getServerResourceTypeLabel}\n                values={resourceTypes}\n                onSelect={onCPUSourceTypeSelect}\n              />\n            </div>\n          </ServerDashboardPageHeader>\n\n          <div className={styles.graph}>\n            <ServerResourceGraph\n              activeResourceType={activeCPUResourceType}\n              errorMessage={error ? t('Unable to load statistics') : undefined}\n              hostColor=\"#9ad186\"\n              hostKey=\"hostCpuUtilization\"\n              isPopulated={isPopulated}\n              processColor=\"#f1335e\"\n              processKey=\"processCpuUtilization\"\n              statistics={statistics}\n              onGraphResourceTypeSelect={onGraphCPUResourceTypeSelect}\n              onGraphTooltipActive={onTooltipActive}\n              onGraphTooltipInactive={onFetch}\n            />\n          </div>\n        </div>\n      </ServerDashboardPageSection>\n\n      <ServerDashboardPageSection>\n        <div className={styles.container}>\n          <ServerDashboardPageHeader title={t('RAM')}>\n            <div>\n              <ServerDashboardFilterMenuButton\n                activeValue={activeRAMResourceType}\n                formatter={getServerResourceTypeLabel}\n                values={resourceTypes}\n                onSelect={onRAMSourceTypeSelect}\n              />\n            </div>\n          </ServerDashboardPageHeader>\n\n          <div className={styles.graph}>\n            <ServerResourceGraph\n              activeResourceType={activeRAMResourceType}\n              errorMessage={error ? t('Unable to load statistics') : undefined}\n              hostColor=\"#33f1c5\"\n              hostKey=\"hostMemoryUtilization\"\n              isPopulated={isPopulated}\n              processColor=\"#bd86d1\"\n              processKey=\"processMemoryUtilization\"\n              statistics={statistics}\n              onGraphResourceTypeSelect={onGraphRAMResourceTypeSelect}\n              onGraphTooltipActive={onTooltipActive}\n              onGraphTooltipInactive={onFetch}\n            />\n          </div>\n        </div>\n      </ServerDashboardPageSection>\n    </>\n  );\n}\n","import { createSelector, OutputSelector } from 'reselect';\nimport {\n  ServerAccount,\n  ServerAccountsPerServerState,\n} from 'app/js/v4/core/serverAccounts/serverAccountsTypes';\nimport serverAccountComparator from 'app/js/v4/core/serverAccounts/utils/serverAccountComparator';\nimport { LegacyRootState } from 'app/js/v4/root/rootTypes';\nimport memoize from 'app/js/v4/utils/memoize';\nimport createServerAccountsSelector from './createServerAccountsSelector';\n\n// This selector may be created frequently in components and saga workers,\n// but there is a limited number of possible selectors based on the arguments.\n// Rather than independently memoize in each component or saga, add a layer of\n// memoization on top of reselect here.\n\nfunction createServerAccountsSortedUsersSelector(\n  machineIdentifier: string\n): OutputSelector<\n  LegacyRootState,\n  ServerAccount[],\n  (serverAccounts: ServerAccountsPerServerState) => ServerAccount[]\n> {\n  return createSelector(\n    createServerAccountsSelector(machineIdentifier),\n    (serverAccounts) =>\n      serverAccounts.accounts.slice().sort(serverAccountComparator)\n  );\n}\n\nexport default memoize(createServerAccountsSortedUsersSelector);\n","import { createSelector, Selector } from 'reselect';\nimport { TopPlayedState } from 'app/js/v4/features/dashboard/dashboardTopPlayedTypes';\nimport { LegacyRootState } from 'app/js/v4/root/rootTypes';\nimport selectDashboard from './selectDashboard';\n\nconst selectDashboardTopPlayed: Selector<LegacyRootState, TopPlayedState> =\n  createSelector(selectDashboard, (dashboard) => dashboard.topPlayed);\n\nexport default selectDashboardTopPlayed;\n","import React, { ReactElement } from 'react';\nimport { MetadataItemResponse } from 'app/js/v4/core/metadata/metadataTypes';\nimport { useSourceContext } from 'app/js/v4/core/servers/components/SourceContextProvider';\nimport PosterCardImg from 'app/js/views/v3/components/core/images/PosterCardImg';\nimport styles from './TopPlayedColumnHeader.css';\n\ninterface TopPlayedColumnHeaderProps {\n  title: string;\n  isEmpty: boolean;\n  metadataItem?: MetadataItemResponse;\n}\n\nexport default function TopPlayedColumnHeader({\n  title,\n  isEmpty,\n  metadataItem,\n}: TopPlayedColumnHeaderProps): ReactElement {\n  const [server] = useSourceContext();\n\n  return (\n    <div className={!isEmpty ? styles.tintedHeader : styles.header}>\n      {!isEmpty && metadataItem ? (\n        <div className={styles.imageContainer}>\n          <PosterCardImg\n            backgroundPosition=\"center top\"\n            height={100}\n            serverEntityID={server.entityID}\n            url={metadataItem.art || metadataItem.thumb}\n            width={200}\n          />\n        </div>\n      ) : null}\n\n      <div\n        className={\n          isEmpty ? styles.emptyTitleBackground : styles.titleBackground\n        }\n      >\n        <div className={styles.titleText}>{title}</div>\n      </div>\n    </div>\n  );\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"header\":\"PEQsU\",\"tintedHeader\":\"zvPJ9 PEQsU\",\"titleBackground\":\"x_MaS\",\"emptyTitleBackground\":\"zIT9A x_MaS\",\"imageContainer\":\"ALzqH\",\"titleText\":\"rSeQD\"};","/* eslint-plugin-disable @typescript-eslint */\n\nimport getSeasonEpisodeIndex from 'app/js/utils/media/getSeasonEpisodeIndex';\nimport * as metadataTypes from 'app/js/utils/types/metadataTypes';\n\nexport default function getFullMetadataTitle(\n  metadataItem: any,\n  separator = '·'\n) {\n  const {\n    type,\n    title,\n    parentTitle,\n    grandparentTitle,\n    index,\n    parentIndex,\n    originallyAvailableAt,\n  } = metadataItem;\n\n  switch (type) {\n    case metadataTypes.EPISODE: {\n      const seasonEpisodeIndex = getSeasonEpisodeIndex({\n        seasonIndex: parentIndex,\n        episodeIndex: index,\n        date: originallyAvailableAt,\n        noLeadingZero: true,\n        separator: ' · ',\n      });\n\n      let finalTitle = `${grandparentTitle} ${separator} ${seasonEpisodeIndex}`;\n\n      if (title) {\n        finalTitle += ` ${separator} ${title}`;\n      }\n\n      return finalTitle;\n    }\n    case metadataTypes.SEASON:\n    case metadataTypes.ALBUM:\n      return `${parentTitle} ${separator} ${title}`;\n    case metadataTypes.TRACK:\n      return `${grandparentTitle} ${separator} ${parentTitle} ${separator} ${title}`;\n    default:\n      return title;\n  }\n}\n","/* eslint-plugin-disable @typescript-eslint */\n\nimport { isParentType } from 'app/js/utils/types/metadataTypes';\nimport { getTimePeriodAfter } from 'app/js/v4/utils/timePeriods';\nimport getFullMetadataTitle from 'app/js/views/v3/helpers/metadata/getFullMetadataTitle';\nimport getPlayHistoryRoute from './getPlayHistoryRoute';\n\nexport default function getMetadataItemPlayHistoryRoute(\n  machineIdentifier: any,\n  metadataItem: any,\n  activeTimePeriod: any\n) {\n  let filters = `metadataItemID=${metadataItem.ratingKey}`;\n\n  if (activeTimePeriod) {\n    filters += `&viewedAt=${getTimePeriodAfter(activeTimePeriod)}`;\n  }\n\n  return getPlayHistoryRoute(machineIdentifier, {\n    filters,\n    filterTitle: getFullMetadataTitle(metadataItem),\n    activeTimePeriod,\n    isParentType: isParentType(metadataItem.type),\n  });\n}\n","import React, { CSSProperties, ReactElement } from 'react';\nimport t from 'app/js/utils/t';\nimport * as metadataTypes from 'app/js/utils/types/metadataTypes';\nimport { useSourceContext } from 'app/js/v4/core/servers/components/SourceContextProvider';\nimport Link from 'app/js/v4/core/ui/buttons/components/Link';\nimport { TopPlayedMetadataItem } from 'app/js/v4/features/dashboard/dashboardTopPlayedTypes';\nimport { TimePeriod } from 'app/js/v4/utils/timePeriods';\nimport MetadataPosterCardImg from 'app/js/views/v3/components/metadata/posters/MetadataPosterCardImg';\nimport getMetadataItemPlayHistoryRoute from 'app/js/views/v3/helpers/routes/getMetadataItemPlayHistoryRoute';\nimport getPrePlayRoute from 'app/js/views/v3/helpers/routes/getPrePlayRoute';\nimport styles from './TopPlayedColumnRow.css';\n\ninterface TopPlayedColumnRowProps {\n  className?: string;\n  style?: CSSProperties;\n  metadataItem: TopPlayedMetadataItem;\n  activeTimePeriod: TimePeriod;\n}\n\nexport default function TopPlayedColumnRow({\n  className,\n  style,\n  metadataItem,\n  activeTimePeriod,\n}: TopPlayedColumnRowProps): ReactElement {\n  const [server] = useSourceContext();\n\n  const { key, type, title, thumb, globalViewCount, userCount } = metadataItem;\n\n  const isArtist = type === metadataTypes.ARTIST;\n  // @ts-expect-error ts-migrate(2554) FIXME: Expected 5 arguments, but got 3.\n  const prePlayRoute = getPrePlayRoute(\n    server,\n    { isLibraryProvider: true },\n    key\n  );\n\n  return (\n    <div className={className} style={style}>\n      <Link\n        className={isArtist ? styles.artistPoster : styles.poster}\n        to={prePlayRoute}\n      >\n        <MetadataPosterCardImg\n          height={isArtist ? 60 : 80}\n          serverEntityID={server.entityID}\n          type={type}\n          url={thumb}\n          width={isArtist ? 60 : 53}\n        />\n      </Link>\n\n      <div className={styles.summary}>\n        <Link className={styles.itemTitle} title={title} to={prePlayRoute}>\n          {title}\n        </Link>\n\n        <Link\n          to={getMetadataItemPlayHistoryRoute(\n            server.machineIdentifier,\n            metadataItem,\n            activeTimePeriod\n          )}\n        >\n          {globalViewCount === 1\n            ? t('{count} play', { count: 1 })\n            : t('{count} plays', { count: globalViewCount })}\n        </Link>\n        <div>\n          {userCount === 1\n            ? t('{count} user', { count: 1 })\n            : t('{count} users', { count: userCount })}\n        </div>\n      </div>\n    </div>\n  );\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"poster\":\"ol_uz IYkbp\",\"artistPoster\":\"BYPu2 IYkbp\",\"summary\":\"U_Ywd\",\"itemTitle\":\"vQWhL IYkbp\"};","// extracted by mini-css-extract-plugin\nexport default {\"title\":\"sVi0Y\",\"item\":\"nOwEy\",\"emptyItem\":\"KqkZS nOwEy\"};","import React, { ReactElement } from 'react';\nimport t from 'app/js/utils/t';\nimport { MetadataType } from 'app/js/v4/core/metadata/metadataTypes';\nimport { TopPlayedMetadataItem } from 'app/js/v4/features/dashboard/dashboardTopPlayedTypes';\nimport { TimePeriod } from 'app/js/v4/utils/timePeriods';\nimport TopPlayedColumnHeader from './TopPlayedColumnHeader';\nimport TopPlayedColumnRow from './TopPlayedColumnRow';\nimport styles from './TopPlayedColumn.css';\n\ninterface TopPlayedColumnProps {\n  className: string;\n  type: MetadataType;\n  title: string;\n  items: TopPlayedMetadataItem[];\n  activeTimePeriod: TimePeriod;\n}\n\nconst backgroundOpacities = [0.5, 0.4, 0.3, 0.2, 0.1, 0.05];\n\nfunction getEmptyTitle(type: MetadataType): string {\n  switch (type) {\n    case MetadataType.Movie:\n      return t('No Movies Played');\n    case MetadataType.Show:\n      return t('No TV Played');\n    case MetadataType.Artist:\n      return t('No Artists Played');\n    case MetadataType.Game:\n      return t('No Games Played');\n    default:\n      return '';\n  }\n}\n\nexport default function TopPlayedColumn({\n  className,\n  type,\n  title,\n  items = [],\n  activeTimePeriod,\n}: TopPlayedColumnProps): ReactElement {\n  const isEmpty = items.length === 0;\n\n  return (\n    <div className={className}>\n      <TopPlayedColumnHeader\n        isEmpty={isEmpty}\n        metadataItem={items[0]}\n        title={title}\n      />\n\n      {isEmpty ? (\n        <div className={styles.emptyItem}>{getEmptyTitle(type)}</div>\n      ) : (\n        items.map((metadataItem, index) => (\n          <TopPlayedColumnRow\n            key={metadataItem.key}\n            activeTimePeriod={activeTimePeriod}\n            className={styles.item}\n            metadataItem={metadataItem}\n            style={{\n              backgroundColor: `rgba(0, 0, 0, ${backgroundOpacities[index]})`,\n            }}\n          />\n        ))\n      )}\n    </div>\n  );\n}\n","import React, { ReactElement } from 'react';\nimport t from 'app/js/utils/t';\nimport { MetadataType } from 'app/js/v4/core/metadata/metadataTypes';\nimport ServerDashboardSectionContent from 'app/js/v4/features/dashboard/components/ServerDashboardSectionContent';\nimport { TopPlayedMetadataItem } from 'app/js/v4/features/dashboard/dashboardTopPlayedTypes';\nimport { TimePeriod } from 'app/js/v4/utils/timePeriods';\nimport TopPlayedColumn from './TopPlayedColumn';\nimport styles from './TopPlayedList.css';\n\ninterface Column {\n  type: MetadataType;\n  title: string;\n  items: TopPlayedMetadataItem[];\n}\n\ninterface TopPlayedListProps {\n  moviesStatistics: TopPlayedMetadataItem[];\n  tvStatistics: TopPlayedMetadataItem[];\n  musicStatistics: TopPlayedMetadataItem[];\n  gameStatistics: TopPlayedMetadataItem[];\n  activeTimePeriod: TimePeriod;\n  isSpinnerVisible: boolean;\n  showList: boolean;\n  errorMessage?: string;\n}\n\nfunction formatData(\n  moviesStatistics: TopPlayedMetadataItem[],\n  tvStatistics: TopPlayedMetadataItem[],\n  musicStatistics: TopPlayedMetadataItem[],\n  gameStatistics: TopPlayedMetadataItem[]\n): Column[] {\n  const result = [\n    {\n      type: MetadataType.Movie,\n      title: t('Movies'),\n      items: moviesStatistics,\n    },\n    {\n      type: MetadataType.Show,\n      title: t('TV'),\n      items: tvStatistics,\n    },\n    {\n      type: MetadataType.Artist,\n      title: t('Artists'),\n      items: musicStatistics,\n    },\n  ];\n\n  return gameStatistics.length > 0\n    ? result.concat({\n        type: MetadataType.Game,\n        title: t('Games'),\n        items: gameStatistics,\n      })\n    : result;\n}\n\nexport default function TopPlayedList({\n  moviesStatistics,\n  tvStatistics,\n  musicStatistics,\n  gameStatistics,\n  activeTimePeriod,\n  isSpinnerVisible,\n  showList,\n  errorMessage,\n}: TopPlayedListProps): ReactElement {\n  const finalShowList = showList && !errorMessage;\n  const columns = formatData(\n    moviesStatistics,\n    tvStatistics,\n    musicStatistics,\n    gameStatistics\n  );\n\n  return (\n    <ServerDashboardSectionContent\n      className={isSpinnerVisible ? styles.spinnerContainer : styles.container}\n      errorMessage={errorMessage}\n      isSpinnerVisible={isSpinnerVisible}\n    >\n      {finalShowList\n        ? columns.map((column) => (\n            <TopPlayedColumn\n              key={column.type}\n              activeTimePeriod={activeTimePeriod}\n              className={styles.column}\n              items={column.items}\n              title={column.title}\n              type={column.type}\n            />\n          ))\n        : null}\n    </ServerDashboardSectionContent>\n  );\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"container\":\"cmi_L htorZ\",\"spinnerContainer\":\"EiWX3 cmi_L htorZ\",\"column\":\"hwl8R\"};","import React, {\n  ReactElement,\n  useCallback,\n  useEffect,\n  useMemo,\n  useState,\n} from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport t from 'app/js/utils/t';\nimport createServerAccountsSortedUsersSelector from 'app/js/v4/core/serverAccounts/selectors/createServerAccountsSortedUsersSelector';\nimport serverAccountsSlice from 'app/js/v4/core/serverAccounts/serverAccountsSlice';\nimport { ServerAccount } from 'app/js/v4/core/serverAccounts/serverAccountsTypes';\nimport { useSourceContext } from 'app/js/v4/core/servers/components/SourceContextProvider';\nimport usePreviousValueForAtMost from 'app/js/v4/core/ui/hooks/usePreviousValueForAtMost';\nimport ServerDashboardPageHeader from 'app/js/v4/features/dashboard/components/ServerDashboardPageHeader';\nimport ServerDashboardAccountMenuButton from 'app/js/v4/features/dashboard/components/menuButtons/ServerDashboardAccountMenuButton';\nimport ServerDashboardFilterMenuButton from 'app/js/v4/features/dashboard/components/menuButtons/ServerDashboardFilterMenuButton';\nimport dashboardTopPlayedSlice from 'app/js/v4/features/dashboard/dashboardTopPlayedSlice';\nimport selectDashboardTopPlayed from 'app/js/v4/features/dashboard/selectors/selectDashboardTopPlayed';\nimport {\n  getTimePeriodAfter,\n  getTimePeriodLabel,\n  TimePeriod,\n} from 'app/js/v4/utils/timePeriods';\nimport TopPlayedList from './TopPlayedList';\n\nexport default function TopPlayed(): ReactElement {\n  const dispatch = useDispatch();\n  const [server] = useSourceContext();\n\n  const [activeAccount, setActiveAccount] = useState<ServerAccount | null>(\n    null\n  );\n\n  const [activeTimePeriod, setActiveTimePeriod] = useState(TimePeriod.Month);\n\n  const timePeriods = useMemo(() => {\n    return [\n      TimePeriod.Week,\n      TimePeriod.Month,\n      TimePeriod.NinetyDays,\n      TimePeriod.Year,\n      TimePeriod.AllTime,\n    ];\n  }, []);\n\n  const {\n    moviesStatistics,\n    tvStatistics,\n    musicStatistics,\n    gameStatistics,\n    isPending,\n    isPopulated,\n    error,\n  } = useSelector(selectDashboardTopPlayed);\n\n  const isDelayedPending = usePreviousValueForAtMost(isPending, true);\n\n  const sortedAccounts = useSelector(\n    createServerAccountsSortedUsersSelector(server.machineIdentifier)\n  );\n\n  //\n  // Callbacks\n\n  const onAccountSelect = useCallback((account: ServerAccount) => {\n    setActiveAccount(account);\n  }, []);\n\n  const onTimePeriodSelect = useCallback((timePeriod: TimePeriod) => {\n    setActiveTimePeriod(timePeriod);\n  }, []);\n\n  //\n  // Effects\n\n  useEffect(() => {\n    dispatch(serverAccountsSlice.actions.populateRequested({ server }));\n  }, [dispatch, server]);\n\n  useEffect(() => {\n    dispatch(\n      dashboardTopPlayedSlice.actions.topPlayedFetchRequested({\n        server,\n        accountID: activeAccount ? activeAccount.id : undefined,\n        viewedAt: getTimePeriodAfter(activeTimePeriod),\n        limit: 6,\n      })\n    );\n  }, [activeTimePeriod, activeAccount, dispatch, server]);\n\n  useEffect(() => {\n    return () => {\n      dispatch(dashboardTopPlayedSlice.actions.reset());\n    };\n  }, [dispatch]);\n\n  //\n  // Render\n\n  return (\n    <>\n      <ServerDashboardPageHeader title={t('Top Played')}>\n        <div>\n          <ServerDashboardAccountMenuButton\n            accounts={sortedAccounts}\n            activeAccount={activeAccount}\n            onAccountSelect={onAccountSelect}\n          />\n\n          <ServerDashboardFilterMenuButton\n            activeValue={activeTimePeriod}\n            formatter={getTimePeriodLabel}\n            values={timePeriods}\n            onSelect={onTimePeriodSelect}\n          />\n        </div>\n      </ServerDashboardPageHeader>\n\n      <TopPlayedList\n        activeTimePeriod={activeTimePeriod}\n        errorMessage={error ? t('Unable to load statistics') : undefined}\n        gameStatistics={gameStatistics}\n        isSpinnerVisible={isDelayedPending}\n        moviesStatistics={moviesStatistics}\n        musicStatistics={musicStatistics}\n        showList={!isDelayedPending && isPopulated}\n        tvStatistics={tvStatistics}\n      />\n    </>\n  );\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"iconButton\":\"o4z1S IYkbp\",\"isDisabled\":\"b8av9\",\"isActive\":\"BD3TT\"};","import classNames from 'classnames';\nimport React, {\n  ComponentType,\n  ReactElement,\n  ReactNode,\n  SVGAttributes,\n} from 'react';\nimport { IconProps } from '@plex/react-chroma-icon';\nimport RequireOnlyOne from 'app/js/v4/types/RequireOnlyOne';\nimport Link, { LinkProps } from './Link';\nimport styles from './IconButton.css';\n\nexport type IconButtonProps = LinkProps &\n  RequireOnlyOne<\n    {\n      // Accept children to support IconButton within a TooltipTrigger.\n      children?: ReactNode;\n      className?: string;\n      iconComponent:\n        | ComponentType<IconProps>\n        | ComponentType<SVGAttributes<SVGElement>>;\n      iconClassName?: string;\n      activeClassName?: string;\n      disabledClassName?: string;\n      isDisabled?: boolean;\n      isActive?: boolean;\n      ariaLabel?: string;\n      title?: string;\n    },\n    'ariaLabel' | 'title'\n  >;\n\nexport default function IconButton({\n  // Accept children to support IconButton within a TooltipTrigger.\n  children,\n  className = styles.iconButton,\n  activeClassName = styles.isActive,\n  disabledClassName = styles.isDisabled,\n  iconClassName,\n  iconComponent: Icon,\n  isDisabled = false,\n  isActive = false,\n  title,\n  ariaLabel,\n  ...linkProps\n}: IconButtonProps): ReactElement {\n  const finalAriaLabel = ariaLabel || title;\n\n  return (\n    <Link\n      {...linkProps}\n      aria-label={finalAriaLabel}\n      className={classNames(\n        className,\n        isDisabled && disabledClassName,\n        isActive && activeClassName\n      )}\n      isDisabled={isDisabled}\n      title={title}\n    >\n      <Icon className={iconClassName} />\n\n      {children}\n    </Link>\n  );\n}\n","import { createSelector, Selector } from 'reselect';\nimport { TopUsersState } from 'app/js/v4/features/dashboard/dashboardTopUsersTypes';\nimport { LegacyRootState } from 'app/js/v4/root/rootTypes';\nimport selectDashboard from './selectDashboard';\n\nconst selectDashboardTopUsers: Selector<LegacyRootState, TopUsersState> =\n  createSelector(selectDashboard, (dashboard) => dashboard.topUsers);\n\nexport default selectDashboardTopUsers;\n","import assert from 'app/js/utils/log/assert';\nimport {\n  Layout,\n  VirtualCellPosition,\n  VirtualListDimensions,\n  VirtualListMeasurements,\n  VirtualListRanges,\n} from 'app/js/v4/core/ui/lists/listsTypes';\nimport clampListIndex from 'app/js/views/v3/helpers/layouts/clampListIndex';\n\nexport enum GridDirection {\n  Vertical = 'vertical',\n  Horizontal = 'horizontal',\n}\n\nexport interface GridLayoutOptions {\n  direction: GridDirection;\n  rows?: number;\n  columns?: number;\n  overscan?: number;\n  innerHorizontalPadding?: number;\n  innerVerticalPadding?: number;\n  outerPaddingTop?: number;\n  outerPaddingRight?: number;\n  outerPaddingBottom?: number;\n  outerPaddingLeft?: number;\n  getCellWidth: (options: {\n    innerViewportWidth: number;\n    innerViewportHeight: number;\n    innerHorizontalPadding: number;\n    innerVerticalPadding: number;\n  }) => number;\n  getCellHeight: (options: {\n    cellWidth: number;\n    innerViewportWidth: number;\n    innerViewportHeight: number;\n    innerHorizontalPadding: number;\n    innerVerticalPadding: number;\n  }) => number;\n}\n\nexport default function createGridLayout({\n  direction = GridDirection.Vertical,\n  rows,\n  columns,\n  overscan = 0,\n  innerHorizontalPadding = 0,\n  innerVerticalPadding = 0,\n  outerPaddingTop = 0,\n  outerPaddingRight = 0,\n  outerPaddingBottom = 0,\n  outerPaddingLeft = 0,\n  getCellWidth,\n  getCellHeight,\n}: GridLayoutOptions): Layout<VirtualListMeasurements> {\n  interface RowColumnOptions {\n    cellsPerRow: number;\n    cellsPerColumn: number;\n  }\n\n  function getRow(index: number, options: RowColumnOptions): number {\n    return direction === GridDirection.Vertical\n      ? Math.floor(index / options.cellsPerRow)\n      : index % options.cellsPerColumn;\n  }\n\n  function getColumn(index: number, options: RowColumnOptions): number {\n    return direction === GridDirection.Vertical\n      ? index % options.cellsPerRow\n      : Math.floor(index / options.cellsPerColumn);\n  }\n\n  return {\n    getListMeasurements(\n      dimensions: VirtualListDimensions,\n      size: number\n    ): VirtualListMeasurements {\n      __DEV__ &&\n        assert(\n          rows || dimensions.viewportHeight != null,\n          'A grid list must have a viewport height or a fixed number of rows'\n        );\n\n      __DEV__ &&\n        assert(\n          columns || dimensions.viewportWidth != null,\n          'A grid list must have a viewport width or a fixed number of columns'\n        );\n\n      const listTop = dimensions.listTop;\n      const listLeft = dimensions.listLeft;\n\n      let innerViewportWidth =\n        (dimensions.viewportWidth || 0) - outerPaddingRight - outerPaddingLeft;\n      let innerViewportHeight =\n        (dimensions.viewportHeight || 0) - outerPaddingTop - outerPaddingBottom;\n\n      if (direction === GridDirection.Vertical) {\n        innerViewportWidth -= listLeft;\n      } else {\n        innerViewportHeight -= listTop;\n      }\n\n      innerViewportWidth = Math.max(0, innerViewportWidth);\n      innerViewportHeight = Math.max(0, innerViewportHeight);\n\n      const cellWidth = getCellWidth({\n        innerViewportWidth,\n        innerViewportHeight,\n        innerHorizontalPadding,\n        innerVerticalPadding,\n      });\n\n      const cellHeight = getCellHeight({\n        cellWidth,\n        innerViewportWidth,\n        innerViewportHeight,\n        innerHorizontalPadding,\n        innerVerticalPadding,\n      });\n\n      const cellsPerColumn = Math.max(\n        0,\n        rows ||\n          Math.floor(\n            (innerViewportHeight + innerVerticalPadding) /\n              (cellHeight + innerVerticalPadding)\n          )\n      );\n      const cellsPerRow = Math.max(\n        0,\n        columns ||\n          Math.floor(\n            (innerViewportWidth + innerHorizontalPadding) /\n              (cellWidth + innerHorizontalPadding)\n          )\n      );\n      const cellsPerPage = cellsPerRow * cellsPerColumn;\n\n      let width = 0;\n      let height = 0;\n\n      if (direction === GridDirection.Vertical && cellsPerRow) {\n        width =\n          cellsPerRow * (cellWidth + innerHorizontalPadding) -\n          innerHorizontalPadding;\n        height =\n          Math.ceil(size / cellsPerRow) * (cellHeight + innerVerticalPadding) -\n          innerVerticalPadding;\n      } else if (direction === GridDirection.Horizontal && cellsPerColumn) {\n        width =\n          Math.ceil(size / cellsPerColumn) *\n            (cellWidth + innerHorizontalPadding) -\n          innerHorizontalPadding;\n        height =\n          cellsPerColumn * (cellHeight + innerVerticalPadding) -\n          innerVerticalPadding;\n      }\n\n      return {\n        width: width + outerPaddingRight + outerPaddingLeft,\n        height: height + outerPaddingTop + outerPaddingBottom,\n        outerPaddingTop,\n        outerPaddingRight,\n        outerPaddingBottom,\n        outerPaddingLeft,\n        listTop,\n        listLeft,\n        cellWidth,\n        cellHeight,\n        cellsPerColumn,\n        cellsPerRow,\n        cellsPerPage,\n      };\n    },\n\n    getPositionForIndex(\n      index: number,\n      measurements: VirtualListMeasurements\n    ): VirtualCellPosition {\n      const { listTop, listLeft, cellWidth, cellHeight } = measurements;\n\n      const column = getColumn(index, measurements);\n      const row = getRow(index, measurements);\n\n      return {\n        column,\n        row,\n        cellX:\n          column * (cellWidth + innerHorizontalPadding) +\n          listLeft +\n          outerPaddingLeft,\n        cellY:\n          row * (cellHeight + innerVerticalPadding) + listTop + outerPaddingTop,\n        cellWidth,\n        cellHeight,\n      };\n    },\n\n    getRangesForPosition(\n      scrollTop: number,\n      scrollLeft: number,\n      size: number,\n      measurements: VirtualListMeasurements\n    ): VirtualListRanges {\n      const {\n        listTop,\n        listLeft,\n        cellWidth,\n        cellHeight,\n        cellsPerColumn,\n        cellsPerRow,\n        cellsPerPage,\n      } = measurements;\n\n      // The render range represents cells that will be rendered in the list. The\n      // visible range represents cells that can actually be seen in the list.\n      // Cells within the render range, but outside the visible range may defer\n      // loading an image, for example. Clamp the ranges to indices that actually\n      // exist in the list of items.\n\n      const finalCellHeight = cellHeight + innerVerticalPadding;\n      const finalCellWidth = cellWidth + innerHorizontalPadding;\n      const finalScrollTop = scrollTop - listTop;\n      const finalScrollLeft = scrollLeft - listLeft;\n\n      const cellsPerGroup =\n        direction === GridDirection.Vertical ? cellsPerRow : cellsPerColumn;\n\n      const groupIndex =\n        direction === GridDirection.Vertical\n          ? finalScrollTop / finalCellHeight\n          : finalScrollLeft / finalCellWidth;\n\n      const maxRenderedCells =\n        cellsPerPage + cellsPerGroup * 2 + overscan * cellsPerGroup * 2;\n\n      const visibleStartIndex = Math.ceil(groupIndex) * cellsPerGroup;\n      const visibleEndIndex = visibleStartIndex + cellsPerPage - 1;\n\n      let renderStartIndex = visibleStartIndex - cellsPerGroup * overscan;\n      const renderEndIndex =\n        clampListIndex(renderStartIndex, size) + maxRenderedCells - 1;\n\n      if (renderEndIndex >= size) {\n        renderStartIndex = size - maxRenderedCells;\n      }\n\n      return {\n        visibleStartIndex: clampListIndex(visibleStartIndex, size),\n        visibleEndIndex: clampListIndex(visibleEndIndex, size),\n        renderStartIndex: clampListIndex(renderStartIndex, size),\n        renderEndIndex: clampListIndex(renderEndIndex, size),\n      };\n    },\n  };\n}\n","/* eslint-plugin-disable @typescript-eslint */\n\nexport default function clampListIndex(index: any, size: any) {\n  return Math.max(Math.min(index, size - 1), 0);\n}\n","import { Ref, useEffect, useRef } from 'react';\nimport { ResizeObserver as Polyfill } from '@juggle/resize-observer';\n\nconst ResizeObserver = window.ResizeObserver || Polyfill;\n\nfunction useResizeObserver<Element extends HTMLElement>(\n  callback: ResizeObserverCallback\n): Ref<Element> {\n  const elRef = useRef<Element>(null);\n  const observeRef = useRef<ResizeObserver | null>(null);\n\n  useEffect(() => {\n    if (elRef.current) {\n      observeRef.current = new ResizeObserver(callback);\n      observeRef.current.observe(elRef.current);\n    }\n\n    return () => {\n      observeRef.current?.disconnect();\n      observeRef.current = null;\n    };\n  }, [callback]);\n\n  return elRef;\n}\n\nexport default useResizeObserver;\n","import React, { ReactElement, ReactNode, useEffect, useMemo } from 'react';\nimport useVirtualListCells, {\n  VirtualListCellsProps,\n} from 'app/js/v4/core/ui/lists/hooks/useVirtualListCells';\nimport { VirtualListMeasurements } from 'app/js/v4/core/ui/lists/listsTypes';\nimport { VerticalStackMeasurements } from 'app/js/v4/core/ui/lists/utils/createVerticalStackLayout';\nimport { PAGE_REQUEST_DELAY_MS } from 'app/js/v4/core/ui/lists/utils/pagination';\n\ntype OmittedCellsProps =\n  | 'measurements'\n  | 'renderEndIndex'\n  | 'renderStartIndex'\n  | 'visibleEndIndex'\n  | 'visibleStartIndex';\n\nexport interface VirtualListProps<ItemType, ItemKeyProp, ListMeasurementsType>\n  extends Omit<\n    VirtualListCellsProps<ItemType, ItemKeyProp, ListMeasurementsType>,\n    OmittedCellsProps\n  > {\n  className?: string;\n  children?: ReactNode;\n  totalSize: number;\n  viewportWidth: number;\n  viewportHeight: number;\n  listTop?: number;\n  listLeft?: number;\n  scrollTop: number;\n  scrollLeft: number;\n  isWaitingToRestoreScrollPosition?: boolean;\n  onListReady?(measurements: ListMeasurementsType): void;\n}\n\nexport default function VirtualList<\n  ItemType,\n  ItemKeyProp extends keyof ItemType,\n  ListMeasurementsType extends\n    | VerticalStackMeasurements\n    | VirtualListMeasurements\n>({\n  className,\n  children,\n  keyPropName,\n  items,\n  totalSize,\n  layout,\n  cellComponentFactory,\n  viewportWidth,\n  viewportHeight,\n  listTop = 0,\n  listLeft = 0,\n  scrollTop,\n  scrollLeft,\n  isWaitingToRestoreScrollPosition = false,\n  minPageCount = 3,\n  minPageSize = 24,\n  pageRequestDelay = PAGE_REQUEST_DELAY_MS,\n  onPageRequest,\n  onListReady,\n  onListUpdate,\n}: VirtualListProps<\n  ItemType,\n  ItemKeyProp,\n  ListMeasurementsType\n>): ReactElement {\n  const measurements = useMemo(() => {\n    return layout.getListMeasurements(\n      {\n        viewportWidth,\n        viewportHeight,\n        listTop,\n        listLeft,\n      },\n      totalSize\n    );\n  }, [viewportWidth, viewportHeight, layout, listTop, listLeft, totalSize]);\n\n  const {\n    renderStartIndex,\n    renderEndIndex,\n    visibleStartIndex,\n    visibleEndIndex,\n  } = useMemo(() => {\n    return layout.getRangesForPosition(\n      scrollTop,\n      scrollLeft,\n      totalSize,\n      measurements\n    );\n  }, [layout, measurements, scrollLeft, scrollTop, totalSize]);\n\n  const cells = useVirtualListCells({\n    keyPropName,\n    items,\n    totalSize,\n    layout,\n    measurements,\n    renderStartIndex,\n    renderEndIndex,\n    visibleStartIndex,\n    visibleEndIndex,\n    cellComponentFactory,\n    minPageCount,\n    minPageSize,\n    pageRequestDelay,\n    onPageRequest,\n    onListUpdate,\n  });\n\n  //\n  // Effects\n\n  useEffect(() => {\n    if (onListReady) {\n      onListReady(measurements);\n    }\n  }, [measurements, onListReady]);\n\n  //\n  // Render\n\n  return (\n    <div\n      className={className}\n      style={{\n        width: measurements.width,\n        height: measurements.height,\n        position: 'relative',\n      }}\n    >\n      {isWaitingToRestoreScrollPosition || !measurements.height ? null : cells}\n      {children}\n    </div>\n  );\n}\n","export const HUB_INITIAL_SIZE = 12;\nexport const CLOUD_MAX_PAGE_SIZE = 200;\nexport const PMS_MAX_PAGE_SIZE = 400;\nexport const PAGE_REQUEST_DELAY_MS = 200;\n","import { ReactElement, useEffect, useMemo, useRef } from 'react';\nimport {\n  Layout,\n  RangeOptions,\n  VirtualCellFactory,\n  VirtualCellProps,\n  VirtualListRanges,\n} from 'app/js/v4/core/ui/lists/listsTypes';\nimport usePrevious from 'app/js/views/v3/helpers/hooks/usePrevious';\n\n// Keep the cells as a separate component from the list and memoize the cells to\n// avoid re-rendering every time the scroll position changes. Instead, we should\n// only re-render when the render / visible indices change.\n\nexport interface VirtualListCellsProps<\n  ItemType,\n  ItemKeyProp,\n  ListMeasurementsType\n> {\n  keyPropName?: ItemKeyProp;\n  items: (ItemType | undefined)[];\n  measurements: ListMeasurementsType;\n  layout: Layout<ListMeasurementsType>;\n  totalSize: number;\n  renderStartIndex: number;\n  renderEndIndex: number;\n  visibleStartIndex: number;\n  visibleEndIndex: number;\n  cellComponentFactory: VirtualCellFactory<ItemType>;\n  minPageCount?: number;\n  minPageSize?: number;\n  pageRequestDelay?: number;\n  onPageRequest?(rangeOptions: RangeOptions): void;\n  onListUpdate?(ranges: VirtualListRanges): void;\n}\n\nfunction useVirtualListCells<\n  ItemType,\n  ItemKeyProp extends keyof ItemType,\n  ListMeasurementsType\n>({\n  keyPropName,\n  items,\n  totalSize,\n  layout,\n  measurements,\n  renderStartIndex,\n  renderEndIndex,\n  visibleStartIndex,\n  visibleEndIndex,\n  cellComponentFactory,\n  minPageCount,\n  minPageSize,\n  pageRequestDelay,\n  onPageRequest,\n  onListUpdate,\n}: VirtualListCellsProps<\n  ItemType,\n  ItemKeyProp,\n  ListMeasurementsType\n>): ReactElement<VirtualCellProps<ItemType>>[] {\n  // Keep the previous start index to know whether the list is being scrolled\n  // forward or backward.\n  const prevRenderStartIndex = usePrevious(renderStartIndex);\n  const isScrollingBackRef = useRef(false);\n\n  // There may be a re-render in which `renderStartIndex` doesn't change and the\n  // previous value would equal the current value. Keep using the last\n  // `isScrollingBack` value in this case.\n\n  if (renderStartIndex !== prevRenderStartIndex) {\n    isScrollingBackRef.current =\n      prevRenderStartIndex == null\n        ? false\n        : renderStartIndex < prevRenderStartIndex;\n  }\n\n  //\n  // Effects\n\n  useEffect(() => {\n    let timeoutID: number;\n\n    if (onPageRequest && minPageCount && minPageSize) {\n      // In a virtualized list, not every cell will have an item immediately. An\n      // empty cell is a signal that more items need to be fetched. Look past\n      // the currently rendered range and see if more items will need to be\n      // fetched.\n\n      const isScrollingBack = isScrollingBackRef.current;\n      const renderSize = renderEndIndex - renderStartIndex + 1;\n      const pageSize = Math.max(renderSize * minPageCount, minPageSize);\n\n      let hasMissingItem = false;\n      let i: number;\n\n      if (isScrollingBack) {\n        const start = Math.max(renderEndIndex - pageSize + 1, 0);\n        i = renderEndIndex;\n\n        while (i >= start) {\n          if (items[i] == null) {\n            hasMissingItem = true;\n            break;\n          }\n\n          i--;\n        }\n      } else {\n        const end = Math.min(renderStartIndex + pageSize - 1, totalSize - 1);\n        i = renderStartIndex;\n\n        while (i <= end) {\n          if (items[i] == null) {\n            hasMissingItem = true;\n            break;\n          }\n\n          i++;\n        }\n      }\n\n      if (hasMissingItem) {\n        timeoutID = window.setTimeout(() => {\n          onPageRequest({\n            startIndex: i,\n            size: pageSize,\n            isPrepend: isScrollingBack,\n          });\n        }, pageRequestDelay);\n      }\n    }\n\n    return () => window.clearTimeout(timeoutID);\n  }, [\n    items,\n    minPageCount,\n    minPageSize,\n    onPageRequest,\n    pageRequestDelay,\n    prevRenderStartIndex,\n    renderEndIndex,\n    renderStartIndex,\n    totalSize,\n  ]);\n\n  useEffect(() => {\n    if (onListUpdate) {\n      onListUpdate({\n        renderStartIndex,\n        renderEndIndex,\n        visibleStartIndex,\n        visibleEndIndex,\n      });\n    }\n  }, [\n    onListUpdate,\n    renderEndIndex,\n    renderStartIndex,\n    visibleEndIndex,\n    visibleStartIndex,\n  ]);\n\n  //\n  // Render\n\n  return useMemo(() => {\n    const cells = [];\n\n    for (let i = renderStartIndex; i <= renderEndIndex; i++) {\n      const item = items[i];\n      const isVisible = i >= visibleStartIndex && i <= visibleEndIndex;\n      const position = layout.getPositionForIndex(i, measurements);\n\n      cells.push(\n        cellComponentFactory({\n          key: item && keyPropName ? String(item[keyPropName]) : String(i),\n          isVirtual: true,\n          isVisible,\n          cellIndex: i,\n          item,\n          ...position,\n        })\n      );\n    }\n\n    return cells;\n  }, [\n    cellComponentFactory,\n    items,\n    keyPropName,\n    layout,\n    measurements,\n    renderEndIndex,\n    renderStartIndex,\n    visibleEndIndex,\n    visibleStartIndex,\n  ]);\n}\n\nexport default useVirtualListCells;\n","// extracted by mini-css-extract-plugin\nexport default {\"scroller\":\"GSAom sWZ6m\"};","import React, {\n  ReactElement,\n  ReactNode,\n  useCallback,\n  useMemo,\n  useState,\n} from 'react';\nimport useResizeObserver from 'app/js/v4/core/ui/hooks/useResizeObserver';\nimport VirtualList, {\n  VirtualListProps,\n} from 'app/js/v4/core/ui/lists/components/VirtualList';\nimport {\n  VirtualCellPosition,\n  VirtualListMeasurements,\n} from 'app/js/v4/core/ui/lists/listsTypes';\nimport { VerticalStackMeasurements } from 'app/js/v4/core/ui/lists/utils/createVerticalStackLayout';\nimport useScrollRestore from 'app/js/v4/core/ui/scrollers/hooks/useScrollRestore';\nimport { ScrollPosition } from 'app/js/v4/core/ui/scrollers/scrollerTypes';\nimport Scroller, { ScrollDirection } from './Scroller';\nimport styles from './VirtualListScroller.css';\n\ntype OmittedListProps =\n  | 'isWaitingToRestoreScrollPosition'\n  | 'scrollLeft'\n  | 'scrollTop'\n  | 'viewportHeight'\n  | 'viewportWidth';\n\nexport interface VirtualListScrollerProps<\n  ItemType,\n  ItemKeyProp,\n  ListMeasurementsType\n> extends Omit<\n    VirtualListProps<ItemType, ItemKeyProp, ListMeasurementsType>,\n    OmittedListProps\n  > {\n  className?: string;\n  scrollerKey?: string;\n  scrollerStyle?: object;\n  virtualListClassName?: string;\n  resizeTimeout?: number;\n  scrollDirection?: ScrollDirection;\n  targetScrollIndex?: number;\n  shouldCenterScrollIndex?: boolean;\n  autoScroll?: boolean;\n  smoothScroll?: boolean;\n  renderAboveList?: (measurements: Measurements) => ReactNode;\n  renderBelowList?: (measurements: Measurements) => ReactNode;\n}\n\ninterface Measurements {\n  width: number;\n  height: number;\n}\n\nexport function calculateScrollPositions<\n  ListMeasurementsType extends {\n    outerPaddingTop: number;\n    outerPaddingLeft: number;\n  }\n>(\n  scrollDirection: ScrollDirection,\n  cellPosition: VirtualCellPosition,\n  options: {\n    shouldCenterCell: boolean;\n    measurements: Measurements;\n    listMeasurements: ListMeasurementsType;\n  }\n): ScrollPosition {\n  const { shouldCenterCell, measurements, listMeasurements } = options;\n\n  const scrollTop =\n    scrollDirection === ScrollDirection.Vertical ||\n    scrollDirection === ScrollDirection.Omni\n      ? calculateScrollPosition(cellPosition.cellY, {\n          shouldCenterCell,\n          viewportDimension: measurements.height,\n          offset: listMeasurements.outerPaddingTop,\n          cellDimension: cellPosition.cellHeight,\n        })\n      : 0;\n\n  const scrollLeft =\n    scrollDirection === ScrollDirection.Horizontal ||\n    scrollDirection === ScrollDirection.Omni\n      ? calculateScrollPosition(cellPosition.cellX, {\n          shouldCenterCell,\n          viewportDimension: measurements.width,\n          offset: listMeasurements.outerPaddingLeft,\n          cellDimension: cellPosition.cellWidth,\n        })\n      : 0;\n\n  return {\n    scrollTop,\n    scrollLeft,\n  };\n}\n\nfunction calculateScrollPosition(\n  cellPositionValue: number,\n  options: {\n    shouldCenterCell: boolean;\n    viewportDimension: number;\n    offset: number;\n    cellDimension: number;\n  }\n): number {\n  if (options.shouldCenterCell) {\n    const halfAvailableDimension =\n      (options.viewportDimension - options.cellDimension) / 2;\n    const centeredScrollPosition = Math.round(\n      cellPositionValue - halfAvailableDimension\n    );\n\n    return Math.max(centeredScrollPosition, 0);\n  }\n\n  return cellPositionValue - (options.offset || 0);\n}\n\nexport default function VirtualListScroller<\n  ItemType,\n  ItemKeyProp extends keyof ItemType,\n  ListMeasurementsType extends\n    | VerticalStackMeasurements\n    | VirtualListMeasurements\n>({\n  className = styles.scroller,\n  scrollerKey = 'VirtualListScroller',\n  scrollerStyle,\n  virtualListClassName,\n  layout,\n  resizeTimeout,\n  scrollDirection = ScrollDirection.Vertical,\n  targetScrollIndex,\n  shouldCenterScrollIndex = false,\n  autoScroll = true,\n  smoothScroll = true,\n  renderAboveList,\n  renderBelowList,\n  onListReady: onListReadyFromProps,\n  ...virtualListProps\n}: VirtualListScrollerProps<\n  ItemType,\n  ItemKeyProp,\n  ListMeasurementsType\n>): ReactElement {\n  const [scrollPosition, setScrollPosition] = useState<ScrollPosition>({\n    scrollTop: 0,\n    scrollLeft: 0,\n  });\n  const [measurements, setMeasurements] = useState<Measurements>({\n    width: 0,\n    height: 0,\n  });\n  const isListMeasured = !!(measurements.width || measurements.height);\n\n  const [listMeasurements, setIsListMeasurements] = useState<\n    ListMeasurementsType | undefined\n  >(undefined);\n\n  const onResize = useCallback<ResizeObserverCallback>(([entry]) => {\n    // The `useMeasure` hook uses `el.getBoundingClientRect()` which measures\n    // the width of the element including the scrollbar. We want to measure\n    // the area inside Scroller with out the scrollbar, so we use\n    // `clientWidth` and `clientHeight` here to get accurate measurements\n    // See: https://developer.mozilla.org/en-US/docs/Web/API/Element/getBoundingClientRect\n    // See: https://developer.mozilla.org/en-US/docs/Web/API/Element/clientWidth\n    setMeasurements({\n      width: entry.target.clientWidth,\n      height: entry.target.clientHeight,\n    });\n  }, []);\n  const measureRef = useResizeObserver<HTMLDivElement>(onResize);\n\n  const scrollPositions = useMemo(() => {\n    if (!listMeasurements || !measurements || targetScrollIndex == null) {\n      return;\n    }\n\n    const position = layout.getPositionForIndex(\n      Math.max(targetScrollIndex, 0),\n      listMeasurements\n    );\n\n    return calculateScrollPositions(scrollDirection, position, {\n      shouldCenterCell: shouldCenterScrollIndex,\n      measurements,\n      listMeasurements,\n    });\n  }, [\n    layout,\n    listMeasurements,\n    measurements,\n    scrollDirection,\n    shouldCenterScrollIndex,\n    targetScrollIndex,\n  ]);\n\n  let targetScrollTop;\n  let targetScrollLeft;\n\n  if (scrollPositions) {\n    targetScrollTop = scrollPositions.scrollTop;\n    targetScrollLeft = scrollPositions.scrollLeft;\n  }\n\n  //\n  // Callbacks\n\n  const onScrollPositionChange = useCallback(({ scrollLeft, scrollTop }) => {\n    setScrollPosition({\n      scrollTop,\n      scrollLeft,\n    });\n  }, []);\n\n  const {\n    isWaitingToRestoreScrollPosition,\n    scrollRestoreProps,\n    onScrollPositionReady,\n  } = useScrollRestore({\n    key: scrollerKey,\n    onScrollPositionChange,\n  });\n\n  const onListReady = useCallback(\n    (listMeasurements_: ListMeasurementsType) => {\n      setIsListMeasurements(listMeasurements_);\n      onScrollPositionReady();\n\n      if (onListReadyFromProps) {\n        onListReadyFromProps(listMeasurements_);\n      }\n    },\n    [onListReadyFromProps, onScrollPositionReady]\n  );\n\n  //\n  // Render\n\n  return (\n    <Scroller\n      ref={measureRef}\n      autoScroll={autoScroll}\n      className={className}\n      scrollDirection={scrollDirection}\n      smoothScroll={smoothScroll}\n      style={scrollerStyle}\n      targetScrollLeft={targetScrollLeft}\n      targetScrollTop={targetScrollTop}\n      {...scrollRestoreProps}\n    >\n      {renderAboveList && !isWaitingToRestoreScrollPosition\n        ? renderAboveList(measurements)\n        : null}\n\n      {isListMeasured ? (\n        <VirtualList\n          className={virtualListClassName}\n          isWaitingToRestoreScrollPosition={isWaitingToRestoreScrollPosition}\n          layout={layout}\n          scrollLeft={scrollPosition.scrollLeft}\n          scrollTop={scrollPosition.scrollTop}\n          viewportHeight={measurements.height}\n          viewportWidth={measurements.width}\n          onListReady={onListReady}\n          {...virtualListProps}\n        />\n      ) : null}\n\n      {renderBelowList && !isWaitingToRestoreScrollPosition\n        ? renderBelowList(measurements)\n        : null}\n    </Scroller>\n  );\n}\n","import { useCallback, useEffect, useRef, useState } from 'react';\nimport { ScrollPosition } from 'app/js/v4/core/ui/scrollers/scrollerTypes';\nimport pageStorage from 'app/js/views/v3/helpers/pageStorage';\n\ninterface ScrollRestoreOptions {\n  key: string;\n  shouldRestoreImmediately?: boolean;\n  onScrollPositionChange?(position: ScrollPosition): void;\n}\n\ninterface ScrollRestoreResult {\n  isWaitingToRestoreScrollPosition: boolean;\n  scrollRestoreProps: {\n    targetScrollTop?: number;\n    targetScrollLeft?: number;\n    smoothScroll?: boolean;\n    onScrollPositionChange(scrollPosition: ScrollPosition): void;\n  };\n  onScrollPositionReady(): void;\n}\n\nexport default function useScrollRestore({\n  key,\n  shouldRestoreImmediately = false,\n  onScrollPositionChange: onScrollPositionChangeFromProps,\n}: ScrollRestoreOptions): ScrollRestoreResult {\n  const storageKey = pageStorage.getKey(`${key}!scrollPosition`);\n  const lastScrollPositionRef = useRef<ScrollPosition | null>(null);\n\n  const [isRestoring, setIsRestoring] = useState(!!pageStorage.get(storageKey));\n  const [targetScrollTop, setTargetScrollTop] = useState(undefined);\n  const [targetScrollLeft, setTargetScrollLeft] = useState(undefined);\n\n  //\n  // Callbacks\n\n  const onScrollPositionReady = useCallback(() => {\n    const restorePosition = pageStorage.get(storageKey);\n\n    if (restorePosition) {\n      setTargetScrollTop(restorePosition.scrollTop);\n      setTargetScrollLeft(restorePosition.scrollLeft);\n    }\n  }, [storageKey]);\n\n  const onScrollPositionChange = useCallback(\n    (scrollPosition: ScrollPosition) => {\n      lastScrollPositionRef.current = scrollPosition;\n\n      if (onScrollPositionChangeFromProps) {\n        onScrollPositionChangeFromProps(scrollPosition);\n      }\n    },\n    [onScrollPositionChangeFromProps]\n  );\n\n  //\n  // Effects\n\n  useEffect(() => {\n    const restorePosition = pageStorage.get(storageKey);\n\n    if (restorePosition) {\n      setIsRestoring(true);\n\n      if (shouldRestoreImmediately) {\n        setTargetScrollTop(restorePosition.scrollTop);\n        setTargetScrollLeft(restorePosition.scrollLeft);\n      }\n    }\n\n    return () => {\n      const lastScrollPosition = lastScrollPositionRef.current;\n      lastScrollPositionRef.current = null;\n\n      if (\n        lastScrollPosition &&\n        (lastScrollPosition.scrollTop || lastScrollPosition.scrollLeft)\n      ) {\n        pageStorage.set(storageKey, lastScrollPosition);\n      } else {\n        pageStorage.remove(storageKey);\n      }\n    };\n  }, [shouldRestoreImmediately, storageKey]);\n\n  useEffect(() => {\n    if (targetScrollTop || targetScrollLeft) {\n      setIsRestoring(false);\n      setTargetScrollTop(undefined);\n      setTargetScrollLeft(undefined);\n    }\n  }, [targetScrollLeft, targetScrollTop]);\n\n  //\n  // Return\n\n  return {\n    isWaitingToRestoreScrollPosition: isRestoring,\n\n    scrollRestoreProps: isRestoring\n      ? {\n          targetScrollTop,\n          targetScrollLeft,\n          smoothScroll: false,\n          onScrollPositionChange,\n        }\n      : { onScrollPositionChange },\n\n    onScrollPositionReady,\n  };\n}\n","import { useEffect, useRef } from 'react';\n\nexport default function usePrevious<T>(value: T): T | undefined {\n  const ref = useRef<T>();\n\n  useEffect(() => {\n    ref.current = value;\n  }, [value]);\n\n  return ref.current;\n}\n","import { CSSProperties, Ref, useLayoutEffect, useMemo, useRef } from 'react';\nimport { VirtualCellProps } from 'app/js/v4/core/ui/lists/listsTypes';\nimport usePrevious from 'app/js/v4/utils/hooks/usePrevious';\n\nexport type UseVirtualCellProps<T> = Partial<\n  VirtualCellProps<T> & {\n    style: CSSProperties;\n    moveDurationMilliseconds: number;\n  }\n>;\n\nexport default function useVirtualCell<T>(props: UseVirtualCellProps<T>): {\n  cellRef: Ref<HTMLDivElement>;\n  style: CSSProperties;\n  isOffscreenPlaceholder: boolean;\n} {\n  const {\n    style,\n    moveDurationMilliseconds = 200,\n    isVirtual,\n    isVisible,\n    cellIndex,\n    cellX,\n    cellY,\n    cellWidth,\n    cellHeight,\n  } = props;\n\n  const cellRef = useRef<HTMLDivElement>(null);\n  const prevCellIndex = usePrevious(cellIndex);\n  const prevCellX = usePrevious(cellX);\n  const prevCellY = usePrevious(cellY);\n\n  const isDifferentIndex = prevCellIndex != null && cellIndex !== prevCellIndex;\n\n  const isPlaceholderRef = useRef(true);\n\n  // Once an item is visible, do not switch to an offscreen placeholder if it is\n  // scrolled out of view.\n\n  if (!isVirtual || isVisible) {\n    isPlaceholderRef.current = false;\n  }\n\n  const finalStyle = useMemo<CSSProperties>(() => {\n    if (!isVirtual) {\n      return {\n        position: 'relative',\n        ...style,\n      };\n    }\n\n    return {\n      // `willChange: 'transform'` instructs browsers that this element should\n      // be in it's own compositing layer. This allows the browser to optimize\n      // the placement of the cells during movement\n      // See: https://developer.mozilla.org/en-US/docs/Web/CSS/will-change\n      willChange: 'transform',\n      position: 'absolute',\n      width: cellWidth,\n      height: cellHeight,\n      top: cellY,\n      left: cellX,\n      ...style,\n    };\n  }, [cellX, cellY, cellWidth, cellHeight, style, isVirtual]);\n\n  useLayoutEffect(() => {\n    const el = cellRef.current;\n\n    if (\n      !el ||\n      prevCellX == null ||\n      prevCellY == null ||\n      cellX == null ||\n      cellY == null\n    ) {\n      return;\n    }\n\n    let animation: Animation | undefined;\n\n    // Safari 12 does not support the Web Animation API, so we need to check if it\n    // exists on the element before calling it\n    if (isDifferentIndex && typeof el.animate === 'function') {\n      el.style.zIndex = '1';\n      // During a move we don't want the element to interact with the mouse at\n      // all so we disable events while the animation occurs\n      el.style.pointerEvents = 'none';\n\n      // When React reorders a list of elements it removes the DOM element\n      // from the document and reinserts the element in the correct position.\n      // This process makes it so that transitions on the element will not get\n      // applied. Here we apply the FLIP method where we translate the cell to\n      // the last position after the list has been reordered in the DOM, but\n      // before the DOM changes have been flushed to the document. We set up\n      // the cell so that we animate the old position to the new left/right\n      // position. By triggering this using the animate API it allows us to\n      // programmatically start the transition with out relying on extra\n      // rerenders\n      // See: https://css-tricks.com/everything-you-need-to-know-about-flip-animations-in-react/\n      animation = el.animate(\n        [\n          {\n            transform: `translate(${prevCellX - cellX}px, ${\n              prevCellY - cellY\n            }px)`,\n          },\n          {\n            transform: 'none',\n          },\n        ],\n        moveDurationMilliseconds\n      );\n\n      // Clean up the pointerEvents from the move\n      animation.oncancel = animation.onfinish = (): void => {\n        el.style.zIndex = '0';\n        el.style.pointerEvents = 'unset';\n      };\n    }\n  }, [\n    cellX,\n    cellY,\n    isDifferentIndex,\n    moveDurationMilliseconds,\n    prevCellX,\n    prevCellY,\n  ]);\n\n  return {\n    cellRef,\n    style: finalStyle,\n    isOffscreenPlaceholder: isPlaceholderRef.current,\n  };\n}\n","import React, { memo, ReactElement } from 'react';\nimport formatDuration from 'app/js/utils/dateTime/formatDuration';\nimport t from 'app/js/utils/t';\nimport { useSourceContext } from 'app/js/v4/core/servers/components/SourceContextProvider';\nimport Link from 'app/js/v4/core/ui/buttons/components/Link';\nimport useVirtualCell from 'app/js/v4/core/ui/lists/hooks/useVirtualCell';\nimport { VirtualCellProps } from 'app/js/v4/core/ui/lists/listsTypes';\nimport { FormattedTopUsersStatistics } from 'app/js/v4/features/dashboard/dashboardTopUsersTypes';\nimport getStatisticsMetadataTypeLabel from 'app/js/v4/features/dashboard/utils/getStatisticsMetadataTypeLabel';\nimport { getTimePeriodAfter, TimePeriod } from 'app/js/v4/utils/timePeriods';\nimport AvatarImg from 'app/js/views/v3/components/core/images/AvatarImg';\nimport getPlayHistoryRoute from 'app/js/views/v3/helpers/routes/getPlayHistoryRoute';\nimport colors from 'app/js/views/v3/styles/variables/colors';\nimport styles from './TopUsersCell.css';\n\nconst backgroundColors = [\n  colors.serverDashboardTileRowBackgroundPrimaryColor,\n  colors.serverDashboardTileRowBackgroundSecondaryColor,\n  colors.serverDashboardTileRowBackgroundTertiaryColor,\n  colors.serverDashboardTileRowBackgroundQuaternaryColor,\n];\n\nfunction getFormattedDuration(duration: number): string {\n  return formatDuration(duration * 1000) || t('{1} min', 0);\n}\n\ninterface TopUsersCellProps\n  extends VirtualCellProps<FormattedTopUsersStatistics> {\n  activeTimePeriod: TimePeriod;\n}\n\nfunction TopUsersCell({\n  activeTimePeriod,\n  item: userStatistics,\n  ...virtualCellProps\n}: TopUsersCellProps): ReactElement | null {\n  const [server] = useSourceContext();\n\n  const cell = useVirtualCell({\n    ...virtualCellProps,\n    // Move animations when changing the time period looks unexpected.\n    moveDurationMilliseconds: 0,\n  });\n\n  if (!userStatistics) {\n    return null;\n  }\n\n  const { accountID, username, thumb, playCount, totalDuration, durations } =\n    userStatistics;\n\n  // Sort metadata type rows by duration\n  const metadataTypes = Object.keys(durations).sort((a, b) => {\n    if (durations[a] > durations[b]) {\n      return -1;\n    }\n\n    if (durations[a] < durations[b]) {\n      return 1;\n    }\n\n    return 0;\n  });\n\n  return (\n    <div ref={cell.cellRef} style={cell.style}>\n      <div className={styles.summaryContainer}>\n        <AvatarImg\n          className={styles.avatar}\n          height={50}\n          serverEntityID={server.entityID}\n          url={thumb}\n          width={50}\n        />\n\n        <div className={styles.summary}>\n          <div>\n            {playCount === 1\n              ? t('{playCount} play', { playCount })\n              : t('{playCount} plays', { playCount })}\n          </div>\n\n          <div>{getFormattedDuration(totalDuration)}</div>\n        </div>\n\n        <Link\n          className={styles.playHistoryLink}\n          to={getPlayHistoryRoute(server.machineIdentifier, {\n            filters: `accountID=${accountID}&viewedAt=${getTimePeriodAfter(\n              activeTimePeriod\n            )}`,\n            activeTimePeriod,\n          })}\n        >\n          {t('View Play History')}\n        </Link>\n      </div>\n\n      <div className={styles.username} title={username}>\n        {username}\n      </div>\n\n      {metadataTypes.map((metadataType, index) => {\n        return (\n          <div\n            key={metadataType}\n            className={styles.metadataRow}\n            style={{\n              backgroundColor: backgroundColors[index],\n            }}\n          >\n            <div className={styles.metadataTitle}>\n              {getStatisticsMetadataTypeLabel(parseInt(metadataType, 10))}\n            </div>\n            <div className={styles.duration}>\n              {getFormattedDuration(durations[metadataType])}\n            </div>\n          </div>\n        );\n      })}\n    </div>\n  );\n}\n\nexport default memo(TopUsersCell);\n","// extracted by mini-css-extract-plugin\nexport default {\"summaryContainer\":\"QuJsu\",\"playHistoryLink\":\"CedEX IYkbp\",\"avatar\":\"KS1_S hdLnl\",\"summary\":\"S9CX_\",\"row\":\"WUKcP\",\"username\":\"mY_8K WUKcP\",\"metadataRow\":\"iiEOi WUKcP\",\"metadataTitle\":\"reMIn\",\"duration\":\"T4z6X\"};","import React, { ReactElement, useMemo } from 'react';\nimport t from 'app/js/utils/t';\nimport { ServerAccount } from 'app/js/v4/core/serverAccounts/serverAccountsTypes';\nimport {\n  VirtualCellFactory,\n  VirtualListRanges,\n} from 'app/js/v4/core/ui/lists/listsTypes';\nimport createHorizontalLayout from 'app/js/v4/core/ui/lists/utils/createHorizontalLayout';\nimport { ScrollDirection } from 'app/js/v4/core/ui/scrollers/components/Scroller';\nimport VirtualListScroller from 'app/js/v4/core/ui/scrollers/components/VirtualListScroller';\nimport ServerDashboardSectionContent from 'app/js/v4/features/dashboard/components/ServerDashboardSectionContent';\nimport {\n  FormattedTopUsersStatistics,\n  TopUsersStatistics,\n} from 'app/js/v4/features/dashboard/dashboardTopUsersTypes';\nimport { StatisticsMetadataType } from 'app/js/v4/features/dashboard/dashboardTypes';\nimport { TimePeriod } from 'app/js/v4/utils/timePeriods';\nimport TopUsersCell from './TopUsersCell';\nimport styles from './TopUsersList.css';\n\ninterface TopUsersListProps {\n  activeTimePeriod: TimePeriod;\n  accounts: ServerAccount[];\n  statistics: TopUsersStatistics[];\n  isSpinnerVisible: boolean;\n  showList: boolean;\n  errorMessage?: string;\n  targetScrollIndex?: number;\n  smoothScroll?: boolean;\n  onListUpdate(ranges: VirtualListRanges): void;\n}\n\nconst layout = createHorizontalLayout({\n  columnWidth: 200,\n  rowHeight: 290,\n  innerHorizontalPadding: 40,\n});\n\nfunction formatData(\n  accounts: ServerAccount[],\n  statistics: TopUsersStatistics[]\n): FormattedTopUsersStatistics[] {\n  if (!statistics) {\n    return [];\n  }\n\n  const hasGameStatistics = !!statistics.find(\n    (userStatistics) =>\n      userStatistics.metadataType === StatisticsMetadataType.Game\n  );\n\n  const formattedData = statistics.reduce(\n    (acc: FormattedTopUsersStatistics[], userStatistics) => {\n      const { accountID, metadataType, count, duration } = userStatistics;\n\n      // Ignore metadata types we're not interested in and unknown accounts.\n      if (!(metadataType in StatisticsMetadataType) || accountID === -1) {\n        return acc;\n      }\n\n      const index = acc.findIndex((item) => item.accountID === accountID);\n      const hasExistingEntry = index !== -1;\n\n      let formattedStatistics: FormattedTopUsersStatistics;\n      if (hasExistingEntry) {\n        formattedStatistics = acc[index];\n      } else {\n        const account = accounts.find((account_) => account_.id === accountID);\n\n        formattedStatistics = {\n          accountID,\n          username: account?.name,\n          thumb: account?.thumb,\n          playCount: 0,\n          totalDuration: 0,\n          durations: {\n            [StatisticsMetadataType.Movie]: 0,\n            [StatisticsMetadataType.TV]: 0,\n            [StatisticsMetadataType.Music]: 0,\n            [StatisticsMetadataType.Photo]: 0,\n          },\n        };\n\n        if (hasGameStatistics) {\n          formattedStatistics.durations[StatisticsMetadataType.Game] = 0;\n        }\n      }\n\n      formattedStatistics.playCount = formattedStatistics.playCount + count;\n      formattedStatistics.totalDuration =\n        formattedStatistics.totalDuration + duration;\n      formattedStatistics.durations[metadataType] =\n        formattedStatistics.durations[metadataType] + duration;\n\n      if (hasExistingEntry) {\n        acc[index] = formattedStatistics;\n      } else {\n        acc.push(formattedStatistics);\n      }\n\n      return acc;\n    },\n    []\n  );\n\n  // Sort accounts by play count.\n  return formattedData.sort((a, b) => {\n    if (a.totalDuration > b.totalDuration) {\n      return -1;\n    }\n\n    if (a.totalDuration < b.totalDuration) {\n      return 1;\n    }\n\n    return 0;\n  });\n}\n\nexport default function TopUsersList({\n  activeTimePeriod,\n  accounts,\n  statistics,\n  isSpinnerVisible,\n  showList,\n  errorMessage,\n  targetScrollIndex,\n  smoothScroll,\n  onListUpdate,\n}: TopUsersListProps): ReactElement {\n  const items = useMemo(() => {\n    return formatData(accounts, statistics);\n  }, [accounts, statistics]);\n\n  const notEnoughDataMessage =\n    showList && items.length === 0 ? t('No data') : undefined;\n  const finalErrorMessage = errorMessage || notEnoughDataMessage;\n\n  const finalShowList = showList && !finalErrorMessage;\n\n  const cellComponentFactory: VirtualCellFactory<FormattedTopUsersStatistics> =\n    useMemo(() => {\n      return (cellProps) => {\n        return (\n          <TopUsersCell {...cellProps} activeTimePeriod={activeTimePeriod} />\n        );\n      };\n    }, [activeTimePeriod]);\n\n  return (\n    <ServerDashboardSectionContent\n      className={isSpinnerVisible ? styles.spinnerContainer : styles.container}\n      errorMessage={finalErrorMessage}\n      isSpinnerVisible={isSpinnerVisible}\n    >\n      {finalShowList ? (\n        <VirtualListScroller\n          cellComponentFactory={cellComponentFactory}\n          className={styles.listContainer}\n          items={items}\n          keyPropName=\"accountID\"\n          layout={layout}\n          scrollDirection={ScrollDirection.Horizontal}\n          smoothScroll={smoothScroll}\n          targetScrollIndex={targetScrollIndex}\n          totalSize={items.length}\n          onListUpdate={onListUpdate}\n        />\n      ) : null}\n    </ServerDashboardSectionContent>\n  );\n}\n","import { HorizontalLayout } from 'app/js/v4/core/ui/lists/listsTypes';\nimport createGridLayout, {\n  GridDirection,\n  GridLayoutOptions,\n} from './createGridLayout';\n\nexport interface HorizontalLayoutOptions\n  extends Omit<\n    GridLayoutOptions,\n    'direction' | 'getCellHeight' | 'getCellWidth' | 'rows'\n  > {\n  columnWidth: number;\n  rowHeight: number;\n}\n\nexport default function createHorizontalLayout({\n  columnWidth,\n  rowHeight,\n  ...options\n}: HorizontalLayoutOptions): HorizontalLayout {\n  return {\n    rowHeight,\n    ...createGridLayout({\n      direction: GridDirection.Horizontal,\n      rows: 1,\n      getCellWidth: () => columnWidth,\n      getCellHeight: () => rowHeight,\n\n      // An overscan of 4 helps avoid popping in items as they are scrolled into\n      // view on CPU-constrained devices. The tradeoff is rendering more cells at\n      // once.\n      overscan: 4,\n\n      ...options,\n    }),\n  };\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"container\":\"_N_wC htorZ\",\"spinnerContainer\":\"SFyYd _N_wC htorZ\",\"listContainer\":\"uHvOo GSAom sWZ6m\"};","// extracted by mini-css-extract-plugin\nexport default {\"container\":\"qmzvg\",\"listActions\":\"gxRHN\",\"listScrollButton\":\"fRey9 o4z1S IYkbp\"};","import React, {\n  ReactElement,\n  useCallback,\n  useEffect,\n  useMemo,\n  useRef,\n  useState,\n} from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { IconChevronLeft, IconChevronRight } from '@plex/react-chroma-icon';\nimport { Row } from '@plex/react-chroma-layout';\nimport { Align, Size } from '@plex/react-chroma-types';\nimport t from 'app/js/utils/t';\nimport { useSourceContext } from 'app/js/v4/core/servers/components/SourceContextProvider';\nimport IconButton from 'app/js/v4/core/ui/buttons/components/IconButton';\nimport usePreviousValueForAtMost from 'app/js/v4/core/ui/hooks/usePreviousValueForAtMost';\nimport { VirtualListRanges } from 'app/js/v4/core/ui/lists/listsTypes';\nimport ServerDashboardPageHeader from 'app/js/v4/features/dashboard/components/ServerDashboardPageHeader';\nimport ServerDashboardFilterMenuButton from 'app/js/v4/features/dashboard/components/menuButtons/ServerDashboardFilterMenuButton';\nimport dashboardTopUsersSlice from 'app/js/v4/features/dashboard/dashboardTopUsersSlice';\nimport selectDashboardTopUsers from 'app/js/v4/features/dashboard/selectors/selectDashboardTopUsers';\nimport {\n  getTimePeriodAfter,\n  getTimePeriodLabel,\n  getTimePeriodTimespan,\n  TimePeriod,\n} from 'app/js/v4/utils/timePeriods';\nimport TopUsersList from './TopUsersList';\nimport styles from './TopUsers.css';\n\nexport default function TopUsers(): ReactElement {\n  const dispatch = useDispatch();\n  const [server] = useSourceContext();\n\n  const rangesRef = useRef<VirtualListRanges | null>(null);\n  const [isPreviousEnabled, setIsPreviousEnabled] = useState(false);\n  const [isNextEnabled, setIsNextEnabled] = useState(false);\n  const [targetScrollIndex, setTargetScrollIndex] = useState(0);\n  const [smoothScroll, setSmoothScroll] = useState(false);\n  const [activeTimePeriod, setActiveTimePeriod] = useState(TimePeriod.Week);\n\n  const { accounts, statistics, isPending, isPopulated, error } = useSelector(\n    selectDashboardTopUsers\n  );\n\n  const isDelayedPending = usePreviousValueForAtMost(isPending, true);\n\n  const timePeriods = useMemo(() => {\n    return [\n      TimePeriod.Day,\n      TimePeriod.Week,\n      TimePeriod.Month,\n      TimePeriod.NinetyDays,\n      TimePeriod.Year,\n      TimePeriod.AllTime,\n    ];\n  }, []);\n\n  //\n  // Callbacks\n\n  const onTimePeriodSelect = useCallback((timePeriod: TimePeriod) => {\n    setActiveTimePeriod(timePeriod);\n  }, []);\n\n  const onListUpdate = useCallback((ranges: VirtualListRanges) => {\n    const { visibleStartIndex, visibleEndIndex, renderEndIndex } = ranges;\n\n    rangesRef.current = ranges;\n\n    setIsPreviousEnabled(visibleStartIndex > 0);\n    setIsNextEnabled(renderEndIndex > visibleEndIndex);\n  }, []);\n\n  const onPreviousPress = useCallback(() => {\n    const ranges = rangesRef.current;\n\n    if (ranges) {\n      const numVisibleItems = ranges.visibleEndIndex - ranges.visibleStartIndex;\n\n      setTargetScrollIndex(\n        Math.max(ranges.visibleStartIndex - numVisibleItems - 1, 0)\n      );\n      setSmoothScroll(true);\n    }\n  }, []);\n\n  const onNextPress = useCallback(() => {\n    const ranges = rangesRef.current;\n\n    if (ranges) {\n      setTargetScrollIndex(ranges.visibleEndIndex + 1);\n      setSmoothScroll(true);\n    }\n  }, []);\n\n  //\n  // Effects\n\n  useEffect(() => {\n    dispatch(\n      dashboardTopUsersSlice.actions.topUsersFetchRequested({\n        server,\n        timespan: getTimePeriodTimespan(activeTimePeriod),\n        after: getTimePeriodAfter(activeTimePeriod),\n      })\n    );\n  }, [activeTimePeriod, dispatch, server]);\n\n  useEffect(() => {\n    // Reset the scroll index to the beginning when the dataset changes.\n    setTargetScrollIndex(0);\n    setSmoothScroll(false);\n  }, [statistics]);\n\n  useEffect(() => {\n    return () => {\n      dispatch(dashboardTopUsersSlice.actions.reset());\n    };\n  }, [dispatch]);\n\n  //\n  // Render\n\n  return (\n    <div className={styles.container}>\n      <ServerDashboardPageHeader title={t('Top Users')}>\n        <Row gap={Size.XL} verticalAlign={Align.Center}>\n          <ServerDashboardFilterMenuButton\n            activeValue={activeTimePeriod}\n            formatter={getTimePeriodLabel}\n            values={timePeriods}\n            onSelect={onTimePeriodSelect}\n          />\n\n          <div className={styles.listActions}>\n            <IconButton\n              className={styles.listScrollButton}\n              iconComponent={IconChevronLeft}\n              isDisabled={!isPreviousEnabled}\n              title={t('Previous Page')}\n              onPress={onPreviousPress}\n            />\n            <IconButton\n              className={styles.listScrollButton}\n              iconComponent={IconChevronRight}\n              isDisabled={!isNextEnabled}\n              title={t('Next Page')}\n              onPress={onNextPress}\n            />\n          </div>\n        </Row>\n      </ServerDashboardPageHeader>\n\n      <TopUsersList\n        accounts={accounts}\n        activeTimePeriod={activeTimePeriod}\n        errorMessage={error ? t('Unable to load statistics') : undefined}\n        isSpinnerVisible={isDelayedPending}\n        showList={!isDelayedPending && isPopulated}\n        smoothScroll={smoothScroll}\n        statistics={statistics}\n        targetScrollIndex={targetScrollIndex}\n        onListUpdate={onListUpdate}\n      />\n    </div>\n  );\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"upsell\":\"HkoU1\",\"description\":\"pz8kD\",\"chartImageContainer\":\"k4xkf\",\"listImageContainer\":\"AEZKc\",\"image\":\"ir0un\",\"button\":\"hOXpg IYkbp\"};","import React, { ReactElement, useCallback } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { saveExperienceSettings } from 'app/js/stores/actions/userActions';\nimport { scheduleImmediateUpdate } from 'app/js/utils/state/stateUpdateScheduler';\nimport t from 'app/js/utils/t';\nimport Link from 'app/js/v4/core/ui/buttons/components/Link';\nimport Kind from 'app/js/v4/core/ui/types/Kind';\nimport IconRemove from 'app/glyphs/remove-560.svg';\nimport dashboardGraph from 'app/img/upsell/upsell-server-dashboard-graph.svg';\nimport dashboardList from 'app/img/upsell/upsell-server-dashboard-list.svg';\nimport styles from './ServerDashboardPageUpsell.css';\n\nexport default function ServerDashboardPageUpsell(): ReactElement {\n  const dispatch = useDispatch();\n\n  const onDismissPress = useCallback(() => {\n    scheduleImmediateUpdate(() => {\n      dispatch(\n        saveExperienceSettings({ hasDismissedServerDashboardUpsell: true })\n      );\n    });\n  }, [dispatch]);\n\n  return (\n    <div className={styles.upsell}>\n      <div className={styles.description}>\n        {`${t(\n          \"Want more data? Get stats like top users, what's popular, and bandwidth usage with the new server Dashboard for Plex Pass holders!\"\n        )} `}\n\n        <Link\n          kind={Kind.Primary}\n          target=\"_blank\"\n          to=\"https://www.plex.tv/plex-pass\"\n        >\n          {t('Learn more')}\n        </Link>\n      </div>\n\n      <div className={styles.chartImageContainer}>\n        <img className={styles.image} src={String(dashboardGraph)} />\n      </div>\n\n      <div className={styles.listImageContainer}>\n        <img className={styles.image} src={String(dashboardList)} />\n      </div>\n\n      <Link className={styles.button} onPress={onDismissPress}>\n        <IconRemove />\n      </Link>\n    </div>\n  );\n}\n","import React, { ReactElement } from 'react';\nimport { useSelector } from 'react-redux';\nimport * as features from 'app/js/utils/constants/user/features';\nimport { useSourceContext } from 'app/js/v4/core/servers/components/SourceContextProvider';\nimport createUserExperienceSettingSelector from 'app/js/v4/core/user/selectors/createUserExperienceSettingSelector';\nimport Bandwidth from 'app/js/v4/features/dashboard/components/bandwidth/Bandwidth';\nimport NowPlaying from 'app/js/v4/features/dashboard/components/nowPlaying/NowPlaying';\nimport PlayHistory from 'app/js/v4/features/dashboard/components/playHistory/PlayHistory';\nimport ServerResources from 'app/js/v4/features/dashboard/components/serverResources/ServerResources';\nimport TopPlayed from 'app/js/v4/features/dashboard/components/topPlayed/TopPlayed';\nimport TopUsers from 'app/js/v4/features/dashboard/components/topUsers/TopUsers';\nimport ServerDashboardPageSection from './ServerDashboardPageSection';\nimport ServerDashboardPageUpsell from './ServerDashboardPageUpsell';\n\nexport default function ServerDashboardPage(): ReactElement {\n  const [server] = useSourceContext();\n\n  const hasChartsFeature = !!server.ownerFeatures?.includes(\n    features.SERVER_DASHBOARD_CHARTS\n  );\n\n  const hasDismissedUpsell = useSelector(\n    createUserExperienceSettingSelector('hasDismissedServerDashboardUpsell')\n  );\n\n  //\n  // Render\n\n  return (\n    <>\n      {!hasChartsFeature && !hasDismissedUpsell ? (\n        <ServerDashboardPageUpsell />\n      ) : null}\n\n      <ServerDashboardPageSection>\n        <NowPlaying />\n      </ServerDashboardPageSection>\n\n      {hasChartsFeature ? (\n        <>\n          <ServerDashboardPageSection>\n            <Bandwidth />\n          </ServerDashboardPageSection>\n\n          <ServerResources />\n\n          <ServerDashboardPageSection>\n            <TopUsers />\n          </ServerDashboardPageSection>\n\n          <ServerDashboardPageSection>\n            <PlayHistory />\n          </ServerDashboardPageSection>\n\n          <ServerDashboardPageSection>\n            <TopPlayed />\n          </ServerDashboardPageSection>\n        </>\n      ) : null}\n    </>\n  );\n}\n","/* eslint-plugin-disable @typescript-eslint */\n\nimport React from 'react';\nimport * as providerIdentifiers from 'app/js/utils/constants/providerIdentifiers';\nimport SourceContextProvider from 'app/js/v4/core/servers/components/SourceContextProvider';\nimport ServerDashboardPage from 'app/js/v4/features/dashboard/components/ServerDashboardPage';\nimport AbstractReactView from 'app/js/views/AbstractReactView';\n\nconst ServerDashboardView = AbstractReactView.extend({\n  //\n  // Control\n\n  component(options: any) {\n    const server = options.server;\n\n    return (\n      <SourceContextProvider\n        machineIdentifier={server.get('machineIdentifier')}\n        providerIdentifier={providerIdentifiers.LIBRARY}\n      >\n        <ServerDashboardPage />\n      </SourceContextProvider>\n    );\n  },\n});\n\nexport default ServerDashboardView;\n","import { createSelector, Selector } from 'reselect';\nimport selectAllProviderEntities from 'app/js/stores/selectors/provider/selectAllProviderEntities';\nimport { Provider } from 'app/js/v4/core/providers/providersTypes';\nimport isEPGProvider from 'app/js/v4/core/providers/utils/isEPGProvider';\nimport unknownProvider from 'app/js/v4/core/providers/utils/unknownProvider';\nimport createUnstableServerSelector from 'app/js/v4/core/servers/selectors/createUnstableServerSelector';\nimport { LegacyRootState } from 'app/js/v4/root/rootTypes';\nimport memoize from 'app/js/v4/utils/memoize';\n\n// This selector may be created frequently in components and saga workers,\n// but there is a limited number of possible selectors based on the arguments.\n// Rather than independently memoize in each component or saga, add a layer of\n// memoization on top of reselect here.\n\nfunction createEPGProviderSelector(\n  machineIdentifier: string\n): Selector<LegacyRootState, Provider> {\n  return createSelector(\n    selectAllProviderEntities,\n    createUnstableServerSelector(machineIdentifier),\n    (providerEntities, unstableServer) => {\n      const matchingProviderEntityID = unstableServer.providers.find(\n        (providerEntityID) => isEPGProvider(providerEntities[providerEntityID])\n      );\n\n      return matchingProviderEntityID\n        ? providerEntities[matchingProviderEntityID]\n        : unknownProvider;\n    }\n  );\n}\n\nexport default memoize(createEPGProviderSelector);\n","import * as providerIdentifiers from 'app/js/utils/constants/providerIdentifiers';\nimport normalizeProviderDataIdentifier from 'app/js/utils/provider/normalizeProviderDataIdentifier';\nimport { Provider } from 'app/js/v4/core/providers/providersTypes';\n\nexport default function isEPGProvider(provider: Provider): boolean {\n  return providerIdentifiers.matches(\n    normalizeProviderDataIdentifier(\n      provider.identifier,\n      provider.providerIdentifier\n    ),\n    [providerIdentifiers.CLOUD_EPG, providerIdentifiers.EPG]\n  );\n}\n","import { createSelector, Selector } from 'reselect';\nimport selectUserFeaturesByUUID from 'app/js/stores/selectors/user/selectUserFeaturesByUUID';\nimport { LegacyRootState } from 'app/js/v4/root/rootTypes';\nimport memoize from 'app/js/v4/utils/memoize';\n\n// This selector may be created frequently in components and saga workers,\n// but there is a limited number of possible selectors based on the arguments.\n// Rather than independently memoize in each component or saga, add a layer of\n// memoization on top of reselect here.\n\nfunction createUserFeatureSelector(\n  uuid: string\n): Selector<LegacyRootState, boolean> {\n  return createSelector(\n    selectUserFeaturesByUUID,\n    (features) => !!features[uuid]\n  );\n}\n\nexport default memoize(createUserFeatureSelector);\n","import React, { ReactElement } from 'react';\nimport t from 'app/js/utils/t';\nimport IconAlert from 'app/glyphs/alert-560.svg';\nimport styles from './FormSectionError.css';\n\nexport interface FormSectionErrorProps {\n  errorMessage?: string;\n}\n\nexport default function FormSectionError({\n  errorMessage,\n}: FormSectionErrorProps): ReactElement {\n  return (\n    <div className={styles.sectionError}>\n      <IconAlert className={styles.sectionErrorIcon} />\n      {errorMessage\n        ? errorMessage\n        : t('There was a problem saving your changes.')}\n    </div>\n  );\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"sectionError\":\"gHq83\",\"sectionErrorIcon\":\"fFfp4\"};","// extracted by mini-css-extract-plugin\nexport default {\"button\":\"XV6On MRjYA IYkbp\",\"spinnerContainer\":\"G6MoC\",\"spinner\":\"MGP6P RD8jJ m_4Rc\",\"label\":\"WCMO3\",\"isSpinning\":\"i8yRw\"};","import classNames from 'classnames';\nimport React, { ReactElement } from 'react';\nimport Button, {\n  ButtonProps,\n} from 'app/js/v4/core/ui/buttons/components/Button';\nimport Spinner from 'app/js/v4/core/ui/spinners/components/Spinner';\nimport Size from 'app/js/v4/core/ui/types/Size';\nimport styles from './SpinnerButton.css';\n\nexport interface SpinnerButtonProps extends ButtonProps {\n  className?: string;\n  spinnerSize?: Size;\n  isSpinning: boolean;\n}\n\nexport default function SpinnerButton({\n  className = styles.button,\n  spinnerSize = Size.Small,\n  isDisabled = false,\n  isSpinning = false,\n  children,\n  ...buttonProps\n}: SpinnerButtonProps): ReactElement {\n  return (\n    <Button\n      className={classNames(className, isSpinning && styles.isSpinning)}\n      isDisabled={isDisabled || isSpinning}\n      {...buttonProps}\n    >\n      <span className={styles.spinnerContainer}>\n        <Spinner className={styles.spinner} size={spinnerSize} />\n      </span>\n      <span className={styles.label}>{children}</span>\n    </Button>\n  );\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"label\":\"nxqHH\",\"hasError\":\"XTlSL\"};","import classNames from 'classnames';\nimport React, { ReactElement, ReactNode } from 'react';\nimport styles from './FormLabel.css';\n\ninterface FormLabelProps {\n  className?: string;\n  errorClassName?: string;\n  children: ReactNode;\n  name?: string;\n  hasError?: boolean;\n}\n\nexport default function FormLabel({\n  className = styles.label,\n  errorClassName = styles.hasError,\n  children,\n  name,\n  hasError,\n  ...otherProps\n}: FormLabelProps): ReactElement {\n  return (\n    <label\n      className={classNames(className, hasError && errorClassName)}\n      htmlFor={name}\n      {...otherProps}\n    >\n      {children}\n    </label>\n  );\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"input\":\"LGEv3\",\"select\":\"FhJL8\",\"small\":\"sp_4D\",\"medium\":\"S8OG_\",\"large\":\"rmRBv\",\"isDisabled\":\"J7bd8\",\"hasError\":\"nqzM6\"};","import classNames from 'classnames';\nimport React, {\n  ReactElement,\n  ReactNode,\n  Ref,\n  SelectHTMLAttributes,\n} from 'react';\nimport Size from 'app/js/v4/core/ui/types/Size';\nimport styles from './Select.css';\n\ninterface InnerSelectProps\n  extends Omit<SelectHTMLAttributes<HTMLSelectElement>, 'size'> {\n  children: ReactNode;\n  forwardedRef: Ref<HTMLSelectElement>;\n  className?: string;\n  selectClassName?: string;\n  errorClassName?: string;\n  disabledClassName?: string;\n  name: string;\n  value?: string;\n  size?: Size;\n  isDisabled?: boolean;\n  hasError?: boolean;\n}\n\nexport type SelectProps = Omit<InnerSelectProps, 'forwardedRef'>;\n\nfunction Select({\n  forwardedRef,\n  className = styles.input,\n  selectClassName = styles.select,\n  errorClassName = styles.hasError,\n  disabledClassName = styles.isDisabled,\n  isDisabled = false,\n  hasError = false,\n  name,\n  size = Size.Medium,\n  children,\n  ...inputProps\n}: InnerSelectProps): ReactElement {\n  return (\n    <span\n      className={classNames(\n        className,\n        styles[size],\n        isDisabled && disabledClassName,\n        hasError && errorClassName\n      )}\n    >\n      <select\n        ref={forwardedRef}\n        className={selectClassName}\n        disabled={isDisabled}\n        name={name}\n        {...inputProps}\n      >\n        {children}\n      </select>\n    </span>\n  );\n}\n\nexport default React.forwardRef<HTMLSelectElement, SelectProps>(\n  (props, ref) => {\n    return <Select {...props} forwardedRef={ref} />;\n  }\n);\n","import React, { ChangeEvent, ReactElement, useCallback, useMemo } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport t from 'app/js/utils/t';\nimport FormLabel from 'app/js/v4/core/ui/forms/components/FormLabel';\nimport Select from 'app/js/v4/core/ui/forms/components/Select';\nimport epgSettingsSlice from 'app/js/v4/features/dvrManagement/epgSettingsSlice';\nimport selectEPGSettings from 'app/js/v4/features/dvrManagement/selectors/selectEPGSettings';\nimport styles from './DVRSetupCountryRegionSelectInput.css';\n\ninterface CountryRegionOption {\n  value: string;\n  label: string;\n}\n\ninterface DVRSetupCountryRegionSelectInputProps {\n  isDisabled?: boolean;\n  hasError?: boolean;\n}\n\nexport default function DVRSetupCountryRegionSelectInput({\n  isDisabled,\n  hasError,\n}: DVRSetupCountryRegionSelectInputProps): ReactElement | null {\n  const dispatch = useDispatch();\n  const {\n    selectedRegion,\n    regions: { epgCountryRegions },\n  } = useSelector(selectEPGSettings);\n\n  const regionsPopulated = epgCountryRegions.length > 0;\n  const regionOptions = useMemo(\n    () =>\n      epgCountryRegions.map<CountryRegionOption>((region) => ({\n        value: region.key,\n        label: region.title,\n      })),\n    [epgCountryRegions]\n  );\n\n  //\n  // Callbacks\n\n  const onCountryRegionSelect = useCallback(\n    (event: ChangeEvent<HTMLSelectElement>) => {\n      dispatch(\n        epgSettingsSlice.actions.epgCountryRegionSelected({\n          regionKey: event.currentTarget.value,\n        })\n      );\n    },\n    [dispatch]\n  );\n\n  //\n  // Render\n\n  return regionsPopulated ? (\n    <>\n      <FormLabel className={styles.label} hasError={hasError}>\n        {t('Region')}\n      </FormLabel>\n\n      <Select\n        hasError={hasError}\n        isDisabled={isDisabled}\n        name=\"regionSelect\"\n        value={selectedRegion?.key}\n        onChange={onCountryRegionSelect}\n      >\n        <option value=\"\">{t('Select Region')}</option>\n        {regionOptions.map(({ value, label }) => (\n          <option key={value} value={value}>\n            {label}\n          </option>\n        ))}\n      </Select>\n    </>\n  ) : null;\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"label\":\"dnmVb x_7jd\"};","import React, {\n  ChangeEvent,\n  ReactElement,\n  useCallback,\n  useEffect,\n  useMemo,\n  useState,\n} from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport t from 'app/js/utils/t';\nimport { useSourceContext } from 'app/js/v4/core/servers/components/SourceContextProvider';\nimport Link from 'app/js/v4/core/ui/buttons/components/Link';\nimport FormLabel from 'app/js/v4/core/ui/forms/components/FormLabel';\nimport Select from 'app/js/v4/core/ui/forms/components/Select';\nimport Kind from 'app/js/v4/core/ui/types/Kind';\nimport {\n  EPGCountryFlavor,\n  MediaGrabberDevice,\n} from 'app/js/v4/features/dvrManagement/dvrManagementTypes';\nimport epgSettingsSlice from 'app/js/v4/features/dvrManagement/epgSettingsSlice';\nimport selectEPGSettings from 'app/js/v4/features/dvrManagement/selectors/selectEPGSettings';\nimport styles from './DVRSetupCountrySelectInput.css';\n\ninterface DVRSetupCountrySelectInputProps {\n  deviceKey: MediaGrabberDevice['key'];\n  isActive: boolean;\n  isDisabled?: boolean;\n  hasError?: boolean;\n  onEdit?(deviceKey: MediaGrabberDevice['key']): void;\n}\n\ninterface CountryOption {\n  value: string;\n  label: string;\n}\n\nexport default function DVRSetupCountrySelectInput({\n  deviceKey,\n  isActive,\n  isDisabled,\n  hasError,\n  onEdit,\n}: DVRSetupCountrySelectInputProps): ReactElement {\n  const dispatch = useDispatch();\n  const [server] = useSourceContext();\n  const {\n    selectedCountry,\n    countries: { epgCountries, isPending, isPopulated, error },\n  } = useSelector(selectEPGSettings);\n  const [hasAttemptedToSelectCountry, setHasAttemptedToSelectCountry] =\n    useState(false);\n\n  const selectedCountryCode = selectedCountry?.code ?? '';\n\n  const countryOptions = useMemo(\n    () =>\n      epgCountries.map<CountryOption>((country) => ({\n        value: country.code,\n        label: country.title,\n      })),\n    [epgCountries]\n  );\n\n  //\n  // Callbacks\n\n  const onCountrySelect = useCallback(\n    (event: ChangeEvent<HTMLSelectElement>) => {\n      dispatch(\n        epgSettingsSlice.actions.epgCountrySelected({\n          countryCode: event.currentTarget.value,\n        })\n      );\n    },\n    [dispatch]\n  );\n\n  const onEditPress = useCallback(() => {\n    onEdit?.(deviceKey);\n  }, [deviceKey, onEdit]);\n\n  //\n  // Effects\n\n  useEffect(() => {\n    const { countryCode } = server;\n\n    if (!isPopulated) {\n      return;\n    }\n\n    const isCountryPresent = !!countryOptions.find(\n      ({ value }) => value === countryCode\n    );\n\n    if (!selectedCountryCode && countryCode && isCountryPresent) {\n      dispatch(\n        epgSettingsSlice.actions.epgCountrySelected({\n          countryCode,\n        })\n      );\n    } else {\n      setHasAttemptedToSelectCountry(true);\n    }\n  }, [\n    server,\n    selectedCountryCode,\n    isPopulated,\n    setHasAttemptedToSelectCountry,\n    dispatch,\n    countryOptions,\n  ]);\n\n  useEffect(() => {\n    if (!!selectedCountryCode && !hasAttemptedToSelectCountry) {\n      setHasAttemptedToSelectCountry(true);\n    }\n  }, [\n    selectedCountryCode,\n    hasAttemptedToSelectCountry,\n    setHasAttemptedToSelectCountry,\n  ]);\n\n  useEffect(() => {\n    if (selectedCountry) {\n      const { flavor } = selectedCountry;\n\n      if (flavor === EPGCountryFlavor.Regions) {\n        dispatch(\n          epgSettingsSlice.actions.epgCountryRegionsFetchRequested({\n            server,\n            country: selectedCountry,\n          })\n        );\n      } else if (flavor === EPGCountryFlavor.SinglePostalCode) {\n        // The API will return the postal code value in `example` for countries\n        // with a single postal code.\n        // See: https://docs.plex.tv/docs/api/pms#device-endpoints-epg-endpoints-get\n        dispatch(\n          epgSettingsSlice.actions.epgPostalCodeChanged({\n            postalCode: selectedCountry.example,\n          })\n        );\n      }\n    }\n  }, [dispatch, selectedCountry, server]);\n\n  useEffect(() => {\n    if (!isPopulated) {\n      dispatch(epgSettingsSlice.actions.epgCountriesFetchRequested({ server }));\n    }\n  }, [dispatch, isPopulated, server]);\n\n  //\n  // Render\n\n  const inputContent =\n    isActive || !selectedCountryCode ? (\n      <Select\n        hasError={hasError}\n        isDisabled={isDisabled}\n        name=\"countrySelect\"\n        value={selectedCountryCode}\n        onChange={onCountrySelect}\n      >\n        <option value=\"\">{t('Select Country')}</option>\n        {countryOptions.map(({ value, label }, index) => (\n          <option key={index} value={value}>\n            {label}\n          </option>\n        ))}\n      </Select>\n    ) : (\n      <div className={styles.edit}>\n        {selectedCountry?.title}\n        {!isDisabled ? (\n          <Link kind={Kind.Primary} onPress={onEditPress}>\n            {t('Edit')}\n          </Link>\n        ) : null}\n      </div>\n    );\n\n  return (\n    <>\n      <FormLabel className={styles.label} hasError={hasError}>\n        {t('Country')}\n      </FormLabel>\n\n      {isPending || !hasAttemptedToSelectCountry\n        ? t('Loading countries...')\n        : null}\n      {error ? t(\"We couldn't fetch countries at this moment.\") : null}\n      {isPopulated && hasAttemptedToSelectCountry ? inputContent : null}\n    </>\n  );\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"label\":\"P5Gzk x_7jd\",\"edit\":\"yEp3c\"};","// extracted by mini-css-extract-plugin\nexport default {\"input\":\"VG1wI\",\"small\":\"qHDuq\",\"medium\":\"czpg6\",\"large\":\"bViPz\",\"isDisabled\":\"_ORbg\",\"hasError\":\"N8nHO\"};","import classNames from 'classnames';\nimport React, {\n  FocusEvent,\n  InputHTMLAttributes,\n  ReactElement,\n  Ref,\n} from 'react';\nimport Size from 'app/js/v4/core/ui/types/Size';\nimport styles from './TextInput.css';\n\ninterface InnerTextInputProps\n  extends Omit<InputHTMLAttributes<HTMLInputElement>, 'size' | 'value'> {\n  forwardedRef: Ref<HTMLInputElement>;\n  className?: string;\n  errorClassName?: string;\n  disabledClassName?: string;\n  name: string;\n  value?: string;\n  size?: Size;\n  isDisabled?: boolean;\n  hasFocusOnMount?: boolean;\n  hasError?: boolean;\n  onFocus?(event: FocusEvent): void;\n}\n\nexport type TextInputProps = Omit<InnerTextInputProps, 'forwardedRef'>;\n\nfunction TextInput({\n  forwardedRef,\n  className = styles.input,\n  errorClassName = styles.hasError,\n  disabledClassName = styles.isDisabled,\n  isDisabled = false,\n  hasFocusOnMount = false,\n  hasError = false,\n  name,\n  size = Size.Medium,\n  onFocus,\n  ...inputProps\n}: InnerTextInputProps): ReactElement {\n  return (\n    <input\n      ref={forwardedRef}\n      autoFocus={hasFocusOnMount}\n      className={classNames(\n        className,\n        styles[size],\n        isDisabled && disabledClassName,\n        hasError && errorClassName\n      )}\n      disabled={isDisabled}\n      name={name}\n      onFocus={onFocus}\n      {...inputProps}\n    />\n  );\n}\n\nexport default React.forwardRef<HTMLInputElement, TextInputProps>(\n  (props, ref) => {\n    return <TextInput {...props} forwardedRef={ref} />;\n  }\n);\n","import { createSelector, Selector } from 'reselect';\nimport { LegacyRootState } from 'app/js/v4/root/rootTypes';\nimport selectEPGSettings from './selectEPGSettings';\n\nconst selectEPGSettingsPostalCodeExample: Selector<\n  LegacyRootState,\n  string | undefined\n> = createSelector(selectEPGSettings, ({ selectedCountry }) => {\n  return selectedCountry && selectedCountry.flavor === 1\n    ? selectedCountry.example\n    : undefined;\n});\n\nexport default selectEPGSettingsPostalCodeExample;\n","import React, {\n  ChangeEvent,\n  ReactElement,\n  useCallback,\n  useEffect,\n  useState,\n} from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport t from 'app/js/utils/t';\nimport FormLabel from 'app/js/v4/core/ui/forms/components/FormLabel';\nimport TextInput from 'app/js/v4/core/ui/forms/components/TextInput';\nimport Size from 'app/js/v4/core/ui/types/Size';\nimport epgSettingsSlice from 'app/js/v4/features/dvrManagement/epgSettingsSlice';\nimport selectEPGSettings from 'app/js/v4/features/dvrManagement/selectors/selectEPGSettings';\nimport selectEPGSettingsPostalCodeExample from 'app/js/v4/features/dvrManagement/selectors/selectEPGSettingsPostalCodeExample';\nimport usePrevious from 'app/js/v4/utils/hooks/usePrevious';\nimport styles from './DVRSetupPostalCodeInput.css';\n\ninterface DVRSetupPostalCodeInputProps {\n  isDisabled?: boolean;\n  hasError?: boolean;\n}\n\nlet epgPostalCodeTimeoutID: number | undefined;\n\nexport default function DVRSetupPostalCodeInput({\n  isDisabled,\n  hasError,\n}: DVRSetupPostalCodeInputProps): ReactElement | null {\n  const dispatch = useDispatch();\n  const { selectedCountry } = useSelector(selectEPGSettings);\n  const prevSelectedCountry = usePrevious(selectedCountry);\n  const postalCodeExample = useSelector(selectEPGSettingsPostalCodeExample);\n  const [postalCodeInput, setPostalCodeInput] = useState('');\n\n  //\n  // Callbacks\n\n  const onPostalCodeChange = useCallback(\n    (event: ChangeEvent<HTMLInputElement>) => {\n      setPostalCodeInput(event.currentTarget.value);\n    },\n    [setPostalCodeInput]\n  );\n\n  //\n  // Effects\n\n  useEffect(() => {\n    if (\n      prevSelectedCountry &&\n      prevSelectedCountry.key !== selectedCountry?.key\n    ) {\n      setPostalCodeInput('');\n    }\n  }, [selectedCountry, prevSelectedCountry]);\n\n  useEffect(() => {\n    if (epgPostalCodeTimeoutID) {\n      window.clearTimeout(epgPostalCodeTimeoutID);\n    }\n\n    epgPostalCodeTimeoutID = window.setTimeout(() => {\n      dispatch(\n        epgSettingsSlice.actions.epgPostalCodeChanged({\n          postalCode: postalCodeInput,\n        })\n      );\n    }, 300);\n\n    () => {\n      if (epgPostalCodeTimeoutID) {\n        window.clearTimeout(epgPostalCodeTimeoutID);\n      }\n    };\n  }, [dispatch, postalCodeInput]);\n\n  //\n  // Render\n\n  return postalCodeExample ? (\n    <>\n      <FormLabel className={styles.label} hasError={hasError}>\n        {t('Postal Code')}\n      </FormLabel>\n      <TextInput\n        hasError={hasError}\n        isDisabled={isDisabled}\n        name=\"postalCodeInput\"\n        placeholder={t('e.g. {postalCodeExample}', { postalCodeExample })}\n        size={Size.Medium}\n        value={postalCodeInput}\n        onChange={onPostalCodeChange}\n      />\n    </>\n  ) : null;\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"label\":\"YxmVf x_7jd\"};","import { Selector } from 'react-redux';\nimport { createSelector } from 'reselect';\nimport { EPGLineupGroup } from 'app/js/v4/features/dvrManagement/dvrManagementTypes';\nimport { LegacyRootState } from 'app/js/v4/root/rootTypes';\nimport selectEPGSettings from './selectEPGSettings';\n\nconst selectLatestEPGLineupGroup: Selector<\n  LegacyRootState,\n  EPGLineupGroup | null\n> = createSelector(selectEPGSettings, ({ lineupGroups }) => {\n  const { epgLineupGroups, isPending, isPopulated } = lineupGroups;\n\n  if (isPending || !isPopulated || epgLineupGroups.length === 0) {\n    return null;\n  }\n\n  return epgLineupGroups[epgLineupGroups.length - 1];\n});\n\nexport default selectLatestEPGLineupGroup;\n","import { createSelector, Selector } from 'reselect';\nimport {\n  EPGLineup,\n  EPGLineupType,\n} from 'app/js/v4/features/dvrManagement/dvrManagementTypes';\nimport { LegacyRootState } from 'app/js/v4/root/rootTypes';\nimport selectDVRSetup from './selectDVRSetup';\n\nconst selectSelectedDVRLineups: Selector<\n  LegacyRootState,\n  EPGLineup[] | undefined\n> = createSelector(selectDVRSetup, ({ selectedDVR }) => {\n  return selectedDVR?.dvr?.Lineup?.map((lineup) => ({\n    uuid: lineup.id,\n    title: lineup.title,\n    lineupType: EPGLineupType.Unknown,\n  }));\n});\n\nexport default selectSelectedDVRLineups;\n","// extracted by mini-css-extract-plugin\nexport default {\"innerModalBody\":\"C5P7X KNNpd\",\"header\":\"atLye\",\"formContainer\":\"MAx1o\",\"formElements\":\"Q7nGm\",\"formError\":\"IlEDP\",\"section\":\"rjZDo\",\"buttonBar\":\"HZfPN s5Y6S\",\"form\":\"KsQ5Q\"};","import React, { ReactElement, useCallback, useEffect, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport t from 'app/js/utils/t';\nimport { useSourceContext } from 'app/js/v4/core/servers/components/SourceContextProvider';\nimport Button from 'app/js/v4/core/ui/buttons/components/Button';\nimport SpinnerButton from 'app/js/v4/core/ui/buttons/components/SpinnerButton';\nimport ModalBody from 'app/js/v4/core/ui/modals/components/ModalBody';\nimport ModalFooter from 'app/js/v4/core/ui/modals/components/ModalFooter';\nimport ModalFooterButtonBar from 'app/js/v4/core/ui/modals/components/ModalFooterButtonBar';\nimport Kind from 'app/js/v4/core/ui/types/Kind';\nimport {\n  DVRSetupStep,\n  DVRSetupStepProps,\n} from 'app/js/v4/features/dvrManagement/components/setup/DVRSetupModal';\nimport DVRSetupCountryRegionSelectInput from 'app/js/v4/features/dvrManagement/components/setup/device/DVRSetupCountryRegionSelectInput';\nimport DVRSetupCountrySelectInput from 'app/js/v4/features/dvrManagement/components/setup/device/DVRSetupCountrySelectInput';\nimport DVRSetupPostalCodeInput from 'app/js/v4/features/dvrManagement/components/setup/device/DVRSetupPostalCodeInput';\nimport { EPGCountryFlavor } from 'app/js/v4/features/dvrManagement/dvrManagementTypes';\nimport dvrSetupSlice from 'app/js/v4/features/dvrManagement/dvrSetupSlice';\nimport epgSettingsSlice from 'app/js/v4/features/dvrManagement/epgSettingsSlice';\nimport selectDVRSetup from 'app/js/v4/features/dvrManagement/selectors/selectDVRSetup';\nimport selectEPGSettings from 'app/js/v4/features/dvrManagement/selectors/selectEPGSettings';\nimport selectEPGSettingsPostalCodeExample from 'app/js/v4/features/dvrManagement/selectors/selectEPGSettingsPostalCodeExample';\nimport selectLatestEPGLineupGroup from 'app/js/v4/features/dvrManagement/selectors/selectLatestEPGLineupGroup';\nimport selectSelectedDVRLineups from 'app/js/v4/features/dvrManagement/selectors/selectSelectedDVRLineups';\nimport selectSetupSelectedLineups from 'app/js/v4/features/dvrManagement/selectors/selectSetupSelectedLineups';\nimport usePrevious from 'app/js/v4/utils/hooks/usePrevious';\nimport Link from 'app/js/views/v3/components/core/buttons/Link';\nimport styles from './DVRSetupAddLineup.css';\n\nexport default function DVRSetupAddLineup({\n  onSetStep,\n}: DVRSetupStepProps): ReactElement {\n  const dispatch = useDispatch();\n  const [server] = useSourceContext();\n  const { selectedDevice } = useSelector(selectDVRSetup);\n  const {\n    selectedCountry,\n    selectedRegion,\n    selectedLineupGroups,\n    postalCode,\n    channelMappings: { isPending: isChannelMappingsPending },\n    lineupGroups: { isPending: isLineupGroupsPending },\n  } = useSelector(selectEPGSettings);\n  const lineupGroup = useSelector(selectLatestEPGLineupGroup);\n  const selectedSetupLineups = useSelector(selectSetupSelectedLineups);\n  const selectedDVRLineups = useSelector(selectSelectedDVRLineups);\n  const postalCodeExample = useSelector(selectEPGSettingsPostalCodeExample);\n  const [isAddingLineup, setIsAddingLineup] = useState(false);\n  const prevSelectedCountry = usePrevious(selectedCountry);\n  const prevSelectedRegion = usePrevious(selectedRegion);\n  const prevPostalCode = usePrevious(postalCode);\n\n  const canSwitchLineupProvider =\n    !selectedDVRLineups?.length && !selectedSetupLineups?.length;\n\n  const isEverySelectedLineupPopulated = selectedLineupGroups.every(\n    (selectedLineupGroup) => selectedLineupGroup.isSelectedLineupPopulated\n  );\n  const isEverySelectedLineupChannelMappingsFetched =\n    selectedLineupGroups.every(\n      (selectedLineupGroup) => selectedLineupGroup.isChannelMappingsFetched\n    );\n\n  const hasValidLocation = !!(\n    selectedCountry &&\n    (postalCode ||\n      selectedRegion ||\n      selectedCountry.flavor === EPGCountryFlavor.SinglePostalCode)\n  );\n\n  const hasChangedLocation = !!(\n    (prevSelectedCountry !== undefined &&\n      prevSelectedCountry !== selectedCountry) ||\n    (prevSelectedRegion !== undefined &&\n      prevSelectedRegion !== selectedRegion) ||\n    (prevPostalCode !== undefined && prevPostalCode !== postalCode)\n  );\n\n  //\n  // Callbacks\n\n  const onBackPress = useCallback(() => {\n    if (selectedLineupGroups.length > 0) {\n      onSetStep(DVRSetupStep.Mapping);\n    } else {\n      dispatch(dvrSetupSlice.actions.reset());\n      dispatch(epgSettingsSlice.actions.reset());\n    }\n  }, [dispatch, selectedLineupGroups.length, onSetStep]);\n\n  const onContinuePress = useCallback(() => {\n    if (lineupGroup) {\n      dispatch(\n        epgSettingsSlice.actions.selectedEPGLineupGroupAddRequested({\n          lineupGroup,\n        })\n      );\n    }\n  }, [dispatch, lineupGroup]);\n\n  const onUseXMLTVPress = useCallback(() => {\n    onSetStep(DVRSetupStep.XMLTV);\n  }, [onSetStep]);\n\n  //\n  // Effects\n\n  useEffect(() => {\n    if (!selectedDevice) {\n      onSetStep(DVRSetupStep.Device);\n    }\n  }, [selectedDevice, onSetStep]);\n\n  useEffect(() => {\n    if (hasChangedLocation && hasValidLocation && selectedCountry) {\n      dispatch(\n        epgSettingsSlice.actions.epgLineupGroupFetchRequested({\n          server,\n          country: selectedCountry,\n          region: selectedRegion,\n          postalCode,\n        })\n      );\n    }\n  }, [\n    hasChangedLocation,\n    hasValidLocation,\n    selectedRegion,\n    postalCode,\n    server,\n    selectedCountry,\n    dispatch,\n  ]);\n\n  useEffect(() => {\n    if (\n      lineupGroup &&\n      selectedDevice &&\n      selectedLineupGroups &&\n      !isAddingLineup &&\n      !isEverySelectedLineupPopulated\n    ) {\n      dispatch(\n        epgSettingsSlice.actions.bestEPGLineupSearchRequested({\n          server,\n          device: selectedDevice,\n          lineupGroup: selectedLineupGroups[selectedLineupGroups.length - 1],\n        })\n      );\n      setIsAddingLineup(true);\n    }\n  }, [\n    dispatch,\n    lineupGroup,\n    selectedDevice,\n    selectedLineupGroups,\n    isAddingLineup,\n    isEverySelectedLineupPopulated,\n    server,\n  ]);\n\n  useEffect(() => {\n    if (!isAddingLineup || !lineupGroup || !selectedDevice) {\n      return;\n    }\n\n    if (\n      isEverySelectedLineupPopulated &&\n      (isEverySelectedLineupChannelMappingsFetched ||\n        !selectedSetupLineups?.length)\n    ) {\n      onSetStep(DVRSetupStep.Mapping);\n    } else if (!isChannelMappingsPending && selectedSetupLineups?.length) {\n      dispatch(\n        epgSettingsSlice.actions.channelMappingsFetchRequested({\n          server,\n          device: selectedDevice,\n          lineups: selectedSetupLineups,\n        })\n      );\n    }\n  }, [\n    dispatch,\n    isAddingLineup,\n    isChannelMappingsPending,\n    isEverySelectedLineupPopulated,\n    isEverySelectedLineupChannelMappingsFetched,\n    lineupGroup,\n    onSetStep,\n    selectedDevice,\n    selectedSetupLineups,\n    server,\n  ]);\n\n  //\n  // Render\n\n  const canContinue =\n    (!lineupGroup || lineupGroup.epgLineups.length > 0) && hasValidLocation;\n\n  const isSubmitting =\n    isAddingLineup ||\n    isLineupGroupsPending ||\n    isChannelMappingsPending ||\n    !isEverySelectedLineupPopulated;\n\n  const hasError =\n    hasValidLocation &&\n    !isLineupGroupsPending &&\n    lineupGroup?.epgLineups.length === 0;\n\n  return (\n    <>\n      <ModalBody innerClassName={styles.innerModalBody}>\n        <p className={styles.header}>\n          {!selectedSetupLineups?.length\n            ? t('Add EPG data lineup or location')\n            : t('Add another EPG data lineup or location')}\n        </p>\n        <p>\n          {t(\n            'If your tuner device can receive channels that are not present in your initial lineup, you can specify additional locations or lineups to fulfill your EPG.'\n          )}\n        </p>\n        <p>\n          {t(\n            'Remember, your device will need to be able to tune these channels to be able to function.'\n          )}\n        </p>\n        <p>\n          {t(\n            'Any unsaved changes to channel mappings will be lost when you add a new lineup.'\n          )}\n        </p>\n        <div className={styles.formContainer}>\n          <div className={styles.formElements}>\n            {selectedDevice ? (\n              <div className={styles.section}>\n                <DVRSetupCountrySelectInput\n                  deviceKey={selectedDevice.key}\n                  hasError={hasError}\n                  isActive={true}\n                  isDisabled={isSubmitting}\n                />\n              </div>\n            ) : null}\n\n            {selectedCountry?.flavor === EPGCountryFlavor.Regions ? (\n              <div className={styles.section}>\n                <DVRSetupCountryRegionSelectInput\n                  hasError={hasError}\n                  isDisabled={isSubmitting}\n                />\n              </div>\n            ) : null}\n\n            {postalCodeExample ? (\n              <div className={styles.section}>\n                <DVRSetupPostalCodeInput\n                  hasError={hasError}\n                  isDisabled={isSubmitting}\n                />\n              </div>\n            ) : null}\n          </div>\n          {hasError ? (\n            <p className={styles.formError}>\n              {t(\n                \"We couldn't find Plex DVR guide data for your location at this time. Please select a different location or use an XMLTV guide.\"\n              )}\n            </p>\n          ) : null}\n        </div>\n\n        {canSwitchLineupProvider ? (\n          <Link kind={Kind.Primary} onPress={onUseXMLTVPress}>\n            {t(\n              'Have an XMLTV guide on your server? Click here to use that instead.'\n            )}\n          </Link>\n        ) : null}\n      </ModalBody>\n\n      <ModalFooter>\n        <ModalFooterButtonBar className={styles.buttonBar}>\n          <Button isDisabled={isChannelMappingsPending} onPress={onBackPress}>\n            {t('Back')}\n          </Button>\n          <SpinnerButton\n            isDisabled={!canContinue}\n            isSpinning={isSubmitting}\n            kind={Kind.Primary}\n            onPress={onContinuePress}\n          >\n            {t('Continue')}\n          </SpinnerButton>\n        </ModalFooterButtonBar>\n      </ModalFooter>\n    </>\n  );\n}\n","import { createSelector, Selector } from 'reselect';\nimport { ServerActivity } from 'app/js/v4/core/serverActivities/serverActivitiesTypes';\nimport createUnstableServerSelector from 'app/js/v4/core/servers/selectors/createUnstableServerSelector';\nimport { Server } from 'app/js/v4/core/servers/serversTypes';\nimport { LegacyRootState } from 'app/js/v4/root/rootTypes';\nimport memoize from 'app/js/v4/utils/memoize';\n\n// This selector may be created frequently in components and saga workers,\n// but there is a limited number of possible selectors based on the arguments.\n// Rather than independently memoize in each component or saga, add a layer of\n// memoization on top of reselect here.\n\nfunction createServerActivitiesSelector(\n  server: Server\n): Selector<LegacyRootState, ServerActivity[]> {\n  return createSelector(\n    createUnstableServerSelector(server.machineIdentifier),\n    (unstableServer) => {\n      return unstableServer?.desktop?.activities ?? [];\n    }\n  );\n}\n\nexport default memoize(createServerActivitiesSelector);\n","import { createSelector, Selector } from 'reselect';\nimport * as activityTypes from 'app/js/utils/server/activityTypes';\nimport createServerActivitiesSelector from 'app/js/v4/core/serverActivities/selectors/createServerActivitiesSelector';\nimport { ServerActivity } from 'app/js/v4/core/serverActivities/serverActivitiesTypes';\nimport { Server } from 'app/js/v4/core/servers/serversTypes';\nimport { LegacyRootState } from 'app/js/v4/root/rootTypes';\n\nfunction createChannelScanActivitySelector(\n  server: Server\n): Selector<LegacyRootState, ServerActivity | undefined> {\n  return createSelector(\n    createServerActivitiesSelector(server),\n    (activities) => {\n      return activities.find((activity) => {\n        return activity.type === activityTypes.PROVIDER_DEVICE_CHANNELSCAN;\n      });\n    }\n  );\n}\n\nexport default createChannelScanActivitySelector;\n","import { createSelector, Selector } from 'reselect';\nimport {\n  MediaGrabberDevice,\n  MediaGrabberDeviceStatus,\n} from 'app/js/v4/features/dvrManagement/dvrManagementTypes';\nimport selectDVRSetup from 'app/js/v4/features/dvrManagement/selectors/selectDVRSetup';\nimport { LegacyRootState } from 'app/js/v4/root/rootTypes';\n\nconst selectAvailableMediaGrabberDevices: Selector<\n  LegacyRootState,\n  MediaGrabberDevice[]\n> = createSelector(selectDVRSetup, ({ devices }) => {\n  return devices.mediaGrabberDevices.filter(\n    (mediaGrabberDevice) =>\n      !mediaGrabberDevice.parentID &&\n      mediaGrabberDevice.status === MediaGrabberDeviceStatus.Alive\n  );\n});\n\nexport default selectAvailableMediaGrabberDevices;\n","// extracted by mini-css-extract-plugin\nexport default {\"image\":\"tIOAz\"};","import React, { ReactElement } from 'react';\nimport { useSourceContext } from 'app/js/v4/core/servers/components/SourceContextProvider';\nimport useTranscodeImage from 'app/js/v4/core/servers/hooks/useTranscodeImage';\nimport CrossFadeImage, {\n  ImageFit,\n} from 'app/js/v4/core/ui/images/CrossFadeImage';\nimport genericImg from 'app/img/dvr-devices/device-generic-560.svg';\nimport hdHomeRunConnectImg from 'app/img/dvr-devices/device-hdhomerun-connect-560.svg';\nimport hdHomeRunExpandImg from 'app/img/dvr-devices/device-hdhomerun-expand-560.svg';\nimport hdHomeRunExtendImg from 'app/img/dvr-devices/device-hdhomerun-extend-560.svg';\nimport hdHomeRunPrimeImg from 'app/img/dvr-devices/device-hdhomerun-prime-560.svg';\nimport styles from './DVRDeviceImage.css';\n\ninterface DVRDeviceImageProps {\n  className?: string;\n  thumb?: string;\n  model: string;\n  width: number;\n  height: number;\n}\n\nconst deviceFallbackImgs: Record<string, string> = {\n  'HDHomeRun CONNECT': hdHomeRunConnectImg,\n  'HDHomeRun EXPAND': hdHomeRunExpandImg,\n  'HDHomeRun EXTEND': hdHomeRunExtendImg,\n  'HDHomeRun PRIME': hdHomeRunPrimeImg,\n};\n\nexport default function DVRDeviceImage({\n  className = styles.image,\n  thumb,\n  model,\n  width,\n  height,\n}: DVRDeviceImageProps): ReactElement {\n  const [server, provider] = useSourceContext();\n\n  const fallbackImg = deviceFallbackImgs[model] || genericImg;\n\n  const imageSrc = useTranscodeImage({\n    server,\n    provider,\n    width,\n    height,\n    url: thumb,\n  });\n\n  return (\n    <CrossFadeImage\n      className={className}\n      fit={ImageFit.Cover}\n      height={height}\n      src={imageSrc ?? fallbackImg}\n      width={width}\n    />\n  );\n}\n","import React, {\n  ChangeEvent,\n  ReactElement,\n  useCallback,\n  useEffect,\n  useMemo,\n} from 'react';\nimport { useDispatch } from 'react-redux';\nimport t from 'app/js/utils/t';\nimport Select from 'app/js/v4/core/ui/forms/components/Select';\nimport {\n  MediaGrabberDevice,\n  MediaGrabberDeviceSourceType,\n} from 'app/js/v4/features/dvrManagement/dvrManagementTypes';\nimport dvrSetupSlice from 'app/js/v4/features/dvrManagement/dvrSetupSlice';\n\ninterface DVRSetupDeviceSourceSelectInputProps {\n  device: MediaGrabberDevice;\n  isDisabled: boolean;\n}\n\ninterface SourceOption {\n  value: string;\n  label: string;\n}\n\nfunction getSourceTypeTitle(source: MediaGrabberDeviceSourceType): string {\n  switch (source) {\n    case MediaGrabberDeviceSourceType.Unknown:\n      return t('Unknown');\n    case MediaGrabberDeviceSourceType.Antenna:\n      return t('Antenna');\n    case MediaGrabberDeviceSourceType.Cable:\n      return t('Cable');\n    case MediaGrabberDeviceSourceType.Satellite:\n      return t('Satellite');\n  }\n}\n\nfunction getSourceOptions(\n  sources: MediaGrabberDeviceSourceType[] | undefined,\n  activeSource: MediaGrabberDeviceSourceType\n): SourceOption[] {\n  if (!sources) {\n    return [\n      {\n        value: activeSource,\n        label: getSourceTypeTitle(activeSource),\n      },\n    ];\n  }\n\n  return sources.map((source) => ({\n    value: source,\n    label: getSourceTypeTitle(source),\n  }));\n}\n\nexport default function DVRSetupDeviceSourceSelectInput({\n  device,\n  isDisabled,\n}: DVRSetupDeviceSourceSelectInputProps): ReactElement {\n  const dispatch = useDispatch();\n\n  const { key, source, sources } = device;\n\n  const sourceOptions = useMemo(\n    () => getSourceOptions(sources, source),\n    [sources, source]\n  );\n\n  //\n  // Callbacks\n\n  const onDeviceSourceSelect = useCallback(\n    (event: ChangeEvent<HTMLSelectElement>) => {\n      dispatch(\n        dvrSetupSlice.actions.deviceSourceSelected({\n          deviceKey: key,\n          source: event.currentTarget.value as MediaGrabberDeviceSourceType,\n        })\n      );\n    },\n    [dispatch, key]\n  );\n\n  //\n  // Effects\n\n  useEffect(() => {\n    if (sources && source === undefined) {\n      dispatch(\n        dvrSetupSlice.actions.deviceSourceSelected({\n          deviceKey: key,\n          source: sources[0],\n        })\n      );\n    }\n  }, [dispatch, key, sources, source]);\n\n  //\n  // Render\n\n  return (\n    <Select\n      isDisabled={isDisabled || sourceOptions.length === 1}\n      name=\"deviceSource\"\n      value={source}\n      onChange={onDeviceSourceSelect}\n    >\n      {sourceOptions.map(({ value, label }, index) => (\n        <option key={index} value={value}>\n          {label}\n        </option>\n      ))}\n    </Select>\n  );\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"container\":\"uQkw5\",\"section\":\"DuK3V\",\"make\":\"A9a2O\",\"model\":\"VYXyp\",\"moreInfo\":\"Xb8rj\",\"channelsMessage\":\"GEH0E\",\"button\":\"VUNrP XV6On MRjYA IYkbp\",\"disabledText\":\"Hhc9H\"};","import React, { ReactElement, useCallback, useEffect, useMemo } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport * as providerIdentifiers from 'app/js/utils/constants/providerIdentifiers';\nimport { scheduleImmediateUpdate } from 'app/js/utils/state/stateUpdateScheduler';\nimport t from 'app/js/utils/t';\nimport { useSourceContext } from 'app/js/v4/core/servers/components/SourceContextProvider';\nimport Button from 'app/js/v4/core/ui/buttons/components/Button';\nimport Link from 'app/js/v4/core/ui/buttons/components/Link';\nimport SpinnerButton from 'app/js/v4/core/ui/buttons/components/SpinnerButton';\nimport Kind from 'app/js/v4/core/ui/types/Kind';\nimport DVRDeviceImage from 'app/js/v4/features/dvrManagement/components/setup/DVRDeviceImage';\nimport {\n  DVRSetupStep,\n  DVRSetupStepProps,\n} from 'app/js/v4/features/dvrManagement/components/setup/DVRSetupModal';\nimport {\n  DeviceChannelsState,\n  EPGCountryFlavor,\n  MediaGrabberDevice,\n} from 'app/js/v4/features/dvrManagement/dvrManagementTypes';\nimport dvrSetupSlice from 'app/js/v4/features/dvrManagement/dvrSetupSlice';\nimport epgSettingsSlice from 'app/js/v4/features/dvrManagement/epgSettingsSlice';\nimport createDeviceChannelsSelector from 'app/js/v4/features/dvrManagement/selectors/createDeviceChannelsSelector';\nimport selectEPGSettings from 'app/js/v4/features/dvrManagement/selectors/selectEPGSettings';\nimport selectEPGSettingsPostalCodeExample from 'app/js/v4/features/dvrManagement/selectors/selectEPGSettingsPostalCodeExample';\nimport selectLatestEPGLineupGroup from 'app/js/v4/features/dvrManagement/selectors/selectLatestEPGLineupGroup';\nimport selectSelectedDVRLineups from 'app/js/v4/features/dvrManagement/selectors/selectSelectedDVRLineups';\nimport DashSeparator from 'app/js/views/v3/components/core/base/DashSeparator';\nimport DVRSetupCountryRegionSelectInput from './DVRSetupCountryRegionSelectInput';\nimport DVRSetupCountrySelectInput from './DVRSetupCountrySelectInput';\nimport DVRSetupDeviceSourceSelectInput from './DVRSetupDeviceSourceSelectInput';\nimport DVRSetupPostalCodeInput from './DVRSetupPostalCodeInput';\nimport styles from './DVRSetupDevice.css';\n\nfunction getChannelsMessage(\n  deviceChannels: DeviceChannelsState | undefined\n): string {\n  if (!deviceChannels || deviceChannels.isPending) {\n    return t('Loading channels...');\n  }\n\n  const { channels, error } = deviceChannels;\n  const channelCount = channels.length;\n\n  if (error || channelCount === 0) {\n    return t('0 Channels (scan required)');\n  } else if (channelCount === 1) {\n    return t('1 channel');\n  } else {\n    return t('{channelCount} channels', { channelCount });\n  }\n}\n\ninterface DVRSetupDeviceProps {\n  device: MediaGrabberDevice;\n  activeDeviceKey?: string;\n  onSetupStart(deviceKey: MediaGrabberDevice['key']): void;\n  onSetStep: DVRSetupStepProps['onSetStep'];\n}\n\nexport default function DVRSetupDevice({\n  device,\n  activeDeviceKey,\n  onSetupStart,\n  onSetStep,\n}: DVRSetupDeviceProps): ReactElement {\n  const dispatch = useDispatch();\n  const [server] = useSourceContext();\n  const selectDeviceChannels = useMemo(\n    () => createDeviceChannelsSelector(device.key),\n    [device]\n  );\n  const postalCodeExample = useSelector(selectEPGSettingsPostalCodeExample);\n  const deviceChannels = useSelector(selectDeviceChannels);\n  const {\n    lineupGroups: { isPending: isLineupGroupsPending },\n    selectedCountry,\n    selectedRegion,\n    postalCode,\n  } = useSelector(selectEPGSettings);\n  const lineupGroup = useSelector(selectLatestEPGLineupGroup);\n  const selectedDVRLineups = useSelector(selectSelectedDVRLineups);\n  const hasXMLTVLineup = selectedDVRLineups?.find(({ uuid }) =>\n    uuid.includes(providerIdentifiers.XMLTV)\n  );\n  const canUseXMLTV = !selectedDVRLineups || hasXMLTVLineup;\n  const { key, make, model, tuners, thumb, uri } = device;\n\n  const hasValidLocation = !!(\n    selectedCountry &&\n    (postalCode ||\n      selectedRegion ||\n      selectedCountry.flavor === EPGCountryFlavor.SinglePostalCode ||\n      hasXMLTVLineup)\n  );\n\n  const isActive = !!(activeDeviceKey && activeDeviceKey === key);\n  const isDisabled = !!(activeDeviceKey && activeDeviceKey !== key);\n  const canContinue = !!activeDeviceKey && hasValidLocation;\n\n  //\n  // Callbacks\n\n  const onNextPress = useCallback(() => {\n    if (!isActive || !canContinue) {\n      return;\n    }\n\n    scheduleImmediateUpdate(() => {\n      dispatch(dvrSetupSlice.actions.deviceSelected({ deviceKey: device.key }));\n\n      if (!hasXMLTVLineup && lineupGroup && lineupGroup.epgLineups.length > 0) {\n        dispatch(\n          epgSettingsSlice.actions.selectedEPGLineupGroupAddRequested({\n            lineupGroup,\n          })\n        );\n      }\n    });\n\n    if (lineupGroup && lineupGroup.epgLineups.length > 0 && !hasXMLTVLineup) {\n      onSetStep(DVRSetupStep.Info);\n    } else {\n      onSetStep(DVRSetupStep.XMLTV);\n    }\n  }, [\n    dispatch,\n    device,\n    lineupGroup,\n    hasXMLTVLineup,\n    isActive,\n    canContinue,\n    onSetStep,\n  ]);\n\n  const onXMLTVPress = useCallback(() => {\n    scheduleImmediateUpdate(() => {\n      dispatch(dvrSetupSlice.actions.deviceSelected({ deviceKey: device.key }));\n    });\n\n    onSetStep(DVRSetupStep.XMLTV);\n  }, [dispatch, device, onSetStep]);\n\n  const onSetupStartPress = useCallback(() => {\n    onSetupStart(key);\n  }, [key, onSetupStart]);\n\n  //\n  // Effects\n\n  useEffect(() => {\n    dispatch(\n      dvrSetupSlice.actions.deviceChannelsFetchRequested({\n        server,\n        deviceKey: key,\n      })\n    );\n  }, [server, key, dispatch]);\n\n  useEffect(() => {\n    if (hasValidLocation && selectedCountry) {\n      dispatch(\n        epgSettingsSlice.actions.epgLineupGroupFetchRequested({\n          server,\n          country: selectedCountry,\n          region: selectedRegion,\n          postalCode,\n        })\n      );\n    }\n  }, [\n    selectedRegion,\n    postalCode,\n    server,\n    selectedCountry,\n    hasValidLocation,\n    dispatch,\n  ]);\n\n  //\n  // Render\n\n  const channelsMessage = getChannelsMessage(deviceChannels);\n\n  return (\n    <form className={styles.container} onSubmit={onNextPress}>\n      <DVRDeviceImage height={110} model={model} thumb={thumb} width={200} />\n\n      <div className={styles.section}>\n        <div className={styles.make}>{make}</div>\n        <div className={styles.model}>{model}</div>\n        <div className={styles.moreInfo}>\n          {uri}\n          {uri && tuners ? <DashSeparator /> : null}\n          {tuners > 1\n            ? t('{tunersCount} tuners', { tunersCount: tuners })\n            : t('1 tuner')}\n        </div>\n      </div>\n\n      <div className={styles.section}>\n        <DVRSetupDeviceSourceSelectInput\n          device={device}\n          isDisabled={isDisabled}\n        />\n        <div className={styles.channelsMessage}>{channelsMessage}</div>\n      </div>\n\n      {!isDisabled ? (\n        <div className={styles.section}>\n          <DVRSetupCountrySelectInput\n            deviceKey={device.key}\n            isActive={isActive}\n            onEdit={onSetupStartPress}\n          />\n        </div>\n      ) : null}\n\n      {isActive &&\n      selectedCountry?.flavor === EPGCountryFlavor.Regions &&\n      !hasXMLTVLineup ? (\n        <div className={styles.section}>\n          <DVRSetupCountryRegionSelectInput />\n        </div>\n      ) : null}\n\n      {isActive && postalCodeExample && !hasXMLTVLineup ? (\n        <div className={styles.section}>\n          <DVRSetupPostalCodeInput />\n        </div>\n      ) : null}\n\n      {isActive && canUseXMLTV && !hasXMLTVLineup ? (\n        <div className={styles.section}>\n          <Link kind={Kind.Primary} onPress={onXMLTVPress}>\n            {t('Have an XMLTV guide on your server? Click here to use it.')}\n          </Link>\n        </div>\n      ) : null}\n\n      {!isActive && !isDisabled ? (\n        <Button\n          className={styles.button}\n          kind={Kind.Primary}\n          onPress={onSetupStartPress}\n        >\n          {t('Setup Device')}\n        </Button>\n      ) : null}\n\n      {isActive ? (\n        <SpinnerButton\n          className={styles.button}\n          isDisabled={!canContinue}\n          isSpinning={isLineupGroupsPending}\n          kind={Kind.Primary}\n          type=\"submit\"\n        >\n          {t('Next')}\n        </SpinnerButton>\n      ) : null}\n\n      {isDisabled ? (\n        <div className={styles.disabledText}>\n          {t('You can add this device later.')}\n        </div>\n      ) : null}\n    </form>\n  );\n}\n","enum Direction {\n  Up = 'up',\n  Right = 'right',\n  Down = 'down',\n  Left = 'left',\n}\n\nexport default Direction;\n","import React, { ReactElement, useCallback, useEffect, useState } from 'react';\nimport { useForm } from 'react-hook-form';\nimport { useDispatch, useSelector } from 'react-redux';\nimport t from 'app/js/utils/t';\nimport { useSourceContext } from 'app/js/v4/core/servers/components/SourceContextProvider';\nimport SpinnerButton from 'app/js/v4/core/ui/buttons/components/SpinnerButton';\nimport FormLabel from 'app/js/v4/core/ui/forms/components/FormLabel';\nimport TextInput from 'app/js/v4/core/ui/forms/components/TextInput';\nimport Direction from 'app/js/v4/core/ui/types/Direction';\nimport Kind from 'app/js/v4/core/ui/types/Kind';\nimport dvrSetupSlice from 'app/js/v4/features/dvrManagement/dvrSetupSlice';\nimport selectDVRSetup from 'app/js/v4/features/dvrManagement/selectors/selectDVRSetup';\nimport usePrevious from 'app/js/v4/utils/hooks/usePrevious';\nimport DisclosureArrowButton from 'app/js/views/v3/components/core/buttons/DisclosureArrowButton';\nimport styles from './DVRSetupManualDevice.css';\n\ninterface FormData {\n  address: string;\n}\n\nexport default function DVRSetupManualDevice(): ReactElement {\n  const dispatch = useDispatch();\n  const [server] = useSourceContext();\n  const { setupErrorMessage, isAddingDevice } = useSelector(selectDVRSetup);\n  const [showManualAddress, setShowManualAddress] = useState(false);\n  const prevIsAddingDevice = usePrevious(isAddingDevice);\n  const { register, handleSubmit } = useForm<FormData>();\n\n  //\n  // Callbacks\n\n  const onShowDeviceAddressPress = useCallback(() => {\n    setShowManualAddress(!showManualAddress);\n  }, [showManualAddress, setShowManualAddress]);\n\n  const onSubmit = handleSubmit(({ address }: FormData) => {\n    dispatch(\n      dvrSetupSlice.actions.deviceAddRequested({\n        server,\n        uri: address,\n      })\n    );\n  });\n\n  //\n  // Effects\n\n  useEffect(() => {\n    if (\n      showManualAddress &&\n      prevIsAddingDevice &&\n      !isAddingDevice &&\n      !setupErrorMessage\n    ) {\n      setShowManualAddress(false);\n    }\n  }, [\n    isAddingDevice,\n    prevIsAddingDevice,\n    setShowManualAddress,\n    setupErrorMessage,\n    showManualAddress,\n  ]);\n\n  //\n  // Render\n\n  return (\n    <>\n      <div className={styles.manualDeviceButtonContainer}>\n        <DisclosureArrowButton\n          direction={showManualAddress ? Direction.Up : Direction.Down}\n          isSelected={false}\n          kind={Kind.Primary}\n          // @ts-expect-error ts-migrate(2769) FIXME: No overload matches this call.\n          onPress={onShowDeviceAddressPress}\n        >\n          {t(\n            \"Don't see your HDHomeRun device? Enter its network address manually\"\n          )}\n        </DisclosureArrowButton>\n      </div>\n\n      {showManualAddress ? (\n        <div className={styles.manualDeviceContainer}>\n          <form onSubmit={onSubmit}>\n            <FormLabel>{t('HDHomeRun Device Address')}</FormLabel>\n            <TextInput\n              ref={register({ required: true })}\n              className={styles.manualDeviceInput}\n              name=\"address\"\n              placeholder={t('IP address or hostname')}\n              type=\"text\"\n            />\n\n            <SpinnerButton\n              isSpinning={isAddingDevice}\n              kind={Kind.Primary}\n              type=\"submit\"\n            >\n              {t('Connect')}\n            </SpinnerButton>\n          </form>\n        </div>\n      ) : null}\n    </>\n  );\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"manualDeviceButtonContainer\":\"V_fVy\",\"manualDeviceContainer\":\"e5hop\",\"manualDeviceInput\":\"usFAX VG1wI\"};","import React, {\n  ReactElement,\n  useCallback,\n  useEffect,\n  useMemo,\n  useState,\n} from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { scheduleImmediateUpdate } from 'app/js/utils/state/stateUpdateScheduler';\nimport t from 'app/js/utils/t';\nimport createChannelScanActivitySelector from 'app/js/v4/core/serverActivities/selectors/createChannelScanActivitySelector';\nimport { useSourceContext } from 'app/js/v4/core/servers/components/SourceContextProvider';\nimport ModalBody from 'app/js/v4/core/ui/modals/components/ModalBody';\nimport Scroller, {\n  ScrollDirection,\n} from 'app/js/v4/core/ui/scrollers/components/Scroller';\nimport Spinner from 'app/js/v4/core/ui/spinners/components/Spinner';\nimport { DVRSetupStepProps } from 'app/js/v4/features/dvrManagement/components/setup/DVRSetupModal';\nimport { MediaGrabberDevice } from 'app/js/v4/features/dvrManagement/dvrManagementTypes';\nimport dvrSetupSlice from 'app/js/v4/features/dvrManagement/dvrSetupSlice';\nimport selectAvailableMediaGrabberDevices from 'app/js/v4/features/dvrManagement/selectors/selectAvailableMediaGrabberDevices';\nimport selectDVRSetup from 'app/js/v4/features/dvrManagement/selectors/selectDVRSetup';\nimport DVRSetupDevice from './DVRSetupDevice';\nimport DVRSetupManualDevice from './DVRSetupManualDevice';\nimport styles from './DVRSetupDeviceList.css';\n\nfunction getStatusMessage(\n  devices: MediaGrabberDevice[],\n  isPending: boolean,\n  isPopulated: boolean\n): string {\n  if (isPending) {\n    return t('Looking for compatible devices...');\n  }\n  if (isPopulated && devices.length > 0) {\n    return t('We found hardware we recognize!');\n  } else if (isPopulated && devices.length === 0) {\n    return t(\n      \"We couldn't find any hardware we recognize, but will continue to look for available devices.\"\n    );\n  } else {\n    return t('Something went wrong. Please try again later.');\n  }\n}\n\nexport default function DVRSetupDeviceList({\n  onSetStep,\n}: DVRSetupStepProps): ReactElement {\n  const dispatch = useDispatch();\n  const [server] = useSourceContext();\n  const [activeDeviceKey, setActiveDeviceKey] = useState<\n    MediaGrabberDevice['key'] | undefined\n  >(undefined);\n\n  const {\n    devices: { isPending: isDevicesPending, isPopulated: isDevicesPopulated },\n    isDiscoveringDevices,\n    isCancellingChannelScan,\n  } = useSelector(selectDVRSetup);\n  const availableDevices = useSelector(selectAvailableMediaGrabberDevices);\n\n  const selectChannelScanActivity = useMemo(\n    () => createChannelScanActivitySelector(server),\n    [server]\n  );\n\n  const channelScanActivity = useSelector(selectChannelScanActivity);\n\n  //\n  // Callbacks\n\n  const onSetupStart = useCallback(\n    (deviceKey) => {\n      setActiveDeviceKey(deviceKey);\n    },\n    [setActiveDeviceKey]\n  );\n\n  //\n  // Effects\n\n  useEffect(() => {\n    scheduleImmediateUpdate(() => {\n      dispatch(dvrSetupSlice.actions.setupReset());\n    });\n  }, [dispatch]);\n\n  useEffect(() => {\n    if (isCancellingChannelScan) {\n      return;\n    }\n\n    if (channelScanActivity) {\n      dispatch(\n        dvrSetupSlice.actions.deviceChannelsCancelScanRequested({\n          server,\n          deviceKey: channelScanActivity.Context.deviceID,\n        })\n      );\n    } else if (!isDevicesPopulated) {\n      dispatch(dvrSetupSlice.actions.devicesFetchRequested({ server }));\n    }\n  }, [\n    dispatch,\n    server,\n    channelScanActivity,\n    isCancellingChannelScan,\n    isDevicesPopulated,\n  ]);\n\n  useEffect(() => {\n    if (\n      activeDeviceKey &&\n      !availableDevices.some((device) => device.key === activeDeviceKey)\n    ) {\n      setActiveDeviceKey(undefined);\n    } else if (availableDevices.length === 1 && !activeDeviceKey) {\n      setActiveDeviceKey(availableDevices[0].key);\n    }\n  }, [availableDevices, activeDeviceKey, setActiveDeviceKey]);\n\n  useEffect(() => {\n    let devicesDiscoverTimeoutID: number;\n\n    if (!isDiscoveringDevices && !isCancellingChannelScan) {\n      devicesDiscoverTimeoutID = window.setTimeout(() => {\n        dispatch(dvrSetupSlice.actions.devicesDiscoverRequested({ server }));\n      }, 2000);\n    }\n\n    return () => {\n      if (devicesDiscoverTimeoutID) {\n        window.clearTimeout(devicesDiscoverTimeoutID);\n      }\n    };\n  }, [dispatch, server, isDiscoveringDevices, isCancellingChannelScan]);\n\n  //\n  // Render\n\n  const message = getStatusMessage(\n    availableDevices,\n    isDevicesPending || isCancellingChannelScan,\n    isDevicesPopulated\n  );\n\n  const showSpinner =\n    isCancellingChannelScan ||\n    isDevicesPending ||\n    !availableDevices.length ||\n    (availableDevices.length === 1 && !activeDeviceKey);\n\n  return (\n    <ModalBody\n      className={styles.modalBody}\n      innerClassName={styles.innerModalBody}\n    >\n      <p>{message}</p>\n      <DVRSetupManualDevice />\n      {showSpinner ? (\n        <div className={styles.spinnerContainer}>\n          <Spinner />\n        </div>\n      ) : (\n        <Scroller\n          className={styles.devicesContainer}\n          scrollDirection={ScrollDirection.Horizontal}\n        >\n          {availableDevices.map((device) => (\n            <DVRSetupDevice\n              key={device.key}\n              activeDeviceKey={activeDeviceKey}\n              device={device}\n              onSetStep={onSetStep}\n              onSetupStart={onSetupStart}\n            />\n          ))}\n        </Scroller>\n      )}\n    </ModalBody>\n  );\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"devicesContainer\":\"YpUWV\",\"modalBody\":\"ax2GR u5YPF BSp3D\",\"innerModalBody\":\"_BuRs KNNpd\",\"spinnerContainer\":\"VBOAI\"};","import {\n  ContentDirectory,\n  Pivot,\n  Provider,\n} from 'app/js/v4/core/providers/providersTypes';\nimport { Server } from 'app/js/v4/core/servers/serversTypes';\nimport isUnknownViewPivot from 'app/js/v4/features/directory/utils/isUnknownViewPivot';\nimport getSourceRoute from 'app/js/views/v3/helpers/routes/getSourceRoute';\n\nfunction getPivotRoute(\n  server: Server,\n  provider: Provider,\n  contentDirectory: ContentDirectory | undefined,\n  pivot: Pivot\n): string | undefined {\n  if (!contentDirectory) {\n    return;\n  }\n\n  if (isUnknownViewPivot(pivot)) {\n    return;\n  }\n\n  const isInlinePivot = !contentDirectory.pivots?.includes(pivot);\n\n  const params =\n    // Pivots that come from Meta will not be included in the contentDirectory.\n    // In order to instruct DirectoryPage to load the key with out any Selected\n    // Pivot we intentionally don't use the `pivot` param, which will allow\n    // DirectoryPage to load the key directly and display any inline pivots\n    isInlinePivot\n      ? {\n          pageType: pivot.type,\n          key: pivot.key,\n        }\n      : {\n          pivot: pivot.id || pivot.key,\n        };\n\n  return getSourceRoute(server, provider, contentDirectory, params);\n}\n\nexport default getPivotRoute;\n","import {\n  Pivot,\n  PivotType,\n  PivotView,\n} from 'app/js/v4/core/providers/providersTypes';\n\nfunction isUnknownViewPivot(pivot: Pivot): boolean {\n  return (\n    pivot.type === PivotType.View &&\n    !Object.values<string>(PivotView).includes(pivot.key)\n  );\n}\n\nexport default isUnknownViewPivot;\n","// extracted by mini-css-extract-plugin\nexport default {\"container\":\"BmgU3\",\"info\":\"PkaIK\",\"make\":\"XsnOh\",\"model\":\"DghLk\"};","import React, { ReactElement } from 'react';\nimport t from 'app/js/utils/t';\nimport Button from 'app/js/v4/core/ui/buttons/components/Button';\nimport Kind from 'app/js/v4/core/ui/types/Kind';\nimport Size from 'app/js/v4/core/ui/types/Size';\nimport DVRDeviceImage from 'app/js/v4/features/dvrManagement/components/setup/DVRDeviceImage';\nimport { MediaGrabberDevice } from 'app/js/v4/features/dvrManagement/dvrManagementTypes';\nimport styles from './AdditionalDevice.css';\n\ninterface AdditionalDeviceProps {\n  device: MediaGrabberDevice;\n  onSetupPress(): void;\n}\n\nexport default function AdditionalDevice({\n  device,\n  onSetupPress,\n}: AdditionalDeviceProps): ReactElement {\n  const { make, model, thumb } = device;\n\n  //\n  // Render\n\n  return (\n    <div className={styles.container}>\n      <DVRDeviceImage height={73} model={model} thumb={thumb} width={130} />\n      <div className={styles.info}>\n        <div className={styles.make}>{make}</div>\n        <div className={styles.model}>{model}</div>\n        <Button\n          className={styles.button}\n          kind={Kind.Primary}\n          size={Size.Small}\n          onPress={onSetupPress}\n        >\n          {t('Setup Device')}\n        </Button>\n      </div>\n    </div>\n  );\n}\n","import React, { ReactElement, useCallback } from 'react';\nimport { useSelector } from 'react-redux';\nimport t from 'app/js/utils/t';\nimport {\n  PivotView,\n  ProviderFeatureType,\n} from 'app/js/v4/core/providers/providersTypes';\nimport getProviderFeature from 'app/js/v4/core/providers/utils/getProviderFeature';\nimport { useSourceContext } from 'app/js/v4/core/servers/components/SourceContextProvider';\nimport Button from 'app/js/v4/core/ui/buttons/components/Button';\nimport ModalBody from 'app/js/v4/core/ui/modals/components/ModalBody';\nimport ModalFooter from 'app/js/v4/core/ui/modals/components/ModalFooter';\nimport ModalFooterButtonBar from 'app/js/v4/core/ui/modals/components/ModalFooterButtonBar';\nimport Spinner from 'app/js/v4/core/ui/spinners/components/Spinner';\nimport Kind from 'app/js/v4/core/ui/types/Kind';\nimport getPivotRoute from 'app/js/v4/features/directory/utils/getPivotRoute';\nimport {\n  DVRSetupStep,\n  DVRSetupStepProps,\n} from 'app/js/v4/features/dvrManagement/components/setup/DVRSetupModal';\nimport selectAvailableMediaGrabberDevices from 'app/js/v4/features/dvrManagement/selectors/selectAvailableMediaGrabberDevices';\nimport selectDVRSetup from 'app/js/v4/features/dvrManagement/selectors/selectDVRSetup';\nimport AdditionalDevice from './AdditionalDevice';\nimport styles from './DVRSetupDownload.css';\n\nexport default function DVRSetupDownload({\n  onModalClose,\n  onSetStep,\n}: DVRSetupStepProps): ReactElement {\n  const [server, provider] = useSourceContext();\n  const {\n    devices: { isPending: isDevicesPending },\n  } = useSelector(selectDVRSetup);\n  const { epgDownloadActivityID } = useSelector(selectDVRSetup);\n  const availableDevices = useSelector(selectAvailableMediaGrabberDevices);\n\n  const contentFeature = getProviderFeature(\n    provider,\n    ProviderFeatureType.Content\n  );\n  const sourceDirectory = contentFeature?.directories?.find(\n    (contentDirectory) => {\n      return contentDirectory.hubKey && !contentDirectory.key;\n    }\n  );\n  const guidePivot = sourceDirectory?.pivots?.find(\n    (pivot) => pivot.key === PivotView.Guide\n  );\n\n  const guideRoute =\n    guidePivot && getPivotRoute(server, provider, sourceDirectory, guidePivot);\n\n  //\n  // Callbacks\n\n  const onSetupPress = useCallback(() => {\n    onSetStep(DVRSetupStep.Device);\n  }, [onSetStep]);\n\n  //\n  // Render\n\n  return (\n    <>\n      <ModalBody innerClassName={styles.innerModalBody}>\n        {!isDevicesPending && availableDevices.length > 0 ? (\n          <div className={styles.additionalDevices}>\n            <p className={styles.accentText}>{t('Setup another device?')}</p>\n            {availableDevices.map((device) => (\n              <AdditionalDevice\n                key={device.key}\n                device={device}\n                onSetupPress={onSetupPress}\n              />\n            ))}\n          </div>\n        ) : null}\n\n        <p className={styles.text}>\n          {t(\n            'You can now find your Guide and Channels in the sidebar under \"Live TV\". While we\\'re grabbing the guide data, you can start browsing; it will update automatically as we download what’s on.'\n          )}\n        </p>\n\n        {epgDownloadActivityID ? (\n          <div className={styles.spinnerContainer}>\n            <Spinner className={styles.spinner} />\n            <p>{t('Downloading EPG data')}</p>\n          </div>\n        ) : null}\n      </ModalBody>\n\n      <ModalFooter>\n        <ModalFooterButtonBar>\n          <Button onPress={onModalClose}>{t('Close')}</Button>\n          <Button\n            isDisabled={!guideRoute}\n            kind={Kind.Primary}\n            to={guideRoute}\n            onPress={onModalClose}\n          >\n            {t('View Guide')}\n          </Button>\n        </ModalFooterButtonBar>\n      </ModalFooter>\n    </>\n  );\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"innerModalBody\":\"NzqX9 KNNpd\",\"text\":\"eoX0T\",\"accentText\":\"G7OPW\",\"additionalDevices\":\"rkSlu\",\"spinnerContainer\":\"jq6tI\",\"spinner\":\"q3n_h RD8jJ m_4Rc\"};","import React, {\n  ComponentType,\n  CSSProperties,\n  ReactElement,\n  SVGAttributes,\n} from 'react';\nimport styles from './Badge.css';\n\nexport interface BadgeProps {\n  className?: string;\n  style?: CSSProperties;\n  iconClassName?: string;\n  iconComponent: ComponentType<SVGAttributes<SVGElement>>;\n}\n\nexport default function Badge({\n  className = styles.badge,\n  style,\n  iconClassName = styles.icon,\n  iconComponent: Icon,\n}: BadgeProps): ReactElement {\n  return (\n    <div className={className} style={style}>\n      <Icon className={iconClassName} />\n    </div>\n  );\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"badge\":\"smaMo\",\"icon\":\"xrvfy\"};","import React, { ReactElement } from 'react';\nimport Badge from 'app/js/v4/core/ui/badges/components/Badge';\nimport Spinner from 'app/js/v4/core/ui/spinners/components/Spinner';\nimport IconSelected from 'app/glyphs/selected-560.svg';\nimport { LoadingStep } from './DVRSetupInfo';\nimport styles from './DVRSetupInfoStep.css';\n\ninterface DVRSetupInfoStepProps {\n  activeStep: LoadingStep;\n  step: LoadingStep;\n  title: string;\n}\n\nexport default function DVRSetupInfoStep({\n  activeStep,\n  step,\n  title,\n}: DVRSetupInfoStepProps): ReactElement {\n  const isActive = activeStep === step;\n  const isDone = activeStep > step;\n  const isWaiting = activeStep < step;\n\n  return (\n    <div className={styles.container}>\n      {isDone ? (\n        <Badge className={styles.done} iconComponent={IconSelected} />\n      ) : null}\n      {isActive ? <Spinner className={styles.active} /> : null}\n      {isWaiting ? <div className={styles.waiting} /> : null}\n      {title}\n    </div>\n  );\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"container\":\"TvnCF\",\"step\":\"ahDBf\",\"done\":\"Qz1Cw smaMo ahDBf\",\"active\":\"cJGi9 RD8jJ m_4Rc ahDBf\",\"waiting\":\"Iw7KE smaMo ahDBf\"};","import React, {\n  ReactElement,\n  useCallback,\n  useEffect,\n  useMemo,\n  useState,\n} from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport t from 'app/js/utils/t';\nimport { useSourceContext } from 'app/js/v4/core/servers/components/SourceContextProvider';\nimport Button from 'app/js/v4/core/ui/buttons/components/Button';\nimport ModalBody from 'app/js/v4/core/ui/modals/components/ModalBody';\nimport ModalFooter from 'app/js/v4/core/ui/modals/components/ModalFooter';\nimport ModalFooterButtonBar from 'app/js/v4/core/ui/modals/components/ModalFooterButtonBar';\nimport Spinner from 'app/js/v4/core/ui/spinners/components/Spinner';\nimport {\n  DVRSetupStep,\n  DVRSetupStepProps,\n} from 'app/js/v4/features/dvrManagement/components/setup/DVRSetupModal';\nimport dvrSetupSlice from 'app/js/v4/features/dvrManagement/dvrSetupSlice';\nimport epgSettingsSlice from 'app/js/v4/features/dvrManagement/epgSettingsSlice';\nimport createDeviceChannelsSelector from 'app/js/v4/features/dvrManagement/selectors/createDeviceChannelsSelector';\nimport selectDVRSetup from 'app/js/v4/features/dvrManagement/selectors/selectDVRSetup';\nimport selectEPGSettings from 'app/js/v4/features/dvrManagement/selectors/selectEPGSettings';\nimport selectSetupSelectedLineups from 'app/js/v4/features/dvrManagement/selectors/selectSetupSelectedLineups';\nimport DVRSetupInfoStep from './DVRSetupInfoStep';\nimport styles from './DVRSetupInfo.css';\n\nexport enum LoadingStep {\n  Data = 1,\n  Channels = 2,\n  Guide = 3,\n}\n\nexport default function DVRSetupInfo({\n  onSetStep,\n}: DVRSetupStepProps): ReactElement {\n  const dispatch = useDispatch();\n  const [server] = useSourceContext();\n  const [loadingStep, setLoadingStep] = useState(LoadingStep.Data);\n\n  const selectedLineups = useSelector(selectSetupSelectedLineups);\n  const { selectedDevice } = useSelector(selectDVRSetup);\n  const selectDeviceChannels = useMemo(\n    () => createDeviceChannelsSelector(selectedDevice?.key),\n    [selectedDevice]\n  );\n  const {\n    channels,\n    isPending: isChannelsPending,\n    isPopulated: isChannelsPopulated,\n  } = useSelector(selectDeviceChannels);\n\n  const {\n    postalCode,\n    selectedCountry,\n    selectedLanguage,\n    selectedLineupGroups,\n    selectedRegion,\n    languages: { epgLanguages },\n    channelMappings: { isPopulated: isChannelMappingsPopulated },\n  } = useSelector(selectEPGSettings);\n\n  const lineupGroup = selectedLineupGroups[0];\n\n  //\n  // Callbacks\n\n  const onBackPress = useCallback(() => {\n    onSetStep(DVRSetupStep.Device);\n  }, [onSetStep]);\n\n  //\n  // Effects\n\n  useEffect(() => {\n    if (epgLanguages.length === 0) {\n      dispatch(\n        epgSettingsSlice.actions.epgLanguagesFetchRequested({\n          server,\n        })\n      );\n    }\n  }, [dispatch, server, epgLanguages, onSetStep]);\n\n  useEffect(() => {\n    if (loadingStep === LoadingStep.Data) {\n      if (selectedCountry && selectedLanguage) {\n        setLoadingStep(LoadingStep.Channels);\n      } else if (epgLanguages && selectedCountry && !selectedLanguage) {\n        dispatch(\n          epgSettingsSlice.actions.epgLanguageSelected({\n            languageCode: selectedCountry.language,\n          })\n        );\n      }\n    }\n  }, [dispatch, epgLanguages, loadingStep, selectedCountry, selectedLanguage]);\n\n  useEffect(() => {\n    if (loadingStep === LoadingStep.Channels) {\n      if (isChannelsPopulated) {\n        setLoadingStep(LoadingStep.Guide);\n      } else if (selectedDevice && (!channels || !isChannelsPending)) {\n        dispatch(\n          dvrSetupSlice.actions.deviceChannelsFetchRequested({\n            server,\n            deviceKey: selectedDevice.key,\n          })\n        );\n      }\n    }\n  }, [\n    channels,\n    dispatch,\n    isChannelsPending,\n    isChannelsPopulated,\n    loadingStep,\n    selectedDevice,\n    server,\n  ]);\n\n  useEffect(() => {\n    if (\n      loadingStep === LoadingStep.Guide &&\n      selectedCountry &&\n      !selectedLineups &&\n      !lineupGroup\n    ) {\n      dispatch(\n        epgSettingsSlice.actions.epgLineupGroupFetchRequested({\n          server,\n          country: selectedCountry,\n          region: selectedRegion,\n          postalCode,\n        })\n      );\n    }\n  }, [\n    dispatch,\n    lineupGroup,\n    loadingStep,\n    postalCode,\n    selectedCountry,\n    selectedLineups,\n    selectedRegion,\n    server,\n  ]);\n\n  useEffect(() => {\n    if (\n      loadingStep === LoadingStep.Guide &&\n      selectedDevice &&\n      !lineupGroup?.activityUUID &&\n      !lineupGroup?.isSelectedLineupPopulated &&\n      !selectedLineups?.length\n    ) {\n      dispatch(\n        epgSettingsSlice.actions.bestEPGLineupSearchRequested({\n          server,\n          device: selectedDevice,\n          lineupGroup,\n        })\n      );\n    }\n  }, [\n    dispatch,\n    lineupGroup,\n    loadingStep,\n    selectedDevice,\n    selectedLineups,\n    server,\n  ]);\n\n  useEffect(() => {\n    if (\n      loadingStep === LoadingStep.Guide &&\n      lineupGroup?.isSelectedLineupPopulated\n    ) {\n      onSetStep(DVRSetupStep.Mapping);\n    }\n  }, [\n    isChannelMappingsPopulated,\n    lineupGroup,\n    loadingStep,\n    onSetStep,\n    selectedLineups,\n  ]);\n\n  //\n  // Render\n\n  return (\n    <>\n      <ModalBody\n        className={styles.modalBody}\n        innerClassName={styles.innerModalBody}\n      >\n        <p>{t('Setting up your tuner and channels...')}</p>\n        <div className={styles.container}>\n          <Spinner className={styles.spinner} />\n\n          <div className={styles.steps}>\n            <DVRSetupInfoStep\n              activeStep={loadingStep}\n              step={LoadingStep.Data}\n              title={t('Gathering data')}\n            />\n            <DVRSetupInfoStep\n              activeStep={loadingStep}\n              step={LoadingStep.Channels}\n              title={t('Scanning channels')}\n            />\n            <DVRSetupInfoStep\n              activeStep={loadingStep}\n              step={LoadingStep.Guide}\n              title={t('Finding the best guide')}\n            />\n          </div>\n        </div>\n      </ModalBody>\n\n      <ModalFooter>\n        <ModalFooterButtonBar className={styles.buttonBar}>\n          <Button onPress={onBackPress}>{t('Back')}</Button>\n        </ModalFooterButtonBar>\n      </ModalFooter>\n    </>\n  );\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"modalBody\":\"oRL_x u5YPF BSp3D\",\"innerModalBody\":\"m7raH KNNpd\",\"container\":\"rWWNv\",\"spinner\":\"VCIuq RD8jJ m_4Rc\",\"steps\":\"GPvYz\",\"buttonBar\":\"DrNPs s5Y6S\"};","import { createSelector, Selector } from 'reselect';\nimport createServerActivitiesSelector from 'app/js/v4/core/serverActivities/selectors/createServerActivitiesSelector';\nimport {\n  ServerActivity,\n  ServerActivityType,\n} from 'app/js/v4/core/serverActivities/serverActivitiesTypes';\nimport { Server } from 'app/js/v4/core/servers/serversTypes';\nimport { LegacyRootState } from 'app/js/v4/root/rootTypes';\n\nfunction createEPGLineupScanActivitySelector(\n  server: Server\n): Selector<LegacyRootState, ServerActivity | undefined> {\n  return createSelector(\n    createServerActivitiesSelector(server),\n    (activities) => {\n      return activities.find((activity) => {\n        return activity.type === ServerActivityType.ProviderEpgLineupScan;\n      });\n    }\n  );\n}\n\nexport default createEPGLineupScanActivitySelector;\n","\n    import PropTypes from 'prop-types';\n    import React from 'react';\n    import styles from 'app/js/views/v3/components/core/base/PlexIcon.css';\n\n    function IconDvrClockHour(props) {\n      const label = props['aria-label'];\n      const className = props.className;\n      const style = props.style;\n\n      const svgProps = {\"viewBox\":\"0 0 560 560\",\"xmlns\":\"http://www.w3.org/2000/svg\",\"strokeMiterlimit\":\"1.414\",\"strokeLinejoin\":\"round\",\"id\":\"plex-icon-dvr-clock-hour-560\"};\n\n      svgProps['aria-hidden'] = !label;\n      svgProps.style = style;\n      svgProps.className = styles.plexIcon + (className ? ' ' + className : '');\n\n      const children = [React.createElement.apply(React, ['path', {\"d\":\"m179.45 378h-106.62l29.821-29.12h51.725l25.07 29.12m-148.31-81.48l-6.069 75.88-25.07-29.12 3.167-39.48 18.737-18.2 9.236 10.92m69.934 7.28l-3.166 39.48-29.821 29.12 6.069-75.88 11.348-10.92 15.57 18.2m61.23-9.24h-58.59l-12.403-14.56 14.779-14.56h58.59l12.667 14.56-15.04 14.56m-155.18-38.36l3.167-39.48 29.821-29.12-6.07 75.88-11.347 11.2-15.571-18.48m159.93 0l3.167-39.48 29.821-29.12-6.07 75.88-11.348 11.2-15.57-18.48m-1.32-44.8h-51.724l-25.07-29.4h106.62l-29.821 29.4\"}].concat([]))];\n\n      if (label) {\n        children.unshift(React.createElement('title', null, label));\n      }\n\n      // Arrays require a key, but a fixed number of elements don't.\n      // Spread the elements since it'll be a fixed number anyways\n      return React.createElement.apply(React, ['svg', svgProps].concat(children));\n    };\n\n    IconDvrClockHour.propTypes = {\n      'aria-label': PropTypes.string,\n      className: PropTypes.string,\n      style: PropTypes.object\n    };\n\n    export default IconDvrClockHour;\n  ","\n    import PropTypes from 'prop-types';\n    import React from 'react';\n    import styles from 'app/js/views/v3/components/core/base/PlexIcon.css';\n\n    function IconDvrClockMinutes(props) {\n      const label = props['aria-label'];\n      const className = props.className;\n      const style = props.style;\n\n      const svgProps = {\"viewBox\":\"0 0 560 560\",\"xmlns\":\"http://www.w3.org/2000/svg\",\"strokeMiterlimit\":\"1.414\",\"strokeLinejoin\":\"round\",\"id\":\"plex-icon-dvr-clock-minutes-560\"};\n\n      svgProps['aria-hidden'] = !label;\n      svgProps.style = style;\n      svgProps.className = styles.plexIcon + (className ? ' ' + className : '');\n\n      const children = [React.createElement.apply(React, ['path', {\"d\":\"m391.63 378h-106.62l29.821-29.12h51.725l25.07 29.12m147.79 0h-106.62l29.821-29.12h51.725l25.07 29.12m-226.16-74.2l-3.167 39.48-29.821 29.12 6.07-75.88 11.347-10.92 15.571 18.2m89.99-7.28l-6.07 75.88-25.07-29.12 3.167-39.48 18.737-18.2 9.236 10.92m57.795 7.28l-3.167 39.48-29.821 29.12 6.07-75.88 11.348-10.92 15.57 18.2m89.99-7.28l-6.069 75.88-25.07-29.12 3.167-39.48 18.737-18.2 9.236 10.92m-261.79-33.04l6.069-75.88 25.07 29.12-3.167 39.48-18.737 18.48-9.236-11.2m89.99-7.28l3.167-39.48 29.821-29.12-6.07 75.88-11.348 11.2-15.57-18.48m57.795 7.28l6.069-75.88 25.07 29.12-3.167 39.48-18.737 18.48-9.236-11.2m89.99-7.28l3.167-39.48 29.821-29.12-6.07 75.88-11.348 11.2-15.57-18.48m-149.1-44.8h-51.725l-25.07-29.4h106.62l-29.821 29.4m177.61-29.4l-29.821 29.4h-51.725l-25.07-29.4h106.62\"}].concat([]))];\n\n      if (label) {\n        children.unshift(React.createElement('title', null, label));\n      }\n\n      // Arrays require a key, but a fixed number of elements don't.\n      // Spread the elements since it'll be a fixed number anyways\n      return React.createElement.apply(React, ['svg', svgProps].concat(children));\n    };\n\n    IconDvrClockMinutes.propTypes = {\n      'aria-label': PropTypes.string,\n      className: PropTypes.string,\n      style: PropTypes.object\n    };\n\n    export default IconDvrClockMinutes;\n  ","\n    import PropTypes from 'prop-types';\n    import React from 'react';\n    import styles from 'app/js/views/v3/components/core/base/PlexIcon.css';\n\n    function IconDvrClockSeparator(props) {\n      const label = props['aria-label'];\n      const className = props.className;\n      const style = props.style;\n\n      const svgProps = {\"viewBox\":\"0 0 560 560\",\"xmlns\":\"http://www.w3.org/2000/svg\",\"strokeMiterlimit\":\"1.414\",\"strokeLinejoin\":\"round\",\"id\":\"plex-icon-dvr-clock-separator-560\"};\n\n      svgProps['aria-hidden'] = !label;\n      svgProps.style = style;\n      svgProps.className = styles.plexIcon + (className ? ' ' + className : '');\n\n      const children = [React.createElement.apply(React, ['path', {\"d\":\"m218.51 378l2.375-29.12h27.71l-2.375 29.12h-27.71m11.08-134.12l2.376-29.12h27.709l-2.375 29.12h-27.71\"}].concat([]))];\n\n      if (label) {\n        children.unshift(React.createElement('title', null, label));\n      }\n\n      // Arrays require a key, but a fixed number of elements don't.\n      // Spread the elements since it'll be a fixed number anyways\n      return React.createElement.apply(React, ['svg', svgProps].concat(children));\n    };\n\n    IconDvrClockSeparator.propTypes = {\n      'aria-label': PropTypes.string,\n      className: PropTypes.string,\n      style: PropTypes.object\n    };\n\n    export default IconDvrClockSeparator;\n  ","// extracted by mini-css-extract-plugin\nexport default {\"message\":\"AM025\",\"iconContainer\":\"oX0YF\",\"icon\":\"g3E2J\",\"clock\":\"gZB5W g3E2J\",\"clockTime\":\"tYeAV gZB5W g3E2J\",\"blink\":\"vyXW4\"};","import React, { ReactElement, useCallback, useMemo } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport t from 'app/js/utils/t';\nimport createChannelScanActivitySelector from 'app/js/v4/core/serverActivities/selectors/createChannelScanActivitySelector';\nimport { useSourceContext } from 'app/js/v4/core/servers/components/SourceContextProvider';\nimport SpinnerButton from 'app/js/v4/core/ui/buttons/components/SpinnerButton';\nimport Kind from 'app/js/v4/core/ui/types/Kind';\nimport dvrSetupSlice from 'app/js/v4/features/dvrManagement/dvrSetupSlice';\nimport createDeviceChannelsSelector from 'app/js/v4/features/dvrManagement/selectors/createDeviceChannelsSelector';\nimport selectDVRSetup from 'app/js/v4/features/dvrManagement/selectors/selectDVRSetup';\nimport selectEPGSettings from 'app/js/v4/features/dvrManagement/selectors/selectEPGSettings';\nimport CircularProgressBar from 'app/js/views/v3/components/core/CircularProgressBar';\nimport IconAlert from 'app/glyphs/alert-560.svg';\nimport IconDVRClockHour from 'app/glyphs/dvr-clock-hour-560.svg';\nimport IconDVRClockMinutes from 'app/glyphs/dvr-clock-minutes-560.svg';\nimport IconDVRClockSeparator from 'app/glyphs/dvr-clock-separator-560.svg';\nimport styles from './ChannelScanActivity.css';\n\ninterface ChannelScanActivityProps {\n  className: string;\n}\n\nexport default function ChannelScanActivity({\n  className,\n}: ChannelScanActivityProps): ReactElement | null {\n  const dispatch = useDispatch();\n  const [server] = useSourceContext();\n\n  const { selectedDevice, hasScannedChannels, isCancellingChannelScan } =\n    useSelector(selectDVRSetup);\n\n  const { selectedCountry } = useSelector(selectEPGSettings);\n\n  const selectChannelScanActivity = useMemo(\n    () => createChannelScanActivitySelector(server),\n    [server]\n  );\n  const selectDeviceChannels = useMemo(\n    () => createDeviceChannelsSelector(selectedDevice?.key),\n    [selectedDevice]\n  );\n\n  const channelScanActivity = useSelector(selectChannelScanActivity);\n  const { channels: deviceChannels, isPopulated: isDeviceChannelsPopulated } =\n    useSelector(selectDeviceChannels);\n\n  //\n  // Callbacks\n\n  const onScanPress = useCallback(() => {\n    if (selectedDevice) {\n      dispatch(\n        dvrSetupSlice.actions.deviceChannelsScanRequested({\n          server,\n          deviceKey: selectedDevice.key,\n          source: selectedDevice.source,\n          country: selectedCountry?.code,\n        })\n      );\n    }\n  }, [dispatch, server, selectedDevice, selectedCountry]);\n\n  const onCancelPress = useCallback(() => {\n    if (selectedDevice && !isCancellingChannelScan) {\n      dispatch(\n        dvrSetupSlice.actions.deviceChannelsCancelScanRequested({\n          server,\n          deviceKey: selectedDevice.key,\n        })\n      );\n    }\n  }, [dispatch, server, selectedDevice, isCancellingChannelScan]);\n\n  //\n  // Render\n\n  if (channelScanActivity) {\n    return (\n      <div className={className}>\n        <CircularProgressBar\n          // @ts-expect-error ts-migrate(2322) FIXME: Type '{ size: number; lineWidth: number; progress:... Remove this comment to see the full error message\n          progress={channelScanActivity?.progress}\n          size={90}\n        />\n\n        <div className={styles.message}>{t('Scanning channels')}</div>\n        <SpinnerButton\n          isDisabled={isCancellingChannelScan}\n          isSpinning={isCancellingChannelScan}\n          onPress={onCancelPress}\n        >\n          {t('Stop scanning')}\n        </SpinnerButton>\n      </div>\n    );\n  }\n\n  return isDeviceChannelsPopulated && deviceChannels.length === 0 ? (\n    <div className={className}>\n      <div className={styles.iconContainer}>\n        {hasScannedChannels ? (\n          <IconAlert className={styles.icon} />\n        ) : (\n          <>\n            <IconDVRClockHour className={styles.clockTime} />\n            <IconDVRClockSeparator className={styles.clock} />\n            <IconDVRClockMinutes className={styles.clockTime} />\n          </>\n        )}\n      </div>\n      <div className={styles.message}>\n        {hasScannedChannels\n          ? t(\n              'No channels found. Make sure your device has a signal from your antenna and try scanning again.'\n            )\n          : t('Awaiting channel scan')}\n      </div>\n      <SpinnerButton\n        isDisabled={!!channelScanActivity}\n        isSpinning={!!channelScanActivity}\n        kind={Kind.Primary}\n        onPress={onScanPress}\n      >\n        {t('Scan channels')}\n      </SpinnerButton>\n    </div>\n  ) : null;\n}\n","/* eslint-plugin-disable @typescript-eslint */\n\nimport React from 'react';\nimport styles from './FormGroup.css';\n\ninterface FormGroupProps {\n  children: React.ReactNode;\n}\n\nfunction FormGroup({ children, ...otherProps }: FormGroupProps) {\n  return <div {...otherProps}>{children}</div>;\n}\n\nFormGroup.defaultProps = {\n  className: styles.group,\n};\n\nexport default FormGroup;\n","// extracted by mini-css-extract-plugin\nexport default {\"group\":\"XUNNq\"};","/* eslint-plugin-disable @typescript-eslint */\n\nimport React from 'react';\nimport styles from './FormHelp.css';\n\ninterface FormHelpProps {\n  children: React.ReactNode;\n  className?: string;\n}\n\nfunction FormHelp({ children, className, ...otherProps }: FormHelpProps) {\n  return (\n    <p {...otherProps} className={className}>\n      {children}\n    </p>\n  );\n}\n\nFormHelp.defaultProps = {\n  className: styles.help,\n};\n\nexport default FormHelp;\n","// extracted by mini-css-extract-plugin\nexport default {\"help\":\"TsrSU\"};","/* eslint-plugin-disable @typescript-eslint */\n\nimport React from 'react';\nimport FormLabel from './FormLabel';\n\ninterface InputGroupFormLabelProps {\n  className?: string;\n  name: string;\n  labelText: React.ReactNode;\n  showErrors?: boolean;\n  errors: string[];\n}\n\nfunction InputGroupFormLabel(props: InputGroupFormLabelProps) {\n  const { className, name, labelText, showErrors, errors } = props;\n\n  const [firstError] = errors;\n\n  return (\n    <FormLabel className={className} hasError={showErrors} name={name}>\n      {labelText}\n      {showErrors && firstError ? ` — ${firstError}` : null}\n    </FormLabel>\n  );\n}\n\nexport default InputGroupFormLabel;\n","// extracted by mini-css-extract-plugin\nexport default {\"input\":\"V7Kre kasAI\",\"small\":\"szUgU z4G1r\",\"select\":\"hEVM3\",\"large\":\"rlMWX pAS1i\",\"isDisabled\":\"CIQyG\",\"hasError\":\"GeJqr\"};","/* eslint-plugin-disable @typescript-eslint */\n\nimport classNames from 'classnames';\nimport React, { Component } from 'react';\nimport _ from 'underscore';\n// @ts-expect-error ts-migrate(6133) FIXME: 'SMALL' is declared but its value is never read.\nimport { LARGE, SMALL } from 'app/js/views/v3/helpers/props/sizes';\nimport styles from './SelectInput.css';\n\ninterface SelectInputProps {\n  className?: string;\n  errorClassName?: string;\n  disabledClassName?: string;\n  isDisabled?: boolean;\n  size?: any; // TODO: PropTypes.oneOf([SMALL, LARGE])\n  name: string;\n  initialValue?: string | number;\n  value: string | number;\n  values?: string[] | any[];\n  hasError?: boolean;\n  errors?: string[];\n  validations?: ((...args: any[]) => any)[];\n  onChange: (...args: any[]) => any;\n}\n\nclass SelectInput extends Component<SelectInputProps> {\n  static defaultProps = {\n    className: styles.input,\n    errorClassName: styles.hasError,\n    disabledClassName: styles.isDisabled,\n    isDisabled: false,\n    size: LARGE,\n    hasError: false,\n  };\n\n  //\n  // Listeners\n\n  onChange = (event: any) => {\n    this.props.onChange(event.target.value);\n  };\n\n  //\n  // Render\n\n  render() {\n    const {\n      className,\n      errorClassName,\n      disabledClassName,\n      isDisabled,\n      size,\n      name,\n      initialValue,\n      value,\n      values,\n      hasError,\n      errors,\n      validations,\n      ...otherProps\n    } = this.props;\n\n    return (\n      <div\n        className={classNames(\n          className,\n          styles[size],\n          isDisabled && disabledClassName,\n          hasError && errorClassName\n        )}\n      >\n        <select\n          {...otherProps}\n          className={styles.select}\n          disabled={isDisabled}\n          id={name}\n          name={name}\n          value={value}\n          onChange={this.onChange}\n        >\n          {/* @ts-expect-error ts-migrate(2532) FIXME: Object is possibly 'undefined'. */}\n          {values.map((valueItem: any, i: any) => {\n            if (_.isString(valueItem)) {\n              return (\n                <option key={i} value={valueItem}>\n                  {valueItem}\n                </option>\n              );\n            }\n\n            const [key] = _.keys(valueItem);\n\n            return (\n              <option key={i} value={key}>\n                {_.result(valueItem, key)}\n              </option>\n            );\n          })}\n        </select>\n      </div>\n    );\n  }\n}\n\nexport default SelectInput;\n","/* eslint-plugin-disable @typescript-eslint */\n\nimport React, { Component } from 'react';\nimport { bindActionCreators } from 'redux';\nimport _ from 'underscore';\nimport assert from 'app/js/utils/log/assert';\nimport isPlainObject from 'app/js/utils/object/isPlainObject';\nimport createChainedCallback from 'app/js/views/v3/helpers/createChainedCallback';\nimport getDisplayName from 'app/js/views/v3/helpers/getDisplayName';\nimport storeShape from 'app/js/views/v3/helpers/props/shapes/storeShape';\nimport shallowEqual from 'app/js/views/v3/helpers/shallowEqual';\nimport shouldPureComponentUpdate from 'app/js/views/v3/helpers/shouldPureComponentUpdate';\nimport { actions } from './Form';\n\ntype FormInputProps<InputProps> = Omit<InputProps, 'onChange'> & {\n  name: string;\n  initialValue: number | string | boolean | any[] | object;\n  errors: string[];\n  validations: ((...args: any[]) => any)[];\n  transformValue?: (...args: any[]) => any;\n  onChange?: (...args: any[]) => any;\n};\n\nexport default function formInput<InputProps>(WrappedComponent: any) {\n  const displayName = `FormInput(${getDisplayName(WrappedComponent)})`;\n  return class extends Component<FormInputProps<InputProps>> {\n    static displayName = displayName;\n    static contextTypes = {\n      formStore: storeShape,\n    };\n    static defaultProps = {\n      validations: [],\n      errors: [],\n    };\n    //\n    // Lifecycle\n    constructor(props: any, context: any) {\n      super(props, context);\n      this.store = context.formStore;\n      __DEV__ &&\n        assert(\n          !!this.store,\n          `${displayName} has no formStore. Did you forget to make it a child of <Form>?`\n        );\n      this.actions = bindActionCreators(actions, this.store.dispatch);\n      // @ts-expect-error ts-migrate(2322) FIXME: Type 'null' is not assignable to type 'Readonly<{}... Remove this comment to see the full error message\n      this.state = null;\n      this.hasBlurred = false;\n    }\n    // eslint-disable-next-line react/sort-comp\n    UNSAFE_componentWillMount() {\n      this.previousFormState = this.store.getState();\n      this.unsubscribe = this.store.subscribe(this.onFormStoreChange);\n      // Initialize the input state with the Form provider\n      this.initializeInputState(this.props);\n    }\n    UNSAFE_componentWillReceiveProps(nextProps: any) {\n      if (\n        isPlainObject(nextProps.initialValue) &&\n        isPlainObject(this.props.initialValue)\n      ) {\n        if (!shallowEqual(nextProps.initialValue, this.props.initialValue)) {\n          this.handleStateChange(nextProps, nextProps.initialValue);\n        }\n      } else if (!_.isEqual(nextProps.initialValue, this.props.initialValue)) {\n        this.handleStateChange(nextProps, nextProps.initialValue);\n      }\n    }\n    shouldComponentUpdate(nextProps: any, nextState: any) {\n      // @ts-expect-error ts-migrate(2554) FIXME: Expected 5 arguments, but got 3.\n      return shouldPureComponentUpdate(this, nextProps, nextState);\n    }\n    componentWillUnmount() {\n      const { name } = this.props;\n      if (this.unsubscribe) {\n        this.unsubscribe();\n      }\n      // When a `formInput` is removed from the VDOM we no longer want its\n      // value tracked in `Form`, so we clear out the form input state to let\n      // `Form` clean it up.\n      this.actions.change({\n        name,\n        change: null,\n      });\n    }\n    static WrappedComponent = WrappedComponent;\n    actions: any;\n    hasBlurred: any;\n    previousFormState: any;\n    store: any;\n    unsubscribe: any;\n    //\n    // Control\n    initializeInputState(props: any) {\n      const { name, initialValue } = props;\n      const formState = this.store.getState();\n      formState[name] = {\n        errors: this.calculateErrors(initialValue, formState, props),\n        showErrors: false,\n        value: initialValue,\n      };\n      this.actions.replaceState(formState);\n    }\n    // `handleStateChange` is called when `onChange` is called or when\n    // `formInput` receives an update from `formStore`. If `newValue` is set it will be used\n    // in calculating the errors and compared to the previous value to determine if\n    // a formState update is needed.\n    handleStateChange(props: any, newValue: any) {\n      const formState = this.store.getState();\n      const { name } = props;\n      const inputState = formState[name];\n      const value =\n        Array.isArray(newValue) || newValue != null\n          ? newValue\n          : inputState.value;\n      const errors = this.calculateErrors(value, formState, props);\n      if (\n        !_.isEqual(inputState.value, value) ||\n        !_.isEqual(inputState.errors, errors)\n      ) {\n        // If the value has changed, or the errors have changed,\n        // call the `change` action to update the state.\n        this.actions.change({\n          name,\n          change: {\n            errors,\n            showErrors: this.hasBlurred && errors.length !== 0,\n            value,\n          },\n        });\n      }\n    }\n    calculateErrors(value: any, formState: any, props: any) {\n      const { validations } = props;\n      const validationErrors = validations\n        .map((fn: any) => fn(value, formState))\n        .filter((error: any) => error != null);\n      return validationErrors;\n    }\n    //\n    // Listeners\n    onFormStoreChange = () => {\n      const { name } = this.props;\n      const formState = this.store.getState();\n      const inputState = formState[name];\n      if (!inputState) {\n        this.initializeInputState(this.props);\n      }\n      // If the formState has changed, trigger `handleStateChange` as\n      // derived validations may have changed. Calling `handleStateChange` will\n      // blow the stack if we don't do the shallowEqual check.\n      if (!shallowEqual(formState, this.previousFormState)) {\n        this.previousFormState = formState;\n        // @ts-expect-error ts-migrate(2554) FIXME: Expected 2 arguments, but got 1.\n        this.handleStateChange(this.props);\n      }\n      if (this.state !== inputState && inputState != null) {\n        this.setState(inputState);\n      }\n    };\n    onChange = (value: any) => {\n      const { transformValue } = this.props;\n      this.handleStateChange(\n        this.props,\n        transformValue ? transformValue(value) : value\n      );\n    };\n    onBlur = () => {\n      if (this.hasBlurred) {\n        return;\n      }\n      this.hasBlurred = true;\n      const formState = this.store.getState();\n      const { name } = this.props;\n      const inputState = formState[name];\n      const errors = this.calculateErrors(\n        inputState.value,\n        formState,\n        this.props\n      );\n      this.actions.change({\n        name,\n        change: {\n          ...inputState,\n          errors,\n          showErrors: errors.length !== 0,\n        },\n      });\n    };\n    //\n    // Render\n    render() {\n      const {\n        validations,\n        errors: propsErrors,\n        transformValue,\n        onChange,\n        ...otherProps\n      } = this.props;\n      // Prevent render when inputState is not set because this component\n      // will set it's inputState on the `Form` `formStore` triggering a re-render.\n      if (!this.state) {\n        return null;\n      }\n      // If errors are passed in from outside `formInput` use them in place of\n      // the calculated errors, and force the `showErrors` prop. Outside errors can\n      // be from Server API errors or set from a parent component.\n      const hasPropsErrors = propsErrors.length > 0;\n      // @ts-expect-error ts-migrate(2339) FIXME: Property 'value' does not exist on type 'Readonly<... Remove this comment to see the full error message\n      const { value, errors, showErrors } = this.state;\n      return (\n        <WrappedComponent\n          {...otherProps}\n          errors={hasPropsErrors ? propsErrors : errors}\n          showErrors={hasPropsErrors ? true : showErrors}\n          value={value}\n          onBlur={this.onBlur}\n          onChange={createChainedCallback(this.onChange, onChange)}\n        />\n      );\n    }\n  };\n}\n","/* eslint-plugin-disable @typescript-eslint */\n\nimport React from 'react';\nimport FormGroup from './FormGroup';\nimport FormHelp from './FormHelp';\nimport InputGroupFormLabel from './InputGroupFormLabel';\nimport SelectInput from './SelectInput';\nimport formInput from './formInput';\n\ninterface SelectInputGroupProps {\n  formGroupClassName?: string;\n  formLabelClassName?: string;\n  name: string;\n  labelText: React.ReactNode;\n  helpText?: string;\n  showErrors?: boolean;\n  errors: string[];\n}\n\nfunction SelectInputGroup({\n  formGroupClassName,\n  formLabelClassName,\n  name,\n  labelText,\n  helpText,\n  showErrors,\n  errors,\n  ...otherProps\n}: SelectInputGroupProps) {\n  return (\n    <FormGroup className={formGroupClassName}>\n      <InputGroupFormLabel\n        className={formLabelClassName}\n        errors={errors}\n        labelText={labelText}\n        name={name}\n        showErrors={showErrors}\n      />\n      {/* @ts-expect-error ts-migrate(2769) FIXME: No overload matches this call. */}\n      <SelectInput hasError={showErrors} name={name} {...otherProps} />\n      {helpText ? <FormHelp>{helpText}</FormHelp> : null}\n    </FormGroup>\n  );\n}\n\nexport default formInput(SelectInputGroup);\n","// extracted by mini-css-extract-plugin\nexport default {\"input\":\"BGpqD\",\"label\":\"WiEno\",\"small\":\"H5aDk\",\"large\":\"hgBpV\",\"isDisabled\":\"hpeul\",\"hasError\":\"lLQJi\"};","/* eslint-plugin-disable @typescript-eslint */\n\nimport classNames from 'classnames';\nimport React, { Component } from 'react';\n// @ts-expect-error ts-migrate(6133) FIXME: 'SMALL' is declared but its value is never read.\nimport { LARGE, SMALL } from 'app/js/views/v3/helpers/props/sizes';\nimport styles from './CheckInput.css';\n\ninterface CheckInputProps {\n  className?: string;\n  inputClassName?: string;\n  errorClassName?: string;\n  disabledClassName?: string;\n  isDisabled?: boolean;\n  size?: any; // TODO: PropTypes.oneOf([SMALL, LARGE])\n  checkboxText?: React.ReactNode;\n  name: string;\n  initialValue?: string | boolean | number;\n  value?: string | boolean | number;\n  uncheckedValue?: string | boolean | number;\n  checkedValue?: string | boolean | number;\n  hasError?: boolean;\n  showErrors?: boolean;\n  errors?: string[];\n  validations?: ((...args: any[]) => any)[];\n  onChange: (...args: any[]) => any;\n}\n\nclass CheckInput extends Component<CheckInputProps> {\n  static defaultProps = {\n    className: styles.label,\n    inputClassName: styles.input,\n    errorClassName: styles.hasError,\n    disabledClassName: styles.isDisabled,\n    isDisabled: false,\n    size: LARGE,\n    uncheckedValue: false,\n    checkedValue: true,\n    value: false,\n    hasError: false,\n  };\n\n  // eslint-disable-next-line react/sort-comp\n  _checkbox: any;\n\n  //\n  // Lifecycle\n\n  constructor(props: any, context: any) {\n    super(props, context);\n\n    this._checkbox = null;\n  }\n\n  componentDidMount() {\n    this.setIndeterminate();\n  }\n\n  componentDidUpdate() {\n    this.setIndeterminate();\n  }\n\n  //\n  // Control\n\n  setIndeterminate() {\n    if (!this._checkbox) {\n      return;\n    }\n\n    const { value, uncheckedValue, checkedValue } = this.props;\n\n    this._checkbox.indeterminate =\n      value !== uncheckedValue && value !== checkedValue;\n  }\n\n  setRef = (ref: any) => {\n    this._checkbox = ref;\n  };\n\n  //\n  // Listeners\n\n  onChange = (event: any) => {\n    const checked = event.target.checked;\n    const newValue = checked\n      ? this.props.checkedValue\n      : this.props.uncheckedValue;\n\n    if (this.props.value !== newValue) {\n      this.props.onChange(newValue);\n    }\n  };\n\n  //\n  // Render\n\n  render() {\n    const {\n      className,\n      inputClassName,\n      errorClassName,\n      disabledClassName,\n      isDisabled,\n      size,\n      checkboxText,\n      name,\n      initialValue,\n      value,\n      checkedValue,\n      uncheckedValue,\n      showErrors,\n      hasError,\n      errors,\n      validations,\n      ...otherProps\n    } = this.props;\n\n    return (\n      <label\n        className={classNames(\n          className,\n          styles[size],\n          isDisabled && disabledClassName,\n          hasError && errorClassName\n        )}\n        htmlFor={name}\n      >\n        <input\n          {...otherProps}\n          ref={this.setRef}\n          checked={value === checkedValue}\n          className={inputClassName}\n          disabled={isDisabled}\n          id={name}\n          type=\"checkbox\"\n          onChange={this.onChange}\n        />\n        {checkboxText}\n      </label>\n    );\n  }\n}\n\nexport default CheckInput;\n","/* eslint-plugin-disable @typescript-eslint */\n\nimport React from 'react';\nimport CheckInput from './CheckInput';\nimport FormGroup from './FormGroup';\nimport FormHelp from './FormHelp';\nimport FormLabel from './FormLabel';\nimport formInput from './formInput';\n\ninterface CheckInputGroupProps {\n  formGroupClassName?: string;\n  labelText?: React.ReactNode;\n  checkboxText: React.ReactNode;\n  helpText?: string;\n  showErrors?: boolean;\n  errors?: string[];\n}\n\nfunction CheckInputGroup({\n  formGroupClassName,\n  labelText,\n  checkboxText,\n  helpText,\n  showErrors,\n  errors,\n  ...otherProps\n}: CheckInputGroupProps) {\n  // @ts-expect-error ts-migrate(2488) FIXME: Type 'string[] | undefined' must have a '[Symbol.i... Remove this comment to see the full error message\n  const [firstError] = errors;\n\n  return (\n    <FormGroup className={formGroupClassName}>\n      {labelText ? <FormLabel>{labelText}</FormLabel> : null}\n      {/* @ts-expect-error ts-migrate(2739) FIXME: Type '{ hasError: boolean | undefined; checkboxTex... Remove this comment to see the full error message */}\n      <CheckInput\n        checkboxText={\n          <span>\n            {checkboxText}\n            {showErrors && firstError ? ` — ${firstError}` : null}\n          </span>\n        }\n        hasError={showErrors}\n        {...otherProps}\n      />\n      {helpText ? <FormHelp>{helpText}</FormHelp> : null}\n    </FormGroup>\n  );\n}\n\nCheckInputGroup.defaultProps = {\n  showErrors: false,\n  errors: [],\n};\n\nexport default formInput(CheckInputGroup);\n","// extracted by mini-css-extract-plugin\nexport default {\"input\":\"zFgJZ kasAI\",\"small\":\"N6oWJ z4G1r\",\"large\":\"s7OWW pAS1i\",\"isDisabled\":\"tz1vT uRoc_\",\"hasError\":\"PR1_3 AHiNZ\"};","/* eslint-plugin-disable @typescript-eslint */\n\nimport classNames from 'classnames';\nimport React, { Component } from 'react';\n// @ts-expect-error ts-migrate(6133) FIXME: 'SMALL' is declared but its value is never read.\nimport { LARGE, SMALL } from 'app/js/views/v3/helpers/props/sizes';\nimport styles from './TextInput.css';\n\ninterface TextInputProps {\n  className?: string;\n  errorClassName?: string;\n  disabledClassName?: string;\n  isDisabled?: boolean;\n  initialValue?: string | number;\n  value?: string | number;\n  size?: any; // TODO: PropTypes.oneOf([SMALL, LARGE])\n  type?: 'text' | 'password' | 'number' | 'email' | 'date';\n  name: string;\n  placeholder?: string;\n  hasError?: boolean;\n  errors?: string[];\n  validations?: ((...args: any[]) => any)[];\n  focusOnMount?: boolean;\n  selectTextOnFocus?: boolean;\n  onChange: (...args: any[]) => any;\n}\n\nclass TextInput extends Component<TextInputProps> {\n  static defaultProps = {\n    className: styles.input,\n    errorClassName: styles.hasError,\n    disabledClassName: styles.isDisabled,\n    isDisabled: false,\n    size: LARGE,\n    type: 'text',\n    hasError: false,\n    focusOnMount: false,\n    selectTextOnFocus: false,\n  };\n\n  // eslint-disable-next-line react/sort-comp\n  inputElement: any;\n\n  //\n  // Lifecycle\n\n  componentDidMount() {\n    if (this.props.focusOnMount) {\n      this.inputElement.focus();\n      this._select();\n    }\n  }\n\n  //\n  // Control\n\n  _select() {\n    if (this.inputElement && this.props.selectTextOnFocus) {\n      const value = this.inputElement.value;\n      const length = value ? value.length : 0;\n      this.inputElement.selectionStart = 0;\n      this.inputElement.selectionEnd = length;\n    }\n  }\n\n  //\n  // Listeners\n\n  onChange = (event: any) => {\n    this.props.onChange(event.target.value);\n  };\n\n  onFocus = () => {\n    this._select();\n  };\n\n  onRef = (inputElement: any) => {\n    this.inputElement = inputElement;\n  };\n\n  //\n  // Render\n\n  render() {\n    const {\n      className,\n      errorClassName,\n      disabledClassName,\n      isDisabled,\n      initialValue,\n      value,\n      size,\n      type,\n      name,\n      placeholder,\n      hasError,\n      errors,\n      validations,\n      focusOnMount,\n      selectTextOnFocus,\n      ...otherProps\n    } = this.props;\n\n    return (\n      <input\n        {...otherProps}\n        ref={focusOnMount ? this.onRef : null}\n        className={classNames(\n          className,\n          styles[size],\n          isDisabled && disabledClassName,\n          hasError && errorClassName\n        )}\n        disabled={isDisabled}\n        id={name}\n        name={name}\n        placeholder={placeholder}\n        type={type}\n        value={value}\n        onChange={this.onChange}\n        onFocus={this.onFocus}\n      />\n    );\n  }\n}\n\nexport default TextInput;\n","/* eslint-plugin-disable @typescript-eslint */\n\nimport React, { Component } from 'react';\nimport TextInput from 'app/js/views/v3/components/core/forms/TextInput';\n\ninterface NumberInputProps {\n  value?: number | string;\n  onChange: (...args: any[]) => any;\n}\n\nclass NumberInput extends Component<NumberInputProps> {\n  //\n  // Listeners\n\n  onChange = (value: any) => {\n    const newValue = value ? parseInt(value, 10) : null;\n\n    this.props.onChange(newValue);\n  };\n\n  //\n  // Render\n\n  render() {\n    return (\n      // @ts-expect-error ts-migrate(2769) FIXME: No overload matches this call.\n      <TextInput\n        type=\"number\"\n        {...this.props}\n        selectTextOnFocus={false}\n        onChange={this.onChange}\n      />\n    );\n  }\n}\n\nexport default NumberInput;\n","/* eslint-plugin-disable @typescript-eslint */\n\nimport React from 'react';\nimport FormGroup from 'app/js/views/v3/components/core/forms/FormGroup';\nimport FormHelp from 'app/js/views/v3/components/core/forms/FormHelp';\nimport InputGroupFormLabel from 'app/js/views/v3/components/core/forms/InputGroupFormLabel';\nimport formInput from 'app/js/views/v3/components/core/forms/formInput';\nimport NumberInput from './NumberInput';\nimport styles from './NumberInputGroup.css';\n\ninterface NumberInputGroupProps {\n  formGroupClassName?: string;\n  formLabelClassName?: string;\n  inputClassName?: string;\n  name: string;\n  labelText: React.ReactNode;\n  helpText?: string;\n  showErrors?: boolean;\n  errors: string[];\n}\n\nfunction NumberInputGroup({\n  formGroupClassName,\n  formLabelClassName,\n  inputClassName,\n  name,\n  labelText,\n  helpText,\n  showErrors,\n  errors,\n  ...otherProps\n}: NumberInputGroupProps) {\n  return (\n    <FormGroup className={formGroupClassName}>\n      <InputGroupFormLabel\n        className={formLabelClassName}\n        errors={errors}\n        labelText={labelText}\n        name={name}\n        showErrors={showErrors}\n      />\n      <NumberInput\n        // @ts-expect-error ts-migrate(2769) FIXME: No overload matches this call.\n        className={inputClassName}\n        hasError={showErrors}\n        name={name}\n        type=\"number\"\n        {...otherProps}\n      />\n      {helpText ? <FormHelp>{helpText}</FormHelp> : null}\n    </FormGroup>\n  );\n}\n\nNumberInputGroup.defaultProps = {\n  inputClassName: styles.input,\n};\n\nexport default formInput(NumberInputGroup);\n","// extracted by mini-css-extract-plugin\nexport default {\"input\":\"Z1pgE zFgJZ kasAI\"};","/* eslint-plugin-disable @typescript-eslint */\n\nexport default function getPercent(value: any, min: any, max: any) {\n  return ((value - min) / (max - min)) * 100;\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"slider\":\"GEZKO\",\"isDisabled\":\"tcVA0\",\"thumb\":\"hoHS9 x5jRQ\",\"isDragging\":\"D3qc4\",\"hasAutoHideThumb\":\"BeGkj\",\"track\":\"m1eev\",\"fill\":\"rQG6B\",\"secondaryFill\":\"LnzLb rQG6B\",\"thumbTrack\":\"H_tm9\"};","/* eslint-plugin-disable @typescript-eslint */\n\nimport classNames from 'classnames';\nimport React, { Component } from 'react';\nimport assert from 'app/js/utils/log/assert';\nimport getPercent from 'app/js/utils/number/getPercent';\nimport Link from 'app/js/views/v3/components/core/buttons/Link';\nimport shouldPureComponentUpdate from 'app/js/views/v3/helpers/shouldPureComponentUpdate';\nimport styles from './Slider.css';\n\ntype SliderProps = {\n  style?: any;\n  className?: string;\n  trackClassName?: string;\n  fillClassName?: string;\n  secondaryFillClassName?: string;\n  thumbClassName?: string;\n  thumbTrackClassName?: string;\n  label?: string;\n  tabIndex?: string;\n  value: number;\n  min: number;\n  max: number;\n  secondaryMin?: number;\n  secondaryMax?: number;\n  stepSize: number;\n  stickiness: number;\n  showFill: boolean;\n  showSecondaryFill: boolean;\n  autoHideThumb: boolean;\n  isDisabled: boolean;\n  isVertical: boolean;\n  onMove?: (...args: any[]) => any;\n  onChange: (...args: any[]) => any;\n  onDragStart?: (...args: any[]) => any;\n  onDragComplete?: (...args: any[]) => any;\n  onMouseEnter?: (...args: any[]) => any;\n  onMouseLeave?: (...args: any[]) => any;\n  onWheel?: (...args: any[]) => any;\n};\n\ntype SliderState = any;\n\nclass Slider extends Component<SliderProps, SliderState> {\n  static defaultProps = {\n    className: styles.slider,\n    trackClassName: styles.track,\n    fillClassName: styles.fill,\n    secondaryFillClassName: styles.secondaryFill,\n    thumbClassName: styles.thumb,\n    thumbTrackClassName: styles.thumbTrack,\n    min: 0,\n    max: 100,\n    stepSize: 0,\n    stickiness: 10,\n    showFill: false,\n    showSecondaryFill: false,\n    autoHideThumb: false,\n    isDisabled: false,\n    isDragging: false,\n    isVertical: false,\n  };\n\n  // eslint-disable-next-line react/sort-comp\n  _trackRef: any;\n\n  //\n  // Lifecycle\n\n  constructor(props: any, context: any) {\n    super(props, context);\n\n    this._trackRef = React.createRef();\n\n    this.state = {\n      isDragging: false,\n    };\n  }\n\n  shouldComponentUpdate(nextProps: SliderProps, nextState: SliderState) {\n    // @ts-expect-error ts-migrate(2554) FIXME: Expected 5 arguments, but got 3.\n    return shouldPureComponentUpdate(this, nextProps, nextState);\n  }\n\n  componentWillUnmount() {\n    this._stopListeningForDrag();\n  }\n\n  //\n  // Control\n\n  _listenForDrag(isTouch: any) {\n    if (isTouch) {\n      document.addEventListener('touchmove', this.onDocumentTouchMove);\n      document.addEventListener('touchcancel', this.onDocumentTouchEnd);\n      document.addEventListener('touchend', this.onDocumentTouchEnd);\n    } else {\n      document.addEventListener('mousemove', this.onDocumentMouseMove);\n      document.addEventListener('mouseup', this.onDocumentMouseUp);\n    }\n  }\n\n  _stopListeningForDrag() {\n    document.removeEventListener('mousemove', this.onDocumentMouseMove);\n    document.removeEventListener('touchmove', this.onDocumentTouchMove);\n    document.removeEventListener('mouseup', this.onDocumentMouseUp);\n    document.removeEventListener('touchcancel', this.onDocumentTouchEnd);\n    document.removeEventListener('touchend', this.onDocumentTouchEnd);\n  }\n\n  _startDrag(pageX: any, pageY: any, isTouch: any) {\n    this._changeValue(this._getValueForPosition(pageX, pageY));\n    this._listenForDrag(isTouch);\n\n    if (this.props.onDragStart) {\n      this.props.onDragStart();\n    }\n  }\n\n  _drag(pageX: any, pageY: any) {\n    if (!this.state.isDragging) {\n      document.body.classList.add(styles.isDragging);\n      this.setState({ isDragging: true });\n    }\n\n    this._changeValue(this._getValueForPosition(pageX, pageY));\n  }\n\n  _stopDrag(pageX: any, pageY: any) {\n    document.body.classList.remove(styles.isDragging);\n\n    this._stopListeningForDrag();\n\n    const positionValue = this._getValueForPosition(pageX, pageY);\n    const steppedValue = this._getSteppedValue(positionValue);\n\n    this._changeValue(positionValue);\n    this.setState({ isDragging: false });\n\n    if (this.props.onDragComplete) {\n      this.props.onDragComplete({\n        positionValue,\n        steppedValue,\n      });\n    }\n  }\n\n  _getValueForPosition(pageX: any, pageY: any) {\n    const { isVertical, min, max } = this.props;\n\n    __DEV__ &&\n      assert(\n        max > min,\n        `The max, ${max}, must be greater than the min, ${min}`\n      );\n\n    const track = this._trackRef.current;\n    const trackRect = track.getBoundingClientRect();\n\n    let value;\n\n    if (isVertical) {\n      const viewportY = pageY - document.body.scrollTop;\n\n      value = (trackRect.bottom - viewportY) / track.offsetHeight;\n    } else {\n      const viewportX = pageX - document.body.scrollLeft;\n\n      value = (viewportX - trackRect.left) / track.offsetWidth;\n    }\n\n    value = Math.min(Math.max(value, 0), 1);\n\n    return (max - min) * value + min;\n  }\n\n  _getSteppedValue(value: any) {\n    const { min, max, stepSize } = this.props;\n\n    if (!stepSize) {\n      return value;\n    }\n\n    const steppedValue = Math.round(value / stepSize) * stepSize;\n\n    return Math.min(Math.max(steppedValue, min), max);\n  }\n\n  _getStickyValue(value: any) {\n    const { max, min, stepSize, stickiness } = this.props;\n\n    if (!stepSize || !stickiness) {\n      return value;\n    }\n\n    const steppedValue = this._getSteppedValue(value);\n    const proximity = Math.abs(steppedValue - value) / (max - min);\n\n    return proximity < stickiness / 100 ? steppedValue : value;\n  }\n\n  _changeValue(nextValue: any) {\n    const { value } = this.props;\n\n    if (nextValue !== value) {\n      this.props.onChange({\n        positionDelta: nextValue - value,\n        positionValue: nextValue,\n        steppedValue: this._getSteppedValue(nextValue),\n      });\n    }\n  }\n\n  //\n  // Listeners\n\n  onMouseDown = (event: any) => {\n    event.preventDefault();\n\n    if (event.button === 0) {\n      this._startDrag(event.pageX, event.pageY, false);\n    }\n  };\n\n  onMouseMove = ({ pageX, pageY }: any) => {\n    if (this.state.isDragging) {\n      return;\n    }\n\n    const value = this._getValueForPosition(pageX, pageY);\n    const track = this._trackRef.current;\n    const trackRect = track.getBoundingClientRect();\n\n    const position = this.props.isVertical\n      ? { x: trackRect.left, y: pageY }\n      : { x: pageX, y: trackRect.top };\n\n    // @ts-expect-error ts-migrate(2722) FIXME: Cannot invoke an object which is possibly 'undefin... Remove this comment to see the full error message\n    this.props.onMove({\n      position,\n      positionValue: value,\n      steppedValue: this._getSteppedValue(value),\n    });\n  };\n\n  onTouchStart = (event: any) => {\n    event.preventDefault();\n\n    const touch = event.touches && event.touches[0];\n\n    if (touch) {\n      this._startDrag(touch.pageX, touch.pageY, true);\n    }\n  };\n\n  onDocumentMouseMove = (event: any) => {\n    this._drag(event.pageX, event.pageY);\n  };\n\n  onDocumentTouchMove = (event: any) => {\n    const touch = event.touches && event.touches[0];\n\n    if (touch) {\n      this._drag(touch.pageX, event.pageY);\n    }\n  };\n\n  onDocumentMouseUp = (event: any) => {\n    this._stopDrag(event.pageX, event.pageY);\n  };\n\n  onDocumentTouchEnd = (event: any) => {\n    const touch = event.changedTouches && event.changedTouches[0];\n\n    if (touch) {\n      this._stopDrag(touch.pageX, touch.pageY);\n    }\n  };\n\n  //\n  // Render\n\n  render() {\n    const {\n      style,\n      className,\n      trackClassName,\n      secondaryFillClassName,\n      fillClassName,\n      thumbClassName,\n      thumbTrackClassName,\n      label,\n      tabIndex,\n      value,\n      min,\n      max,\n      secondaryMin,\n      secondaryMax,\n      showSecondaryFill,\n      showFill,\n      autoHideThumb,\n      isDisabled,\n      isVertical,\n      onMove,\n      onMouseEnter,\n      onMouseLeave,\n      onWheel,\n    } = this.props;\n\n    const { isDragging } = this.state;\n\n    const percentage = getPercent(this._getStickyValue(value), min, max);\n\n    let scaleProperty = 'scaleX';\n    let translateProperty = 'translateX';\n\n    if (isVertical) {\n      // Compose around the `VerticalSlider` so that necessary CSS class updates\n      // are also provided.\n      scaleProperty = 'scaleY';\n      translateProperty = 'translateY';\n    }\n\n    const thumbTransform = `${translateProperty}(${\n      isVertical ? -percentage : -(100 - percentage)\n    }%)`;\n    const secondaryStartPercentage = secondaryMin\n      ? getPercent(this._getStickyValue(secondaryMin), min, max)\n      : 0;\n    const secondaryEndPercentage = secondaryMax\n      ? getPercent(this._getStickyValue(secondaryMax), min, max)\n      : 0;\n    const fillTransformValue = Math.max(\n      (percentage - secondaryStartPercentage) / 100,\n      0\n    );\n    const secondaryScaleTransformValue = Math.max(\n      (secondaryEndPercentage - secondaryStartPercentage) / 100,\n      0\n    );\n    const fillTransform = `${scaleProperty}(${fillTransformValue})`;\n    const secondaryScaleTransform = `${scaleProperty}(${secondaryScaleTransformValue})`;\n    const position = secondaryMin ? secondaryStartPercentage + '%' : undefined;\n\n    const positionStyle = isVertical ? { top: position } : { left: position };\n    const fillStyle = { transform: fillTransform, ...positionStyle };\n    const secondaryFillStyle = {\n      transform: secondaryScaleTransform,\n      ...positionStyle,\n    };\n\n    return (\n      <div\n        className={classNames(\n          className,\n          isDisabled && styles.isDisabled,\n          isDragging && styles.isDragging,\n          autoHideThumb && styles.hasAutoHideThumb\n        )}\n        style={style}\n        // @ts-expect-error ts-migrate(2322) FIXME: Type '((...args: any[]) => any) | null | undefined... Remove this comment to see the full error message\n        onMouseDown={isDisabled ? null : this.onMouseDown}\n        // @ts-expect-error ts-migrate(2322) FIXME: Type '((...args: any[]) => any) | null | undefined... Remove this comment to see the full error message\n        onMouseEnter={isDisabled ? null : onMouseEnter}\n        // @ts-expect-error ts-migrate(2322) FIXME: Type '((...args: any[]) => any) | null | undefined... Remove this comment to see the full error message\n        onMouseLeave={isDisabled ? null : onMouseLeave}\n        // @ts-expect-error ts-migrate(2322) FIXME: Type '((event: any) => void) | null' is not assign... Remove this comment to see the full error message\n        onMouseMove={isDisabled || !onMove ? null : this.onMouseMove}\n        // @ts-expect-error ts-migrate(2322) FIXME: Type '(({ pageX, pageY }: any) => void) | null' is... Remove this comment to see the full error message\n        onTouchStart={isDisabled ? null : this.onTouchStart}\n        // @ts-expect-error ts-migrate(2322) FIXME: Type '((event: any) => void) | null' is not assign... Remove this comment to see the full error message\n        onWheel={isDisabled ? null : onWheel}\n      >\n        <div ref={this._trackRef} className={trackClassName}>\n          {showSecondaryFill ? (\n            <div\n              className={secondaryFillClassName}\n              style={secondaryFillStyle}\n            />\n          ) : null}\n\n          {showFill ? (\n            <div className={fillClassName} style={fillStyle} />\n          ) : null}\n        </div>\n\n        <div\n          className={thumbTrackClassName}\n          style={{\n            transform: thumbTransform,\n          }}\n        >\n          <Link\n            aria-labelledby={label}\n            aria-valuemax={max}\n            aria-valuemin={min}\n            aria-valuenow={value}\n            className={thumbClassName}\n            role=\"slider\"\n            tabIndex={tabIndex}\n            onMouseDown={this.onMouseDown}\n            // @ts-expect-error ts-migrate(2322) FIXME: Type '{ className: string | undefined; role: strin... Remove this comment to see the full error message\n            onMouseMove={onMove && this.onMouseMove}\n            onTouchStart={this.onTouchStart}\n          />\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Slider;\n","/* eslint-plugin-disable @typescript-eslint */\n\nimport React, { Component } from 'react';\nimport Slider from 'app/js/views/v3/components/core/Slider';\nimport FormGroup from 'app/js/views/v3/components/core/forms/FormGroup';\nimport InputGroupFormLabel from 'app/js/views/v3/components/core/forms/InputGroupFormLabel';\nimport formInput from 'app/js/views/v3/components/core/forms/formInput';\nimport styles from './SliderInputGroup.css';\n\ntype SliderInputGroupProps = {\n  name: string;\n  value: string | number;\n  min: number;\n  max: number;\n  stepSize: number;\n  labelText: React.ReactNode;\n  showErrors?: boolean;\n  errors: string[];\n  valueModifier: (...args: any[]) => any;\n  onChange: (...args: any[]) => any;\n  onBlur: (...args: any[]) => any;\n};\n\nclass SliderInputGroup extends Component<SliderInputGroupProps> {\n  static defaultProps: any;\n\n  //\n  // Listeners\n\n  onChange = ({ steppedValue }: any) => {\n    const stepSizeString = String(this.props.stepSize);\n    const [, fractional] = stepSizeString.split('.');\n    const fixedValue =\n      fractional != null\n        ? parseFloat(steppedValue.toFixed(fractional.length))\n        : steppedValue;\n\n    this.props.onChange(fixedValue);\n  };\n\n  //\n  // Render\n\n  render() {\n    const {\n      name,\n      value,\n      min,\n      max,\n      stepSize,\n      labelText,\n      showErrors,\n      errors,\n      valueModifier,\n    } = this.props;\n\n    return (\n      <FormGroup>\n        <InputGroupFormLabel\n          errors={errors}\n          labelText={labelText}\n          name={name}\n          showErrors={showErrors}\n        />\n        <div className={styles.sliderContainer}>\n          <Slider\n            className={styles.slider}\n            max={max}\n            min={min}\n            stepSize={stepSize}\n            // @ts-expect-error ts-migrate(2322) FIXME: Type 'string | number' is not assignable to type '... Remove this comment to see the full error message\n            value={value}\n            onChange={this.onChange}\n          />\n          <div className={styles.sliderValue}>{valueModifier(value)}</div>\n        </div>\n      </FormGroup>\n    );\n  }\n}\n\nSliderInputGroup.defaultProps = {\n  valueModifier(value: any) {\n    return value;\n  },\n};\n\nexport default formInput(SliderInputGroup);\n","// extracted by mini-css-extract-plugin\nexport default {\"sliderContainer\":\"uyou9 kasAI\",\"slider\":\"f4T7a GEZKO\",\"sliderValue\":\"i7Eb3\"};","/* eslint-plugin-disable @typescript-eslint */\n\nimport React from 'react';\nimport FormGroup from './FormGroup';\nimport FormHelp from './FormHelp';\nimport InputGroupFormLabel from './InputGroupFormLabel';\nimport TextInput from './TextInput';\nimport formInput from './formInput';\n\ninterface TextInputGroupProps {\n  formGroupClassName?: string;\n  formLabelClassName?: string;\n  name: string;\n  children?: React.ReactNode;\n  labelText: React.ReactNode;\n  helpText?: string;\n  showErrors?: boolean;\n  errors: string[];\n}\n\nexport function TextInputGroup({\n  formGroupClassName,\n  formLabelClassName,\n  name,\n  labelText,\n  helpText,\n  showErrors,\n  errors,\n  children,\n  ...otherProps\n}: TextInputGroupProps) {\n  return (\n    <FormGroup className={formGroupClassName}>\n      {children}\n      <InputGroupFormLabel\n        className={formLabelClassName}\n        errors={errors}\n        labelText={labelText}\n        name={name}\n        showErrors={showErrors}\n      />\n      {/* @ts-expect-error ts-migrate(2769) FIXME: No overload matches this call. */}\n      <TextInput hasError={showErrors} name={name} {...otherProps} />\n      {helpText ? <FormHelp>{helpText}</FormHelp> : null}\n    </FormGroup>\n  );\n}\n\nTextInputGroup.defaultProps = {\n  errors: [],\n};\n\nexport default formInput(TextInputGroup);\n","/* eslint-plugin-disable @typescript-eslint */\n\nimport React from 'react';\nimport { settingsTypes } from 'app/js/models/subscription/MediaSettingModel';\nimport CheckInputGroup from 'app/js/views/v3/components/core/forms/CheckInputGroup';\nimport NumberInputGroup from 'app/js/views/v3/components/core/forms/NumberInputGroup';\nimport SelectInputGroup from 'app/js/views/v3/components/core/forms/SelectInputGroup';\nimport SliderInputGroup from 'app/js/views/v3/components/core/forms/SliderInputGroup';\nimport TextInputGroup from 'app/js/views/v3/components/core/forms/TextInputGroup';\nimport { playbackSpeed } from 'app/js/views/v3/helpers/valueModifiers';\n\nfunction mapEnumValues(enumValues = []) {\n  return enumValues.map(({ label, value }) => ({ [value]: label }));\n}\n\nconst valueModifiers = {\n  playbackSpeed,\n};\n\ntype SettingInputGroupProps = {\n  id?: string;\n  type?: string;\n  label?: string;\n  summary?: string;\n  initialValueModifier?: (...args: any[]) => any;\n  value: string | number | boolean;\n  enumValues?: any[];\n  min?: number;\n  max?: number;\n  step?: number;\n};\n\nfunction SettingInputGroup(props: SettingInputGroupProps) {\n  const {\n    id,\n    type,\n    label,\n    summary,\n    value,\n    initialValueModifier,\n    enumValues,\n    min,\n    max,\n    step,\n  } = props;\n\n  const inputProps = {\n    name: id,\n    helpText: summary,\n    // @ts-expect-error ts-migrate(2722) FIXME: Cannot invoke an object which is possibly 'undefin... Remove this comment to see the full error message\n    initialValue: initialValueModifier(value),\n  };\n\n  if (Array.isArray(enumValues)) {\n    return (\n      <SelectInputGroup\n        labelText={label}\n        {...inputProps}\n        // @ts-expect-error ts-migrate(2322) FIXME: Type '{ values: { [x: number]: never; }[]; name: s... Remove this comment to see the full error message\n        values={mapEnumValues(enumValues)}\n      />\n    );\n  }\n\n  switch (type) {\n    case settingsTypes.TEXT:\n      // @ts-expect-error ts-migrate(2322) FIXME: Type '{ name: string | undefined; helpText: string... Remove this comment to see the full error message\n      return <TextInputGroup labelText={label} {...inputProps} />;\n\n    case settingsTypes.BOOL:\n      // @ts-expect-error ts-migrate(2322) FIXME: Type '{ name: string | undefined; helpText: string... Remove this comment to see the full error message\n      return <CheckInputGroup checkboxText={label} {...inputProps} />;\n\n    case settingsTypes.INT:\n      // @ts-expect-error ts-migrate(2322) FIXME: Type '{ name: string | undefined; helpText: string... Remove this comment to see the full error message\n      return <NumberInputGroup labelText={label} {...inputProps} />;\n\n    case settingsTypes.DOUBLE:\n      return (\n        <SliderInputGroup\n          // @ts-expect-error ts-migrate(2322) FIXME: Type '{ name: string | undefined; helpText: string... Remove this comment to see the full error message\n          labelText={label}\n          max={max}\n          min={min}\n          stepSize={step}\n          // @ts-expect-error ts-migrate(2538) FIXME: Type 'undefined' cannot be used as an index type.\n          valueModifier={valueModifiers[id]}\n          {...inputProps}\n        />\n      );\n\n    default:\n      return null;\n  }\n}\n\nSettingInputGroup.defaultProps = {\n  initialValueModifier(value: any) {\n    return value;\n  },\n};\n\nexport default SettingInputGroup;\n","/* eslint-plugin-disable @typescript-eslint */\n\nexport function playbackSpeed(value: any) {\n  return `${value}×`;\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"container\":\"AqH8d\",\"titleContainer\":\"R0evt\",\"title\":\"nLyFV\"};","import React, { ReactElement, useCallback } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport t from 'app/js/utils/t';\nimport { useSourceContext } from 'app/js/v4/core/servers/components/SourceContextProvider';\nimport Button from 'app/js/v4/core/ui/buttons/components/Button';\nimport Kind from 'app/js/v4/core/ui/types/Kind';\nimport dvrSetupSlice from 'app/js/v4/features/dvrManagement/dvrSetupSlice';\nimport selectDVRSetup from 'app/js/v4/features/dvrManagement/selectors/selectDVRSetup';\nimport selectEPGSettings from 'app/js/v4/features/dvrManagement/selectors/selectEPGSettings';\nimport Form from 'app/js/views/v3/components/core/forms/Form';\nimport SelectInputGroup from 'app/js/views/v3/components/core/forms/SelectInputGroup';\nimport SettingInputGroup from 'app/js/views/v3/components/core/forms/SettingInputGroup';\nimport styles from './ChannelScanPrefs.css';\n\nexport default function ChannelScanPrefs(): ReactElement | null {\n  const dispatch = useDispatch();\n  const [server] = useSourceContext();\n\n  const { selectedDevice, scanPrefs, scanNetworks } =\n    useSelector(selectDVRSetup);\n\n  const { selectedCountry } = useSelector(selectEPGSettings);\n\n  //\n  // Callbacks\n\n  const onSubmit = useCallback(\n    (formState: any) => {\n      const payload = scanPrefs?.length ? { prefs: formState } : formState;\n\n      if (selectedDevice) {\n        dispatch(\n          dvrSetupSlice.actions.deviceChannelsScanRequested({\n            server,\n            deviceKey: selectedDevice.key,\n            source: selectedDevice.source,\n            country: selectedCountry?.code,\n            ...payload,\n          })\n        );\n      }\n    },\n    [dispatch, server, selectedDevice, selectedCountry, scanPrefs]\n  );\n\n  //\n  // Render\n\n  const title = scanPrefs?.length\n    ? t(\n        'We need some more information before proceeding with the channel scan.'\n      )\n    : t('Please select a network before proceeding with the channel scan.');\n\n  const networks = !scanPrefs?.length\n    ? scanNetworks.reduce<Record<string, string>[]>(\n        (acc, network) => {\n          acc.push({ [network.key]: network.title });\n\n          return acc;\n        },\n        [{ '': t('Select Network') }]\n      )\n    : undefined;\n\n  return (\n    <div className={styles.container}>\n      <Form onSubmit={onSubmit}>\n        <div className={styles.titleContainer}>\n          <div className={styles.title}>{title}</div>\n          <Button\n            className={styles.scanButton}\n            kind={Kind.Primary}\n            type=\"submit\"\n          >\n            {t('Scan Channels')}\n          </Button>\n        </div>\n\n        {scanPrefs?.map((pref) => {\n          const { id, value, enumValues, label } = pref;\n          const values = Array.isArray(enumValues)\n            ? [\n                { label: t('Select {label}', { label }), value: '' },\n                ...enumValues,\n              ]\n            : undefined;\n\n          return (\n            <SettingInputGroup\n              key={id}\n              {...pref}\n              enumValues={values}\n              value={value == null ? '' : value}\n            />\n          );\n        })}\n\n        {networks ? (\n          <SelectInputGroup\n            initialValue=\"\"\n            // @ts-expect-error ts-migrate(2322) FIXME: Type '{ name: string; labelText: string; initialVa... Remove this comment to see the full error message\n            labelText={t('Network')}\n            name=\"network\"\n            values={networks}\n          />\n        ) : null}\n      </Form>\n    </div>\n  );\n}\n","import { Layout } from 'app/js/v4/core/ui/lists/listsTypes';\nimport createGridLayout, {\n  GridDirection,\n  GridLayoutOptions,\n} from './createGridLayout';\n\nexport interface VerticalLayoutOptions\n  extends Omit<\n    GridLayoutOptions,\n    'columns' | 'direction' | 'getCellHeight' | 'getCellWidth'\n  > {\n  rowHeight: number;\n  rowWidth?: number;\n}\n\nexport default function createVerticalLayout({\n  rowHeight,\n  rowWidth = 0,\n  ...options\n}: VerticalLayoutOptions): Layout {\n  return createGridLayout({\n    direction: GridDirection.Vertical,\n    columns: 1,\n    getCellWidth: (viewportOptions) =>\n      Math.max(rowWidth, viewportOptions.innerViewportWidth),\n    getCellHeight: () => rowHeight,\n    ...options,\n  });\n}\n","/* eslint-plugin-disable @typescript-eslint */\n\nimport coreDimensions from 'app/styles/variables/dimensions';\n\nconst playerControlsPosterHeight = 80;\n\nconst dimensions = Object.assign({}, coreDimensions, {\n  // Slider\n  sliderTrackSize: '60px',\n  sliderThumbSize: '12px',\n\n  // Server Menu\n  serverMenuItemHeight: '60px',\n\n  // Source Menu\n  sourceMenuItemHeight: '65px',\n  sourceMenuItemGutter: '25px',\n\n  // Poster\n  posterCenterCircleSize: '42px',\n  posterBadgeHeight: '24px',\n  posterHoverSlideDistance: '10px',\n  posterIconPadding: '20px',\n  posterProgressHeight: '4px',\n\n  // Card\n  v4CardBorderRadius: '4px',\n  v4CardShadowSize: '4px',\n  v4CardTitleGap: '10px',\n  v4CardTitleHeight: '20px',\n  v4CardCircleSize: '42px',\n\n  // Hub\n  listButtonHeight: '40px',\n  hubCellHeaderBottomPadding: '5px',\n  hubCellHeaderTopPadding: '25px',\n  v4ListSpacing: '40px',\n  v4SpotlightHeight: '350px',\n\n  // Page\n  pagePadding: '48px',\n  v4PagePadding: '40px',\n  v4PagePaddingAlt: '16px',\n\n  // Page header\n  pageHeaderRowHeight: '50px',\n  pageHeaderLeftMargin: '40px',\n  pageHeaderTabButtonLeftRightMargin: '5px',\n\n  // Recording Schedule\n  recordingPriorityPaneWidth: '360px',\n  recordingPriorityPaneBorderWidth: '4px',\n  recordingPriorityDragHandleWidth: '62px',\n\n  // Channel Grid\n  channelGridRowHeight: '60px',\n  channelGridTitleColumnWidth: '130px',\n  channelGridChannelColumnWidth: '250px',\n  channelGridChannelOverflowWidth: '100px',\n  channelGridChannelIconWidth: '80px',\n  channelGridBorderSize: '1.5px',\n\n  // Jump bar\n  jumpBarCharacterHeight: '25px',\n  jumpBarCharacterPadding: '10px',\n  jumpBarGutter: '30px',\n  jumpBarMargin: '10px',\n\n  // Metadata Table\n  playCellWidth: '42px',\n  actionsCellWidth: '82px',\n  actionsCellPadding: '10px',\n\n  // Metadata Summary List\n  summaryCellHeight: '136px',\n  simpleSummaryCellHeight: '90px',\n  summaryCellPadding: '20px',\n\n  // Metadata Track List\n  trackCellHeight: '60px',\n  trackCellPadding: '10px',\n\n  // Mosaic list\n  mosaicCellPadding: '5px',\n\n  // Timeline\n  timelineGutter: '60px',\n\n  // Pre-play\n  prePlaySummaryMaxWidth: '750px',\n  prePlayPosterMinWidth: '150px',\n  prePlayPosterMaxWidth: '230px',\n  prePlayPosterWidthRatio: '0.15',\n  prePlayContentPadding: '20px',\n  prePlayRatingBase: '1em',\n\n  v4PrePlayListTitleGap: '20px',\n  v4PrePlayDividerHeight: '2px',\n\n  // Post-play\n  postPlayPosterWidth: '260px',\n  postPlayTitleHeight: '40px',\n  postPlayAutoPlayHeight: '55px',\n\n  // DVR Setup\n  dvrSetupImageWidth: '193px',\n  dvrSetupChannelMappingItemHeight: '40px',\n  dvrSetupSpinnerSize: '100px',\n\n  // Player\n  playerControlsHeight: '100px',\n  playerControlsMinWidth: '640px',\n  playerControlsNarrowHeight: '140px',\n  playerControlsNarrowBreakpoint: '960px',\n  playerControlsPosterHeight: `${playerControlsPosterHeight}px`,\n  playerControlsPosterLeftGutter: '8px',\n  playerControlsPosterBottomGutter: '8px',\n  playerControlsNarrowPosterBottomGutter: '48px',\n  playerControlsContentSpacing: '20px',\n  playerControlsSquarePosterWidth: `${playerControlsPosterHeight}px`,\n  playerControlsLandscapePosterWidth: `${Math.round(\n    playerControlsPosterHeight * (16 / 9)\n  )}px`,\n\n  playerInfoBarHeight: '45px',\n  playerTopControlsHeight: '60px',\n  playerSideControlsWidth: '100px',\n  playerOverlayActionEdgeGutter: '20px',\n\n  playerIconButtonSize: '30px',\n  playerIconButtonSpacing: '5px',\n  playerVolumeSliderWidth: '32px',\n  playerVolumeSliderHeight: '60px',\n  seekBarHeight: '4px',\n  seekBarTooltipMarginBottom: '4px',\n  seekBarTooltipHeight: '23px',\n  seekBarTooltipSmallWidth: '60px',\n  seekBarTooltipLargeWidth: '90px',\n  playQueueItemHeight: '68px',\n  playQueueMoveButtonWidth: '54px',\n  playQueueSidePadding: '60px',\n  lyricsLineHeight: '30px',\n  lyricsLineWidth: '640px',\n  // Approximately 20px at 1920 width.\n  playerMediaOverlayInnerMargin: '1vw',\n  // Approximately 40px at 1920 width.\n  playerMediaOverlayOuterMargin: '2vw',\n\n  // Playlist\n  playlistItemCardWidth: '64px',\n  playlistBadgeSize: '30px',\n\n  // Navigation bar\n  navigationIconSize: '24px',\n\n  // Source side bar\n  sourceSidebarIconSize: '24px',\n  sourceSidebarWidth: '48px',\n  sourceSidebarExpandedWidth: '260px',\n  sourceSidebarLeftGutter: '12px',\n  sourceSidebarItemHeight: '50px',\n  sourceSidebarLinkHoverStatusbarAllowance: '20px',\n  sourceSidebarServerHeaderIconSize: '24px',\n\n  // Edit Home Screen modal\n  homeServerListItemHeight: '40px',\n\n  // Server select\n  serverSelectMenuWidth: '260px',\n\n  // Hero page\n  heroBadgeHeight: '90px',\n  heroPageMinHeight: '600px',\n\n  // Server share modal\n  serverShareListRowHeight: '40px',\n\n  // Lineup customization\n  lineupSettingChannelHeight: '40px',\n\n  // Spotlight\n  spotlightHubCellHeight: '324px',\n  spotlightHubCellGap: '25px',\n\n  // Watch Together lobby\n  watchTogetherLobbyPosterWidth: '260px',\n  watchTogetherLobbyTitleHeight: '40px',\n\n  // Downloads page\n  downloadCellHeight: '120px',\n\n  // Live TV Settings page\n  liveTVSettingsDeviceGap: '2px',\n  liveTVSettingsDeviceWidth: '270px',\n  liveTVSettingsBorderRadius: '4px',\n  liveTVSettingsDeviceBorderSize: '8px',\n  liveTVSettingsChannelItemHeight: '50px',\n  liveTVSettingsChannelItemWidth: '450px',\n  liveTVSettingsChannelThumbWidth: '60px',\n  liveTVSettingsChannelThumbHeight: '40px',\n\n  // Where to Watch\n  platformThumbSize: '50px',\n});\n\nexport default dimensions;\n","// extracted by mini-css-extract-plugin\nexport default {\"input\":\"_ZuBw\",\"small\":\"bHMVZ\",\"medium\":\"M5ENc\",\"large\":\"Q0Htb\",\"isDisabled\":\"cjBJW\",\"hasError\":\"jdd5f\"};","import classNames from 'classnames';\nimport React, { InputHTMLAttributes, ReactElement, Ref } from 'react';\nimport Size from 'app/js/v4/core/ui/types/Size';\nimport styles from './Checkbox.css';\n\ninterface InnerCheckboxProps\n  extends Omit<InputHTMLAttributes<HTMLInputElement>, 'size' | 'value'> {\n  forwardedRef: Ref<HTMLInputElement>;\n  className?: string;\n  errorClassName?: string;\n  disabledClassName?: string;\n  name: string;\n  size?: Size;\n  isDisabled?: boolean;\n  hasError?: boolean;\n}\n\nexport type CheckboxProps = Omit<InnerCheckboxProps, 'forwardedRef'>;\n\nfunction Checkbox({\n  forwardedRef,\n  className = styles.input,\n  errorClassName = styles.hasError,\n  disabledClassName = styles.isDisabled,\n  isDisabled = false,\n  hasError = false,\n  name,\n  size = Size.Medium,\n  ...inputProps\n}: InnerCheckboxProps): ReactElement {\n  return (\n    <input\n      ref={forwardedRef}\n      className={classNames(\n        className,\n        styles[size],\n        isDisabled && disabledClassName,\n        hasError && errorClassName\n      )}\n      disabled={isDisabled}\n      id={name}\n      name={name}\n      type=\"checkbox\"\n      {...inputProps}\n    />\n  );\n}\n\nexport default React.forwardRef<HTMLInputElement, CheckboxProps>(\n  (props, ref) => {\n    return <Checkbox {...props} forwardedRef={ref} />;\n  }\n);\n","// extracted by mini-css-extract-plugin\nexport default {\"badge\":\"qDxty\",\"isHidden\":\"fp3l8\",\"default\":\"q1Cm2\",\"primary\":\"hkV9D\",\"success\":\"r4DfU\",\"danger\":\"bwNJG\"};","/* eslint-plugin-disable @typescript-eslint */\n\nimport classNames from 'classnames';\nimport React from 'react';\nimport * as kinds from 'app/js/views/v3/helpers/props/kinds';\nimport styles from './Badge.css';\n\ninterface BadgeProps {\n  className?: string;\n  children?: React.ReactNode;\n  kind?: any; // TODO: PropTypes.oneOf(kinds.all)\n}\n\nfunction Badge({ className, children, kind }: BadgeProps) {\n  return (\n    <span\n      className={classNames(\n        className,\n        styles.badge,\n        styles[kind],\n        !children && styles.isHidden\n      )}\n      data-testid=\"badgeElement\"\n    >\n      {children}\n    </span>\n  );\n}\n\nBadge.defaultProps = {\n  kind: kinds.DEFAULT,\n};\n\nexport default Badge;\n","import { LineupChannel } from 'app/js/v4/features/dvrManagement/dvrManagementTypes';\n\nexport default function getLineupChannelOptionLabel(\n  lineupChannel: LineupChannel\n): string {\n  return lineupChannel.title\n    ? `${lineupChannel.identifier} ${lineupChannel.title} (${lineupChannel.callSign})`\n    : `${lineupChannel.identifier} ${lineupChannel.callSign}`;\n}\n","import { createSelector, Selector } from 'reselect';\nimport createShallowEqualSelector from 'app/js/stores/selectors/createShallowEqualSelector';\nimport { EPGLineup } from 'app/js/v4/features/dvrManagement/dvrManagementTypes';\nimport { LegacyRootState } from 'app/js/v4/root/rootTypes';\nimport selectSelectedDVRLineups from './selectSelectedDVRLineups';\nimport selectSetupSelectedLineups from './selectSetupSelectedLineups';\n\nconst selectSelectedLineupsUnmemoized: Selector<LegacyRootState, EPGLineup[]> =\n  createSelector(\n    selectSelectedDVRLineups,\n    selectSetupSelectedLineups,\n    (dvrLineups, setupLineups) => {\n      // `setupLineups` is only ever set during tuner setup. Outside the\n      // setup, we want lineups associated with the selected DVR, if any exists.\n      return setupLineups ?? dvrLineups ?? [];\n    }\n  );\n\nconst selectSelectedLineups = createShallowEqualSelector(\n  selectSelectedLineupsUnmemoized,\n  (selectedLineups) => selectedLineups\n);\n\nexport default selectSelectedLineups;\n","import { Selector } from 'react-redux';\nimport { createSelector } from 'reselect';\nimport { LineupChannelSelectOption } from 'app/js/v4/features/dvrManagement/dvrManagementTypes';\nimport getLineupChannelOptionLabel from 'app/js/v4/features/dvrManagement/utils/getLineupChannelOptionLabel';\nimport { LegacyRootState } from 'app/js/v4/root/rootTypes';\nimport selectEPGSettings from './selectEPGSettings';\nimport selectSelectedLineups from './selectSelectedLineups';\n\ntype GroupedLineupChannels = Record<string, LineupChannelSelectOption[]>;\n\nexport const VALUE_SEPARATOR = ':';\n\nconst selectGroupedLineupChannels: Selector<\n  LegacyRootState,\n  GroupedLineupChannels\n> = createSelector(\n  selectEPGSettings,\n  selectSelectedLineups,\n  ({ lineupChannels }, selectedLineups) => {\n    return selectedLineups.reduce<GroupedLineupChannels>((acc, lineup) => {\n      const channels = lineupChannels.channelsByLineupUUID[lineup.uuid] ?? [];\n\n      acc[lineup.title] = channels.map((channel) => ({\n        value: `${channel.key}${VALUE_SEPARATOR}${channel.identifier}`,\n        label: getLineupChannelOptionLabel(channel),\n      }));\n\n      return acc;\n    }, {});\n  }\n);\n\nexport default selectGroupedLineupChannels;\n","import { Selector } from 'react-redux';\nimport { createSelector } from 'reselect';\nimport { LineupChannel } from 'app/js/v4/features/dvrManagement/dvrManagementTypes';\nimport { LegacyRootState } from 'app/js/v4/root/rootTypes';\nimport selectEPGSettings from './selectEPGSettings';\nimport selectSelectedLineups from './selectSelectedLineups';\n\nconst selectLineupChannels: Selector<LegacyRootState, LineupChannel[]> =\n  createSelector(\n    selectEPGSettings,\n    selectSelectedLineups,\n    ({ lineupChannels }, selectedLineups) => {\n      return selectedLineups.reduce<LineupChannel[]>((acc, lineup) => {\n        const channels = lineupChannels.channelsByLineupUUID[lineup.uuid] ?? [];\n\n        return acc.concat(\n          channels.map((channel) => ({ ...channel, lineupUUID: lineup.uuid }))\n        );\n      }, []);\n    }\n  );\n\nexport default selectLineupChannels;\n","import React, { ReactElement, useCallback, useMemo, useState } from 'react';\nimport { useSelector } from 'react-redux';\nimport t from 'app/js/utils/t';\nimport Select, { SelectProps } from 'app/js/v4/core/ui/forms/components/Select';\nimport selectGroupedLineupChannels, {\n  VALUE_SEPARATOR,\n} from 'app/js/v4/features/dvrManagement/selectors/selectGroupedLineupChannels';\nimport selectLineupChannels from 'app/js/v4/features/dvrManagement/selectors/selectLineupChannels';\nimport getLineupChannelOptionLabel from 'app/js/v4/features/dvrManagement/utils/getLineupChannelOptionLabel';\n\ninterface LineupChannelSelectProps\n  extends Omit<SelectProps, 'children' | 'name' | 'onChange'> {\n  index: number;\n  selectedChannelKey?: string;\n  selectedLineupIdentifier?: string;\n  onChange(channelKey: string, lineupIdentifier: string, index: number): void;\n}\n\nexport default function LineupChannelSelect({\n  className,\n  index,\n  selectedChannelKey,\n  selectedLineupIdentifier,\n  onChange,\n  isDisabled,\n}: LineupChannelSelectProps): ReactElement {\n  const lineupChannels = useSelector(selectLineupChannels);\n  const groupedLineupChannels = useSelector(selectGroupedLineupChannels);\n  const [showSelectOptions, setShowSelectOptions] = useState(false);\n  const selectedLineupChannel = useMemo(() => {\n    return lineupChannels?.find(\n      (lineupChannel) =>\n        lineupChannel.key === selectedChannelKey &&\n        lineupChannel.identifier === selectedLineupIdentifier\n    );\n  }, [lineupChannels, selectedChannelKey, selectedLineupIdentifier]);\n\n  //\n  // Callbacks\n\n  const onSelectPress = useCallback(() => {\n    // Defer rendering the options until the select is opened to improve\n    // performance.\n    setShowSelectOptions(true);\n  }, [setShowSelectOptions]);\n\n  const onSelect = useCallback(\n    (event) => {\n      const [key, identifier] = event.target.value.split(VALUE_SEPARATOR);\n      const nextSelectedChannel = lineupChannels.find(\n        (channel) => channel.key === key && channel.identifier === identifier\n      );\n\n      if (nextSelectedChannel) {\n        onChange(key, identifier, index);\n      }\n    },\n    [index, lineupChannels, onChange]\n  );\n\n  //\n  // Render\n\n  const selectedValue = `${selectedChannelKey}${VALUE_SEPARATOR}${selectedLineupIdentifier}`;\n\n  return (\n    <Select\n      className={className}\n      isDisabled={isDisabled}\n      name={`[${index}].channelKey`}\n      value={selectedValue}\n      onChange={onSelect}\n      onMouseDown={onSelectPress}\n      onTouchStart={onSelectPress}\n    >\n      <option key=\"\" value=\"\">\n        {t('Select Channel')}\n      </option>\n\n      {showSelectOptions ? (\n        Object.keys(groupedLineupChannels).map((group, groupIndex) => (\n          <optgroup key={groupIndex} label={group}>\n            {groupedLineupChannels[group].map(\n              ({ value, label }, channelIndex) => (\n                <option key={channelIndex} value={value}>\n                  {label}\n                </option>\n              )\n            )}\n          </optgroup>\n        ))\n      ) : (\n        <option key=\"computed\" value={selectedValue}>\n          {selectedLineupChannel\n            ? getLineupChannelOptionLabel(selectedLineupChannel)\n            : null}\n        </option>\n      )}\n    </Select>\n  );\n}\n","import React, { ReactElement } from 'react';\nimport signalQuality1 from 'app/img/signal-quality/signal-quality-1.svg';\nimport signalQuality2 from 'app/img/signal-quality/signal-quality-2.svg';\nimport signalQuality3 from 'app/img/signal-quality/signal-quality-3.svg';\nimport signalQuality4 from 'app/img/signal-quality/signal-quality-4.svg';\n\nfunction getImage(signalQuality: number): string {\n  if (signalQuality <= 25) {\n    return signalQuality1;\n  } else if (signalQuality <= 50) {\n    return signalQuality2;\n  } else if (signalQuality <= 75) {\n    return signalQuality3;\n  } else {\n    return signalQuality4;\n  }\n}\n\ninterface SignalQualityProps {\n  className?: string;\n  quality?: number;\n}\n\nexport default function SignalQuality({\n  className,\n  quality,\n}: SignalQualityProps): ReactElement | null {\n  if (quality === undefined) {\n    return null;\n  }\n\n  const image = getImage(quality);\n\n  return (\n    <img className={className} height={16} src={String(image)} width={18} />\n  );\n}\n","import classNames from 'classnames';\nimport React, { memo, ReactElement, useCallback } from 'react';\nimport t from 'app/js/utils/t';\nimport Checkbox from 'app/js/v4/core/ui/forms/components/Checkbox';\nimport useVirtualCell from 'app/js/v4/core/ui/lists/hooks/useVirtualCell';\nimport { VirtualCellProps } from 'app/js/v4/core/ui/lists/listsTypes';\nimport { SelectedChannelMapping } from 'app/js/v4/features/dvrManagement/dvrManagementTypes';\nimport Badge from 'app/js/views/v3/components/core/base/Badge';\nimport LineupChannelSelect from './LineupChannelSelect';\nimport SignalQuality from './SignalQuality';\nimport styles from './DeviceChannelMapping.css';\n\ninterface DeviceChannelMappingProps\n  extends VirtualCellProps<SelectedChannelMapping> {\n  enabled: boolean;\n  channelKey?: string;\n  lineupIdentifier?: string;\n  onEnabledChange(enabled: boolean, index: number): void;\n  onChannelKeyChange(\n    channelKey: string,\n    lineupIdentifier: string,\n    index: number\n  ): void;\n}\n\nfunction DeviceChannelMapping({\n  item: channelMappingItem,\n  enabled,\n  channelKey,\n  lineupIdentifier,\n  onEnabledChange,\n  onChannelKeyChange,\n  ...virtualCellProps\n}: DeviceChannelMappingProps): ReactElement | null {\n  const cell = useVirtualCell(virtualCellProps);\n  const index = virtualCellProps.row;\n\n  const {\n    name,\n    deviceIdentifier,\n    signalStrength,\n    signalQuality,\n    drm,\n    isDeviceChannelHD,\n    isLineupChannelHD,\n  } = channelMappingItem || {};\n\n  //\n  // Callbacks\n\n  const onChange = useCallback(\n    (event) => {\n      onEnabledChange(event.currentTarget.checked, index);\n    },\n    [index, onEnabledChange]\n  );\n\n  //\n  // Render\n\n  if (!channelMappingItem) {\n    return null;\n  }\n\n  return (\n    <div ref={cell.cellRef} className={styles.container} style={cell.style}>\n      <label className={styles.deviceChannel}>\n        <div className={styles.channelEnabled}>\n          {!drm ? (\n            <Checkbox\n              checked={enabled}\n              className={styles.channelEnabledCheckbox}\n              name={`[${virtualCellProps.row}].enabled`}\n              onChange={onChange}\n            />\n          ) : null}\n        </div>\n\n        <div\n          className={classNames(\n            styles.deviceChannelInfo,\n            !enabled && styles.mappingDisabled\n          )}\n        >\n          <div className={styles.deviceChannelIdentifier}>\n            {deviceIdentifier}\n          </div>\n          <div className={styles.deviceChannelName}>{name}</div>\n        </div>\n\n        <SignalQuality\n          className={styles.signalQuality}\n          quality={signalQuality || signalStrength}\n        />\n      </label>\n\n      {drm ? (\n        <div className={styles.drmChannel}>\n          <Badge className={styles.drmChannelBadge}>{t('Protected')}</Badge>\n        </div>\n      ) : (\n        <div className={styles.lineupChannel}>\n          <LineupChannelSelect\n            className={styles.lineupChannelSelect}\n            index={index}\n            isDisabled={!enabled}\n            selectedChannelKey={channelKey}\n            selectedLineupIdentifier={lineupIdentifier}\n            onChange={onChannelKeyChange}\n          />\n          {isDeviceChannelHD || isLineupChannelHD ? (\n            <Badge className={styles.hdBadge}>{t('HD')}</Badge>\n          ) : null}\n        </div>\n      )}\n    </div>\n  );\n}\n\nexport default memo(DeviceChannelMapping);\n","// extracted by mini-css-extract-plugin\nexport default {\"container\":\"odzwA\",\"mappingDisabled\":\"W3ZqC\",\"deviceChannel\":\"ouDZK\",\"channelEnabled\":\"BkkUN\",\"channelEnabledCheckbox\":\"Cw7mw _ZuBw\",\"deviceChannelIdentifier\":\"DSAx3\",\"deviceChannelInfo\":\"ux0bM\",\"deviceChannelName\":\"XQ5A9\",\"signalQuality\":\"jnr0u\",\"lineupChannel\":\"fQ5W5\",\"lineupChannelSelect\":\"ntZBB LGEv3\",\"drmChannel\":\"apD7m\",\"drmChannelBadge\":\"C7yez\",\"hdBadge\":\"FY6zK\"};","// extracted by mini-css-extract-plugin\nexport default {\"container\":\"xLkhg\",\"checkbox\":\"oBfCO _ZuBw\",\"titleContainer\":\"AxIH2\",\"title\":\"ZUX3K\",\"count\":\"qED2t\",\"rescanButton\":\"Gp09X IYkbp\",\"device\":\"K0rG4\",\"lineup\":\"pR_zO\"};","import React, { ChangeEvent, ReactElement, useCallback, useMemo } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport t from 'app/js/utils/t';\nimport { useSourceContext } from 'app/js/v4/core/servers/components/SourceContextProvider';\nimport Link from 'app/js/v4/core/ui/buttons/components/Link';\nimport Checkbox from 'app/js/v4/core/ui/forms/components/Checkbox';\nimport Kind from 'app/js/v4/core/ui/types/Kind';\nimport dvrSetupSlice from 'app/js/v4/features/dvrManagement/dvrSetupSlice';\nimport createDeviceChannelsSelector from 'app/js/v4/features/dvrManagement/selectors/createDeviceChannelsSelector';\nimport selectDVRSetup from 'app/js/v4/features/dvrManagement/selectors/selectDVRSetup';\nimport selectLineupChannels from 'app/js/v4/features/dvrManagement/selectors/selectLineupChannels';\nimport styles from './DeviceChannelMappingsHeader.css';\n\ninterface DeviceChannelMappingsHeaderProps {\n  allChannelMappingsEnabled: boolean;\n  allChannelMappingsDisabled: boolean;\n  onAllChannelMappingsEnabledChange(event: ChangeEvent<HTMLInputElement>): void;\n}\n\nexport default function DeviceChannelMappingsHeader({\n  allChannelMappingsEnabled,\n  allChannelMappingsDisabled,\n  onAllChannelMappingsEnabledChange,\n}: DeviceChannelMappingsHeaderProps): ReactElement {\n  const dispatch = useDispatch();\n  const [server] = useSourceContext();\n  const { selectedDevice, selectedDVR } = useSelector(selectDVRSetup);\n  const selectDeviceChannels = useMemo(\n    () => createDeviceChannelsSelector(selectedDevice?.key),\n    [selectedDevice]\n  );\n\n  const lineupChannels = useSelector(selectLineupChannels);\n  const { channels: deviceChannels } = useSelector(selectDeviceChannels);\n\n  //\n  // Callbacks\n\n  const indeterminateSetter = useCallback(\n    (element) => {\n      if (element) {\n        element.indeterminate =\n          !allChannelMappingsEnabled && !allChannelMappingsDisabled;\n      }\n    },\n    [allChannelMappingsEnabled, allChannelMappingsDisabled]\n  );\n\n  const onRescanPress = useCallback(() => {\n    if (selectedDevice) {\n      dispatch(\n        dvrSetupSlice.actions.deviceChannelsScanRequested({\n          server,\n          deviceKey: selectedDevice.key,\n          source: selectedDevice.source,\n          country: selectedDVR?.dvr?.country,\n        })\n      );\n    }\n  }, [dispatch, server, selectedDevice, selectedDVR]);\n\n  //\n  // Render\n\n  return (\n    <div className={styles.container}>\n      <div className={styles.device}>\n        <Checkbox\n          ref={indeterminateSetter}\n          checked={allChannelMappingsEnabled}\n          className={styles.checkbox}\n          name=\"toggleAll\"\n          onChange={onAllChannelMappingsEnabledChange}\n        />\n\n        <div className={styles.titleContainer}>\n          <div className={styles.title}>{t('Tuner Channels')}</div>\n          <div className={styles.count}>\n            {t('({count} Channels)', { count: deviceChannels.length })}\n          </div>\n          <Link\n            className={styles.rescanButton}\n            kind={Kind.Primary}\n            onPress={onRescanPress}\n          >\n            {t('Rescan')}\n          </Link>\n        </div>\n      </div>\n\n      <div className={styles.lineup}>\n        <div className={styles.titleContainer}>\n          <div className={styles.title}>{t('EPG Channels')}</div>\n          <div className={styles.count}>\n            {t('({count} Channels)', { count: lineupChannels.length })}\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n","import React, {\n  ChangeEvent,\n  ReactElement,\n  useCallback,\n  useEffect,\n  useMemo,\n  useState,\n} from 'react';\nimport { FormProvider, useForm } from 'react-hook-form';\nimport useMeasure from 'app/js/v4/core/ui/hooks/useMeasure';\nimport VirtualList from 'app/js/v4/core/ui/lists/components/VirtualList';\nimport { VirtualCellFactory } from 'app/js/v4/core/ui/lists/listsTypes';\nimport createVerticalLayout from 'app/js/v4/core/ui/lists/utils/createVerticalLayout';\nimport {\n  ChannelMappingFormData,\n  SelectedChannelMapping,\n} from 'app/js/v4/features/dvrManagement/dvrManagementTypes';\nimport dimensions from 'app/js/views/v3/styles/variables/dimensions';\nimport DeviceChannelMapping from './DeviceChannelMapping';\nimport DeviceChannelMappingsHeader from './DeviceChannelMappingsHeader';\nimport styles from './DeviceChannelMappingsForm.css';\n\nconst layout = createVerticalLayout({\n  rowHeight: parseInt(dimensions.dvrSetupChannelMappingItemHeight, 10),\n  overscan: 1,\n});\n\nexport interface ChannelMappingChangeProps {\n  index: number;\n  enabled?: boolean;\n  channelKey?: string;\n  lineupIdentifier?: string;\n}\n\ninterface DeviceChannelMappingsFormProps {\n  id: string;\n  height: number;\n  scrollTop: number;\n  scrollLeft: number;\n  channelMappings: SelectedChannelMapping[];\n  onChannelMappingChange?({\n    index,\n    enabled,\n    channelKey,\n    lineupIdentifier,\n  }: ChannelMappingChangeProps): void;\n  onSubmit(data: ChannelMappingFormData[]): void;\n}\n\nexport default function DeviceChannelMappingsForm({\n  id,\n  height,\n  scrollTop,\n  scrollLeft,\n  channelMappings,\n  onChannelMappingChange,\n  onSubmit,\n}: DeviceChannelMappingsFormProps): ReactElement {\n  const [allChannelMappingsEnabled, setAllChannelMappingsEnabled] =\n    useState(false);\n  const [allChannelMappingsDisabled, setAllChannelMappingsDisabled] =\n    useState(false);\n\n  const [measureRef, { width }] = useMeasure();\n\n  const formMethods = useForm({\n    defaultValues: channelMappings,\n  });\n  const { handleSubmit, register, setValue, watch } = formMethods;\n\n  const watchedFields = watch();\n\n  //\n  // Effects\n\n  useEffect(() => {\n    let allDisabled = true;\n    let allEnabled = true;\n\n    Object.values(watchedFields).forEach(({ drm, enabled }) => {\n      if (enabled) {\n        allDisabled = false;\n      } else if (!drm) {\n        allEnabled = false;\n      }\n    });\n\n    setAllChannelMappingsDisabled(allDisabled);\n    setAllChannelMappingsEnabled(allEnabled);\n  }, [\n    watchedFields,\n    setAllChannelMappingsDisabled,\n    setAllChannelMappingsEnabled,\n  ]);\n\n  useEffect(() => {\n    channelMappings.forEach((_mapping, index) => {\n      register(`[${index}].enabled`);\n      register(`[${index}].channelKey`);\n      register(`[${index}].key`);\n      register(`[${index}].lineupIdentifier`);\n      register(`[${index}].drm`);\n    });\n  }, [channelMappings, register]);\n\n  //\n  // Callbacks\n\n  const onAllChannelMappingsEnabledChange = useCallback(\n    (event: ChangeEvent<HTMLInputElement>): void => {\n      channelMappings.forEach((mapping, index) => {\n        const enabled = event.currentTarget.checked;\n\n        if (!mapping.drm) {\n          setValue(`[${index}]`, { enabled });\n\n          onChannelMappingChange?.({ index, enabled });\n        }\n      });\n    },\n    [channelMappings, setValue, onChannelMappingChange]\n  );\n\n  const onChannelMappingEnabledChange = useCallback(\n    (enabled: boolean, index: number): void => {\n      setValue(`[${index}]`, { enabled });\n\n      onChannelMappingChange?.({ index, enabled });\n    },\n    [setValue, onChannelMappingChange]\n  );\n\n  const onChannelMappingChannelKeyChange = useCallback(\n    (channelKey: string, lineupIdentifier: string, index: number): void => {\n      setValue(`[${index}]`, { channelKey, lineupIdentifier });\n\n      onChannelMappingChange?.({ index, channelKey, lineupIdentifier });\n    },\n    [setValue, onChannelMappingChange]\n  );\n\n  const onFormSubmit = handleSubmit((data): void => {\n    const parsedData = Object.values(data).map<ChannelMappingFormData>(\n      ({ key, lineupIdentifier, channelKey, enabled }) => ({\n        key,\n        lineupIdentifier,\n        channelKey,\n        enabled,\n      })\n    );\n\n    onSubmit(parsedData);\n  });\n\n  //\n  // Render\n\n  const cellComponentFactory: VirtualCellFactory<SelectedChannelMapping> =\n    useMemo(() => {\n      return (cellProps) => {\n        // `cellProps` will never have a null item, but VirtualCellFactory\n        // anticipates being used with a paginated list which this is not. Type\n        // narrow the item so that typescript is happy with out having to adjust\n        // the types for VirtualCellFactory\n        if (!cellProps.item) {\n          return <></>;\n        }\n\n        const enabled: boolean = watch(`[${cellProps.row}].enabled`);\n        const channelKey: string = watch(`[${cellProps.row}].channelKey`);\n        const lineupIdentifier: string = watch(\n          `[${cellProps.row}].lineupIdentifier`\n        );\n\n        return (\n          <DeviceChannelMapping\n            {...cellProps}\n            channelKey={channelKey}\n            enabled={enabled}\n            lineupIdentifier={lineupIdentifier}\n            onChannelKeyChange={onChannelMappingChannelKeyChange}\n            onEnabledChange={onChannelMappingEnabledChange}\n          />\n        );\n      };\n    }, [\n      watch,\n      onChannelMappingEnabledChange,\n      onChannelMappingChannelKeyChange,\n    ]);\n\n  return (\n    <FormProvider {...formMethods}>\n      <form\n        ref={measureRef}\n        className={styles.container}\n        id={id}\n        onSubmit={onFormSubmit}\n      >\n        <DeviceChannelMappingsHeader\n          allChannelMappingsDisabled={allChannelMappingsDisabled}\n          allChannelMappingsEnabled={allChannelMappingsEnabled}\n          onAllChannelMappingsEnabledChange={onAllChannelMappingsEnabledChange}\n        />\n\n        <VirtualList\n          cellComponentFactory={cellComponentFactory}\n          className={styles.scroller}\n          items={channelMappings}\n          layout={layout}\n          scrollLeft={scrollLeft}\n          scrollTop={scrollTop}\n          totalSize={channelMappings.length}\n          viewportHeight={height}\n          viewportWidth={width}\n        />\n      </form>\n    </FormProvider>\n  );\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"container\":\"GTUcK\",\"scroller\":\"NtgNy GSAom sWZ6m\"};","/* eslint-plugin-disable @typescript-eslint */\n\nfunction channelNumberComparator(a: any, b: any) {\n  if (a === b) {\n    return 0;\n  }\n\n  const aSplit = a.split('.');\n  const bSplit = b.split('.');\n  const len = Math.max(aSplit.length, bSplit.length);\n\n  for (let i = 0; i < len; i++) {\n    // In the case of `a` being 2.1 and `b` being 2 we want 2 to come\n    // before 2.1 in the list, returning 1 treats 2.1 as being greater\n    // than 2 and orders the results properly.\n    // If `a` is 2 and `b` is 2.1, returning -1 keeps their order.\n    if (!bSplit[i]) {\n      return 1;\n    }\n\n    if (!aSplit[i]) {\n      return -1;\n    }\n\n    const aValue = parseInt(aSplit[i], 10);\n    const bValue = parseInt(bSplit[i], 10);\n\n    if (aValue > bValue) {\n      return 1;\n    } else if (aValue < bValue) {\n      return -1;\n    }\n  }\n\n  return 0;\n}\n\nexport default channelNumberComparator;\n","import { createSelector, OutputSelector } from 'reselect';\nimport channelNumberComparator from 'app/js/utils/livetv/channelNumberComparator';\nimport {\n  DeviceChannelsState,\n  EPGSettingsState,\n  LineupChannel,\n  MediaGrabberDevice,\n  SelectedChannelMapping,\n} from 'app/js/v4/features/dvrManagement/dvrManagementTypes';\nimport { LegacyRootState } from 'app/js/v4/root/rootTypes';\nimport memoize from 'app/js/v4/utils/memoize';\nimport createDVRDeviceSelector from './createDVRDeviceSelector';\nimport createDeviceChannelsSelector from './createDeviceChannelsSelector';\nimport selectEPGSettings from './selectEPGSettings';\nimport selectLineupChannels from './selectLineupChannels';\n\nfunction createChannelMappingsSelector(\n  deviceKey?: MediaGrabberDevice['key']\n): OutputSelector<\n  LegacyRootState,\n  SelectedChannelMapping[],\n  (\n    deviceChannels: DeviceChannelsState,\n    epgSettings: EPGSettingsState,\n    lineupChannels: LineupChannel[],\n    dvrDevice: MediaGrabberDevice | undefined\n  ) => SelectedChannelMapping[]\n> {\n  return createSelector(\n    createDeviceChannelsSelector(deviceKey),\n    selectEPGSettings,\n    selectLineupChannels,\n    createDVRDeviceSelector(deviceKey),\n    (deviceChannels, epgSettings, lineupChannels, dvrDevice) => {\n      const channelMappings = dvrDevice?.ChannelMapping\n        ? dvrDevice.ChannelMapping\n        : epgSettings.channelMappings.mappings;\n\n      if (!deviceChannels?.isPopulated || channelMappings.length === 0) {\n        return [];\n      }\n\n      const deviceChannelIdentifiers = deviceChannels.channels.map<string>(\n        (channel) => channel.key\n      );\n\n      const channelMappingDeviceIdentifiers = channelMappings.map<string>(\n        (mapping) => mapping.deviceIdentifier\n      );\n\n      const channelMappingKeys = deviceChannelIdentifiers.concat(\n        channelMappingDeviceIdentifiers\n      );\n      const uniqueChannelMappingKeys = Array.from(new Set(channelMappingKeys));\n\n      const mappedChannels = uniqueChannelMappingKeys.map((key) => {\n        const deviceChannel = deviceChannels.channels.find(\n          (channel) => channel.key === key\n        );\n\n        const channelMapping = channelMappings.find(\n          (mapping) => mapping.deviceIdentifier === key\n        );\n\n        const lineupChannel = lineupChannels.find((channel) => {\n          return (\n            channel?.key === channelMapping?.channelKey ||\n            channel?.identifier === channelMapping?.lineupIdentifier\n          );\n        });\n\n        // deviceChannel may be undefined, in that case use an empty\n        // object to destructure from.\n        const {\n          name = '',\n          identifier = '',\n          drm = false,\n          signalStrength,\n          signalQuality,\n          hd = false,\n        } = deviceChannel || {};\n\n        const enabled = !!(deviceChannel && !drm && channelMapping?.enabled);\n\n        return {\n          key,\n          name,\n          deviceIdentifier: identifier,\n          channelKey: channelMapping?.channelKey || lineupChannel?.key,\n          lineupIdentifier:\n            channelMapping?.lineupIdentifier || lineupChannel?.identifier,\n          signalStrength,\n          signalQuality,\n          enabled,\n          drm,\n          isChannelMissing: !deviceChannel,\n          isDeviceChannelHD: hd,\n          isLineupChannelHD: lineupChannel?.hd ?? false,\n        };\n      });\n\n      return mappedChannels.sort((a, b) => {\n        return channelNumberComparator(a.deviceIdentifier, b.deviceIdentifier);\n      });\n    }\n  );\n}\n\nexport default memoize(createChannelMappingsSelector);\n","import { createSelector, OutputSelector } from 'reselect';\nimport {\n  DVRSetupState,\n  MediaGrabberDevice,\n} from 'app/js/v4/features/dvrManagement/dvrManagementTypes';\nimport { LegacyRootState } from 'app/js/v4/root/rootTypes';\nimport selectDVRSetup from './selectDVRSetup';\n\nfunction createDVRDeviceSelector(\n  deviceKey?: MediaGrabberDevice['key']\n): OutputSelector<\n  LegacyRootState,\n  MediaGrabberDevice | undefined,\n  (dvrSetupState: DVRSetupState) => MediaGrabberDevice | undefined\n> {\n  return createSelector(selectDVRSetup, ({ selectedDVR }) => {\n    const { dvr } = selectedDVR;\n\n    if (!dvr?.Device?.length) {\n      return;\n    }\n\n    return dvr.Device?.find((device) => device.key === deviceKey);\n  });\n}\n\nexport default createDVRDeviceSelector;\n","import {\n  ChannelMapping,\n  EPGLineup,\n  LineupChannel,\n} from 'app/js/v4/features/dvrManagement/dvrManagementTypes';\n\nexport type MatchedChannelsPerLineupUUID = Record<string, number>;\n\nexport default function getMatchedChannelsPerLineupUUID(\n  channelMappings: ChannelMapping[],\n  lineupChannels: LineupChannel[],\n  selectedLineups?: EPGLineup[]\n): MatchedChannelsPerLineupUUID {\n  const initialValues = selectedLineups?.reduce<MatchedChannelsPerLineupUUID>(\n    (acc, { uuid }) => {\n      acc[uuid] = 0;\n\n      return acc;\n    },\n    {}\n  );\n\n  return channelMappings.reduce<MatchedChannelsPerLineupUUID>(\n    (acc, { enabled, channelKey }) => {\n      if (enabled && channelKey) {\n        const match = lineupChannels.find(({ key }) => key === channelKey);\n\n        if (match?.lineupUUID) {\n          acc[match.lineupUUID]++;\n        }\n      }\n\n      return acc;\n    },\n    initialValues ?? {}\n  );\n}\n","import React, { ChangeEvent, ReactElement, useCallback, useMemo } from 'react';\nimport { useDispatch } from 'react-redux';\nimport t from 'app/js/utils/t';\nimport Select from 'app/js/v4/core/ui/forms/components/Select';\nimport { SelectedEPGLineupGroup } from 'app/js/v4/features/dvrManagement/dvrManagementTypes';\nimport epgSettingsSlice from 'app/js/v4/features/dvrManagement/epgSettingsSlice';\nimport styles from './EPGLineupSelect.css';\n\ninterface EPGLineupOption {\n  value: string;\n  label: string;\n}\n\ninterface EPGLineupSelectProps {\n  lineupGroup: SelectedEPGLineupGroup;\n  isDisabled: boolean;\n}\n\nexport default function EPGLineupSelect({\n  lineupGroup,\n  isDisabled,\n}: EPGLineupSelectProps): ReactElement {\n  const dispatch = useDispatch();\n  const { epgLineups, selectedLineup, uuid } = lineupGroup;\n\n  const epgLineupOptions = useMemo(\n    () =>\n      epgLineups.map<EPGLineupOption>((epgLineup) => ({\n        value: epgLineup.uuid,\n        label: epgLineup.title,\n      })),\n    [epgLineups]\n  );\n\n  //\n  // Callbacks\n\n  const onChange = useCallback(\n    (event: ChangeEvent<HTMLSelectElement>) => {\n      const selectedLineupUUID = event.currentTarget.value;\n\n      if (!selectedLineupUUID) {\n        return;\n      }\n\n      dispatch(\n        epgSettingsSlice.actions.selectedLineupSelected({\n          lineupGroupUUID: uuid,\n          selectedLineupUUID,\n        })\n      );\n    },\n    [dispatch, uuid]\n  );\n\n  //\n  // Effects\n\n  //\n  // Render\n\n  return (\n    <Select\n      className={styles.input}\n      isDisabled={isDisabled || epgLineupOptions.length === 1}\n      name={uuid}\n      value={selectedLineup?.uuid}\n      onChange={onChange}\n    >\n      <option value=\"\">{t('Select Guide')}</option>\n      {epgLineupOptions.map(({ value, label }, index) => (\n        <option key={index} value={value}>\n          {label}\n        </option>\n      ))}\n    </Select>\n  );\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"input\":\"eoSgn LGEv3\"};","import React, { ReactElement, useCallback, useEffect, useMemo } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport * as providerIdentifiers from 'app/js/utils/constants/providerIdentifiers';\nimport t from 'app/js/utils/t';\nimport createChannelScanActivitySelector from 'app/js/v4/core/serverActivities/selectors/createChannelScanActivitySelector';\nimport createEPGLineupScanActivitySelector from 'app/js/v4/core/serverActivities/selectors/createEPGLineupScanActivitySelector';\nimport { useSourceContext } from 'app/js/v4/core/servers/components/SourceContextProvider';\nimport IconButton from 'app/js/v4/core/ui/buttons/components/IconButton';\nimport Link from 'app/js/v4/core/ui/buttons/components/Link';\nimport Kind from 'app/js/v4/core/ui/types/Kind';\nimport {\n  DVRSetupStep,\n  DVRSetupStepProps,\n} from 'app/js/v4/features/dvrManagement/components/setup/DVRSetupModal';\nimport epgSettingsSlice from 'app/js/v4/features/dvrManagement/epgSettingsSlice';\nimport createChannelMappingsSelector from 'app/js/v4/features/dvrManagement/selectors/createChannelMappingsSelector';\nimport createDeviceChannelsSelector from 'app/js/v4/features/dvrManagement/selectors/createDeviceChannelsSelector';\nimport selectDVRSetup from 'app/js/v4/features/dvrManagement/selectors/selectDVRSetup';\nimport selectEPGSettings from 'app/js/v4/features/dvrManagement/selectors/selectEPGSettings';\nimport selectLineupChannels from 'app/js/v4/features/dvrManagement/selectors/selectLineupChannels';\nimport selectSetupSelectedLineups from 'app/js/v4/features/dvrManagement/selectors/selectSetupSelectedLineups';\nimport getMatchedChannelsPerLineupUUID, {\n  MatchedChannelsPerLineupUUID,\n} from 'app/js/v4/features/dvrManagement/utils/getMatchedChannelsPerLineupUUID';\nimport IconRemove from 'app/glyphs/remove-560.svg';\nimport EPGLineupSelect from './EPGLineupSelect';\nimport styles from './EPGLineups.css';\n\ninterface DeleteButtonProps {\n  lineupGroupUUID: string;\n  isDisabled: boolean;\n  onDeletePress(lineupGroupUUID: string): void;\n}\n\nfunction DeleteButton({\n  lineupGroupUUID,\n  isDisabled,\n  onDeletePress,\n}: DeleteButtonProps): ReactElement {\n  const onPress = useCallback(() => {\n    onDeletePress(lineupGroupUUID);\n  }, [lineupGroupUUID, onDeletePress]);\n\n  return (\n    <IconButton\n      ariaLabel={t('Delete Guide')}\n      className={styles.deleteButton}\n      iconComponent={IconRemove}\n      isDisabled={isDisabled}\n      kind={Kind.Danger}\n      onPress={onPress}\n    />\n  );\n}\n\ninterface EPGLineupsProps {\n  onSetStep: DVRSetupStepProps['onSetStep'];\n}\n\nconst EPGLineups = React.forwardRef<HTMLDivElement, EPGLineupsProps>(\n  ({ onSetStep }, forwardedRef) => {\n    const dispatch = useDispatch();\n    const [server] = useSourceContext();\n    const {\n      selectedLineupGroups,\n      channelMappings: { isPending: isChannelMappingsPending },\n    } = useSelector(selectEPGSettings);\n    const { hasScannedChannels, selectedDevice } = useSelector(selectDVRSetup);\n    const lineupChannels = useSelector(selectLineupChannels);\n    const selectedLineups = useSelector(selectSetupSelectedLineups);\n    const selectChannelMappings = useMemo(\n      () => createChannelMappingsSelector(selectedDevice?.key),\n      [selectedDevice]\n    );\n    const selectChannelScanActivity = useMemo(\n      () => createChannelScanActivitySelector(server),\n      [server]\n    );\n    const selectEPGLineupScanActivity = useMemo(\n      () => createEPGLineupScanActivitySelector(server),\n      [server]\n    );\n    const selectDeviceChannels = useMemo(\n      () => createDeviceChannelsSelector(selectedDevice?.key),\n      [selectedDevice]\n    );\n    const epgLineupScanActivity = useSelector(selectEPGLineupScanActivity);\n    const channelScanActivity = useSelector(selectChannelScanActivity);\n    const { isPending: isDeviceChannelsPending } =\n      useSelector(selectDeviceChannels);\n    const channelMappings = useSelector(selectChannelMappings);\n\n    const matchedChannelsPerLineupUUID: MatchedChannelsPerLineupUUID = useMemo(\n      () =>\n        getMatchedChannelsPerLineupUUID(\n          channelMappings,\n          lineupChannels,\n          selectedLineups\n        ),\n      [channelMappings, lineupChannels, selectedLineups]\n    );\n\n    //\n    // Callbacks\n\n    const onAddLineupPress = useCallback(() => {\n      // PMS currently enforces that all lineups must be from the same provider.\n      // If the user previously added an XMLTV guide, they can only add more\n      // guides from that same provider.\n      const hasXMLTVLineup = selectedLineups?.find(({ uuid }) =>\n        uuid.includes(providerIdentifiers.XMLTV)\n      );\n\n      onSetStep(hasXMLTVLineup ? DVRSetupStep.XMLTV : DVRSetupStep.AddLineup);\n    }, [selectedLineups, onSetStep]);\n\n    const onRemoveLineupGroupPress = useCallback(\n      (lineupGroupUUID: string) => {\n        dispatch(\n          epgSettingsSlice.actions.selectedEPGLineupGroupRemoved({\n            lineupGroupUUID,\n          })\n        );\n      },\n      [dispatch]\n    );\n\n    //\n    // Effects\n\n    useEffect(() => {\n      const lineupGroup = selectedLineupGroups[0];\n\n      if (\n        !hasScannedChannels ||\n        !selectedDevice ||\n        !selectedLineups?.length ||\n        lineupGroup?.activityUUID ||\n        lineupGroup?.isSelectedLineupPopulated\n      ) {\n        return;\n      }\n\n      dispatch(\n        epgSettingsSlice.actions.bestEPGLineupSearchRequested({\n          server,\n          device: selectedDevice,\n          lineupGroup,\n        })\n      );\n    }, [\n      dispatch,\n      selectedDevice,\n      selectedLineups,\n      selectedLineupGroups,\n      hasScannedChannels,\n      server,\n    ]);\n\n    //\n    // Render\n\n    if (epgLineupScanActivity) {\n      return null;\n    }\n\n    return (\n      <div ref={forwardedRef} className={styles.container}>\n        <div className={styles.label}>{t('EPG Location')}</div>\n        <div className={styles.lineups}>\n          {selectedLineupGroups.map((lineupGroup, index) => {\n            const { selectedLineup, uuid } = lineupGroup;\n\n            return (\n              <div key={index} className={styles.lineup}>\n                <div className={styles.lineupSelect}>\n                  <EPGLineupSelect\n                    isDisabled={!!channelScanActivity}\n                    lineupGroup={lineupGroup}\n                  />\n                  {selectedLineupGroups.length > 1 ? (\n                    <DeleteButton\n                      isDisabled={!!channelScanActivity}\n                      lineupGroupUUID={uuid}\n                      onDeletePress={onRemoveLineupGroupPress}\n                    />\n                  ) : null}\n                </div>\n\n                {selectedLineup &&\n                !isChannelMappingsPending &&\n                !isDeviceChannelsPending &&\n                !channelScanActivity\n                  ? t('{count} channels matched', {\n                      count: matchedChannelsPerLineupUUID[selectedLineup.uuid],\n                    })\n                  : null}\n              </div>\n            );\n          })}\n\n          <Link\n            className={styles.addLineup}\n            isDisabled={!!channelScanActivity}\n            onPress={onAddLineupPress}\n          >\n            <span className={styles.addLineupCircle}>+</span>\n            {t('Add channels from another lineup/location')}\n          </Link>\n        </div>\n      </div>\n    );\n  }\n);\n\nexport default EPGLineups;\n","// extracted by mini-css-extract-plugin\nexport default {\"container\":\"GS_OK\",\"label\":\"i2W81\",\"lineups\":\"OC8GP\",\"lineup\":\"oTgk6\",\"lineupSelect\":\"tgiXZ\",\"addLineup\":\"bayl9 IYkbp\",\"disabled\":\"D382y\",\"addLineupCircle\":\"qjwJy\",\"deleteButton\":\"sYiGm o4z1S IYkbp\"};","// extracted by mini-css-extract-plugin\nexport default {\"container\":\"yxl25\",\"modalBody\":\"ZPjVH BSp3D\",\"innerModalBody\":\"zpnDi\",\"scroller\":\"uPD31 GSAom sWZ6m\",\"buttonBar\":\"nbb_j s5Y6S\"};","import React, {\n  ReactElement,\n  useCallback,\n  useEffect,\n  useMemo,\n  useState,\n} from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { scheduleImmediateUpdate } from 'app/js/utils/state/stateUpdateScheduler';\nimport t from 'app/js/utils/t';\nimport createChannelScanActivitySelector from 'app/js/v4/core/serverActivities/selectors/createChannelScanActivitySelector';\nimport createEPGLineupScanActivitySelector from 'app/js/v4/core/serverActivities/selectors/createEPGLineupScanActivitySelector';\nimport { useSourceContext } from 'app/js/v4/core/servers/components/SourceContextProvider';\nimport Button from 'app/js/v4/core/ui/buttons/components/Button';\nimport SpinnerButton from 'app/js/v4/core/ui/buttons/components/SpinnerButton';\nimport useMeasure from 'app/js/v4/core/ui/hooks/useMeasure';\nimport ModalBody from 'app/js/v4/core/ui/modals/components/ModalBody';\nimport ModalFooter from 'app/js/v4/core/ui/modals/components/ModalFooter';\nimport ModalFooterButtonBar from 'app/js/v4/core/ui/modals/components/ModalFooterButtonBar';\nimport { ScrollPosition } from 'app/js/v4/core/ui/scrollers/scrollerTypes';\nimport Spinner from 'app/js/v4/core/ui/spinners/components/Spinner';\nimport Kind from 'app/js/v4/core/ui/types/Kind';\nimport ChannelScanActivity from 'app/js/v4/features/dvrManagement/components/ChannelScanActivity';\nimport ChannelScanPrefs from 'app/js/v4/features/dvrManagement/components/ChannelScanPrefs';\nimport DeviceChannelMappingsForm, {\n  ChannelMappingChangeProps,\n} from 'app/js/v4/features/dvrManagement/components/DeviceChannelMappingsForm';\nimport {\n  DVRSetupStep,\n  DVRSetupStepProps,\n} from 'app/js/v4/features/dvrManagement/components/setup/DVRSetupModal';\nimport { ChannelMappingFormData } from 'app/js/v4/features/dvrManagement/dvrManagementTypes';\nimport dvrSetupSlice from 'app/js/v4/features/dvrManagement/dvrSetupSlice';\nimport epgSettingsSlice from 'app/js/v4/features/dvrManagement/epgSettingsSlice';\nimport createChannelMappingsSelector from 'app/js/v4/features/dvrManagement/selectors/createChannelMappingsSelector';\nimport createDeviceChannelsSelector from 'app/js/v4/features/dvrManagement/selectors/createDeviceChannelsSelector';\nimport selectDVRSetup from 'app/js/v4/features/dvrManagement/selectors/selectDVRSetup';\nimport selectEPGSettings from 'app/js/v4/features/dvrManagement/selectors/selectEPGSettings';\nimport selectSetupSelectedLineups from 'app/js/v4/features/dvrManagement/selectors/selectSetupSelectedLineups';\nimport usePrevious from 'app/js/v4/utils/hooks/usePrevious';\nimport shallowEqual from 'app/js/views/v3/helpers/shallowEqual';\nimport dimensions from 'app/js/views/v3/styles/variables/dimensions';\nimport EPGLineups from './EPGLineups';\nimport styles from './DVRSetupMapping.css';\n\nconst FORM_ID = 'channel-mappings-form';\n\nconst DEVICE_CHANNEL_MAPPING_HEADER_HEIGHT = parseInt(\n  dimensions.dvrSetupChannelMappingItemHeight,\n  10\n);\n\nexport default function DVRSetupMapping({\n  dvrID,\n  onSetStep,\n}: DVRSetupStepProps): ReactElement {\n  const dispatch = useDispatch();\n  const [server] = useSourceContext();\n  const [epgLineupsMeasureRef, { height: epgLineupsHeight }] = useMeasure();\n  const [modalBodyRef, { height: modalBodyHeight }] = useMeasure();\n  const {\n    selectedDevice,\n    selectedDVR: { error: selectedDVRError },\n    scanPrefs,\n    scanNetworks,\n    hasScannedChannels,\n    isSavingDVR,\n  } = useSelector(selectDVRSetup);\n  const {\n    channelMappings: { isPending: isChannelMappingsPending },\n  } = useSelector(selectEPGSettings);\n\n  const selectChannelScanActivity = useMemo(\n    () => createChannelScanActivitySelector(server),\n    [server]\n  );\n  const selectEPGLineupScanActivity = useMemo(\n    () => createEPGLineupScanActivitySelector(server),\n    [server]\n  );\n  const selectDeviceChannels = useMemo(\n    () => createDeviceChannelsSelector(selectedDevice?.key),\n    [selectedDevice]\n  );\n  const selectChannelMappings = useMemo(\n    () => createChannelMappingsSelector(selectedDevice?.key),\n    [selectedDevice]\n  );\n\n  const channelScanActivity = useSelector(selectChannelScanActivity);\n  const epgLineupScanActivity = useSelector(selectEPGLineupScanActivity);\n  const { channels: deviceChannels, isPending: isDeviceChannelsPending } =\n    useSelector(selectDeviceChannels);\n\n  const selectedLineups = useSelector(selectSetupSelectedLineups);\n  const channelMappings = useSelector(selectChannelMappings);\n  const prevIsSavingDVR = usePrevious(isSavingDVR);\n  const prevSelectedLineups = usePrevious(selectedLineups);\n\n  const [scrollPosition, setScrollPosition] = useState<ScrollPosition>({\n    scrollTop: 0,\n    scrollLeft: 0,\n  });\n\n  //\n  // Effects\n\n  useEffect(() => {\n    if (prevIsSavingDVR && !isSavingDVR && !selectedDVRError) {\n      onSetStep(DVRSetupStep.Download);\n    }\n  }, [prevIsSavingDVR, isSavingDVR, selectedDVRError, onSetStep]);\n\n  useEffect(() => {\n    if (selectedDevice && hasScannedChannels) {\n      scheduleImmediateUpdate(() => {\n        dispatch(\n          dvrSetupSlice.actions.deviceChannelsFetchRequested({\n            server,\n            deviceKey: selectedDevice.key,\n          })\n        );\n      });\n    }\n  }, [dispatch, server, selectedDevice, hasScannedChannels]);\n\n  useEffect(() => {\n    if (\n      !selectedDevice ||\n      !selectedLineups ||\n      !selectedLineups?.length ||\n      (prevSelectedLineups &&\n        shallowEqual(prevSelectedLineups, selectedLineups))\n    ) {\n      return;\n    }\n\n    dispatch(\n      epgSettingsSlice.actions.channelMappingsFetchRequested({\n        server,\n        device: selectedDevice,\n        lineups: selectedLineups,\n      })\n    );\n  }, [dispatch, selectedDevice, selectedLineups, prevSelectedLineups, server]);\n\n  //\n  // Callbacks\n\n  const onChannelMappingChange = useCallback(\n    ({ index, ...values }: ChannelMappingChangeProps): void => {\n      dispatch(\n        epgSettingsSlice.actions.channelMappingChanged({\n          index,\n          ...values,\n        })\n      );\n    },\n    [dispatch]\n  );\n\n  const onBackPress = useCallback(() => {\n    onSetStep(DVRSetupStep.Device);\n  }, [onSetStep]);\n\n  const onSubmit = useCallback(\n    (data: ChannelMappingFormData[]): void => {\n      if (!selectedDevice) {\n        return;\n      }\n\n      scheduleImmediateUpdate(() => {\n        if (dvrID) {\n          dispatch(\n            dvrSetupSlice.actions.addDVRDeviceRequested({\n              server,\n              dvrID,\n              deviceKey: selectedDevice.key,\n              channelMappings: data,\n            })\n          );\n        } else {\n          dispatch(\n            dvrSetupSlice.actions.dvrSaveRequested({\n              server,\n              device: selectedDevice,\n              channelMappings: data,\n            })\n          );\n        }\n      });\n    },\n    [dispatch, selectedDevice, dvrID, server]\n  );\n\n  const onScrollPositionChange = useCallback((scrollUpdate: ScrollPosition) => {\n    setScrollPosition(scrollUpdate);\n  }, []);\n\n  //\n  // Render\n\n  return (\n    <>\n      <ModalBody\n        ref={modalBodyRef}\n        className={styles.modalBody}\n        innerClassName={styles.innerModalBody}\n        onScrollPositionChange={onScrollPositionChange}\n      >\n        {!channelScanActivity &&\n        !epgLineupScanActivity &&\n        !isChannelMappingsPending &&\n        deviceChannels.length > 0 ? (\n          <EPGLineups ref={epgLineupsMeasureRef} onSetStep={onSetStep} />\n        ) : null}\n\n        {!channelScanActivity &&\n        !epgLineupScanActivity &&\n        !isDeviceChannelsPending &&\n        !isChannelMappingsPending &&\n        channelMappings.length > 0 &&\n        deviceChannels.length > 0 &&\n        selectedLineups &&\n        selectedLineups.length > 0 ? (\n          <DeviceChannelMappingsForm\n            channelMappings={channelMappings}\n            height={modalBodyHeight}\n            id={FORM_ID}\n            scrollLeft={scrollPosition.scrollLeft}\n            scrollTop={\n              scrollPosition.scrollTop -\n              epgLineupsHeight -\n              DEVICE_CHANNEL_MAPPING_HEADER_HEIGHT * 2\n            }\n            onChannelMappingChange={onChannelMappingChange}\n            onSubmit={onSubmit}\n          />\n        ) : null}\n\n        {!channelScanActivity &&\n        !epgLineupScanActivity &&\n        !isDeviceChannelsPending &&\n        !isChannelMappingsPending &&\n        deviceChannels.length > 0 &&\n        !selectedLineups?.length ? (\n          <div className={styles.container}>\n            {t('Please select a guide to begin mapping your device channels.')}\n          </div>\n        ) : null}\n\n        {!channelScanActivity &&\n        (!!epgLineupScanActivity ||\n          isDeviceChannelsPending ||\n          isChannelMappingsPending) ? (\n          <div className={styles.container}>\n            <Spinner />\n          </div>\n        ) : null}\n\n        {!channelScanActivity && (scanPrefs.length || scanNetworks.length) ? (\n          <ChannelScanPrefs />\n        ) : null}\n\n        {!scanPrefs?.length &&\n        !scanNetworks?.length &&\n        !epgLineupScanActivity &&\n        !isDeviceChannelsPending &&\n        !isChannelMappingsPending ? (\n          <ChannelScanActivity className={styles.container} />\n        ) : null}\n      </ModalBody>\n\n      <ModalFooter>\n        <ModalFooterButtonBar className={styles.buttonBar}>\n          <Button onPress={onBackPress}>{t('Back')}</Button>\n          <SpinnerButton\n            form={FORM_ID}\n            isDisabled={\n              !!channelScanActivity ||\n              isChannelMappingsPending ||\n              channelMappings.length === 0\n            }\n            isSpinning={isSavingDVR}\n            kind={Kind.Primary}\n            type=\"submit\"\n          >\n            {t('Continue')}\n          </SpinnerButton>\n        </ModalFooterButtonBar>\n      </ModalFooter>\n    </>\n  );\n}\n","import React, {\n  ChangeEvent,\n  ReactElement,\n  useCallback,\n  useEffect,\n  useMemo,\n} from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport t from 'app/js/utils/t';\nimport FormLabel from 'app/js/v4/core/ui/forms/components/FormLabel';\nimport Select from 'app/js/v4/core/ui/forms/components/Select';\nimport epgSettingsSlice from 'app/js/v4/features/dvrManagement/epgSettingsSlice';\nimport selectEPGSettings from 'app/js/v4/features/dvrManagement/selectors/selectEPGSettings';\n\ninterface LanguageOption {\n  value: string;\n  label: string;\n}\n\nexport default function DVRSetupLanguageSelect(): ReactElement {\n  const dispatch = useDispatch();\n  const {\n    selectedCountry,\n    selectedLanguage,\n    languages: { epgLanguages, isPending, isPopulated, error },\n  } = useSelector(selectEPGSettings);\n  const selectedLanguageCode = selectedLanguage?.code ?? '';\n\n  const languageOptions = useMemo(\n    () =>\n      epgLanguages.map<LanguageOption>((language) => ({\n        value: language.code,\n        label: language.title,\n      })),\n    [epgLanguages]\n  );\n\n  //\n  // Callbacks\n\n  const onLanguageSelect = useCallback(\n    (event: ChangeEvent<HTMLSelectElement>) => {\n      dispatch(\n        epgSettingsSlice.actions.epgLanguageSelected({\n          languageCode: event.currentTarget.value,\n        })\n      );\n    },\n    [dispatch]\n  );\n\n  //\n  // Effects\n\n  useEffect(() => {\n    if (isPopulated && selectedCountry && !selectedLanguage) {\n      dispatch(\n        epgSettingsSlice.actions.epgLanguageSelected({\n          languageCode: selectedCountry.language,\n        })\n      );\n    }\n  }, [dispatch, isPopulated, selectedCountry, selectedLanguage]);\n\n  //\n  // Render\n\n  return (\n    <>\n      <FormLabel>{t('Language')}</FormLabel>\n\n      {isPending ? t('Loading languages...') : null}\n      {error ? t(\"We couldn't fetch languages at this moment.\") : null}\n      {isPopulated ? (\n        <Select\n          name=\"languageSelect\"\n          value={selectedLanguageCode}\n          onChange={onLanguageSelect}\n        >\n          <option value=\"\">{t('Select Language')}</option>\n          {languageOptions.map(({ value, label }, index) => (\n            <option key={index} value={value}>\n              {label}\n            </option>\n          ))}\n        </Select>\n      ) : null}\n    </>\n  );\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"innerModalBody\":\"BrdxX KNNpd\",\"form\":\"AWXgS\",\"title\":\"LoBsb\",\"buttonBar\":\"egZQ2 s5Y6S\"};","import React, { ReactElement, useCallback, useEffect, useState } from 'react';\nimport { useForm } from 'react-hook-form';\nimport { useDispatch, useSelector } from 'react-redux';\nimport * as providerIdentifiers from 'app/js/utils/constants/providerIdentifiers';\nimport { scheduleImmediateUpdate } from 'app/js/utils/state/stateUpdateScheduler';\nimport t from 'app/js/utils/t';\nimport { useSourceContext } from 'app/js/v4/core/servers/components/SourceContextProvider';\nimport { ServerPlatform } from 'app/js/v4/core/servers/serversTypes';\nimport Button from 'app/js/v4/core/ui/buttons/components/Button';\nimport Link from 'app/js/v4/core/ui/buttons/components/Link';\nimport SpinnerButton from 'app/js/v4/core/ui/buttons/components/SpinnerButton';\nimport FormLabel from 'app/js/v4/core/ui/forms/components/FormLabel';\nimport TextInput from 'app/js/v4/core/ui/forms/components/TextInput';\nimport ModalBody from 'app/js/v4/core/ui/modals/components/ModalBody';\nimport ModalFooter from 'app/js/v4/core/ui/modals/components/ModalFooter';\nimport ModalFooterButtonBar from 'app/js/v4/core/ui/modals/components/ModalFooterButtonBar';\nimport Kind from 'app/js/v4/core/ui/types/Kind';\nimport {\n  DVRSetupStep,\n  DVRSetupStepProps,\n} from 'app/js/v4/features/dvrManagement/components/setup/DVRSetupModal';\nimport dvrSetupSlice from 'app/js/v4/features/dvrManagement/dvrSetupSlice';\nimport epgSettingsSlice from 'app/js/v4/features/dvrManagement/epgSettingsSlice';\nimport selectDVRSetup from 'app/js/v4/features/dvrManagement/selectors/selectDVRSetup';\nimport selectEPGSettings from 'app/js/v4/features/dvrManagement/selectors/selectEPGSettings';\nimport selectSelectedDVRLineups from 'app/js/v4/features/dvrManagement/selectors/selectSelectedDVRLineups';\nimport selectSetupSelectedLineups from 'app/js/v4/features/dvrManagement/selectors/selectSetupSelectedLineups';\nimport FormGroup from 'app/js/views/v3/components/core/forms/FormGroup';\nimport DVRSetupLanguageSelect from './DVRSetupLanguageSelect';\nimport styles from './DVRSetupUseXMLTV.css';\n\ninterface FormData {\n  xmltvPath: string;\n  programGuideTitle: string;\n}\n\nexport default function DVRSetupUseXMLTV({\n  onSetStep,\n}: DVRSetupStepProps): ReactElement {\n  const dispatch = useDispatch();\n  const [server] = useSourceContext();\n  const { selectedDevice } = useSelector(selectDVRSetup);\n  const {\n    selectedLineupGroups,\n    languages: { isPopulated: isLanguagesPopulated },\n    channelMappings: {\n      isPending: isChannelMappingsPending,\n      error: channelMappingsError,\n    },\n    selectedLanguage,\n  } = useSelector(selectEPGSettings);\n  const selectedSetupLineups = useSelector(selectSetupSelectedLineups);\n  const selectedDVRLineups = useSelector(selectSelectedDVRLineups);\n  const [isAddingLineup, setIsAddingLineup] = useState(false);\n  const canSwitchLineupProvider =\n    !selectedDVRLineups?.length && !selectedSetupLineups?.length;\n  const canUseXMLTV =\n    !selectedDVRLineups ||\n    selectedDVRLineups?.find(({ uuid }): boolean =>\n      uuid.includes(providerIdentifiers.XMLTV)\n    );\n  const hasLanguage = !!selectedLanguage;\n\n  const isEverySelectedLineupChannelMappingsFetched =\n    selectedLineupGroups.every(\n      (selectedLineupGroup) => selectedLineupGroup.isChannelMappingsFetched\n    );\n\n  const { register, errors, handleSubmit } = useForm<FormData>({\n    defaultValues: {\n      programGuideTitle: t('My Guide'),\n    },\n  });\n\n  //\n  // Callbacks\n\n  const onBackPress = useCallback(() => {\n    onSetStep(\n      selectedLineupGroups.length > 0\n        ? DVRSetupStep.Mapping\n        : DVRSetupStep.Device\n    );\n  }, [selectedLineupGroups.length, onSetStep]);\n\n  const onContinuePress = handleSubmit(\n    ({ xmltvPath, programGuideTitle }: FormData) => {\n      dispatch(dvrSetupSlice.actions.setupErrorMessageRemoved());\n\n      dispatch(\n        epgSettingsSlice.actions.xmltvSelectedEPGLineupGroupAdded({\n          path: xmltvPath,\n          title: programGuideTitle,\n        })\n      );\n    }\n  );\n\n  const onUseLocationPress = useCallback(() => {\n    onSetStep(DVRSetupStep.AddLineup);\n  }, [onSetStep]);\n\n  //\n  // Effects\n\n  useEffect(() => {\n    setIsAddingLineup(isChannelMappingsPending);\n  }, [isChannelMappingsPending, setIsAddingLineup]);\n\n  useEffect(() => {\n    if (\n      isAddingLineup &&\n      channelMappingsError &&\n      selectedLineupGroups.length > 0\n    ) {\n      // When channel mappings fail, remove the synthetic lineup group added\n      // when this form was submitted. Doing so prevents populating the lineup\n      // group list with faulty items.\n      const latestLineupGroup =\n        selectedLineupGroups[selectedLineupGroups.length - 1];\n\n      scheduleImmediateUpdate(() => {\n        dispatch(\n          epgSettingsSlice.actions.selectedEPGLineupGroupRemoved({\n            lineupGroupUUID: latestLineupGroup.uuid,\n          })\n        );\n      });\n    }\n  }, [\n    dispatch,\n    channelMappingsError,\n    selectedLineupGroups,\n    isAddingLineup,\n    setIsAddingLineup,\n  ]);\n\n  useEffect(() => {\n    if (\n      selectedDevice &&\n      selectedSetupLineups &&\n      !isAddingLineup &&\n      !isEverySelectedLineupChannelMappingsFetched\n    ) {\n      dispatch(\n        epgSettingsSlice.actions.channelMappingsFetchRequested({\n          server,\n          device: selectedDevice,\n          lineups: selectedSetupLineups,\n        })\n      );\n    }\n  }, [\n    dispatch,\n    selectedDevice,\n    selectedSetupLineups,\n    isAddingLineup,\n    isEverySelectedLineupChannelMappingsFetched,\n    server,\n  ]);\n\n  useEffect(() => {\n    if (!isLanguagesPopulated) {\n      dispatch(\n        epgSettingsSlice.actions.epgLanguagesFetchRequested({\n          server,\n        })\n      );\n    }\n  }, [dispatch, server, isLanguagesPopulated]);\n\n  useEffect(() => {\n    if (!isChannelMappingsPending && !channelMappingsError && isAddingLineup) {\n      onSetStep(DVRSetupStep.Mapping);\n    }\n  }, [\n    channelMappingsError,\n    isChannelMappingsPending,\n    isAddingLineup,\n    onSetStep,\n  ]);\n\n  useEffect(() => {\n    if (!selectedDevice) {\n      onSetStep(DVRSetupStep.Device);\n    }\n  }, [selectedDevice, onSetStep]);\n\n  //\n  // Render\n\n  const xmltvPathPlaceholder =\n    server.platform === ServerPlatform.Windows\n      ? 'C:\\\\path\\\\to\\\\your\\\\xmltv_file.xml'\n      : '/path/to/your/xmltv_file.xml';\n\n  return (\n    <>\n      <ModalBody innerClassName={styles.innerModalBody}>\n        {canUseXMLTV ? (\n          <div className={styles.form}>\n            <p className={styles.title}>{t('Use an XMLTV guide')}</p>\n            <p>\n              {!canSwitchLineupProvider\n                ? t(\n                    'Please specify a location to an XMLTV service to provide your guide data.'\n                  )\n                : t(\n                    \"If you are located somewhere that isn't covered by Plex DVR guide data, you can specify a location to an XMLTV service to provide your guide data.\"\n                  )}\n            </p>\n\n            <FormGroup>\n              <DVRSetupLanguageSelect />\n            </FormGroup>\n\n            <FormGroup>\n              <FormLabel name=\"xmltvPath\">{t('XMLTV Guide')}</FormLabel>\n              <TextInput\n                ref={register({ required: true })}\n                hasError={!!errors.xmltvPath}\n                name=\"xmltvPath\"\n                placeholder={xmltvPathPlaceholder}\n              />\n            </FormGroup>\n\n            <FormGroup>\n              <FormLabel name=\"programGuideTitle\">{t('Guide Title')}</FormLabel>\n              <TextInput\n                ref={register({ required: true })}\n                hasError={!!errors.programGuideTitle}\n                name=\"programGuideTitle\"\n              />\n            </FormGroup>\n          </div>\n        ) : (\n          <div className={styles.form}>\n            <p className={styles.title}>{t('Unsupported location')}</p>\n            <p>\n              {t(\n                \"This location isn't covered by Plex DVR guide data. Because you already set up a tuner using Plex DVR guide data, we are unable to offer the option to use a XMLTV guide. Please select a different location.\"\n              )}\n            </p>\n          </div>\n        )}\n\n        {canSwitchLineupProvider ? (\n          <Link kind={Kind.Primary} onPress={onUseLocationPress}>\n            {t(\"Don't use XMLTV? Click here to select your location instead.\")}\n          </Link>\n        ) : null}\n      </ModalBody>\n\n      <ModalFooter>\n        <ModalFooterButtonBar className={styles.buttonBar}>\n          <Button onPress={onBackPress}>{t('Back')}</Button>\n          <SpinnerButton\n            isDisabled={!canUseXMLTV || !hasLanguage}\n            isSpinning={isChannelMappingsPending}\n            kind={Kind.Primary}\n            onPress={onContinuePress}\n          >\n            {t('Continue')}\n          </SpinnerButton>\n        </ModalFooterButtonBar>\n      </ModalFooter>\n    </>\n  );\n}\n","import React, {\n  FunctionComponent,\n  ReactElement,\n  useCallback,\n  useEffect,\n  useState,\n} from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport * as metricsPages from 'app/js/utils/constants/metrics/metricsPages';\nimport t from 'app/js/utils/t';\nimport SourceContextProvider from 'app/js/v4/core/servers/components/SourceContextProvider';\nimport FormSectionError from 'app/js/v4/core/ui/forms/components/FormSectionError';\nimport MetricsContextProvider from 'app/js/v4/core/ui/metrics/components/MetricsContextProvider';\nimport Modal from 'app/js/v4/core/ui/modals/components/Modal';\nimport ModalContent from 'app/js/v4/core/ui/modals/components/ModalContent';\nimport ModalHeader from 'app/js/v4/core/ui/modals/components/ModalHeader';\nimport DVRSetupAddLineup from 'app/js/v4/features/dvrManagement/components/setup/addLineup/DVRSetupAddLineup';\nimport DVRSetupDeviceList from 'app/js/v4/features/dvrManagement/components/setup/device/DVRSetupDeviceList';\nimport DVRSetupDownload from 'app/js/v4/features/dvrManagement/components/setup/download/DVRSetupDownload';\nimport DVRSetupInfo from 'app/js/v4/features/dvrManagement/components/setup/info/DVRSetupInfo';\nimport DVRSetupMapping from 'app/js/v4/features/dvrManagement/components/setup/mapping/DVRSetupMapping';\nimport DVRSetupUseXMLTV from 'app/js/v4/features/dvrManagement/components/setup/xmltv/DVRSetupUseXMLTV';\nimport { DVR } from 'app/js/v4/features/dvrManagement/dvrManagementTypes';\nimport dvrSetupSlice from 'app/js/v4/features/dvrManagement/dvrSetupSlice';\nimport selectDVRSetup from 'app/js/v4/features/dvrManagement/selectors/selectDVRSetup';\nimport usePrevious from 'app/js/views/v3/helpers/hooks/usePrevious';\nimport styles from './DVRSetupModal.css';\n\ninterface DVRSetupModalProps {\n  machineIdentifier: string;\n  providerIdentifier: string;\n  dvrID?: DVR['key'];\n  metricsContext: string;\n  isOpen: boolean;\n  onModalClose(): void;\n}\n\nexport enum DVRSetupStep {\n  Device = 'device',\n  XMLTV = 'xmltv',\n  Info = 'info',\n  Mapping = 'mapping',\n  Download = 'download',\n  AddLineup = 'addLineup',\n}\n\nexport interface DVRSetupStepProps {\n  dvrID?: DVR['key'];\n  onModalClose(): void;\n  onSetStep(step: DVRSetupStep): void;\n}\n\nfunction getDVRSetupStepComponent(\n  step: DVRSetupStep\n): FunctionComponent<DVRSetupStepProps> {\n  switch (step) {\n    case DVRSetupStep.Device:\n      return DVRSetupDeviceList;\n    case DVRSetupStep.XMLTV:\n      return DVRSetupUseXMLTV;\n    case DVRSetupStep.Info:\n      return DVRSetupInfo;\n    case DVRSetupStep.Mapping:\n      return DVRSetupMapping;\n    case DVRSetupStep.Download:\n      return DVRSetupDownload;\n    case DVRSetupStep.AddLineup:\n      return DVRSetupAddLineup;\n    default:\n      throw new Error('Unmatched DVR setup modal step: ' + step);\n  }\n}\n\nexport default function DVRSetupModal({\n  machineIdentifier,\n  providerIdentifier,\n  dvrID,\n  metricsContext: metricsContextName,\n  isOpen,\n  onModalClose,\n}: DVRSetupModalProps): ReactElement {\n  const [step, setStep] = useState(DVRSetupStep.Device);\n  const dispatch = useDispatch();\n  const prevIsOpen = usePrevious(isOpen);\n  const {\n    selectedDVR: { dvr },\n    setupErrorMessage,\n  } = useSelector(selectDVRSetup);\n\n  //\n  // Callbacks\n\n  const onSetStep = useCallback(\n    (nextStep: DVRSetupStep) => {\n      dispatch(dvrSetupSlice.actions.setupErrorMessageRemoved());\n      setStep(nextStep);\n    },\n    [dispatch, setStep]\n  );\n\n  const onClose = useCallback(() => {\n    dispatch(dvrSetupSlice.actions.setupReset());\n    onModalClose();\n  }, [dispatch, onModalClose]);\n\n  //\n  // Effects\n\n  useEffect(() => {\n    if (prevIsOpen && !isOpen) {\n      setStep(DVRSetupStep.Device);\n    }\n  }, [setStep, isOpen, prevIsOpen]);\n\n  //\n  // Render\n\n  const DVRSetupStepComponent = getDVRSetupStepComponent(step);\n\n  return (\n    <MetricsContextProvider\n      metricsPage={metricsPages.DVR_SETUP}\n      name={metricsContextName}\n    >\n      <SourceContextProvider\n        machineIdentifier={machineIdentifier}\n        providerIdentifier={dvr?.epgIdentifier ?? providerIdentifier}\n      >\n        <Modal\n          className={styles.modal}\n          isOpen={isOpen}\n          shouldTrackOnClose={true}\n          onModalClose={onClose}\n        >\n          <ModalContent onModalClose={onClose}>\n            <ModalHeader>\n              {step === DVRSetupStep.Download\n                ? t('Setup complete')\n                : t('Tuner Setup')}\n            </ModalHeader>\n\n            {setupErrorMessage ? (\n              <FormSectionError errorMessage={setupErrorMessage} />\n            ) : null}\n\n            <DVRSetupStepComponent\n              dvrID={dvrID}\n              onModalClose={onClose}\n              onSetStep={onSetStep}\n            />\n          </ModalContent>\n        </Modal>\n      </SourceContextProvider>\n    </MetricsContextProvider>\n  );\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"modal\":\"kC1Bm H6pvS vgxAm\"};","import { DVRSettingsUI } from 'app/js/v4/features/dvrManagement/dvrManagementTypes';\nimport { LegacyRootState } from 'app/js/v4/root/rootTypes';\n\nconst selectLegacyDVRSettingsUI = (appState: LegacyRootState): DVRSettingsUI =>\n  appState.ui.dvrSettingsUI;\n\nexport default selectLegacyDVRSettingsUI;\n","import { createSelector, Selector } from 'reselect';\nimport { MediaGrabberDevice } from 'app/js/v4/features/dvrManagement/dvrManagementTypes';\nimport { LegacyRootState } from 'app/js/v4/root/rootTypes';\nimport selectDVRManagement from './selectDVRManagement';\n\nconst selectSelectedDVRDevices: Selector<\n  LegacyRootState,\n  MediaGrabberDevice[]\n> = createSelector(\n  selectDVRManagement,\n  (dvrManagement) => dvrManagement.dvrSetup.selectedDVR.dvr?.Device ?? []\n);\n\nexport default selectSelectedDVRDevices;\n","import { createSelector, Selector } from 'reselect';\nimport { LiveTVState } from 'app/js/v4/features/livetv/liveTVTypes';\nimport selectFeatures from 'app/js/v4/features/selectFeatures';\nimport { LegacyRootState } from 'app/js/v4/root/rootTypes';\n\nconst selectLiveTV: Selector<LegacyRootState, LiveTVState> = createSelector(\n  selectFeatures,\n  (features) => features.livetv\n);\n\nexport default selectLiveTV;\n","import { createSelector, Selector } from 'reselect';\nimport { GuideChannel } from 'app/js/v4/features/livetv/liveTVTypes';\nimport { LegacyRootState } from 'app/js/v4/root/rootTypes';\nimport selectLiveTV from './selectLiveTV';\n\nconst selectLiveTVChannels: Selector<LegacyRootState, GuideChannel[]> =\n  createSelector(selectLiveTV, (livetv) => {\n    const { guideChannels } = livetv;\n\n    const usesGridKey = !!guideChannels.channels?.[0]?.gridKey;\n    const usesVcn = !!guideChannels.channels?.[0]?.vcn;\n\n    return guideChannels.channels.reduce<GuideChannel[]>(\n      (acc, guideChannel) => {\n        const existingChannelIndex = acc.findIndex(({ gridKey, id, vcn }) => {\n          if (usesGridKey) {\n            return gridKey === guideChannel.gridKey;\n          } else if (usesVcn) {\n            return vcn === guideChannel.vcn;\n          } else {\n            return id === guideChannel.id;\n          }\n        });\n\n        if (existingChannelIndex === -1) {\n          acc.push(guideChannel);\n        } else if (!acc[existingChannelIndex].isHd && guideChannel.isHd) {\n          acc[existingChannelIndex] = guideChannel;\n        }\n\n        return acc;\n      },\n      []\n    );\n  });\n\nexport default selectLiveTVChannels;\n","import { createSelector, Selector } from 'reselect';\nimport { ChannelMapping } from 'app/js/v4/features/dvrManagement/dvrManagementTypes';\nimport selectSelectedDVRDevices from 'app/js/v4/features/dvrManagement/selectors/selectSelectedDVRDevices';\nimport { GuideChannel } from 'app/js/v4/features/livetv/liveTVTypes';\nimport selectLiveTVChannels from 'app/js/v4/features/livetv/selectors/selectLiveTVChannels';\nimport { LegacyRootState } from 'app/js/v4/root/rootTypes';\n\nconst selectMappedLiveTVChannels: Selector<LegacyRootState, GuideChannel[]> =\n  createSelector(\n    selectLiveTVChannels,\n    selectSelectedDVRDevices,\n    (channels, devices) => {\n      const channelMappings = devices.reduce<ChannelMapping[]>(\n        (acc, device) => {\n          if (device.ChannelMapping) {\n            acc.push(...device.ChannelMapping);\n          }\n\n          return acc;\n        },\n        []\n      );\n\n      return channels.filter((channel) =>\n        channelMappings.find(\n          (mapping) =>\n            mapping.enabled && mapping.lineupIdentifier === channel.vcn\n        )\n      );\n    }\n  );\n\nexport default selectMappedLiveTVChannels;\n","import { createSelector, Selector } from 'reselect';\nimport * as activityTypes from 'app/js/utils/server/activityTypes';\nimport { Provider } from 'app/js/v4/core/providers/providersTypes';\nimport createServerActivitiesSelector from 'app/js/v4/core/serverActivities/selectors/createServerActivitiesSelector';\nimport { ServerActivity } from 'app/js/v4/core/serverActivities/serverActivitiesTypes';\nimport { Server } from 'app/js/v4/core/servers/serversTypes';\nimport { LegacyRootState } from 'app/js/v4/root/rootTypes';\n\nfunction createEPGLoadActivitySelector(\n  server: Server,\n  provider: Provider\n): Selector<LegacyRootState, ServerActivity | undefined> {\n  return createSelector(\n    createServerActivitiesSelector(server),\n    (activities) => {\n      return activities.find((activity) => {\n        return (\n          activity.type === activityTypes.PROVIDER_EPG_LOAD &&\n          activity.Context.identifier === provider.identifier\n        );\n      });\n    }\n  );\n}\n\nexport default createEPGLoadActivitySelector;\n","import classNames from 'classnames';\nimport React, { memo, ReactElement, useMemo } from 'react';\nimport { useSelector } from 'react-redux';\nimport t from 'app/js/utils/t';\nimport { useSourceContext } from 'app/js/v4/core/servers/components/SourceContextProvider';\nimport useTranscodeImage from 'app/js/v4/core/servers/hooks/useTranscodeImage';\nimport CrossFadeImage, {\n  ImageFit,\n} from 'app/js/v4/core/ui/images/CrossFadeImage';\nimport useVirtualCell from 'app/js/v4/core/ui/lists/hooks/useVirtualCell';\nimport { VirtualCellProps } from 'app/js/v4/core/ui/lists/listsTypes';\nimport createDeviceIndicesMatchingGuideChannelSelector from 'app/js/v4/features/dvrManagement/selectors/createDeviceIndicesMatchingGuideChannelSelector';\nimport { GuideChannel } from 'app/js/v4/features/livetv/liveTVTypes';\nimport Badge from 'app/js/views/v3/components/core/base/Badge';\nimport colors from 'app/js/views/v3/styles/variables/colors';\nimport dimensions from 'app/js/views/v3/styles/variables/dimensions';\nimport styles from './LiveTVSettingsChannel.css';\n\nconst THUMB_WIDTH = parseInt(dimensions.liveTVSettingsChannelThumbWidth, 10);\nconst THUMB_HEIGHT = parseInt(dimensions.liveTVSettingsChannelThumbHeight, 10);\n\nconst tunerColors = [\n  colors.liveTVSettingsTuner1Color,\n  colors.liveTVSettingsTuner2Color,\n  colors.liveTVSettingsTuner3Color,\n  colors.liveTVSettingsTuner4Color,\n  colors.liveTVSettingsTuner5Color,\n];\n\nexport type LiveTVSettingsChannelProps = VirtualCellProps<GuideChannel>;\n\nfunction LiveTVSettingsChannel({\n  item: guideChannel,\n  ...virtualCellProps\n}: LiveTVSettingsChannelProps): ReactElement | null {\n  const [server, provider] = useSourceContext();\n  const cell = useVirtualCell(virtualCellProps);\n\n  const selectDeviceIndices = useMemo(\n    () => createDeviceIndicesMatchingGuideChannelSelector(guideChannel?.vcn),\n    [guideChannel]\n  );\n\n  const deviceIndices = useSelector(selectDeviceIndices);\n\n  const imageSrc = useTranscodeImage({\n    server,\n    provider,\n    width: THUMB_WIDTH,\n    height: THUMB_WIDTH,\n    url: guideChannel?.thumb,\n  });\n\n  // Channel that have no mappings should not be shown.\n  if (!guideChannel || deviceIndices.length === 0) {\n    return null;\n  }\n\n  const { callSign, thumb, vcn, isHd } = guideChannel;\n\n  return (\n    <div ref={cell.cellRef} className={styles.container} style={cell.style}>\n      <div className={styles.channelSourceContainer}>\n        {deviceIndices.map((index) => {\n          const moduloIndex = (tunerColors.length + index) % tunerColors.length;\n\n          return (\n            <div\n              key={index}\n              className={styles.channelSource}\n              style={{ backgroundColor: tunerColors[moduloIndex] }}\n            />\n          );\n        })}\n      </div>\n      {thumb ? (\n        <CrossFadeImage\n          // Key the image to allow the grid row to reuse all other row title\n          // DOM while requiring a fresh image. This prevents a stale image\n          // from disabling until the next thumb loads.\n          key={thumb}\n          className={styles.thumb}\n          fit={ImageFit.Contain}\n          height={THUMB_HEIGHT}\n          src={imageSrc}\n          width={THUMB_WIDTH}\n        />\n      ) : null}\n      <div className={classNames(styles.vcn, !thumb && styles.vcnGap)}>\n        {vcn}\n      </div>\n      <div className={styles.title}>{callSign}</div>\n      {isHd ? <Badge className={styles.hdBadge}>{t('HD')}</Badge> : null}\n    </div>\n  );\n}\n\nexport default memo(LiveTVSettingsChannel);\n","import { createSelector, OutputSelector } from 'reselect';\nimport { MediaGrabberDevice } from 'app/js/v4/features/dvrManagement/dvrManagementTypes';\nimport selectSelectedDVRDevices from 'app/js/v4/features/dvrManagement/selectors/selectSelectedDVRDevices';\nimport { GuideChannel } from 'app/js/v4/features/livetv/liveTVTypes';\nimport { LegacyRootState } from 'app/js/v4/root/rootTypes';\n\nfunction createDeviceIndicesMatchingGuideChannelSelector(\n  vcn?: GuideChannel['vcn']\n): OutputSelector<\n  LegacyRootState,\n  number[],\n  (devices: MediaGrabberDevice[]) => number[]\n> {\n  return createSelector(selectSelectedDVRDevices, (devices) => {\n    if (!vcn) {\n      return [];\n    }\n\n    return devices.reduce<number[]>((acc, device, index) => {\n      const { ChannelMapping } = device;\n\n      if (\n        ChannelMapping?.find(\n          (mapping) => mapping.enabled && mapping.lineupIdentifier === vcn\n        )\n      ) {\n        acc.push(index);\n      }\n\n      return acc;\n    }, []);\n  });\n}\n\nexport default createDeviceIndicesMatchingGuideChannelSelector;\n","// extracted by mini-css-extract-plugin\nexport default {\"container\":\"dFR2G\",\"hdBadge\":\"R3rB5\",\"thumb\":\"SGlr8\",\"vcn\":\"EeY0b\",\"vcnGap\":\"sjFgh\",\"title\":\"PlpEA\",\"channelSourceContainer\":\"iBg_B\",\"channelSource\":\"NHP8Q\"};","// extracted by mini-css-extract-plugin\nexport default {\"container\":\"MOjq6\",\"emptyContainer\":\"PdoSn\",\"emptyMessage\":\"gjgOl\",\"scroller\":\"r392a GSAom sWZ6m\"};","import React, { ReactElement, useEffect, useMemo } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport t from 'app/js/utils/t';\nimport createEPGLoadActivitySelector from 'app/js/v4/core/serverActivities/selectors/createEPGLoadActivitySelector';\nimport { useSourceContext } from 'app/js/v4/core/servers/components/SourceContextProvider';\nimport { VirtualCellFactory } from 'app/js/v4/core/ui/lists/listsTypes';\nimport createVerticalLayout from 'app/js/v4/core/ui/lists/utils/createVerticalLayout';\nimport VirtualListScroller from 'app/js/v4/core/ui/scrollers/components/VirtualListScroller';\nimport Spinner from 'app/js/v4/core/ui/spinners/components/Spinner';\nimport selectEPGSettings from 'app/js/v4/features/dvrManagement/selectors/selectEPGSettings';\nimport liveTVSlice from 'app/js/v4/features/livetv/liveTVSlice';\nimport { GuideChannel } from 'app/js/v4/features/livetv/liveTVTypes';\nimport selectLiveTV from 'app/js/v4/features/livetv/selectors/selectLiveTV';\nimport selectMappedLiveTVChannels from 'app/js/v4/features/livetv/selectors/selectMappedLiveTVChannels';\nimport dimensions from 'app/js/views/v3/styles/variables/dimensions';\nimport LiveTVSettingsChannel from './LiveTVSettingsChannel';\nimport styles from './LiveTVSettingsChannelList.css';\n\nexport default function LiveTVSettingsChannelList(): ReactElement {\n  const dispatch = useDispatch();\n  const [server, provider] = useSourceContext();\n  const selectEPGLoadActivity = useMemo(\n    () => createEPGLoadActivitySelector(server, provider),\n    [provider, server]\n  );\n  const {\n    guideChannels: { isPending },\n  } = useSelector(selectLiveTV);\n  const {\n    lineupChannels: { error: lineupChannelsError },\n  } = useSelector(selectEPGSettings);\n\n  const channels = useSelector(selectMappedLiveTVChannels);\n  const isRefreshing = !!useSelector(selectEPGLoadActivity);\n\n  //\n  // Effects\n\n  useEffect(() => {\n    if (!isRefreshing) {\n      dispatch(\n        liveTVSlice.actions.guideChannelsFetchRequested({ server, provider })\n      );\n    }\n  }, [dispatch, server, provider, isRefreshing]);\n\n  //\n  // Render\n\n  const layout = useMemo(() => {\n    return createVerticalLayout({\n      rowHeight: parseInt(dimensions.liveTVSettingsChannelItemHeight, 10),\n      innerVerticalPadding: 2,\n      overscan: 1,\n    });\n  }, []);\n\n  const cellComponentFactory: VirtualCellFactory<GuideChannel> = useMemo(() => {\n    return (cellProps) => {\n      // `cellProps` will never have a null item, but VirtualCellFactory\n      // anticipates being used with a paginated list which this is not. Type\n      // narrow the item so that typescript is happy with out having to adjust\n      // the types for VirtualCellFactory\n      if (!cellProps.item) {\n        return <></>;\n      }\n\n      return <LiveTVSettingsChannel {...cellProps} />;\n    };\n  }, []);\n\n  const showSpinner = isRefreshing || isPending;\n\n  return (\n    <div className={styles.container}>\n      {showSpinner ? (\n        <div className={styles.emptyContainer}>\n          <Spinner />\n          {isRefreshing ? (\n            <>\n              <div className={styles.emptyMessage}>\n                {t(\"We're now building your Guide\")}\n              </div>\n              <div className={styles.emptyMessage}>\n                {t(\"Hang tight while we download all the data for what's on\")}\n              </div>\n            </>\n          ) : null}\n        </div>\n      ) : null}\n\n      {!showSpinner && channels.length > 0 ? (\n        <VirtualListScroller\n          cellComponentFactory={cellComponentFactory}\n          className={styles.scroller}\n          items={channels}\n          layout={layout}\n          totalSize={channels.length}\n        />\n      ) : null}\n\n      {!showSpinner && channels.length === 0 ? (\n        <div className={styles.emptyContainer}>\n          <div className={styles.emptyMessage}>{t('Your Guide is empty')}</div>\n          <div className={styles.emptyMessage}>\n            {lineupChannelsError\n              ? t(\n                  'No channels were found. Delete the DVR and recreate it with a new lineup.'\n                )\n              : t('Please verify your channel mappings and refresh the Guide')}\n          </div>\n        </div>\n      ) : null}\n    </div>\n  );\n}\n","import { useCallback } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { PayloadAction } from '@reduxjs/toolkit';\nimport { redispatchLegacyServerAction } from 'app/js/stores/actions/serverActions';\nimport { Provider } from 'app/js/v4/core/providers/providersTypes';\nimport { Server } from 'app/js/v4/core/servers/serversTypes';\n\nexport interface LegacyActionOptions {\n  server: Server;\n  provider: Provider;\n}\n\nexport function useRedispatchLegacyServerAction({\n  server,\n  provider,\n}: LegacyActionOptions): (options: PayloadAction) => unknown {\n  const dispatch = useDispatch();\n\n  return useCallback(\n    (legacyAction: PayloadAction) => {\n      dispatch(\n        redispatchLegacyServerAction({\n          server,\n          provider,\n          legacyAction,\n        })\n      );\n    },\n    [dispatch, provider, server]\n  );\n}\n","import React, { ChangeEvent, ReactElement, useCallback, useState } from 'react';\nimport { resolve } from 'app/js/adapters/adapters';\nimport * as metricsActions from 'app/js/utils/constants/metrics/metricsActions';\nimport t from 'app/js/utils/t';\nimport Button from 'app/js/views/v3/components/core/buttons/Button';\nimport SpinnerButton from 'app/js/views/v3/components/core/buttons/SpinnerButton';\nimport MetricsClickTracker from 'app/js/views/v3/components/core/metrics/MetricsClickTracker';\nimport Modal from 'app/js/views/v3/components/core/modals/Modal';\nimport ModalBody from 'app/js/views/v3/components/core/modals/ModalBody';\nimport ModalContent from 'app/js/views/v3/components/core/modals/ModalContent';\nimport ModalFooter from 'app/js/views/v3/components/core/modals/ModalFooter';\nimport ModalFooterButtonBar from 'app/js/views/v3/components/core/modals/ModalFooterButtonBar';\nimport ModalHeader from 'app/js/views/v3/components/core/modals/ModalHeader';\nimport * as kinds from 'app/js/views/v3/helpers/props/kinds';\nimport * as sizes from 'app/js/views/v3/helpers/props/sizes';\nimport styles from './ConfirmModal.css';\n\ninterface ConfirmModalProps {\n  className?: string;\n  containerClassName?: string;\n  isCancelButtonDisabled?: boolean;\n  isConfirmButtonSpinning?: boolean;\n  isOpen: boolean;\n  metricsPage: string;\n  metricsProperties?: any;\n  kind?: typeof kinds[keyof typeof kinds];\n  title: string;\n  message: React.ReactNode | string;\n  infoMessage?: string;\n  accordMessage?: string;\n  confirmLabel?: string;\n  cancelLabel?: string;\n  hideCancelButton?: boolean;\n  onConfirm: (...args: any[]) => any;\n  onCancel: (...args: any[]) => any;\n}\n\nfunction ConfirmModal(props: ConfirmModalProps): ReactElement {\n  const { onCancel: onCancelFromProps } = props;\n  const [isAccordGiven, setIsAccordGiven] = useState(false);\n\n  const onCancel = useCallback(() => {\n    const metrics = resolve('metrics');\n\n    metrics.trackClick({\n      ...props.metricsProperties,\n      page: props.metricsPage,\n      action: metricsActions.CANCEL,\n    });\n\n    onCancelFromProps();\n    // The `metricsProperties` reference will change with each render, but only\n    // update the callback if the property values change.\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [\n    onCancelFromProps,\n    props.metricsPage,\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    JSON.stringify(props.metricsProperties),\n  ]);\n\n  const onAccordChange = useCallback((event: ChangeEvent<HTMLInputElement>) => {\n    setIsAccordGiven(event.target.checked);\n  }, []);\n\n  const {\n    containerClassName,\n    isCancelButtonDisabled,\n    isConfirmButtonSpinning = false,\n    isOpen,\n    metricsPage,\n    metricsProperties,\n    kind = kinds.PRIMARY,\n    title,\n    message,\n    accordMessage,\n    confirmLabel,\n    cancelLabel,\n    hideCancelButton,\n    infoMessage,\n    onConfirm,\n  } = props;\n\n  const isAccordRequired = !!accordMessage;\n  const isConfirmButtonDisabled =\n    isConfirmButtonSpinning || (isAccordRequired && !isAccordGiven);\n\n  //\n  // Render\n\n  return (\n    <Modal\n      containerClassName={containerClassName}\n      isOpen={isOpen}\n      metricsPage={metricsPage}\n      metricsProperties={metricsProperties}\n      size={sizes.SMALL}\n      onModalClose={onCancel}\n    >\n      <ModalContent onModalClose={onCancel}>\n        <ModalHeader>{title}</ModalHeader>\n\n        <ModalBody className={styles.confirmBody}>\n          <p>{message}</p>\n          {infoMessage ? <p>{infoMessage}</p> : null}\n          {isAccordRequired ? (\n            <label className={styles.accordLabel}>\n              <input\n                checked={isAccordGiven}\n                className={styles.accordInput}\n                type=\"checkbox\"\n                onChange={onAccordChange}\n              />\n              {accordMessage}\n            </label>\n          ) : null}\n        </ModalBody>\n\n        <ModalFooter>\n          <ModalFooterButtonBar>\n            {!hideCancelButton ? (\n              <Button\n                className={styles.cancelButton}\n                isDisabled={isCancelButtonDisabled}\n                kind={kinds.DEFAULT}\n                onPress={onCancel}\n              >\n                {cancelLabel || t('Cancel')}\n              </Button>\n            ) : null}\n\n            <MetricsClickTracker\n              {...metricsProperties}\n              action={metricsActions.CONFIRM}\n            >\n              <SpinnerButton\n                className={styles.confirmButton}\n                data-autofocus={true}\n                isDisabled={isConfirmButtonDisabled}\n                isSpinning={isConfirmButtonSpinning}\n                kind={kind}\n                onPress={onConfirm}\n              >\n                {confirmLabel || t('OK')}\n              </SpinnerButton>\n            </MetricsClickTracker>\n          </ModalFooterButtonBar>\n        </ModalFooter>\n      </ModalContent>\n    </Modal>\n  );\n}\n\nexport default ConfirmModal;\n","// extracted by mini-css-extract-plugin\nexport default {\"confirmBody\":\"exdf_ KmjAG Oeojk\",\"accordLabel\":\"ZQ7m_\",\"accordInput\":\"vDj9q\",\"cancelButton\":\"bA6FQ\",\"confirmButton\":\"hIypG\"};","/* eslint-plugin-disable @typescript-eslint */\n\nimport { createSelector } from 'reselect';\nimport _ from 'underscore';\n\nfunction createDVRSelector() {\n  return createSelector(\n    (appState) => appState.ui.dvrSettingsUI,\n    // @ts-expect-error ts-migrate(6133) FIXME: 'appState' is declared but its value is never read... Remove this comment to see the full error message\n    (appState: any, { dvrID }: any) => dvrID,\n    (dvrSettingsUI, dvrID) => {\n      const dvrs = dvrSettingsUI.dvrs;\n      return _.find(dvrs, { key: dvrID });\n    }\n  );\n}\n\nexport default createDVRSelector;\n","// extracted by mini-css-extract-plugin\nexport default {\"sectionError\":\"DJsPT\",\"sectionErrorIcon\":\"nHedY\"};","/* eslint-plugin-disable @typescript-eslint */\n\nimport React from 'react';\nimport t from 'app/js/utils/t';\nimport IconAlert from 'app/glyphs/alert-560.svg';\nimport styles from './FormSectionError.css';\n\ntype FormSectionErrorProps = {\n  errorMessage?: string;\n};\n\nfunction FormSectionError({ errorMessage }: FormSectionErrorProps) {\n  return (\n    <div className={styles.sectionError}>\n      <IconAlert className={styles.sectionErrorIcon} />\n      {errorMessage\n        ? errorMessage\n        : t('There was a problem saving your changes.')}\n    </div>\n  );\n}\n\nexport default FormSectionError;\n","/* eslint-plugin-disable @typescript-eslint */\n\nimport React, { Component } from 'react';\nimport getErrorMessageFromXHR from 'app/js/utils/getErrorMessageFromXHR';\nimport t from 'app/js/utils/t';\nimport Button from 'app/js/views/v3/components/core/buttons/Button';\nimport SpinnerButton from 'app/js/views/v3/components/core/buttons/SpinnerButton';\nimport Form from 'app/js/views/v3/components/core/forms/Form';\nimport FormSectionError from 'app/js/views/v3/components/core/forms/FormSectionError';\nimport SettingInputGroup from 'app/js/views/v3/components/core/forms/SettingInputGroup';\nimport ModalBody from 'app/js/views/v3/components/core/modals/ModalBody';\nimport ModalContent from 'app/js/views/v3/components/core/modals/ModalContent';\nimport ModalFooter from 'app/js/views/v3/components/core/modals/ModalFooter';\nimport ModalFooterButtonBar from 'app/js/views/v3/components/core/modals/ModalFooterButtonBar';\nimport ModalHeader from 'app/js/views/v3/components/core/modals/ModalHeader';\nimport * as kinds from 'app/js/views/v3/helpers/props/kinds';\nimport * as sizes from 'app/js/views/v3/helpers/props/sizes';\nimport styles from './DVRSettingsModalContent.css';\n\ntype DVRSettingsModalContentProps = {\n  prefs: any[];\n  isSaving: boolean;\n  saveError?: any;\n  onSubmit: (...args: any[]) => any;\n  onModalClose: (...args: any[]) => any;\n};\n\nclass DVRSettingsModalContent extends Component<DVRSettingsModalContentProps> {\n  //\n  // Lifecycle\n\n  // @ts-expect-error ts-migrate(6133) FIXME: 'prevState' is declared but its value is never rea... Remove this comment to see the full error message\n  componentDidUpdate(prevProps: DVRSettingsModalContentProps, prevState: any) {\n    const shouldCloseModal =\n      prevProps.isSaving &&\n      !this.props.isSaving &&\n      this.props.saveError == null;\n\n    if (shouldCloseModal) {\n      this.props.onModalClose();\n    }\n  }\n\n  //\n  // Render\n\n  render() {\n    const { prefs, isSaving, saveError, onSubmit, onModalClose } = this.props;\n\n    return (\n      // @ts-expect-error ts-migrate(2322) FIXME: Type '{ children: Element; className: string; onSu... Remove this comment to see the full error message\n      <Form className={styles.form} onSubmit={onSubmit}>\n        <ModalContent onModalClose={onModalClose}>\n          <ModalHeader>{t('DVR Settings')}</ModalHeader>\n\n          {saveError ? (\n            <FormSectionError\n              errorMessage={getErrorMessageFromXHR(\n                saveError,\n                t('There was a problem saving your changes. Please try again.')\n              )}\n            />\n          ) : null}\n\n          <ModalBody>\n            {prefs.map((pref) => {\n              const { id } = pref;\n              return <SettingInputGroup key={id} {...pref} />;\n            })}\n          </ModalBody>\n\n          <ModalFooter>\n            <ModalFooterButtonBar>\n              <Button\n                kind={kinds.DEFAULT}\n                size={sizes.MEDIUM}\n                onPress={onModalClose}\n              >\n                {t('Cancel')}\n              </Button>\n\n              <SpinnerButton\n                isSpinning={isSaving}\n                kind={kinds.PRIMARY}\n                size={sizes.MEDIUM}\n                type=\"submit\"\n              >\n                {t('Save')}\n              </SpinnerButton>\n            </ModalFooterButtonBar>\n          </ModalFooter>\n        </ModalContent>\n      </Form>\n    );\n  }\n}\n\nexport default DVRSettingsModalContent;\n","// extracted by mini-css-extract-plugin\nexport default {\"form\":\"Oa4lI\"};","/* eslint-plugin-disable @typescript-eslint */\n\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { createSelector } from 'reselect';\nimport {\n  clearDVRSettingsSaveError,\n  saveDVRSettings,\n} from 'app/js/stores/actions/ui/dvrSetupActions';\nimport createDVRSelector from 'app/js/stores/selectors/livetv/createDVRSelector';\nimport { scheduleImmediateUpdate } from 'app/js/utils/state/stateUpdateScheduler';\nimport DVRSettingsModalContent from './DVRSettingsModalContent';\n\nfunction createMapStateToProps() {\n  return createSelector(createDVRSelector(), (dvr) => {\n    const { prefs, isSaving, saveError } = dvr;\n\n    return {\n      prefs: prefs.filter((pref: any) => !pref.hidden),\n      isSaving,\n      saveError,\n    };\n  });\n}\n\ntype DVRSettingsModalContentConnectorProps = {\n  serverEntityID: string;\n  dvrID: number;\n  onModalClose: (...args: any[]) => any;\n  saveDVRSettings: (...args: any[]) => any;\n  clearDVRSettingsSaveError: (...args: any[]) => any;\n};\n\nclass DVRSettingsModalContentConnector extends Component<DVRSettingsModalContentConnectorProps> {\n  //\n  // Listeners\n\n  onSubmit = (prefs: any) => {\n    const { serverEntityID, dvrID } = this.props;\n\n    scheduleImmediateUpdate(() => {\n      this.props.saveDVRSettings({ serverEntityID, dvrID, prefs });\n    });\n  };\n\n  onModalClose = () => {\n    this.props.clearDVRSettingsSaveError({ dvrID: this.props.dvrID });\n    this.props.onModalClose();\n  };\n\n  //\n  // Render\n\n  render() {\n    return (\n      // @ts-expect-error ts-migrate(2769) FIXME: No overload matches this call.\n      <DVRSettingsModalContent\n        {...this.props}\n        onModalClose={this.onModalClose}\n        onSubmit={this.onSubmit}\n      />\n    );\n  }\n}\n\nexport default connect(createMapStateToProps, {\n  saveDVRSettings,\n  clearDVRSettingsSaveError,\n})(DVRSettingsModalContentConnector);\n","/* eslint-plugin-disable @typescript-eslint */\n\nimport React from 'react';\nimport * as metricsPages from 'app/js/utils/constants/metrics/metricsPages';\nimport Modal from 'app/js/views/v3/components/core/modals/Modal';\nimport DVRSettingsModalContentConnector from './DVRSettingsModalContentConnector';\n\ntype DVRSettingsModalProps = {\n  isOpen: boolean;\n  metricsProperties: any;\n  onModalClose: (...args: any[]) => any;\n};\n\nfunction DVRSettingsModal(props: DVRSettingsModalProps) {\n  const { isOpen, metricsProperties, onModalClose, ...otherProps } = props;\n\n  return (\n    <Modal\n      isOpen={isOpen}\n      metricsPage={metricsPages.DVR_SETTINGS}\n      metricsProperties={metricsProperties}\n      onModalClose={onModalClose}\n    >\n      <DVRSettingsModalContentConnector\n        onModalClose={onModalClose}\n        {...otherProps}\n      />\n    </Modal>\n  );\n}\n\nexport default DVRSettingsModal;\n","\n    import PropTypes from 'prop-types';\n    import React from 'react';\n    import styles from 'app/js/views/v3/components/core/base/PlexIcon.css';\n\n    function IconReload(props) {\n      const label = props['aria-label'];\n      const className = props.className;\n      const style = props.style;\n\n      const svgProps = {\"viewBox\":\"0 0 560 560\",\"xmlns\":\"http://www.w3.org/2000/svg\",\"strokeMiterlimit\":\"1.414\",\"strokeLinejoin\":\"round\",\"id\":\"plex-icon-reload-560\"};\n\n      svgProps['aria-hidden'] = !label;\n      svgProps.style = style;\n      svgProps.className = styles.plexIcon + (className ? ' ' + className : '');\n\n      const children = [React.createElement.apply(React, ['path', {\"d\":\"m280 560c-1.807-.003-3.614-.017-5.421-.052-3.292-.062-6.584-.182-9.873-.359-9.731-.525-19.435-1.554-29.059-3.089-11.735-1.871-23.35-4.493-34.75-7.849-11.774-3.466-23.317-7.714-34.53-12.705-13.924-6.197-27.338-13.54-40.067-21.922-13.116-8.636-25.504-18.374-36.998-29.074-11.686-10.88-22.446-22.753-32.124-35.451-9.55-12.53-18.044-25.862-25.357-39.816-6.195-11.822-11.541-24.088-15.978-36.676-4.407-12.5-7.916-25.316-10.495-38.317-3.569-17.998-5.348-36.343-5.348-54.69 0-12.5.823-25 2.48-37.39 1.885-14.104 4.851-28.063 8.869-41.713 4.106-13.949 9.311-27.574 15.547-40.711 7.129-15.019 15.603-29.397 25.281-42.915 9.786-13.67 20.8-26.46 32.864-38.17 12.674-12.302 26.506-23.411 41.259-33.125 14.39-9.476 29.653-17.622 45.541-24.289 17.483-7.337 35.716-12.877 54.325-16.507 17.427-3.4 35.175-5.122 52.929-5.179 17.775-.056 35.554 1.556 53.023 4.85 18.646 3.516 36.926 8.946 54.466 16.181 15.934 6.572 31.253 14.628 45.705 24.02 14.578 9.474 28.271 20.305 40.854 32.302 1.622 1.546 3.224 3.111 4.808 4.695l82.049-82.049 0 220-220 0 81.382-81.382c-.709-.71-1.423-1.413-2.142-2.112-9.074-8.807-18.975-16.76-29.536-23.715-10.101-6.651-20.804-12.386-31.942-17.1-12.43-5.261-25.396-9.245-38.635-11.871-12.45-2.469-25.133-3.735-37.825-3.816-12.729-.08-25.466 1.027-37.984 3.347-13.29 2.463-26.324 6.29-38.836 11.406-11.386 4.656-22.336 10.374-32.671 17.047-10.456 6.75-20.28 14.475-29.313 23.036-8.883 8.419-17 17.646-24.213 27.534-6.997 9.59-13.143 19.801-18.331 30.479-4.523 9.309-8.318 18.972-11.333 28.873-2.889 9.484-5.061 19.185-6.498 28.995-1.42 9.691-2.123 19.485-2.123 29.279 0 13.333 1.307 26.665 3.942 39.736 1.824 9.049 4.281 17.969 7.35 26.674 3.163 8.971 6.973 17.713 11.389 26.139 5.226 9.973 11.299 19.501 18.124 28.456 6.932 9.096 14.639 17.599 23.009 25.392 7.933 7.385 16.461 14.131 25.477 20.146 8.881 5.924 18.236 11.138 27.949 15.569 7.946 3.624 16.131 6.723 24.485 9.267 8.087 2.463 16.331 4.405 24.666 5.815 6.853 1.159 13.767 1.958 20.704 2.398 2.353.149 4.708.257 7.065.325 1.296.037 2.592.059 3.889.074.65.005 1.301.008 1.951.009l.259 79.999-.259.001\"}].concat([]))];\n\n      if (label) {\n        children.unshift(React.createElement('title', null, label));\n      }\n\n      // Arrays require a key, but a fixed number of elements don't.\n      // Spread the elements since it'll be a fixed number anyways\n      return React.createElement.apply(React, ['svg', svgProps].concat(children));\n    };\n\n    IconReload.propTypes = {\n      'aria-label': PropTypes.string,\n      className: PropTypes.string,\n      style: PropTypes.object\n    };\n\n    export default IconReload;\n  ","\n    import PropTypes from 'prop-types';\n    import React from 'react';\n    import styles from 'app/js/views/v3/components/core/base/PlexIcon.css';\n\n    function IconSettings(props) {\n      const label = props['aria-label'];\n      const className = props.className;\n      const style = props.style;\n\n      const svgProps = {\"viewBox\":\"0 0 560 560\",\"xmlns\":\"http://www.w3.org/2000/svg\",\"strokeMiterlimit\":\"1.414\",\"strokeLinejoin\":\"round\",\"id\":\"plex-icon-settings-560\"};\n\n      svgProps['aria-hidden'] = !label;\n      svgProps.style = style;\n      svgProps.className = styles.plexIcon + (className ? ' ' + className : '');\n\n      const children = [React.createElement.apply(React, ['path', {\"d\":\"m200 280c0 44.153 35.847 80 80 80 44.153 0 80-35.847 80-80 0-44.153-35.847-80-80-80-44.153 0-80 35.847-80 80m-115.992-40c5.189-25.52 15.244-49.281 29.153-70.271l-61.151-61.15 56.569-56.569 61.15 61.151c20.99-13.909 44.751-23.964 70.271-29.153l0-84.008 80 0 0 84.008c25.52 5.189 49.281 15.244 70.271 29.153l61.15-61.151 56.569 56.569-61.151 61.15c13.909 20.99 23.964 44.751 29.153 70.271l84.008 0 0 80-84.008 0c-5.189 25.52-15.244 49.282-29.153 70.271l61.151 61.15-56.569 56.569-61.15-61.151c-20.99 13.909-44.751 23.964-70.271 29.153l0 84.008-80 0 0-84.008c-25.52-5.189-49.281-15.244-70.271-29.153l-61.15 61.151-56.569-56.569 61.151-61.15c-13.909-20.989-23.964-44.751-29.153-70.271l-84.008 0 0-80 84.008 0\"}].concat([]))];\n\n      if (label) {\n        children.unshift(React.createElement('title', null, label));\n      }\n\n      // Arrays require a key, but a fixed number of elements don't.\n      // Spread the elements since it'll be a fixed number anyways\n      return React.createElement.apply(React, ['svg', svgProps].concat(children));\n    };\n\n    IconSettings.propTypes = {\n      'aria-label': PropTypes.string,\n      className: PropTypes.string,\n      style: PropTypes.object\n    };\n\n    export default IconSettings;\n  ","// extracted by mini-css-extract-plugin\nexport default {\"container\":\"vxJW1\",\"action\":\"T_yVH IYkbp\",\"spinner\":\"RZtPh RD8jJ m_4Rc\",\"spinnerContainer\":\"B8Dxk\",\"actionIcon\":\"SrR5i\"};","import React, { ReactElement, useCallback, useMemo } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport serverFeatures from 'app/js/models/server/serverFeatures';\nimport {\n  cancelReloadGuide,\n  reloadGuide,\n} from 'app/js/stores/actions/ui/dvrSettingsUIActions';\nimport * as metricsContexts from 'app/js/utils/constants/metrics/metricsContexts';\nimport * as metricsPages from 'app/js/utils/constants/metrics/metricsPages';\nimport isVersionOrNewer from 'app/js/utils/isVersionOrNewer';\nimport t from 'app/js/utils/t';\nimport createEPGLoadActivitySelector from 'app/js/v4/core/serverActivities/selectors/createEPGLoadActivitySelector';\nimport { useSourceContext } from 'app/js/v4/core/servers/components/SourceContextProvider';\nimport { useRedispatchLegacyServerAction } from 'app/js/v4/core/servers/hooks/useRedispatchLegacyServerAction';\nimport Link from 'app/js/v4/core/ui/buttons/components/Link';\nimport useDisclosure from 'app/js/v4/core/ui/hooks/useDisclosure';\nimport Spinner from 'app/js/v4/core/ui/spinners/components/Spinner';\nimport Kind from 'app/js/v4/core/ui/types/Kind';\nimport Size from 'app/js/v4/core/ui/types/Size';\nimport { DVR } from 'app/js/v4/features/dvrManagement/dvrManagementTypes';\nimport dvrSetupSlice from 'app/js/v4/features/dvrManagement/dvrSetupSlice';\nimport selectDVRSetup from 'app/js/v4/features/dvrManagement/selectors/selectDVRSetup';\nimport DashSeparator from 'app/js/views/v3/components/core/base/DashSeparator';\nimport ConfirmModal from 'app/js/views/v3/components/core/modals/ConfirmModal';\nimport DVRSettingsModal from 'app/js/views/v3/components/livetv/dvr/DVRSettingsModal';\nimport IconReload from 'app/glyphs/reload-560.svg';\nimport IconRemove from 'app/glyphs/remove-560.svg';\nimport IconSettings from 'app/glyphs/settings-560.svg';\nimport styles from './LiveTVSettingsDVR.css';\n\nconst metricsProperties = {\n  context: metricsContexts.SETTINGS,\n};\n\ninterface LiveTVSettingsDVRProps {\n  dvr: DVR;\n  hasDVRFeature: boolean;\n  hasLiveTVSetupFeature: boolean;\n}\n\nexport default function LiveTVSettingsDVR({\n  dvr,\n  hasDVRFeature,\n  hasLiveTVSetupFeature,\n}: LiveTVSettingsDVRProps): ReactElement | null {\n  const dispatch = useDispatch();\n  const [server, provider] = useSourceContext();\n  const removeDVRModalState = useDisclosure();\n  const dvrSettingsModalState = useDisclosure();\n  const selectEPGLoadActivity = useMemo(\n    () => createEPGLoadActivitySelector(server, provider),\n    [provider, server]\n  );\n\n  const epgLoadActivity = useSelector(selectEPGLoadActivity);\n  const { isCancellingReloadGuide, isDeletingDVR } =\n    useSelector(selectDVRSetup);\n\n  const redispatchLegacyServerAction = useRedispatchLegacyServerAction({\n    server,\n    provider,\n  });\n\n  //\n  // Callbacks\n\n  const onRemoveDVRConfirm = useCallback(() => {\n    dispatch(\n      dvrSetupSlice.actions.dvrDeleteRequested({ server, dvrID: dvr.key })\n    );\n\n    removeDVRModalState.onClose();\n  }, [dvr, server, dispatch, removeDVRModalState]);\n\n  const onReloadGuidePress = useCallback(() => {\n    redispatchLegacyServerAction(\n      // @ts-expect-error ts-migrate(2554) FIXME: Expected 0 arguments, but got 1.\n      reloadGuide({ dvrID: Number(dvr.key) })\n    );\n  }, [dvr, redispatchLegacyServerAction]);\n\n  const onCancelReloadGuidePress = useCallback(() => {\n    dispatch(dvrSetupSlice.actions.cancelReloadGuide());\n    redispatchLegacyServerAction(\n      // @ts-expect-error ts-migrate(2554) FIXME: Expected 0 arguments, but got 1.\n      cancelReloadGuide({ dvrID: Number(dvr.key) })\n    );\n  }, [dispatch, redispatchLegacyServerAction, dvr]);\n\n  //\n  // Render\n\n  const hasPrefs = !!dvr.Setting;\n  const hasFreeLiveTVDVRSettings = isVersionOrNewer(\n    server.version,\n    serverFeatures.freeLiveTVDVRSettings\n  );\n  // DVR Settings button exposes XMLTV configuration setting that are\n  // available to all Live TV users, even those without DVR capabilities.\n  // Live TV & DVR users will hit `hasDVRFeature`. Free Live TV users will hit\n  // `hasLiveTVSetupFeature` and `hasFreeLiveTVDVRSettings` if they have the\n  // minimum server version.\n  const hasDVRSettings =\n    hasDVRFeature || (hasLiveTVSetupFeature && hasFreeLiveTVDVRSettings);\n  const showDVRSettings = hasDVRSettings && hasPrefs;\n\n  return (\n    <div className={styles.container}>\n      {showDVRSettings ? (\n        <Link\n          className={styles.action}\n          kind={Kind.Primary}\n          onPress={dvrSettingsModalState.onOpen}\n        >\n          <IconSettings className={styles.actionIcon} />\n          {t('DVR Settings')}\n        </Link>\n      ) : null}\n\n      {isCancellingReloadGuide ? (\n        <div className={styles.spinnerContainer}>\n          <Spinner className={styles.spinner} size={Size.Small} />\n          {t('Cancelling guide refresh...')}\n        </div>\n      ) : null}\n\n      {!isCancellingReloadGuide && epgLoadActivity ? (\n        <Link\n          className={styles.action}\n          isDisabled={isDeletingDVR}\n          kind={Kind.Default}\n          title={t('Cancel refresh')}\n          onPress={onCancelReloadGuidePress}\n        >\n          <IconRemove className={styles.actionIcon} />\n          {epgLoadActivity.title} ({epgLoadActivity.progress}%)\n          <DashSeparator className={styles.separator} />\n          {epgLoadActivity.subtitle}\n        </Link>\n      ) : null}\n\n      {!isCancellingReloadGuide && !epgLoadActivity ? (\n        <Link\n          className={styles.action}\n          isDisabled={isDeletingDVR}\n          kind={Kind.Primary}\n          onPress={onReloadGuidePress}\n        >\n          <IconReload className={styles.actionIcon} />\n          {t('Refresh Guide')}\n        </Link>\n      ) : null}\n\n      {isDeletingDVR ? (\n        <div className={styles.spinnerContainer}>\n          <Spinner className={styles.spinner} size={Size.Small} />\n          {t('Deleting DVR...')}\n        </div>\n      ) : (\n        <Link kind={Kind.Primary} onPress={removeDVRModalState.onOpen}>\n          {t('Delete DVR')}\n        </Link>\n      )}\n\n      <ConfirmModal\n        confirmLabel={t('Delete')}\n        isOpen={removeDVRModalState.isOpen}\n        kind={Kind.Danger}\n        message={t(\n          \"Deleting your DVR will remove the Guide, and all scheduled recordings will be suspended. Programming you've previously recorded will remain in your library.\"\n        )}\n        metricsPage={metricsPages.CONFIRM_REMOVE_DVR}\n        title={t('Delete DVR')}\n        onCancel={removeDVRModalState.onClose}\n        onConfirm={onRemoveDVRConfirm}\n      />\n\n      <DVRSettingsModal\n        // @ts-expect-error ts-migrate(2322) FIXME: Type '{ isOpen: any; serverEntityID: string; dvrID... Remove this comment to see the full error message\n        dvrID={Number(dvr.key)}\n        isOpen={dvrSettingsModalState.isOpen}\n        metricsProperties={metricsProperties}\n        serverEntityID={server.entityID}\n        onModalClose={dvrSettingsModalState.onClose}\n      />\n    </div>\n  );\n}\n","\n    import PropTypes from 'prop-types';\n    import React from 'react';\n    import styles from 'app/js/views/v3/components/core/base/PlexIcon.css';\n\n    function IconToolbarFilterAdd(props) {\n      const label = props['aria-label'];\n      const className = props.className;\n      const style = props.style;\n\n      const svgProps = {\"viewBox\":\"0 0 560 560\",\"xmlns\":\"http://www.w3.org/2000/svg\",\"strokeMiterlimit\":\"1.414\",\"strokeLinejoin\":\"round\",\"id\":\"plex-icon-toolbar-filter-add-560\"};\n\n      svgProps['aria-hidden'] = !label;\n      svgProps.style = style;\n      svgProps.className = styles.plexIcon + (className ? ' ' + className : '');\n\n      const children = [React.createElement.apply(React, ['path', {\"d\":\"m280 518c-131.44 0-238-106.56-238-238 0-131.44 106.56-238 238-238 131.44 0 238 106.56 238 238 0 131.44-106.56 238-238 238m0-42c108.25 0 196-87.75 196-196 0-108.25-87.75-196-196-196-108.25 0-196 87.75-196 196 0 108.25 87.75 196 196 196m-126-218.4h103.6v-103.6h44.8v103.6h103.6v44.8h-103.6v103.6h-44.8v-103.6h-103.6v-44.8\"}].concat([]))];\n\n      if (label) {\n        children.unshift(React.createElement('title', null, label));\n      }\n\n      // Arrays require a key, but a fixed number of elements don't.\n      // Spread the elements since it'll be a fixed number anyways\n      return React.createElement.apply(React, ['svg', svgProps].concat(children));\n    };\n\n    IconToolbarFilterAdd.propTypes = {\n      'aria-label': PropTypes.string,\n      className: PropTypes.string,\n      style: PropTypes.object\n    };\n\n    export default IconToolbarFilterAdd;\n  ","// extracted by mini-css-extract-plugin\nexport default {\"modal\":\"utKSS H6pvS vgxAm\",\"modalBody\":\"y8c8g BSp3D\",\"innerModalBody\":\"S7A_a\",\"scroller\":\"JuQ1Q GSAom sWZ6m\",\"innerContainer\":\"qntfY\",\"lineupsContainer\":\"GZg4u GS_OK\",\"lineupsLabel\":\"m4mPf\",\"lineups\":\"AxI3L OC8GP\",\"lineup\":\"R1tHe oTgk6\",\"buttonBar\":\"uqXEc s5Y6S\"};","import React, {\n  ReactElement,\n  useCallback,\n  useEffect,\n  useMemo,\n  useState,\n} from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport * as metricsContexts from 'app/js/utils/constants/metrics/metricsContexts';\nimport * as metricsPages from 'app/js/utils/constants/metrics/metricsPages';\nimport { scheduleImmediateUpdate } from 'app/js/utils/state/stateUpdateScheduler';\nimport t from 'app/js/utils/t';\nimport createChannelScanActivitySelector from 'app/js/v4/core/serverActivities/selectors/createChannelScanActivitySelector';\nimport { useSourceContext } from 'app/js/v4/core/servers/components/SourceContextProvider';\nimport Button from 'app/js/v4/core/ui/buttons/components/Button';\nimport SpinnerButton from 'app/js/v4/core/ui/buttons/components/SpinnerButton';\nimport useMeasure from 'app/js/v4/core/ui/hooks/useMeasure';\nimport MetricsContextProvider from 'app/js/v4/core/ui/metrics/components/MetricsContextProvider';\nimport Modal from 'app/js/v4/core/ui/modals/components/Modal';\nimport ModalBody from 'app/js/v4/core/ui/modals/components/ModalBody';\nimport ModalContent from 'app/js/v4/core/ui/modals/components/ModalContent';\nimport ModalFooter from 'app/js/v4/core/ui/modals/components/ModalFooter';\nimport ModalFooterButtonBar from 'app/js/v4/core/ui/modals/components/ModalFooterButtonBar';\nimport ModalHeader from 'app/js/v4/core/ui/modals/components/ModalHeader';\nimport { ScrollPosition } from 'app/js/v4/core/ui/scrollers/scrollerTypes';\nimport Spinner from 'app/js/v4/core/ui/spinners/components/Spinner';\nimport Kind from 'app/js/v4/core/ui/types/Kind';\nimport ChannelScanActivity from 'app/js/v4/features/dvrManagement/components/ChannelScanActivity';\nimport ChannelScanPrefs from 'app/js/v4/features/dvrManagement/components/ChannelScanPrefs';\nimport DeviceChannelMappingsForm from 'app/js/v4/features/dvrManagement/components/DeviceChannelMappingsForm';\nimport {\n  ChannelMappingFormData,\n  MediaGrabberDevice,\n} from 'app/js/v4/features/dvrManagement/dvrManagementTypes';\nimport dvrSetupSlice from 'app/js/v4/features/dvrManagement/dvrSetupSlice';\nimport epgSettingsSlice from 'app/js/v4/features/dvrManagement/epgSettingsSlice';\nimport createChannelMappingsSelector from 'app/js/v4/features/dvrManagement/selectors/createChannelMappingsSelector';\nimport createDeviceChannelsSelector from 'app/js/v4/features/dvrManagement/selectors/createDeviceChannelsSelector';\nimport selectDVRSetup from 'app/js/v4/features/dvrManagement/selectors/selectDVRSetup';\nimport selectEPGSettings from 'app/js/v4/features/dvrManagement/selectors/selectEPGSettings';\nimport selectLineupChannels from 'app/js/v4/features/dvrManagement/selectors/selectLineupChannels';\nimport selectSelectedDVRLineups from 'app/js/v4/features/dvrManagement/selectors/selectSelectedDVRLineups';\nimport getMatchedChannelsPerLineupUUID, {\n  MatchedChannelsPerLineupUUID,\n} from 'app/js/v4/features/dvrManagement/utils/getMatchedChannelsPerLineupUUID';\nimport usePrevious from 'app/js/views/v3/helpers/hooks/usePrevious';\nimport dimensions from 'app/js/views/v3/styles/variables/dimensions';\nimport styles from './DVRManageChannelsModal.css';\n\ninterface DVRManageChannelsModalProps {\n  deviceKey: MediaGrabberDevice['key'];\n  isOpen: boolean;\n  onModalClose(): void;\n}\n\nconst FORM_ID = 'channel-mappings-form';\n\nconst DEVICE_CHANNEL_MAPPING_HEADER_HEIGHT = parseInt(\n  dimensions.dvrSetupChannelMappingItemHeight,\n  10\n);\n\nexport default function DVRManageChannelsModal({\n  deviceKey,\n  isOpen,\n  onModalClose,\n}: DVRManageChannelsModalProps): ReactElement {\n  const dispatch = useDispatch();\n  const [server] = useSourceContext();\n  const [epgLineupsMeasureRef, { height: epgLineupsHeight }] = useMeasure();\n  const [modalBodyRef, { height: modalBodyHeight }] = useMeasure();\n  const {\n    hasScannedChannels,\n    isSavingChannelMappings,\n    channelMappingsSaveError,\n    scanPrefs,\n    scanNetworks,\n  } = useSelector(selectDVRSetup);\n  const {\n    lineupChannels: {\n      isPending: isLineupChannelsPending,\n      isPopulated: isLineupChannelsPopulated,\n      error: lineupChannelsError,\n    },\n  } = useSelector(selectEPGSettings);\n  const selectChannelScanActivity = useMemo(\n    () => createChannelScanActivitySelector(server),\n    [server]\n  );\n  const selectDeviceChannels = useMemo(\n    () => createDeviceChannelsSelector(deviceKey),\n    [deviceKey]\n  );\n  const selectChannelMappings = useMemo(\n    () => createChannelMappingsSelector(deviceKey),\n    [deviceKey]\n  );\n\n  const channelMappings = useSelector(selectChannelMappings);\n  const channelScanActivity = useSelector(selectChannelScanActivity);\n  const lineupChannels = useSelector(selectLineupChannels);\n  const selectedLineups = useSelector(selectSelectedDVRLineups);\n  const { channels: deviceChannels, isPending: isDeviceChannelsPending } =\n    useSelector(selectDeviceChannels);\n\n  const prevIsSavingChannelMappings = usePrevious(isSavingChannelMappings);\n  const matchedChannelsPerLineupUUID: MatchedChannelsPerLineupUUID = useMemo(\n    () =>\n      getMatchedChannelsPerLineupUUID(\n        channelMappings,\n        lineupChannels,\n        selectedLineups\n      ),\n    [channelMappings, lineupChannels, selectedLineups]\n  );\n\n  const [scrollPosition, setScrollPosition] = useState<ScrollPosition>({\n    scrollTop: 0,\n    scrollLeft: 0,\n  });\n\n  //\n  // Effects\n\n  useEffect(() => {\n    dispatch(dvrSetupSlice.actions.deviceSelected({ deviceKey }));\n  }, [dispatch, deviceKey]);\n\n  useEffect(() => {\n    if (hasScannedChannels) {\n      scheduleImmediateUpdate(() => {\n        dispatch(\n          dvrSetupSlice.actions.deviceChannelsFetchRequested({\n            server,\n            deviceKey,\n          })\n        );\n      });\n    }\n  }, [dispatch, server, deviceKey, hasScannedChannels]);\n\n  useEffect(() => {\n    if (\n      !isLineupChannelsPending &&\n      !isLineupChannelsPopulated &&\n      !lineupChannelsError\n    ) {\n      dispatch(\n        epgSettingsSlice.actions.selectedDVRLineupChannelsFetchRequested({\n          server,\n        })\n      );\n    }\n  }, [\n    dispatch,\n    server,\n    isLineupChannelsPending,\n    isLineupChannelsPopulated,\n    lineupChannelsError,\n  ]);\n\n  useEffect(() => {\n    if (\n      prevIsSavingChannelMappings &&\n      !isSavingChannelMappings &&\n      !channelMappingsSaveError\n    ) {\n      onModalClose();\n    }\n  }, [\n    isSavingChannelMappings,\n    prevIsSavingChannelMappings,\n    channelMappingsSaveError,\n    onModalClose,\n  ]);\n\n  //\n  // Callbacks\n\n  const onSubmit = useCallback(\n    (data: ChannelMappingFormData[]): void => {\n      scheduleImmediateUpdate(() => {\n        dispatch(\n          dvrSetupSlice.actions.deviceChannelMappingsSaveRequested({\n            server,\n            deviceKey,\n            mappings: data,\n          })\n        );\n      });\n    },\n    [dispatch, server, deviceKey]\n  );\n\n  const onScrollPositionChange = useCallback((scrollUpdate: ScrollPosition) => {\n    setScrollPosition(scrollUpdate);\n  }, []);\n\n  //\n  // Render\n\n  return (\n    <MetricsContextProvider\n      metricsPage={metricsPages.DVR_SETUP}\n      name={metricsContexts.SETTINGS}\n    >\n      <Modal\n        className={styles.modal}\n        isOpen={isOpen}\n        onModalClose={onModalClose}\n      >\n        <ModalContent onModalClose={onModalClose}>\n          <ModalHeader>{t('Channel Matching')}</ModalHeader>\n          <ModalBody\n            ref={modalBodyRef}\n            className={styles.modalBody}\n            innerClassName={styles.innerModalBody}\n            onScrollPositionChange={onScrollPositionChange}\n          >\n            {!channelScanActivity &&\n            !isDeviceChannelsPending &&\n            !isLineupChannelsPending &&\n            deviceChannels.length > 0 ? (\n              <div\n                ref={epgLineupsMeasureRef}\n                className={styles.lineupsContainer}\n              >\n                <div className={styles.lineupsLabel}>{t('EPG Location')}</div>\n                <div className={styles.lineups}>\n                  {Object.keys(matchedChannelsPerLineupUUID).map(\n                    (lineupUUID) => {\n                      const matchCount =\n                        matchedChannelsPerLineupUUID[lineupUUID];\n                      const lineup = selectedLineups?.find(\n                        (selectedLineup) => selectedLineup.uuid === lineupUUID\n                      );\n\n                      if (matchCount === 0 || !lineup) {\n                        return;\n                      }\n\n                      return (\n                        <div key={lineupUUID} className={styles.lineup}>\n                          {lineup.title}\n                        </div>\n                      );\n                    }\n                  )}\n                </div>\n              </div>\n            ) : null}\n\n            {!channelScanActivity &&\n            !isLineupChannelsPending &&\n            !isDeviceChannelsPending &&\n            deviceChannels.length > 0 ? (\n              <DeviceChannelMappingsForm\n                channelMappings={channelMappings}\n                height={modalBodyHeight}\n                id={FORM_ID}\n                scrollLeft={scrollPosition.scrollLeft}\n                scrollTop={\n                  scrollPosition.scrollTop -\n                  epgLineupsHeight -\n                  DEVICE_CHANNEL_MAPPING_HEADER_HEIGHT * 2\n                }\n                onSubmit={onSubmit}\n              />\n            ) : null}\n\n            {!channelScanActivity &&\n            (isDeviceChannelsPending || isLineupChannelsPending) ? (\n              <div className={styles.innerContainer}>\n                <Spinner />\n              </div>\n            ) : null}\n\n            {!channelScanActivity &&\n            (scanPrefs.length || scanNetworks.length) ? (\n              <ChannelScanPrefs />\n            ) : null}\n\n            {!scanPrefs?.length &&\n            !scanNetworks?.length &&\n            !isDeviceChannelsPending &&\n            !isLineupChannelsPending ? (\n              <ChannelScanActivity className={styles.innerContainer} />\n            ) : null}\n          </ModalBody>\n          <ModalFooter>\n            <ModalFooterButtonBar className={styles.buttonBar}>\n              <Button onPress={onModalClose}>{t('Cancel')}</Button>\n              <SpinnerButton\n                form={FORM_ID}\n                isDisabled={\n                  isSavingChannelMappings ||\n                  !!channelScanActivity ||\n                  channelMappings.length === 0\n                }\n                isSpinning={isSavingChannelMappings}\n                kind={Kind.Primary}\n                type=\"submit\"\n              >\n                {t('Save')}\n              </SpinnerButton>\n            </ModalFooterButtonBar>\n          </ModalFooter>\n        </ModalContent>\n      </Modal>\n    </MetricsContextProvider>\n  );\n}\n","/* eslint-plugin-disable @typescript-eslint */\n\nimport React from 'react';\nimport TranscodeImageConnector from 'app/js/views/v3/components/core/images/TranscodeImageConnector';\nimport hdHomeRunConnectImg from 'app/img/dvr-devices/device-hdhomerun-connect-560.svg';\nimport hdHomeRunExpandImg from 'app/img/dvr-devices/device-hdhomerun-expand-560.svg';\nimport hdHomeRunExtendImg from 'app/img/dvr-devices/device-hdhomerun-extend-560.svg';\nimport hdHomeRunPrimeImg from 'app/img/dvr-devices/device-hdhomerun-prime-560.svg';\nimport styles from './DVRDeviceImage.css';\n\ntype DVRDeviceImageProps = {\n  className?: string;\n  serverEntityID: string;\n  providerEntityID?: string;\n  model?: string;\n  thumb?: string;\n  width: number;\n  height: number;\n};\n\nfunction DVRDeviceImage(props: DVRDeviceImageProps) {\n  const {\n    className,\n    serverEntityID,\n    providerEntityID,\n    model,\n    thumb,\n    width,\n    height,\n  } = props;\n\n  let fallbackImg;\n\n  switch (model) {\n    case 'HDHomeRun CONNECT':\n      fallbackImg = hdHomeRunConnectImg;\n      break;\n    case 'HDHomeRun EXPAND':\n      fallbackImg = hdHomeRunExpandImg;\n      break;\n    case 'HDHomeRun EXTEND':\n      fallbackImg = hdHomeRunExtendImg;\n      break;\n    case 'HDHomeRun PRIME':\n      fallbackImg = hdHomeRunPrimeImg;\n  }\n\n  return (\n    <TranscodeImageConnector\n      className={className}\n      emptySrc={fallbackImg}\n      height={height}\n      providerEntityID={providerEntityID}\n      serverEntityID={serverEntityID}\n      url={thumb}\n      width={width}\n    />\n  );\n}\n\nDVRDeviceImage.defaultProps = {\n  className: styles.image,\n};\n\nexport default DVRDeviceImage;\n","// extracted by mini-css-extract-plugin\nexport default {\"image\":\"WGGo_\"};","/* eslint-plugin-disable @typescript-eslint */\n\nimport React, { Component } from 'react';\nimport getErrorMessageFromXHR from 'app/js/utils/getErrorMessageFromXHR';\nimport t from 'app/js/utils/t';\nimport Button from 'app/js/views/v3/components/core/buttons/Button';\nimport SpinnerButton from 'app/js/views/v3/components/core/buttons/SpinnerButton';\nimport Form from 'app/js/views/v3/components/core/forms/Form';\nimport FormSectionError from 'app/js/views/v3/components/core/forms/FormSectionError';\nimport SettingInputGroup from 'app/js/views/v3/components/core/forms/SettingInputGroup';\nimport ModalBody from 'app/js/views/v3/components/core/modals/ModalBody';\nimport ModalContent from 'app/js/views/v3/components/core/modals/ModalContent';\nimport ModalFooter from 'app/js/views/v3/components/core/modals/ModalFooter';\nimport ModalFooterButtonBar from 'app/js/views/v3/components/core/modals/ModalFooterButtonBar';\nimport ModalHeader from 'app/js/views/v3/components/core/modals/ModalHeader';\nimport * as kinds from 'app/js/views/v3/helpers/props/kinds';\nimport * as sizes from 'app/js/views/v3/helpers/props/sizes';\nimport DVRDeviceImage from './DVRDeviceImage';\nimport styles from './DVRDeviceSettingsModalContent.css';\n\ntype DVRDeviceSettingsModalContentProps = {\n  serverEntityID: string;\n  model: string;\n  uri: string;\n  thumb?: string;\n  prefs: any[];\n  title?: string;\n  isSaving: boolean;\n  saveError?: any;\n  onSubmit: (...args: any[]) => any;\n  onModalClose: (...args: any[]) => any;\n};\n\nclass DVRDeviceSettingsModalContent extends Component<DVRDeviceSettingsModalContentProps> {\n  //\n  // Lifecycle\n\n  constructor(props: any, context: any) {\n    super(props, context);\n\n    this.state = { deviceTitle: props.title || '' };\n  }\n\n  componentDidUpdate(\n    prevProps: DVRDeviceSettingsModalContentProps,\n    // @ts-expect-error ts-migrate(6133) FIXME: 'prevState' is declared but its value is never rea... Remove this comment to see the full error message\n    prevState: any\n  ) {\n    const shouldCloseModal =\n      prevProps.isSaving &&\n      !this.props.isSaving &&\n      this.props.saveError == null;\n\n    if (shouldCloseModal) {\n      this.props.onModalClose();\n    }\n  }\n\n  //\n  // Listeners\n\n  onDeviceTitleChange = (value: any) => {\n    this.setState({\n      deviceTitle: value,\n    });\n  };\n\n  //\n  // Render\n\n  render() {\n    const {\n      serverEntityID,\n      model,\n      uri,\n      thumb,\n      prefs,\n      isSaving,\n      saveError,\n      onSubmit,\n      onModalClose,\n    } = this.props;\n\n    return (\n      // @ts-expect-error ts-migrate(2322) FIXME: Type '{ children: Element; className: string; onSu... Remove this comment to see the full error message\n      <Form className={styles.form} onSubmit={onSubmit}>\n        <ModalContent onModalClose={onModalClose}>\n          <ModalHeader>{t('Device Settings')}</ModalHeader>\n\n          {saveError ? (\n            <FormSectionError\n              errorMessage={getErrorMessageFromXHR(\n                saveError,\n                t('There was a problem saving your changes. Please try again.')\n              )}\n            />\n          ) : null}\n\n          <ModalBody>\n            <div className={styles.container}>\n              <DVRDeviceImage\n                className={styles.deviceImage}\n                height={150}\n                model={model}\n                serverEntityID={serverEntityID}\n                thumb={thumb}\n                width={150}\n              />\n\n              <div className={styles.info}>\n                <div className={styles.model}>{model}</div>\n\n                <div>{uri}</div>\n\n                <div className={styles.settings}>\n                  <SettingInputGroup\n                    id=\"deviceTitle\"\n                    label={t('Device Name')}\n                    type=\"text\"\n                    // @ts-expect-error ts-migrate(2322) FIXME: Type '{ name: string; value: any; labelText: strin... Remove this comment to see the full error message\n                    value={this.state.deviceTitle}\n                  />\n\n                  {prefs.map((pref) => {\n                    const { id } = pref;\n                    return <SettingInputGroup key={id} {...pref} />;\n                  })}\n                </div>\n              </div>\n            </div>\n          </ModalBody>\n\n          <ModalFooter>\n            <ModalFooterButtonBar>\n              <Button\n                kind={kinds.DEFAULT}\n                size={sizes.MEDIUM}\n                onPress={onModalClose}\n              >\n                {t('Cancel')}\n              </Button>\n\n              <SpinnerButton\n                isSpinning={isSaving}\n                kind={kinds.PRIMARY}\n                size={sizes.MEDIUM}\n                type=\"submit\"\n              >\n                {t('Save')}\n              </SpinnerButton>\n            </ModalFooterButtonBar>\n          </ModalFooter>\n        </ModalContent>\n      </Form>\n    );\n  }\n}\n\nexport default DVRDeviceSettingsModalContent;\n","// extracted by mini-css-extract-plugin\nexport default {\"form\":\"iLUiT\",\"container\":\"M2GkX\",\"info\":\"iPQUa\",\"deviceImage\":\"HhOnD\",\"model\":\"ThIWu\",\"settings\":\"kM_P2\"};","/* eslint-plugin-disable @typescript-eslint */\n\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { createSelector } from 'reselect';\nimport {\n  clearDeviceSettingsSaveError,\n  saveDeviceSettings,\n  saveDeviceTitle,\n} from 'app/js/stores/actions/ui/dvrSetupActions';\nimport createDVRDeviceSelector from 'app/js/stores/selectors/livetv/createDVRDeviceSelector';\nimport { scheduleImmediateUpdate } from 'app/js/utils/state/stateUpdateScheduler';\nimport DVRDeviceSettingsModalContent from './DVRDeviceSettingsModalContent';\n\nfunction createMapStateToProps() {\n  return createSelector(\n    // @ts-expect-error ts-migrate(6133) FIXME: 'appState' is declared but its value is never read... Remove this comment to see the full error message\n    (appState, { dvrID }) => dvrID,\n    createDVRDeviceSelector(),\n    (dvrID, device) => {\n      const {\n        key: deviceID,\n        model,\n        uri,\n        prefs,\n        title,\n        thumb,\n        isSaving,\n        saveError,\n      } = device;\n\n      return {\n        dvrID,\n        deviceID,\n        model,\n        uri,\n        prefs,\n        title,\n        thumb,\n        isSaving,\n        saveError,\n      };\n    }\n  );\n}\n\ntype DVRDeviceSettingsModalContentConnectorProps = {\n  serverEntityID: string;\n  dvrID: number;\n  deviceID: number;\n  onModalClose: (...args: any[]) => any;\n  saveDeviceSettings: (...args: any[]) => any;\n  saveDeviceTitle: (...args: any[]) => any;\n  clearDeviceSettingsSaveError: (...args: any[]) => any;\n};\n\nclass DVRDeviceSettingsModalContentConnector extends Component<DVRDeviceSettingsModalContentConnectorProps> {\n  //\n  // Listeners\n\n  onSubmit = (formValues: any) => {\n    const { serverEntityID, dvrID, deviceID } = this.props;\n    const { deviceTitle, ...prefs } = formValues;\n\n    scheduleImmediateUpdate(() => {\n      this.props.saveDeviceSettings({ serverEntityID, dvrID, deviceID, prefs });\n      this.props.saveDeviceTitle({\n        serverEntityID,\n        dvrID,\n        deviceID,\n        title: deviceTitle,\n      });\n    });\n  };\n\n  onModalClose = () => {\n    const { dvrID, deviceID } = this.props;\n\n    this.props.clearDeviceSettingsSaveError({ dvrID, deviceID });\n    this.props.onModalClose();\n  };\n\n  //\n  // Render\n\n  render() {\n    return (\n      // @ts-expect-error ts-migrate(2769) FIXME: No overload matches this call.\n      <DVRDeviceSettingsModalContent\n        {...this.props}\n        onModalClose={this.onModalClose}\n        onSubmit={this.onSubmit}\n      />\n    );\n  }\n}\n\nexport default connect(createMapStateToProps, {\n  saveDeviceSettings,\n  saveDeviceTitle,\n  clearDeviceSettingsSaveError,\n})(DVRDeviceSettingsModalContentConnector);\n","/* eslint-plugin-disable @typescript-eslint */\n\nimport { createSelector } from 'reselect';\nimport _ from 'underscore';\nimport createDVRSelector from './createDVRSelector';\n\nfunction createDVRDeviceSelector() {\n  return createSelector(\n    // @ts-expect-error ts-migrate(6133) FIXME: 'appState' is declared but its value is never read... Remove this comment to see the full error message\n    (appState, { deviceID }) => deviceID,\n    createDVRSelector(),\n    (deviceID, dvr) => {\n      if (!dvr) {\n        return;\n      }\n\n      return _.find(dvr.devices, { key: deviceID });\n    }\n  );\n}\n\nexport default createDVRDeviceSelector;\n","/* eslint-plugin-disable @typescript-eslint */\n\nimport React from 'react';\nimport * as metricsPages from 'app/js/utils/constants/metrics/metricsPages';\nimport Modal from 'app/js/views/v3/components/core/modals/Modal';\nimport DVRDeviceSettingsModalContentConnector from './DVRDeviceSettingsModalContentConnector';\n\ntype DVRDeviceSettingsModalProps = {\n  isOpen: boolean;\n  metricsProperties: any;\n  onModalClose: (...args: any[]) => any;\n};\n\nfunction DVRDeviceSettingsModal(props: DVRDeviceSettingsModalProps) {\n  const { isOpen, metricsProperties, onModalClose, ...otherProps } = props;\n\n  return (\n    <Modal\n      isOpen={isOpen}\n      metricsPage={metricsPages.DVR_DEVICE_SETTINGS}\n      metricsProperties={metricsProperties}\n      onModalClose={onModalClose}\n    >\n      <DVRDeviceSettingsModalContentConnector\n        onModalClose={onModalClose}\n        {...otherProps}\n      />\n    </Modal>\n  );\n}\n\nexport default DVRDeviceSettingsModal;\n","// extracted by mini-css-extract-plugin\nexport default {\"container\":\"fvnNO\",\"modelContainer\":\"iaTI2\",\"title\":\"vRzy8\",\"deviceActionButton\":\"k7ycl o4z1S IYkbp\",\"attribute\":\"Nt_Di\",\"attributeTitle\":\"kvG4D\",\"attributeValue\":\"XW8ZT\",\"enabledChannelsCount\":\"nzPBt IYkbp\",\"tuner\":\"PUGOb\",\"activeTuner\":\"DM9qa\",\"deviceWarning\":\"d6J6k\",\"deviceWarningIconContainer\":\"p31yD\"};","import classNames from 'classnames';\nimport React, { ReactElement, useCallback, useEffect, useMemo } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport * as metricsContexts from 'app/js/utils/constants/metrics/metricsContexts';\nimport t from 'app/js/utils/t';\nimport { useSourceContext } from 'app/js/v4/core/servers/components/SourceContextProvider';\nimport IconButton from 'app/js/v4/core/ui/buttons/components/IconButton';\nimport Link from 'app/js/v4/core/ui/buttons/components/Link';\nimport useDisclosure from 'app/js/v4/core/ui/hooks/useDisclosure';\nimport Kind from 'app/js/v4/core/ui/types/Kind';\nimport DVRManageChannelsModal from 'app/js/v4/features/dvrManagement/components/settings/DVRManageChannelsModal';\nimport {\n  ChannelMapping,\n  DVR,\n  MediaGrabberDevice,\n  MediaGrabberDeviceStatus,\n} from 'app/js/v4/features/dvrManagement/dvrManagementTypes';\nimport dvrSetupSlice from 'app/js/v4/features/dvrManagement/dvrSetupSlice';\nimport createDeviceActiveTunerCountSelector from 'app/js/v4/features/dvrManagement/selectors/createDeviceActiveTunerCountSelector';\nimport createDeviceChannelsSelector from 'app/js/v4/features/dvrManagement/selectors/createDeviceChannelsSelector';\nimport DVRDeviceSettingsModal from 'app/js/views/v3/components/livetv/device/DVRDeviceSettingsModal';\nimport IconAlert from 'app/glyphs/alert-560.svg';\nimport IconRemove from 'app/glyphs/remove-560.svg';\nimport IconSettings from 'app/glyphs/settings-560.svg';\nimport styles from './LiveTVSettingsDevice.css';\n\nconst metricsProperties = {\n  context: metricsContexts.SETTINGS,\n};\n\ninterface LiveTVSettingsDeviceProps {\n  dvrID: DVR['key'];\n  deviceKey: MediaGrabberDevice['key'];\n  model: MediaGrabberDevice['model'];\n  title: MediaGrabberDevice['title'];\n  status: MediaGrabberDevice['status'];\n  uri: MediaGrabberDevice['uri'];\n  tunerCount: MediaGrabberDevice['tuners'];\n  channelMappings?: ChannelMapping[];\n  canRemoveDevice: boolean;\n  hasPrefs: boolean;\n}\n\ninterface Tuner {\n  active: boolean;\n}\n\nfunction createTuners(tunerCount: number, activeTunerCount: number): Tuner[] {\n  return Array.from({ length: tunerCount }).map((_, i) => {\n    return { active: i < activeTunerCount };\n  });\n}\n\nexport default function LiveTVSettingsDevice({\n  dvrID,\n  deviceKey,\n  model,\n  title,\n  status,\n  uri,\n  tunerCount,\n  channelMappings,\n  canRemoveDevice,\n  hasPrefs,\n}: LiveTVSettingsDeviceProps): ReactElement {\n  const dispatch = useDispatch();\n  const [server] = useSourceContext();\n  const deviceSettingsModalState = useDisclosure();\n  const manageChannelsModalState = useDisclosure();\n\n  const selectActiveTunerCount = useMemo(\n    () => createDeviceActiveTunerCountSelector(server, deviceKey),\n    [server, deviceKey]\n  );\n  const selectDeviceChannels = useMemo(\n    () => createDeviceChannelsSelector(deviceKey),\n    [deviceKey]\n  );\n\n  const activeTunerCount = useSelector(selectActiveTunerCount);\n  const { channels, isPending: isDeviceChannelsPending } =\n    useSelector(selectDeviceChannels);\n\n  const tuners = useMemo(\n    () => createTuners(tunerCount, activeTunerCount),\n    [tunerCount, activeTunerCount]\n  );\n\n  const isDead = status === MediaGrabberDeviceStatus.Dead;\n  const enabledChannelsCount =\n    channelMappings?.filter((mapping) => mapping.enabled).length ?? 0;\n\n  //\n  // Callbacks\n\n  const onRemoveDevicePress = useCallback(() => {\n    dispatch(\n      dvrSetupSlice.actions.removeDVRDeviceRequested({\n        server,\n        dvrID,\n        deviceKey,\n      })\n    );\n  }, [dispatch, server, dvrID, deviceKey]);\n\n  const onManageChannelsModalClose = useCallback(() => {\n    manageChannelsModalState.onClose();\n\n    // Fetch DVR again to get any potential new channel mappings.\n    dispatch(dvrSetupSlice.actions.dvrFetchRequested({ server }));\n  }, [dispatch, server, manageChannelsModalState]);\n\n  const onDeviceSettingsModalClose = useCallback(() => {\n    deviceSettingsModalState.onClose();\n\n    // Fetch DVR again to get any potential changes to the device.\n    dispatch(dvrSetupSlice.actions.dvrFetchRequested({ server }));\n  }, [dispatch, server, deviceSettingsModalState]);\n\n  //\n  // Effects\n\n  useEffect(() => {\n    dispatch(\n      dvrSetupSlice.actions.deviceChannelsFetchRequested({\n        server,\n        deviceKey,\n      })\n    );\n  }, [dispatch, server, deviceKey]);\n\n  //\n  // Render\n\n  return (\n    <div className={styles.container}>\n      <div className={styles.modelContainer}>\n        <div className={styles.title}>{title ?? model}</div>\n        {hasPrefs ? (\n          <IconButton\n            className={styles.deviceActionButton}\n            iconComponent={IconSettings}\n            title={t('Device Settings')}\n            onPress={deviceSettingsModalState.onOpen}\n          />\n        ) : null}\n        {canRemoveDevice ? (\n          <IconButton\n            className={styles.deviceActionButton}\n            iconComponent={IconRemove}\n            kind={Kind.Danger}\n            title={t('Remove Device')}\n            onPress={onRemoveDevicePress}\n          />\n        ) : null}\n      </div>\n      {isDead ? (\n        <div className={styles.deviceWarning}>\n          <div className={styles.deviceWarningIconContainer}>\n            <IconAlert />\n          </div>\n\n          {t(\n            'Device not found. Ensure your device is powered on and connected to your network.'\n          )}\n        </div>\n      ) : (\n        <>\n          <div className={styles.attribute}>\n            <div className={styles.attributeTitle}>{t('Tuner status')}</div>\n            <div className={styles.attributeValue}>\n              {tuners.map((tuner, index) => {\n                return (\n                  <div\n                    key={index}\n                    className={classNames(\n                      styles.tuner,\n                      tuner.active && styles.activeTuner\n                    )}\n                  />\n                );\n              })}\n            </div>\n          </div>\n          <div className={styles.attribute}>\n            <div className={styles.attributeTitle}>{t('Channels')}</div>\n            <div className={styles.attributeValue}>\n              {isDeviceChannelsPending ? (\n                t('Loading channels...')\n              ) : (\n                <>\n                  ({channels.length})\n                  <Link\n                    className={styles.enabledChannelsCount}\n                    kind={Kind.Primary}\n                    onPress={manageChannelsModalState.onOpen}\n                  >\n                    {t('{enabledChannelsCount} enabled', {\n                      enabledChannelsCount,\n                    })}\n                  </Link>\n                </>\n              )}\n            </div>\n          </div>\n          {uri ? (\n            <div className={styles.attribute}>\n              <div className={styles.attributeTitle}>{t('IP address')}</div>\n              <div className={styles.attributeValue}>{uri}</div>\n            </div>\n          ) : null}\n\n          {title ? (\n            <div className={styles.attribute}>\n              <div className={styles.attributeTitle}>{t('Model')}</div>\n              <div className={styles.attributeValue}>{model}</div>\n            </div>\n          ) : null}\n        </>\n      )}\n\n      {!isDead ? (\n        <DVRManageChannelsModal\n          deviceKey={deviceKey}\n          isOpen={manageChannelsModalState.isOpen}\n          onModalClose={onManageChannelsModalClose}\n        />\n      ) : null}\n\n      {!isDead ? (\n        <DVRDeviceSettingsModal\n          // @ts-expect-error ts-migrate(2322) FIXME: Type '{ serverEntityID: string; dvrID: number; dev... Remove this comment to see the full error message\n          deviceID={Number(deviceKey)}\n          dvrID={Number(dvrID)}\n          isOpen={deviceSettingsModalState.isOpen}\n          metricsProperties={metricsProperties}\n          serverEntityID={server.entityID}\n          onModalClose={onDeviceSettingsModalClose}\n        />\n      ) : null}\n    </div>\n  );\n}\n","import { createSelector, Selector } from 'reselect';\nimport createServerActivitiesSelector from 'app/js/v4/core/serverActivities/selectors/createServerActivitiesSelector';\nimport {\n  ServerActivity,\n  ServerActivityType,\n} from 'app/js/v4/core/serverActivities/serverActivitiesTypes';\nimport { Server } from 'app/js/v4/core/servers/serversTypes';\nimport { MediaGrabberDevice } from 'app/js/v4/features/dvrManagement/dvrManagementTypes';\nimport { LegacyRootState } from 'app/js/v4/root/rootTypes';\n\nconst createDeviceActiveTunerCountSelector = (\n  server: Server,\n  deviceKey: MediaGrabberDevice['key']\n): Selector<LegacyRootState, number> => {\n  return createSelector(createServerActivitiesSelector(server), (activities) =>\n    activities.reduce((acc: number, activity: ServerActivity) => {\n      if (\n        activity.type === ServerActivityType.GrabberGrab &&\n        activity?.Context.deviceID === deviceKey\n      ) {\n        acc++;\n      }\n\n      return acc;\n    }, 0)\n  );\n};\n\nexport default createDeviceActiveTunerCountSelector;\n","import React, { ReactElement } from 'react';\nimport { useSelector } from 'react-redux';\nimport serverFeatures from 'app/js/models/server/serverFeatures';\nimport isVersionOrNewer from 'app/js/utils/isVersionOrNewer';\nimport t from 'app/js/utils/t';\nimport { useSourceContext } from 'app/js/v4/core/servers/components/SourceContextProvider';\nimport Button from 'app/js/v4/core/ui/buttons/components/Button';\nimport { DVR } from 'app/js/v4/features/dvrManagement/dvrManagementTypes';\nimport selectSelectedDVRDevices from 'app/js/v4/features/dvrManagement/selectors/selectSelectedDVRDevices';\nimport IconToolbarFilterAdd from 'app/glyphs/toolbar-filter-add-560.svg';\nimport LiveTVSettingsDevice from './LiveTVSettingsDevice';\nimport styles from './LiveTVSettingsDeviceList.css';\n\ninterface LiveTVSettingsDeviceListProps {\n  dvrID: DVR['key'];\n  onAddDevicePress(): void;\n}\n\nexport default function LiveTVSettingsDeviceList({\n  dvrID,\n  onAddDevicePress,\n}: LiveTVSettingsDeviceListProps): ReactElement {\n  const [server] = useSourceContext();\n  const devices = useSelector(selectSelectedDVRDevices);\n\n  const hasUnsupportedServer = !isVersionOrNewer(\n    server.version,\n    serverFeatures.v4DVRSetup\n  );\n\n  //\n  // Render\n\n  return (\n    <div>\n      {devices?.map((device) => (\n        <LiveTVSettingsDevice\n          key={device.key}\n          canRemoveDevice={devices.length > 1}\n          channelMappings={device.ChannelMapping}\n          deviceKey={device.key}\n          dvrID={dvrID}\n          hasPrefs={!!device.Setting?.length}\n          model={device.model}\n          status={device.status}\n          title={device.title}\n          tunerCount={device.tuners}\n          uri={device.uri}\n        />\n      ))}\n      <Button\n        className={styles.addDeviceButton}\n        isDisabled={hasUnsupportedServer}\n        onPress={onAddDevicePress}\n      >\n        <IconToolbarFilterAdd className={styles.addDeviceButtonIcon} />\n        {t('Add another device')}\n      </Button>\n    </div>\n  );\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"addDeviceButton\":\"E4QPc\",\"addDeviceButtonIcon\":\"TdaFi\",\"unsupportedInfo\":\"AsPxm\",\"container\":\"E75m0\"};","/* eslint-plugin-disable @typescript-eslint */\n\nimport React from 'react';\nimport styles from './PlexPassUpsell.css';\n\ntype PlexPassUpsellProps = {\n  className: string;\n  iconComponent: React.ReactElement;\n  title: string;\n  text: string;\n};\n\nfunction PlexPassUpsell(props: PlexPassUpsellProps) {\n  const { className, iconComponent: Icon, title, text } = props;\n\n  return (\n    <div className={className}>\n      <div className={styles.iconContainer}>\n        {/* @ts-expect-error ts-migrate(2604) FIXME: JSX element type 'Icon' does not have any construc... Remove this comment to see the full error message */}\n        <Icon className={styles.icon} />\n      </div>\n\n      <div className={styles.title}>{title}</div>\n\n      <div className={styles.text}>{text}</div>\n    </div>\n  );\n}\n\nPlexPassUpsell.defaultProps = {\n  className: styles.upsell,\n};\n\nexport default PlexPassUpsell;\n","// extracted by mini-css-extract-plugin\nexport default {\"upsell\":\"isxJs\",\"iconContainer\":\"XtEJZ\",\"icon\":\"c74bc\",\"title\":\"oTsb6\",\"text\":\"qWxvq\"};","/* eslint-plugin-disable @typescript-eslint */\n\nimport React from 'react';\nimport PlexPassUpsell from 'app/js/views/v3/components/core/PlexPassUpsell';\nimport styles from './PlexPassUpsellInfo.css';\n\ntype PlexPassUpsellInfoProps = {\n  className: string;\n  moreInfoClassName: string;\n  iconComponent: React.ReactElement;\n  title: string;\n  text: string;\n  moreInfo: React.ReactNode;\n  children?: React.ReactNode;\n};\n\nexport default function PlexPassUpsellInfo(props: PlexPassUpsellInfoProps) {\n  const {\n    className,\n    moreInfoClassName,\n    iconComponent,\n    title,\n    text,\n    moreInfo,\n    children,\n  } = props;\n\n  return (\n    <div className={className}>\n      <PlexPassUpsell\n        className={styles.upsell}\n        iconComponent={iconComponent}\n        text={text}\n        title={title}\n      />\n\n      <div className={moreInfoClassName}>{moreInfo}</div>\n      {children}\n    </div>\n  );\n}\n\nPlexPassUpsellInfo.defaultProps = {\n  className: styles.info,\n  moreInfoClassName: styles.moreInfo,\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"info\":\"WBlnJ\",\"moreInfo\":\"J9qqk\",\"upsell\":\"wEi1t isxJs\"};","/* eslint-plugin-disable @typescript-eslint */\n\nimport React, { Component } from 'react';\nimport t from 'app/js/utils/t';\nimport Button from 'app/js/views/v3/components/core/buttons/Button';\nimport PlexPassModal from 'app/js/views/v3/components/user/modals/PlexPassModal';\nimport * as kinds from 'app/js/views/v3/helpers/props/kinds';\nimport * as sizes from 'app/js/views/v3/helpers/props/sizes';\n\ntype PlexPassUpsellButtonProps = {\n  modalMetricsProperties: any;\n  origin?: any; // TODO: PropTypes.oneOf(upsellOrigins.ALL)\n};\n\ntype PlexPassUpsellButtonState = any;\n\nclass PlexPassUpsellButton extends Component<\n  PlexPassUpsellButtonProps,\n  PlexPassUpsellButtonState\n> {\n  //\n  // Lifecycle\n\n  constructor(props: any, context: any) {\n    super(props, context);\n\n    this.state = {\n      isPlexPassModalOpen: false,\n    };\n  }\n\n  //\n  // Listeners\n\n  onPlexPassPress = () => {\n    this.setState({ isPlexPassModalOpen: true });\n  };\n\n  onPlexPassModalClose = () => {\n    this.setState({ isPlexPassModalOpen: false });\n  };\n\n  //\n  // Render\n\n  render() {\n    const { modalMetricsProperties, origin } = this.props;\n\n    const { isPlexPassModalOpen } = this.state;\n\n    return (\n      <Button\n        kind={kinds.PRIMARY}\n        size={sizes.LARGE}\n        onPress={this.onPlexPassPress}\n      >\n        {t('Get a Plex Pass')}\n        <PlexPassModal\n          isOpen={isPlexPassModalOpen}\n          metricsProperties={modalMetricsProperties}\n          origin={origin}\n          onModalClose={this.onPlexPassModalClose}\n        />\n      </Button>\n    );\n  }\n}\n\nexport default PlexPassUpsellButton;\n","/* eslint-plugin-disable @typescript-eslint */\n\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { createSelector } from 'reselect';\nimport createUnstableServerSelector from 'app/js/stores/selectors/server/createUnstableServerSelector';\nimport selectUser from 'app/js/stores/selectors/user/selectUser';\nimport ServerFeaturePlexPassUpsellButton from 'app/js/views/v3/components/core/buttons/ServerFeaturePlexPassUpsellButton';\n\nfunction createMapStateToProps() {\n  return createSelector(\n    selectUser,\n    createUnstableServerSelector(),\n    (user, server) => {\n      return {\n        machineIdentifier: server.machineIdentifier,\n        isClaimed: server.isClaimed,\n        isSignedIn: !!user && user.signedIn,\n        hasPlexSubscription: !!user && user.hasPlexSubscription,\n      };\n    }\n  );\n}\nconst ServerFeaturePlexPassUpsellButtonConnector = connect(\n  createMapStateToProps\n)(ServerFeaturePlexPassUpsellButton);\n(ServerFeaturePlexPassUpsellButtonConnector as any).propTypes = {\n  ...(ServerFeaturePlexPassUpsellButtonConnector as any).propTypes,\n  serverEntityID: PropTypes.string.isRequired,\n};\nexport default ServerFeaturePlexPassUpsellButtonConnector;\n","/* eslint-plugin-disable @typescript-eslint */\n\nimport React from 'react';\nimport t from 'app/js/utils/t';\nimport Button from 'app/js/views/v3/components/core/buttons/Button';\nimport * as kinds from 'app/js/views/v3/helpers/props/kinds';\nimport * as sizes from 'app/js/views/v3/helpers/props/sizes';\nimport getServerSettingsRoute from 'app/js/views/v3/helpers/routes/getServerSettingsRoute';\nimport PlexPassUpsellButton from './PlexPassUpsellButton';\n\ntype ServerFeaturePlexPassUpsellButtonProps = {\n  className?: string;\n  machineIdentifier: string;\n  origin?: any; // TODO: PropTypes.oneOf(upsellOrigins.ALL)\n  modalMetricsProperties: any;\n  isClaimed: boolean;\n  isSignedIn: boolean;\n  hasPlexSubscription: boolean;\n};\n\nfunction ServerFeaturePlexPassUpsellButton(\n  props: ServerFeaturePlexPassUpsellButtonProps\n) {\n  const {\n    className,\n    origin,\n    modalMetricsProperties,\n    isSignedIn,\n    isClaimed,\n    hasPlexSubscription,\n  } = props;\n\n  if (hasPlexSubscription && isClaimed) {\n    return null;\n  }\n\n  if (!hasPlexSubscription && isSignedIn) {\n    return (\n      <PlexPassUpsellButton\n        modalMetricsProperties={modalMetricsProperties}\n        origin={origin}\n      />\n    );\n  }\n\n  return (\n    <Button\n      className={className}\n      kind={kinds.PRIMARY}\n      size={sizes.LARGE}\n      to={getServerSettingsRoute('settings', 'general')}\n    >\n      {isSignedIn ? t('Claim Server') : t('Sign In')}\n    </Button>\n  );\n}\n\nexport default ServerFeaturePlexPassUpsellButton;\n","\n    import PropTypes from 'prop-types';\n    import React from 'react';\n    import styles from 'app/js/views/v3/components/core/base/PlexIcon.css';\n\n    function IconMarketingDvr(props) {\n      const label = props['aria-label'];\n      const className = props.className;\n      const style = props.style;\n\n      const svgProps = {\"viewBox\":\"0 0 560 560\",\"xmlns\":\"http://www.w3.org/2000/svg\",\"strokeMiterlimit\":\"1.414\",\"strokeLinejoin\":\"round\",\"id\":\"plex-icon-marketing-dvr-560\"};\n\n      svgProps['aria-hidden'] = !label;\n      svgProps.style = style;\n      svgProps.className = styles.plexIcon + (className ? ' ' + className : '');\n\n      const children = [React.createElement.apply(React, ['path', {\"d\":\"m420 280c-77.21 0-140 62.79-140 140 0 77.21 62.79 140 140 140 77.21 0 140-62.79 140-140 0-77.21-62.79-140-140-140m0 256.67c-64.33 0-116.67-52.34-116.67-116.67 0-64.33 52.34-116.67 116.67-116.67 64.33 0 116.67 52.34 116.67 116.67 0 64.33-52.34 116.67-116.67 116.67m128.33-373.35h-.035c6.44 0 11.672 5.232 11.672 11.672v104.88h-23.328v-93.22h-513.33v282.36c0 11.584 9.8 20.982 21.892 20.982h188.11v23.328h-188.11c-24.937 0-45.22-19.88-45.22-44.31v-294.02c0-6.44 5.233-11.672 11.673-11.672h536.67m-128.33 186.67c-38.587 0-70 31.413-70 70 0 38.587 31.413 70 70 70 38.587 0 70-31.413 70-70 0-38.587-31.413-70-70-70m0 116.67c-25.742 0-46.672-20.93-46.672-46.673 0-25.742 20.93-46.672 46.672-46.672 25.743 0 46.673 20.93 46.673 46.672 0 25.743-20.93 46.673-46.673 46.673m105-466.67h.018c19.302 0 35 15.698 35 35.02v93.31c0 6.439-5.233 11.672-11.673 11.672h-536.67c-6.44 0-11.673-5.232-11.673-11.672v-93.31c0-19.32 15.697-35.02 35-35.02h490m10.833 31.03c-1.629-4.462-5.828-7.682-10.85-7.682h-41.808l-93.33 93.33h60.34l85.64-85.65m-458.97 85.65l93.33-93.33h-48.668l-93.33 93.33h48.667m459.81 0v-53.48l-53.48 53.48h53.48m-366.47-.018l93.33-93.33h-60.34l-93.33 93.33h60.34m93.33 0l93.33-93.33h-60.34l-93.33 93.33h60.34m93.33 0l93.33-93.33h-60.34l-93.33 93.33h60.34m-321.86-93.33h.017c-6.44 0-11.672 5.25-11.672 11.69v53.5l65.19-65.19h-53.52-.017\"}].concat([]))];\n\n      if (label) {\n        children.unshift(React.createElement('title', null, label));\n      }\n\n      // Arrays require a key, but a fixed number of elements don't.\n      // Spread the elements since it'll be a fixed number anyways\n      return React.createElement.apply(React, ['svg', svgProps].concat(children));\n    };\n\n    IconMarketingDvr.propTypes = {\n      'aria-label': PropTypes.string,\n      className: PropTypes.string,\n      style: PropTypes.object\n    };\n\n    export default IconMarketingDvr;\n  ","// extracted by mini-css-extract-plugin\nexport default {\"button\":\"nQNOE r2dcz x5jRQ\",\"moreInfo\":\"thIsC J9qqk\"};","import React, { ReactElement } from 'react';\nimport {\n  COMMUNITY_TUNERS_SUPPORT_URL,\n  SUPPORTED_TUNERS_SUPPORT_URL,\n} from 'app/js/utils/constants/commonUrls';\nimport * as metricsContexts from 'app/js/utils/constants/metrics/metricsContexts';\nimport * as upsellOrigins from 'app/js/utils/constants/upsellOrigins';\nimport t from 'app/js/utils/t';\nimport { useSourceContext } from 'app/js/v4/core/servers/components/SourceContextProvider';\nimport PlexPassUpsellInfo from 'app/js/views/v3/components/core/PlexPassUpsellInfo';\nimport TagInjector from 'app/js/views/v3/components/core/TagInjector';\nimport Button from 'app/js/views/v3/components/core/buttons/Button';\nimport Link from 'app/js/views/v3/components/core/buttons/Link';\nimport ServerFeaturePlexPassUpsellButtonConnector from 'app/js/views/v3/components/core/buttons/ServerFeaturePlexPassUpsellButtonConnector';\nimport * as kinds from 'app/js/views/v3/helpers/props/kinds';\nimport * as sizes from 'app/js/views/v3/helpers/props/sizes';\nimport IconMarketingDvr from 'app/glyphs/marketing-dvr-560.svg';\nimport styles from './LiveTVSettingsZeroState.css';\n\ninterface LiveTVSettingsZeroStateProps {\n  hasDVRFeature: boolean;\n  hasLiveTVSetupFeature: boolean;\n  hasUnsupportedServer: boolean;\n  onSetupPress(): void;\n}\n\nexport default function LiveTVSettingsZeroState({\n  hasDVRFeature,\n  hasLiveTVSetupFeature,\n  hasUnsupportedServer,\n  onSetupPress,\n}: LiveTVSettingsZeroStateProps): ReactElement {\n  const [server] = useSourceContext();\n  const hasDVRSetup = hasDVRFeature || hasLiveTVSetupFeature;\n\n  return (\n    <PlexPassUpsellInfo\n      // @ts-expect-error ts-migrate(2322) FIXME: Type 'ComponentType<SVGAttributes<SVGElement>>' is... Remove this comment to see the full error message\n      iconComponent={IconMarketingDvr}\n      moreInfo={\n        <TagInjector\n          message={t(\n            \"To get started recording TV, connect a tuner device to your network. Here's a {openLinkSupported}list of supported devices{closeLinkSupported}. However, some tuners not officially supported {openLinkUnsupported}work as well{closeLinkUnsupported}!\"\n          )}\n          tags={[\n            {\n              open: 'openLinkSupported',\n              close: 'closeLinkSupported',\n              component: Link,\n              kind: kinds.PRIMARY,\n              to: SUPPORTED_TUNERS_SUPPORT_URL,\n              target: '_blank',\n            },\n            {\n              open: 'openLinkUnsupported',\n              close: 'closeLinkUnsupported',\n              component: Link,\n              kind: kinds.PRIMARY,\n              to: COMMUNITY_TUNERS_SUPPORT_URL,\n              target: '_blank',\n            },\n          ]}\n        />\n      }\n      moreInfoClassName={styles.moreInfo}\n      text={t(\n        'With Plex Pass and a digital tuner, you can record over-the-air broadcast TV and watch your favorite shows, movies, news, and sports on any device, anywhere in the world. Cut the cord and love TV again.'\n      )}\n      title={t('Live TV & DVR')}\n    >\n      {hasDVRSetup ? (\n        <Button\n          className={styles.button}\n          isDisabled={hasUnsupportedServer}\n          kind={kinds.PRIMARY}\n          size={sizes.LARGE}\n          onPress={onSetupPress}\n        >\n          {t('Set Up Plex DVR')}\n        </Button>\n      ) : (\n        <ServerFeaturePlexPassUpsellButtonConnector\n          className={styles.button}\n          modalMetricsProperties={{\n            context: metricsContexts.DVR_SETUP,\n          }}\n          origin={upsellOrigins.DVR_SETUP}\n          serverEntityID={server.entityID}\n        />\n      )}\n    </PlexPassUpsellInfo>\n  );\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"container\":\"g_DBy\",\"sectionTitle\":\"lmRY8\",\"channelsListContainer\":\"oIJ22\",\"dvrContainer\":\"zw6NS\",\"deviceListContainer\":\"bktvF\"};","import { Selector } from 'react-redux';\nimport { createSelector } from 'reselect';\nimport { LibraryManagementState } from 'app/js/v4/features/libraryManagement/libraryManagementTypes';\nimport selectFeatures from 'app/js/v4/features/selectFeatures';\nimport { LegacyRootState } from 'app/js/v4/root/rootTypes';\n\nconst selectLibraryManagement: Selector<\n  LegacyRootState,\n  LibraryManagementState\n> = createSelector(selectFeatures, (features) => features.libraryManagement);\n\nexport default selectLibraryManagement;\n","import React, { ReactElement, useCallback, useEffect, useMemo } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport * as features from 'app/js/utils/constants/user/features';\nimport t from 'app/js/utils/t';\nimport { useSourceContext } from 'app/js/v4/core/servers/components/SourceContextProvider';\nimport Checkbox from 'app/js/v4/core/ui/forms/components/Checkbox';\nimport libraryManagementSlice from 'app/js/v4/features/libraryManagement/libraryManagementSlice';\nimport createMergeRecentlyAddedSettingSelector from 'app/js/v4/features/libraryManagement/selectors/createMergeRecentlyAddedSettingSelector';\nimport styles from './LibrarySettings.css';\n\nexport default function LibrarySettings(): ReactElement | null {\n  const dispatch = useDispatch();\n  const [server] = useSourceContext();\n\n  const canMergeRecentlyAdded = server.ownerFeatures?.includes(\n    features.MERGE_RECENTLY_ADDED\n  );\n  const setting = useSelector(\n    createMergeRecentlyAddedSettingSelector(server.machineIdentifier)\n  );\n\n  const hasSetting = useMemo(\n    () => setting?.isMergeRecentlyAddedEnabled != null,\n    [setting]\n  );\n\n  const isDisabled = useMemo(\n    () => !setting || setting.isUpdating || setting.isPending || !hasSetting,\n    [hasSetting, setting]\n  );\n\n  //\n  // Effects\n\n  useEffect(() => {\n    dispatch(\n      libraryManagementSlice.actions.settingsFetchRequested({\n        server,\n      })\n    );\n  }, [dispatch, server]);\n\n  //\n  // Callbacks\n\n  const onSettingChanged = useCallback(() => {\n    if (!canMergeRecentlyAdded || isDisabled) {\n      return;\n    }\n\n    dispatch(\n      libraryManagementSlice.actions.settingsUpdateRequested({\n        server,\n        isMergeRecentlyAddedEnabled: !setting?.isMergeRecentlyAddedEnabled,\n      })\n    );\n  }, [\n    canMergeRecentlyAdded,\n    dispatch,\n    isDisabled,\n    server,\n    setting?.isMergeRecentlyAddedEnabled,\n  ]);\n\n  //\n  // Render\n\n  return canMergeRecentlyAdded && hasSetting ? (\n    <div className={styles.container}>\n      <label htmlFor=\"recentlyAddedMerged\">\n        <Checkbox\n          checked={setting?.isMergeRecentlyAddedEnabled}\n          disabled={isDisabled}\n          name=\"recentlyAddedMerged\"\n          onChange={onSettingChanged}\n        />\n        <span className={styles.label}>{t('Merge Recently Added items')}</span>\n      </label>\n      <div className={styles.info}>\n        {t(\n          'Recently Added items from the same media type will be combined together on Home for libraries Recommended to Home. Only content from libraries pinned to the app sidebar will appear in Merged Recently Added recommendations.'\n        )}\n      </div>\n    </div>\n  ) : null;\n}\n","import { createSelector, Selector } from 'reselect';\nimport { SettingsState } from 'app/js/v4/features/libraryManagement/libraryManagementTypes';\nimport selectLibraryManagement from 'app/js/v4/features/libraryManagement/selectors/selectLibraryManagement';\nimport { LegacyRootState } from 'app/js/v4/root/rootTypes';\n\nconst createMergeRecentlyAddedSettingSelector = (\n  machineIdentifier: string\n): Selector<LegacyRootState, SettingsState | undefined> => {\n  return createSelector(\n    selectLibraryManagement,\n    (libraryManagement) => libraryManagement.settings[machineIdentifier]\n  );\n};\n\nexport default createMergeRecentlyAddedSettingSelector;\n","// extracted by mini-css-extract-plugin\nexport default {\"container\":\"A4KmS\",\"label\":\"ppw_M\",\"info\":\"yAnlg\"};","import React, { ReactElement } from 'react';\nimport {\n  IconArtist,\n  IconBook,\n  IconCamera,\n  IconGames,\n  IconMovie,\n  IconMusic,\n  IconPlaylist,\n  IconTv,\n  IconVideo,\n} from '@plex/react-chroma-icon';\nimport { MetadataType } from 'app/js/v4/core/metadata/metadataTypes';\n\nfunction assertNever(\n  metadataType:\n    | MetadataType.Channel\n    | MetadataType.Collection\n    | MetadataType.Directory\n    | MetadataType.Hub\n    | MetadataType.List\n    | MetadataType.Person\n    | never\n): never {\n  throw new Error(`\"${metadataType}\" is not mapped to an icon`);\n}\n\nexport interface MetadataIconProps {\n  type: MetadataType;\n}\n\nexport default function MetadataIcon({\n  type,\n}: MetadataIconProps): ReactElement {\n  switch (type) {\n    case MetadataType.Movie:\n      return <IconMovie />;\n    case MetadataType.Show:\n    case MetadataType.Season:\n    case MetadataType.Episode:\n      return <IconTv />;\n    case MetadataType.Artist:\n      return <IconArtist />;\n    case MetadataType.Album:\n    case MetadataType.Track:\n      return <IconMusic />;\n    case MetadataType.Photo:\n    case MetadataType.PhotoAlbum:\n      return <IconCamera />;\n    case MetadataType.Clip:\n      return <IconVideo />;\n    case MetadataType.Game:\n      return <IconGames />;\n    case MetadataType.Playlist:\n      return <IconPlaylist />;\n    case MetadataType.Author:\n    case MetadataType.Audiobook:\n    case MetadataType.Chapter:\n      return <IconBook />;\n  }\n\n  assertNever(type);\n}\n","import { FocusEvent, useCallback, useEffect, useRef, useState } from 'react';\n\ntype FocusCallback = (event: FocusEvent<HTMLElement>) => void;\n\n// Use a timeout to defer the blur to the next tick, to give the focus event\n// time to clear the timeout.\nexport default function useIsFocused(): [\n  boolean,\n  FocusCallback,\n  FocusCallback\n] {\n  const [isFocused, setIsFocused] = useState(false);\n\n  const timeoutRef = useRef<number | undefined>(undefined);\n  const elRef = useRef<HTMLElement | null>(null);\n\n  const onFocus = useCallback<FocusCallback>((event) => {\n    window.clearTimeout(timeoutRef.current);\n    elRef.current = event.currentTarget;\n\n    setIsFocused(true);\n  }, []);\n\n  const onBlur = useCallback<FocusCallback>(() => {\n    timeoutRef.current = window.setTimeout(() => {\n      elRef.current = null;\n\n      setIsFocused(false);\n    });\n  }, []);\n\n  useEffect(() => {\n    function onBodyClick(event: MouseEvent): void {\n      const target = event.currentTarget;\n\n      // According to the DOM API, EventTarget does not extend HTMLElement — In\n      // fact, it is the other way around. HTMLElement extends Element, which\n      // extends Node, which extends EventTarget. See:\n      // https://github.com/microsoft/TypeScript/issues/29540\n\n      setIsFocused(\n        target instanceof HTMLElement && target.contains(elRef.current)\n      );\n    }\n\n    document.addEventListener('click', onBodyClick);\n\n    return () => {\n      document.removeEventListener('click', onBodyClick);\n    };\n  }, []);\n\n  return [isFocused, onFocus, onBlur];\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"row\":\"EMRFo\",\"alternateRow\":\"Sn3J4 EMRFo\",\"isHovered\":\"W594B\"};","import classNames from 'classnames';\nimport React, { CSSProperties, FocusEvent, ReactNode } from 'react';\nimport styles from './ListRow.css';\n\nexport interface ListRowProps {\n  className?: string;\n  alternateClassName?: string;\n  hoveredClassName?: string;\n  tabIndex?: number;\n  style?: CSSProperties;\n  isAlternate?: boolean;\n  isHovered?: boolean;\n  children?: ReactNode;\n  onFocus?(event: FocusEvent<HTMLElement>): void;\n  onBlur?(event: FocusEvent<HTMLElement>): void;\n}\n\nexport default React.forwardRef<HTMLDivElement, ListRowProps>(\n  (\n    {\n      className = styles.row,\n      alternateClassName = styles.alternateRow,\n      hoveredClassName = styles.isHovered,\n      tabIndex,\n      style = {},\n      isAlternate = false,\n      isHovered = false,\n      children,\n      onFocus,\n      onBlur,\n    },\n    forwardedRef\n  ) => {\n    return (\n      <div\n        ref={forwardedRef}\n        className={classNames(\n          isAlternate ? alternateClassName : className,\n          isHovered && hoveredClassName\n        )}\n        style={style}\n        tabIndex={tabIndex}\n        onBlur={onBlur}\n        onFocus={onFocus}\n      >\n        {children}\n      </div>\n    );\n  }\n);\n","// extracted by mini-css-extract-plugin\nexport default {\"modalContainer\":\"EXGOB ZpXJa\",\"note\":\"RfjqM\",\"checkInputGroup\":\"ywuqT\"};","import React, { useCallback, useMemo } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Dispatch } from 'redux';\nimport { upgradeLibrary } from 'app/js/stores/actions/provider/providerActions';\nimport selectAvailableLibraryUpgrades from 'app/js/stores/selectors/ui/selectAvailableLibraryUpgrades';\nimport { METADATA_AGENTS_SUPPORT_URL } from 'app/js/utils/constants/commonUrls';\nimport * as metricsPages from 'app/js/utils/constants/metrics/metricsPages';\nimport t from 'app/js/utils/t';\nimport ModalFooter from 'app/js/v4/core/ui/modals/components/ModalFooter';\nimport ModalFooterButtonBar from 'app/js/v4/core/ui/modals/components/ModalFooterButtonBar';\nimport TagInjector from 'app/js/views/v3/components/core/TagInjector';\nimport Button from 'app/js/views/v3/components/core/buttons/Button';\nimport Link from 'app/js/views/v3/components/core/buttons/Link';\nimport CheckInputGroup from 'app/js/views/v3/components/core/forms/CheckInputGroup';\nimport Form from 'app/js/views/v3/components/core/forms/Form';\nimport Modal from 'app/js/views/v3/components/core/modals/Modal';\nimport ModalBody from 'app/js/views/v3/components/core/modals/ModalBody';\nimport ModalContent from 'app/js/views/v3/components/core/modals/ModalContent';\nimport ModalHeader from 'app/js/views/v3/components/core/modals/ModalHeader';\nimport useModalState from 'app/js/views/v3/helpers/hooks/useModalState';\nimport * as kinds from 'app/js/views/v3/helpers/props/kinds';\nimport { ContentDirectory } from 'app/js/views/v3/helpers/props/shapes/contentDirectoryShape';\nimport * as sizes from 'app/js/views/v3/helpers/props/sizes';\nimport styles from './AgentUpgradeLibraryModals.css';\n\nexport interface FormValues {\n  upgradeAllLibraries: boolean;\n  refreshMetadata: boolean;\n}\n\nexport function submitForm(\n  dispatch: Dispatch<typeof upgradeLibrary>,\n  availableUpgrades: ReturnType<typeof selectAvailableLibraryUpgrades>,\n  formValues: FormValues,\n  targetMachineIdentifier?: string,\n  targetSourceDirectory?: ContentDirectory\n): void {\n  // Available upgrades always come in with all upgrades available for all\n  // libraries across all servers.\n  // In some cases we want to operate on a limited set of these;\n  //  * one library on one server\n  //  * all libraries on one server\n  // By providing a `targetMachineIdentifier`, the available upgrades are\n  // filtered to just those applying to a specific machine.\n  // By providing a `targetSourceDirectory`, the available upgrades are\n  // filtered to just those (that one) applying to a specific library.\n  // Since the specific-library upgrade modal includes an option to upgrade all\n  // libraries on a server, the presence of `upgradeAllLibraries` in the\n  // formValues skips the per-library filtering step.\n  availableUpgrades\n    .filter(([availableMachineIdentifier, , , availableSourceDirectory]) => {\n      if (\n        targetMachineIdentifier &&\n        availableMachineIdentifier !== targetMachineIdentifier\n      ) {\n        return false;\n      }\n\n      if (\n        targetSourceDirectory &&\n        availableSourceDirectory !== targetSourceDirectory &&\n        !formValues.upgradeAllLibraries\n      ) {\n        return false;\n      }\n\n      return true;\n    })\n    .forEach(([, serverEntityID, providerEntityID, contentDirectory]) => {\n      dispatch(\n        upgradeLibrary({\n          serverEntityID,\n          providerEntityID,\n          contentDirectory,\n          options: {\n            refreshMetadata: formValues.refreshMetadata,\n          },\n        })\n      );\n    });\n}\n\ninterface AgentUpgradeLibraryModalProps {\n  isOpen: boolean;\n  onClose: () => void;\n  onOpen: () => void;\n  machineIdentifier: string;\n  sourceDirectory: ContentDirectory;\n}\n\nfunction AgentUpgradeLibraryModal(\n  props: AgentUpgradeLibraryModalProps\n): React.ReactElement {\n  const dispatch = useDispatch();\n  const allAvailableUpgrades = useSelector(selectAvailableLibraryUpgrades);\n\n  const availableUpgrades = useMemo(() => {\n    return allAvailableUpgrades.filter(\n      ([availableMachineIdentifier]) =>\n        availableMachineIdentifier === props.machineIdentifier\n    );\n  }, [allAvailableUpgrades, props.machineIdentifier]);\n\n  const { onClose } = props;\n  const onSubmit = useCallback(\n    (formValues: FormValues) => {\n      onClose();\n      submitForm(\n        dispatch,\n        availableUpgrades,\n        formValues,\n        props.machineIdentifier,\n        props.sourceDirectory\n      );\n    },\n    [\n      availableUpgrades,\n      dispatch,\n      onClose,\n      props.machineIdentifier,\n      props.sourceDirectory,\n    ]\n  );\n\n  return (\n    <Modal\n      containerClassName={styles.modalContainer}\n      isOpen={props.isOpen}\n      metricsPage={metricsPages.CONFIRM_UPGRADE_LIBRARY}\n      size={sizes.SMALL}\n      onModalClose={props.onClose}\n    >\n      <Form onSubmit={onSubmit}>\n        <ModalContent onModalClose={props.onClose}>\n          <ModalHeader>{t('Upgrade Library')}</ModalHeader>\n          <ModalBody>\n            <TagInjector\n              message={t(\n                'This library is currently using a legacy agent to match items and fetch artwork and other metadata. {openLink}There is a newer, faster, and more accurate agent available{closeLink} for this type of media. Would you like to upgrade the library now?'\n              )}\n              tags={[\n                {\n                  open: 'openLink',\n                  close: 'closeLink',\n                  component: Link,\n                  kind: kinds.PRIMARY,\n                  to: METADATA_AGENTS_SUPPORT_URL,\n                  target: '_blank',\n                },\n              ]}\n            />\n            <div className={styles.note}>\n              {t(\n                'Note: Metadata for existing items in this library will not be affected until they are refreshed. We can refresh metadata immediately after updating this library or you can wait for the next scheduled update.'\n              )}\n            </div>\n\n            <CheckInputGroup\n              // @ts-expect-error\n              checkboxText={t(\n                'Refresh metadata for this library after upgrading'\n              )}\n              formGroupClassName={styles.checkInputGroup}\n              initialValue={true}\n              name=\"refreshMetadata\"\n              size={sizes.SMALL}\n            />\n          </ModalBody>\n          <ModalFooter>\n            {availableUpgrades.length > 1 ? (\n              <CheckInputGroup\n                // @ts-expect-error\n                checkboxText={t('Upgrade all libraries')}\n                formGroupClassName={styles.checkInputGroup}\n                initialValue={false}\n                name=\"upgradeAllLibraries\"\n                size={sizes.SMALL}\n              />\n            ) : null}\n            <ModalFooterButtonBar>\n              <Button onPress={props.onClose}>{t('No thanks')}</Button>\n              <Button kind={kinds.PRIMARY} type=\"submit\">\n                {t('Upgrade')}\n              </Button>\n            </ModalFooterButtonBar>\n          </ModalFooter>\n        </ModalContent>\n      </Form>\n    </Modal>\n  );\n}\n\nexport function useAgentUpgradeLibraryModal(\n  machineIdentifier: string,\n  sourceDirectory: ContentDirectory,\n  onMenuClose?: () => void\n): {\n  Modal: React.FC;\n  onOpen: () => void;\n} {\n  const { isOpen, onClose: onModalClose, onOpen } = useModalState();\n\n  const onClose = useCallback(() => {\n    onModalClose();\n    onMenuClose?.();\n  }, [onMenuClose, onModalClose]);\n\n  const ModalBuilder = useCallback(() => {\n    return (\n      <AgentUpgradeLibraryModal\n        isOpen={isOpen}\n        machineIdentifier={machineIdentifier}\n        sourceDirectory={sourceDirectory}\n        onClose={onClose}\n        onOpen={onOpen}\n      />\n    );\n  }, [isOpen, machineIdentifier, onClose, onOpen, sourceDirectory]);\n\n  return {\n    Modal: ModalBuilder,\n    onOpen,\n  };\n}\n","import React, { ReactElement } from 'react';\nimport { IconUpCircledFilled } from '@plex/react-chroma-icon';\nimport getDirectoryUpgrade from 'app/js/utils/server/getDirectoryUpgrade';\nimport t from 'app/js/utils/t';\nimport { Server } from 'app/js/v4/core/servers/serversTypes';\nimport MenuItem from 'app/js/views/v3/components/core/menus/MenuItem';\nimport MenuSeparator from 'app/js/views/v3/components/core/menus/MenuSeparator';\nimport { useAgentUpgradeLibraryModal } from 'app/js/views/v3/components/upgrade/AgentUpgradeLibraryModals';\nimport { ContentDirectory } from 'app/js/views/v3/helpers/props/shapes/contentDirectoryShape';\nimport styles from './LibraryUpgradeMenuItem.css';\n\ninterface LibraryUpgradeMenuItemProps {\n  server: Server;\n  machineIdentifier: string;\n  onMenuClose?: () => void;\n  sourceDirectory: ContentDirectory;\n}\n\nexport default function LibraryUpgradeMenuItem(\n  props: LibraryUpgradeMenuItemProps\n): ReactElement {\n  const { hasPlexMovieUpgrade, hasPlexSeriesUpgrade } = getDirectoryUpgrade(\n    props.server,\n    props.sourceDirectory\n  );\n\n  const { Modal, onOpen } = useAgentUpgradeLibraryModal(\n    props.machineIdentifier,\n    props.sourceDirectory,\n    props.onMenuClose\n  );\n\n  return hasPlexMovieUpgrade || hasPlexSeriesUpgrade ? (\n    <>\n      <MenuItem onPress={onOpen}>\n        {t('Upgrade Library')}\n        <span className={styles.icon}>\n          <IconUpCircledFilled />\n        </span>\n      </MenuItem>\n      <MenuSeparator />\n      <Modal />\n    </>\n  ) : (\n    <></>\n  );\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"icon\":\"bVmCM\"};","import React, { ReactElement, useCallback } from 'react';\nimport * as providerActions from 'app/js/stores/actions/provider/providerActions';\nimport * as metricsPages from 'app/js/utils/constants/metrics/metricsPages';\nimport t from 'app/js/utils/t';\nimport { ContentDirectory } from 'app/js/v4/core/providers/providersTypes';\nimport { useSourceContext } from 'app/js/v4/core/servers/components/SourceContextProvider';\nimport { useRedispatchLegacyServerAction } from 'app/js/v4/core/servers/hooks/useRedispatchLegacyServerAction';\nimport useDisclosure from 'app/js/v4/core/ui/hooks/useDisclosure';\nimport LibraryUpgradeMenuItem from 'app/js/v4/features/libraryManagement/LibraryUpgradeMenuItem';\nimport Menu from 'app/js/views/v3/components/core/menus/Menu';\nimport MenuItem from 'app/js/views/v3/components/core/menus/MenuItem';\nimport ConfirmModal from 'app/js/views/v3/components/core/modals/ConfirmModal';\nimport createChainedCallback from 'app/js/views/v3/helpers/createChainedCallback';\nimport * as kinds from 'app/js/views/v3/helpers/props/kinds';\n\ninterface LibraryActionsMenuProps {\n  target: string;\n  isOpen: boolean;\n  contentDirectory: ContentDirectory;\n  machineIdentifier: string;\n  providerEntityID: string;\n  onMenuClose(): void;\n  onMenuCloseComplete?(): void;\n}\n\nexport default function LibraryActionsMenu(\n  props: LibraryActionsMenuProps\n): ReactElement {\n  const { target, isOpen, contentDirectory, onMenuClose, onMenuCloseComplete } =\n    props;\n\n  const [server, provider] = useSourceContext();\n\n  const analyzeModalState = useDisclosure();\n  const refreshAllModalState = useDisclosure();\n  const emptyTrashModalState = useDisclosure();\n  const deleteModalState = useDisclosure();\n\n  const redispatchLegacyServerAction = useRedispatchLegacyServerAction({\n    server,\n    provider,\n  });\n\n  //\n  // Callbacks\n\n  const onScanPress = useCallback(() => {\n    redispatchLegacyServerAction(\n      // @ts-expect-error ts-migrate(2554) FIXME: Expected 0 arguments, but got 1.\n      providerActions.scanLibraryFiles({\n        contentDirectory,\n      })\n    );\n  }, [contentDirectory, redispatchLegacyServerAction]);\n\n  const onAnalyzePress = useCallback(() => {\n    redispatchLegacyServerAction(\n      // @ts-expect-error ts-migrate(2554) FIXME: Expected 0 arguments, but got 1.\n      providerActions.analyzeLibrary({\n        contentDirectory,\n      })\n    );\n  }, [contentDirectory, redispatchLegacyServerAction]);\n\n  const onRefreshAllPress = useCallback(() => {\n    redispatchLegacyServerAction(\n      providerActions.refreshAllLibraryMetadata({\n        contentDirectory,\n      })\n    );\n  }, [contentDirectory, redispatchLegacyServerAction]);\n\n  const onEmptyTrashPress = useCallback(() => {\n    redispatchLegacyServerAction(\n      // @ts-expect-error ts-migrate(2554) FIXME: Expected 0 arguments, but got 1.\n      providerActions.emptyLibraryTrash({\n        contentDirectory,\n      })\n    );\n  }, [contentDirectory, redispatchLegacyServerAction]);\n\n  const onDeletePress = useCallback(() => {\n    redispatchLegacyServerAction(\n      // @ts-expect-error ts-migrate(2554) FIXME: Expected 0 arguments, but got 1.\n      providerActions.deleteLibrary({\n        contentDirectory,\n      })\n    );\n  }, [contentDirectory, redispatchLegacyServerAction]);\n\n  return (\n    <>\n      <Menu\n        isOpen={isOpen}\n        target={target}\n        onMenuClose={onMenuClose}\n        onMenuCloseComplete={onMenuCloseComplete}\n      >\n        <LibraryUpgradeMenuItem\n          machineIdentifier={props.machineIdentifier}\n          server={server}\n          sourceDirectory={props.contentDirectory}\n          onMenuClose={onMenuClose}\n        />\n        <MenuItem onPress={createChainedCallback(onMenuClose, onScanPress)}>\n          {t('Scan Library Files')}\n        </MenuItem>\n        <MenuItem\n          onPress={createChainedCallback(onMenuClose, analyzeModalState.onOpen)}\n        >\n          {t('Analyze')}\n        </MenuItem>\n\n        <MenuItem\n          onPress={createChainedCallback(\n            onMenuClose,\n            refreshAllModalState.onOpen\n          )}\n        >\n          {t('Refresh All Metadata')}\n        </MenuItem>\n        <MenuItem\n          onPress={createChainedCallback(\n            onMenuClose,\n            emptyTrashModalState.onOpen\n          )}\n        >\n          {t('Empty Trash')}\n        </MenuItem>\n        <MenuItem\n          kind={kinds.DANGER}\n          onPress={createChainedCallback(onMenuClose, deleteModalState.onOpen)}\n        >\n          {t('Delete')}\n        </MenuItem>\n      </Menu>\n\n      <ConfirmModal\n        confirmLabel={t('Analyze')}\n        isOpen={analyzeModalState.isOpen}\n        message={t(\n          'Analyzes all the media files in the library. The analysis captures information about the media which helps Plex decide how to optimally play back the media.'\n        )}\n        metricsPage={metricsPages.CONFIRM_ANALYZE_LIBRARY}\n        title={t('Analyze Library')}\n        onCancel={analyzeModalState.onClose}\n        onConfirm={createChainedCallback(\n          analyzeModalState.onClose,\n          onAnalyzePress\n        )}\n      />\n\n      <ConfirmModal\n        confirmLabel={t('Refresh')}\n        isOpen={refreshAllModalState.isOpen}\n        message={t(\n          'Forces a download of fresh media information from the internet. This can take a long time. Any locked fields are not modified.'\n        )}\n        metricsPage={metricsPages.CONFIRM_FORCE_REFRESH_LIBRARY}\n        title={t('Refresh All Metadata')}\n        onCancel={refreshAllModalState.onClose}\n        onConfirm={createChainedCallback(\n          refreshAllModalState.onClose,\n          onRefreshAllPress\n        )}\n      />\n\n      <ConfirmModal\n        confirmLabel={t('Empty')}\n        isOpen={emptyTrashModalState.isOpen}\n        message={t(\n          \"By default the media server doesn't remove information for media right away. This helps if a drive is temporarily disconnected. When you empty the trash for a section, all information about missing media is deleted.\"\n        )}\n        metricsPage={metricsPages.CONFIRM_EMPTY_TRASH_LIBRARY}\n        title={t('Empty Trash')}\n        onCancel={emptyTrashModalState.onClose}\n        onConfirm={createChainedCallback(\n          emptyTrashModalState.onClose,\n          onEmptyTrashPress\n        )}\n      />\n\n      <ConfirmModal\n        accordMessage={t('Yes, delete the library \"{libraryName}\"', {\n          libraryName: contentDirectory.title,\n        })}\n        confirmLabel={t('Delete')}\n        isOpen={deleteModalState.isOpen}\n        kind={kinds.DANGER}\n        message={t(\n          'The library \"{libraryName}\" will be removed from this server. Your media files will not be affected. This can\\'t be undone. Continue?',\n          { libraryName: contentDirectory.title }\n        )}\n        metricsPage={metricsPages.CONFIRM_DELETE_LIBRARY}\n        title={t('Delete Library')}\n        onCancel={deleteModalState.onClose}\n        onConfirm={createChainedCallback(\n          deleteModalState.onClose,\n          onDeletePress\n        )}\n      />\n    </>\n  );\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"dismiss\":\"Y_zvB\"};","import React, { ReactElement, useCallback, useEffect, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { saveExperienceSettings } from 'app/js/stores/actions/userActions';\nimport * as features from 'app/js/utils/constants/user/features';\nimport { scheduleImmediateUpdate } from 'app/js/utils/state/stateUpdateScheduler';\nimport t from 'app/js/utils/t';\nimport Button from 'app/js/v4/core/ui/buttons/components/Button';\nimport Checkbox from 'app/js/v4/core/ui/forms/components/Checkbox';\nimport Modal from 'app/js/v4/core/ui/modals/components/Modal';\nimport ModalBody from 'app/js/v4/core/ui/modals/components/ModalBody';\nimport ModalContent from 'app/js/v4/core/ui/modals/components/ModalContent';\nimport ModalFooter from 'app/js/v4/core/ui/modals/components/ModalFooter';\nimport ModalFooterButtonBar from 'app/js/v4/core/ui/modals/components/ModalFooterButtonBar';\nimport ModalHeader from 'app/js/v4/core/ui/modals/components/ModalHeader';\nimport Kind from 'app/js/v4/core/ui/types/Kind';\nimport Size from 'app/js/v4/core/ui/types/Size';\nimport createUserExperienceSettingSelector from 'app/js/v4/core/user/selectors/createUserExperienceSettingSelector';\nimport createUserFeatureSelector from 'app/js/v4/core/user/selectors/createUserFeatureSelector';\nimport styles from './PromotionWarningModal.css';\n\nconst DISMISS_SETTING = 'hasDismissedHubPromotionWarning';\n\ninterface PromotionWarningModalProps {\n  isOpen: boolean;\n  onClose: () => void;\n  onAccept: () => void;\n}\n\nexport default function PromotionWarningModal({\n  isOpen,\n  onClose,\n  onAccept,\n}: PromotionWarningModalProps): ReactElement | null {\n  const dispatch = useDispatch();\n  const [isDismissed, setIsDismissed] = useState(false);\n\n  const hasDismissedWarning = useSelector(\n    createUserExperienceSettingSelector(DISMISS_SETTING)\n  );\n  const hasHomeLibraryAccessLabels = useSelector(\n    createUserFeatureSelector(features.HOME_LIBRARY_ACCESS_LABELS)\n  );\n\n  //\n  // Effects\n\n  useEffect(() => {\n    if (isOpen && hasDismissedWarning) {\n      onAccept();\n    }\n  }, [isOpen, hasDismissedWarning, onAccept, onClose]);\n\n  //\n  // Callbacks\n\n  const onDismissChange = useCallback(\n    () => setIsDismissed(!isDismissed),\n    [isDismissed]\n  );\n\n  const onAcceptPress = useCallback(() => {\n    if (isDismissed) {\n      scheduleImmediateUpdate(() => {\n        dispatch(saveExperienceSettings({ [DISMISS_SETTING]: true }));\n      });\n    }\n    onAccept();\n  }, [dispatch, isDismissed, onAccept]);\n\n  //\n  // Render\n\n  if (hasDismissedWarning) {\n    return null;\n  }\n\n  return (\n    <Modal isOpen={isOpen} size={Size.Small} onModalClose={onClose}>\n      <ModalContent onModalClose={onClose}>\n        <ModalHeader>\n          {hasHomeLibraryAccessLabels\n            ? t(\"Add to Friends' Home?\")\n            : t(\"Add to Shared Users' Home?\")}\n        </ModalHeader>\n        <ModalBody>\n          {hasHomeLibraryAccessLabels\n            ? t(\n                'Matching items from this library will appear on your friends’ Home screens as long as they have this library pinned to the sidebar. Be nice.'\n              )\n            : t(\n                'Matching items from this library will appear on your users’ Home screens as long as they have this library pinned to the sidebar. Be nice.'\n              )}\n        </ModalBody>\n        <ModalFooter>\n          <label key=\"dismiss\" className={styles.dismiss}>\n            <Checkbox\n              checked={isDismissed}\n              name=\"dismiss\"\n              onChange={onDismissChange}\n            />\n            <span>{t(\"Don't show again\")}</span>\n          </label>\n          <ModalFooterButtonBar>\n            <Button onPress={onClose}>{t('Cancel')}</Button>\n            <Button kind={Kind.Primary} onPress={onAcceptPress}>\n              {t('Accept')}\n            </Button>\n          </ModalFooterButtonBar>\n        </ModalFooter>\n      </ModalContent>\n    </Modal>\n  );\n}\n","\n    import PropTypes from 'prop-types';\n    import React from 'react';\n    import styles from 'app/js/views/v3/components/core/base/PlexIcon.css';\n\n    function IconReorder(props) {\n      const label = props['aria-label'];\n      const className = props.className;\n      const style = props.style;\n\n      const svgProps = {\"viewBox\":\"0 0 560 560\",\"xmlns\":\"http://www.w3.org/2000/svg\",\"strokeMiterlimit\":\"1.414\",\"strokeLinejoin\":\"round\",\"id\":\"plex-icon-reorder-560\"};\n\n      svgProps['aria-hidden'] = !label;\n      svgProps.style = style;\n      svgProps.className = styles.plexIcon + (className ? ' ' + className : '');\n\n      const children = [React.createElement.apply(React, ['path', {\"d\":\"m560 380v60h-560v-60h560m-560-130h560v60h-560v-60m0-130h560v60h-560v-60\"}].concat([]))];\n\n      if (label) {\n        children.unshift(React.createElement('title', null, label));\n      }\n\n      // Arrays require a key, but a fixed number of elements don't.\n      // Spread the elements since it'll be a fixed number anyways\n      return React.createElement.apply(React, ['svg', svgProps].concat(children));\n    };\n\n    IconReorder.propTypes = {\n      'aria-label': PropTypes.string,\n      className: PropTypes.string,\n      style: PropTypes.object\n    };\n\n    export default IconReorder;\n  ","// extracted by mini-css-extract-plugin\nexport default {\"row\":\"G0wyx\",\"delete\":\"SDbUQ\",\"draggingRow\":\"SEyfJ G0wyx\",\"isActive\":\"TGp7N\",\"handle\":\"IxV0_\",\"title\":\"SD2bP\",\"titleText\":\"fORbc\",\"inputs\":\"e3mLn\",\"input\":\"P1i3d\"};","import classNames from 'classnames';\nimport React, { ReactElement, useCallback } from 'react';\nimport { Draggable } from 'react-beautiful-dnd';\nimport { useDispatch } from 'react-redux';\nimport t from 'app/js/utils/t';\nimport { useSourceContext } from 'app/js/v4/core/servers/components/SourceContextProvider';\nimport Link from 'app/js/v4/core/ui/buttons/components/Link';\nimport Checkbox from 'app/js/v4/core/ui/forms/components/Checkbox';\nimport useDisclosure from 'app/js/v4/core/ui/hooks/useDisclosure';\nimport useIsFocused from 'app/js/v4/core/ui/hooks/useIsFocused';\nimport ListRow from 'app/js/v4/core/ui/lists/components/ListRow';\nimport PromotionWarningModal from 'app/js/v4/features/libraryManagement/components/PromotionWarningModal';\nimport libraryManagementSlice from 'app/js/v4/features/libraryManagement/libraryManagementSlice';\nimport { HubOptions } from 'app/js/v4/features/libraryManagement/libraryManagementTypes';\nimport IconRemove from 'app/glyphs/remove-560.svg';\nimport IconReorder from 'app/glyphs/reorder-560.svg';\nimport styles from './LibraryHubListItem.css';\n\ninterface LibraryHubListItemProps {\n  index: number;\n  options: HubOptions;\n  isDragging: boolean;\n  sourceURI: string;\n  onRemoveItem(index: number): void;\n}\n\nexport default function LibraryHubListItem({\n  sourceURI,\n  index,\n  options,\n  isDragging,\n  onRemoveItem,\n}: LibraryHubListItemProps): ReactElement {\n  const dispatch = useDispatch();\n  const [server] = useSourceContext();\n\n  // Show a dismissible warning when a hub is promoted to shared users' homes\n  const hubWarningModalState = useDisclosure();\n\n  const [isFocused, onFocus, onBlur] = useIsFocused();\n\n  //\n  // Callbacks\n\n  const onDispatchPromote = useCallback(\n    (promoted) => {\n      dispatch(\n        libraryManagementSlice.actions.promoteRequested({\n          server,\n          sourceURI,\n          options,\n          promoted,\n        })\n      );\n    },\n    [dispatch, options, server, sourceURI]\n  );\n\n  const onPromoteToRecommended = useCallback(\n    (e) => {\n      onDispatchPromote({ promotedToRecommended: e.target.checked });\n    },\n    [onDispatchPromote]\n  );\n\n  const onPromoteToOwnHome = useCallback(\n    (e) => {\n      onDispatchPromote({ promotedToOwnHome: e.target.checked });\n    },\n    [onDispatchPromote]\n  );\n\n  const onPromoteToSharedHome = useCallback(\n    (e) => {\n      onDispatchPromote({ promotedToSharedHome: e.target.checked });\n    },\n    [onDispatchPromote]\n  );\n\n  const onRemove = useCallback(\n    () => onRemoveItem(index),\n    [index, onRemoveItem]\n  );\n\n  const onAcceptWarning = useCallback(() => {\n    if (hubWarningModalState.isOpen) {\n      hubWarningModalState.onClose();\n    }\n\n    onDispatchPromote({ promotedToSharedHome: true });\n  }, [hubWarningModalState, onDispatchPromote]);\n\n  //\n  // Render\n\n  const rowIdentifier = `${sourceURI}-${options.identifier}`;\n  const fieldRecommended = `${rowIdentifier}-recommended`;\n  const fieldOwnHome = `${rowIdentifier}-ownHome`;\n  const fieldSharedHome = `${rowIdentifier}-sharedHome`;\n\n  return (\n    <Draggable draggableId={options.identifier} index={index}>\n      {(provided, snapshot) => (\n        <div\n          ref={provided.innerRef}\n          {...provided.draggableProps}\n          {...provided.dragHandleProps}\n          onBlur={onBlur}\n          onFocus={onFocus}\n        >\n          <ListRow isAlternate={!isDragging && index % 2 === 0}>\n            <div\n              className={classNames(\n                snapshot.isDragging ? styles.draggingRow : styles.row,\n                isFocused && styles.isActive\n              )}\n            >\n              <div className={styles.handle}>\n                <IconReorder />\n              </div>\n              <div className={styles.title}>\n                <div className={styles.titleText}>{options.title}</div>\n              </div>\n              <div className={styles.inputs}>\n                <label className={styles.input} htmlFor={fieldRecommended}>\n                  <Checkbox\n                    checked={options.promotedToRecommended}\n                    name={fieldRecommended}\n                    onChange={onPromoteToRecommended}\n                  />\n                </label>\n                <label className={styles.input} htmlFor={fieldOwnHome}>\n                  <Checkbox\n                    checked={options.promotedToOwnHome}\n                    name={fieldOwnHome}\n                    onChange={onPromoteToOwnHome}\n                  />\n                </label>\n                <label className={styles.input} htmlFor={fieldSharedHome}>\n                  <Checkbox\n                    checked={options.promotedToSharedHome}\n                    name={fieldSharedHome}\n                    onChange={\n                      options.promotedToSharedHome\n                        ? onPromoteToSharedHome\n                        : hubWarningModalState.onOpen\n                    }\n                  />\n                </label>\n                <div className={styles.delete}>\n                  {options.deletable ? (\n                    <Link\n                      aria-label={t('Remove Hub')}\n                      className={styles.remove}\n                      onPress={onRemove}\n                    >\n                      <IconRemove />\n                    </Link>\n                  ) : null}\n                </div>\n              </div>\n            </div>\n          </ListRow>\n          <PromotionWarningModal\n            isOpen={hubWarningModalState.isOpen}\n            onAccept={onAcceptWarning}\n            onClose={hubWarningModalState.onClose}\n          />\n        </div>\n      )}\n    </Draggable>\n  );\n}\n","import { createSelector, Selector } from 'reselect';\nimport { HubListState } from 'app/js/v4/features/libraryManagement/libraryManagementTypes';\nimport selectLibraryManagement from 'app/js/v4/features/libraryManagement/selectors/selectLibraryManagement';\nimport { LegacyRootState } from 'app/js/v4/root/rootTypes';\n\nfunction createLibraryHubsSelector(\n  sourceURI: string\n): Selector<LegacyRootState, HubListState | undefined> {\n  return createSelector(\n    selectLibraryManagement,\n    (libraryManagement) => libraryManagement.hubs[sourceURI]\n  );\n}\n\nexport default createLibraryHubsSelector;\n","import React, { ReactElement, useCallback, useEffect, useMemo } from 'react';\nimport { DragDropContext, Droppable } from 'react-beautiful-dnd';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { scheduleImmediateUpdate } from 'app/js/utils/state/stateUpdateScheduler';\nimport t from 'app/js/utils/t';\nimport { useSourceContext } from 'app/js/v4/core/servers/components/SourceContextProvider';\nimport Link from 'app/js/v4/core/ui/buttons/components/Link';\nimport LibraryHubListItem from 'app/js/v4/features/libraryManagement/components/LibraryHubListItem';\nimport libraryManagementSlice from 'app/js/v4/features/libraryManagement/libraryManagementSlice';\nimport createLibraryHubsSelector from 'app/js/v4/features/libraryManagement/selectors/createLibraryHubsSelector';\nimport IconReload from 'app/glyphs/reload-560.svg';\nimport styles from './LibraryHubList.css';\n\ninterface LibraryHubListProps {\n  sourceURI: string;\n}\n\nexport default function LibraryHubList({\n  sourceURI,\n}: LibraryHubListProps): ReactElement {\n  const dispatch = useDispatch();\n  const [server] = useSourceContext();\n\n  const libraryHubs = useSelector(createLibraryHubsSelector(sourceURI));\n  const options = useMemo(\n    () => libraryHubs?.options ?? [],\n    [libraryHubs?.options]\n  );\n\n  //\n  // Callbacks\n\n  const onDragEnd = useCallback(\n    (result) => {\n      const fromIndex = options.findIndex(\n        ({ identifier }) => identifier === result.draggableId\n      );\n      const toIndex = result.destination.index;\n\n      const newOptions = Array.from(options);\n      const [option] = newOptions.splice(fromIndex, 1);\n      newOptions.splice(toIndex, 0, option);\n\n      scheduleImmediateUpdate(() =>\n        dispatch(\n          libraryManagementSlice.actions.reorderRequested({\n            server,\n            sourceURI,\n            options: newOptions,\n            fromIndex,\n            toIndex,\n          })\n        )\n      );\n    },\n    [dispatch, options, server, sourceURI]\n  );\n\n  const onRemoveItem = useCallback(\n    (index) => {\n      const newOptions = Array.from(options);\n      const [removed] = newOptions.splice(index, 1);\n\n      dispatch(\n        libraryManagementSlice.actions.removeRequested({\n          server,\n          sourceURI,\n          options: newOptions,\n          removed,\n          index,\n        })\n      );\n    },\n    [dispatch, options, server, sourceURI]\n  );\n\n  const onResetPress = useCallback(() => {\n    dispatch(\n      libraryManagementSlice.actions.resetRequested({\n        server,\n        sourceURI,\n      })\n    );\n  }, [dispatch, server, sourceURI]);\n\n  //\n  // Effects\n\n  useEffect(() => {\n    dispatch(\n      libraryManagementSlice.actions.hubsFetchRequested({\n        server,\n        sourceURI,\n      })\n    );\n  }, [dispatch, server, sourceURI]);\n\n  return (\n    <div>\n      <DragDropContext onDragEnd={onDragEnd}>\n        <Droppable droppableId={sourceURI}>\n          {(provided, snapshot) => (\n            <div ref={provided.innerRef} {...provided.droppableProps}>\n              {options.map((hubOptions, index) => (\n                <LibraryHubListItem\n                  key={hubOptions.identifier}\n                  index={index}\n                  isDragging={snapshot.isDraggingOver}\n                  options={hubOptions}\n                  sourceURI={sourceURI}\n                  onRemoveItem={onRemoveItem}\n                />\n              ))}\n              {provided.placeholder}\n            </div>\n          )}\n        </Droppable>\n      </DragDropContext>\n      {options.length ? (\n        <div className={styles.footer}>\n          <div className={styles.info}>\n            {t(\n              'Sources need to be pinned to the apps sidebar for selected recommendations to display on the Home screen'\n            )}\n          </div>\n          <div className={styles.reset}>\n            <Link className={styles.action} onPress={onResetPress}>\n              <IconReload className={styles.resetIcon} />\n              {t('Reset Customization')}\n            </Link>\n          </div>\n        </div>\n      ) : null}\n    </div>\n  );\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"footer\":\"FQupf\",\"info\":\"ultYv\",\"action\":\"tCD4D IYkbp\",\"reset\":\"_Hy0F\",\"resetIcon\":\"UQVd5\"};","// extracted by mini-css-extract-plugin\nexport default {\"row\":\"m4Mls\",\"alternateRow\":\"dfOSo m4Mls\",\"underlay\":\"fQsse IYkbp\",\"overlay\":\"BTFE1\",\"iconContainer\":\"B3ji2\",\"title\":\"BqWff\",\"actions\":\"oAQPd\",\"action\":\"ndJEF IYkbp\",\"visible\":\"cUQF3\",\"editIcon\":\"PbuIU\",\"header\":\"esbtn\",\"columnHeader\":\"Ys4F6\",\"headerIcon\":\"MUaYQ\",\"upgradeText\":\"AjaIg\",\"upgradeTextHovered\":\"BpXCH AjaIg\"};","import classNames from 'classnames';\nimport React, { ReactElement, useCallback } from 'react';\nimport { useSelector } from 'react-redux';\nimport {\n  IconEditFilled,\n  IconOverflowVerticalAlt,\n  IconUpCircledFilled,\n} from '@plex/react-chroma-icon';\nimport { Row } from '@plex/react-chroma-layout';\nimport { Align, Size } from '@plex/react-chroma-types';\nimport * as providerActions from 'app/js/stores/actions/provider/providerActions';\nimport * as agentIdentifiers from 'app/js/utils/constants/agentIdentifiers';\nimport * as features from 'app/js/utils/constants/user/features';\nimport createSourceFromIdentifiers from 'app/js/utils/metadata/createSourceFromIdentifiers';\nimport getDirectoryUpgrade from 'app/js/utils/server/getDirectoryUpgrade';\nimport t from 'app/js/utils/t';\nimport MetadataIcon from 'app/js/v4/core/metadata/components/icons/MetadataIcon';\nimport { MetadataType } from 'app/js/v4/core/metadata/metadataTypes';\nimport { getMetadataTypeChild } from 'app/js/v4/core/metadata/utils/getMetadataTypeRelations';\nimport { ContentDirectory } from 'app/js/v4/core/providers/providersTypes';\nimport useLibraryUpdating from 'app/js/v4/core/serverActivities/hooks/useLibraryUpdating';\nimport { useSourceContext } from 'app/js/v4/core/servers/components/SourceContextProvider';\nimport { useRedispatchLegacyServerAction } from 'app/js/v4/core/servers/hooks/useRedispatchLegacyServerAction';\nimport Link from 'app/js/v4/core/ui/buttons/components/Link';\nimport useDisclosure from 'app/js/v4/core/ui/hooks/useDisclosure';\nimport useIsFocused from 'app/js/v4/core/ui/hooks/useIsFocused';\nimport useIsRefHovered from 'app/js/v4/core/ui/hooks/useIsRefHovered';\nimport usePreviousValueForAtMost from 'app/js/v4/core/ui/hooks/usePreviousValueForAtMost';\nimport ListRow from 'app/js/v4/core/ui/lists/components/ListRow';\nimport Spinner from 'app/js/v4/core/ui/spinners/components/Spinner';\nimport Kind from 'app/js/v4/core/ui/types/Kind';\nimport { default as CoreSize } from 'app/js/v4/core/ui/types/Size';\nimport createUserFeatureSelector from 'app/js/v4/core/user/selectors/createUserFeatureSelector';\nimport LibraryActionsMenu from 'app/js/v4/features/libraryManagement/components/LibraryActionsMenu';\nimport LibraryHubList from 'app/js/v4/features/libraryManagement/components/LibraryHubList';\nimport createLibraryHubsSelector from 'app/js/v4/features/libraryManagement/selectors/createLibraryHubsSelector';\nimport getHubManagementKey from 'app/js/v4/features/libraryManagement/utils/getHubManagementKey';\nimport DisclosureArrow from 'app/js/views/v3/components/core/base/DisclosureArrow';\nimport { useAgentUpgradeLibraryModal } from 'app/js/views/v3/components/upgrade/AgentUpgradeLibraryModals';\nimport useUniqueElementID from 'app/js/views/v3/helpers/hooks/useUniqueElementID';\nimport * as directions from 'app/js/views/v3/helpers/props/directions';\nimport getSourceRoute from 'app/js/views/v3/helpers/routes/getSourceRoute';\nimport styles from './ManageLibrarySummary.css';\n\ninterface ManageLibrarySummaryProps {\n  index: number;\n  contentDirectory: ContentDirectory;\n  machineIdentifier: string;\n  providerEntityID: string;\n}\n\nexport default function ManageLibrarySummary(\n  props: ManageLibrarySummaryProps\n): ReactElement {\n  const { index, contentDirectory } = props;\n\n  const [server, provider] = useSourceContext();\n  const moreButtonID = useUniqueElementID();\n  const [isFocused, onFocus, onBlur] = useIsFocused();\n  const [isHovered, hoverRef] = useIsRefHovered();\n  const actionsMenuState = useDisclosure();\n  const hubListState = useDisclosure();\n\n  const sourceURI = createSourceFromIdentifiers({\n    serverIdentifier: server.machineIdentifier,\n    key: getHubManagementKey(contentDirectory.id),\n  });\n\n  const isActionsVisible =\n    isFocused || isHovered || actionsMenuState.isOpen || hubListState.isOpen;\n\n  const route = getSourceRoute(server, provider, contentDirectory);\n  const { title } = contentDirectory;\n\n  const redispatchLegacyServerAction = useRedispatchLegacyServerAction({\n    server,\n    provider,\n  });\n\n  const isScanning = useLibraryUpdating(server, contentDirectory);\n  const libraryHubs = useSelector(createLibraryHubsSelector(sourceURI));\n  const isLoading = usePreviousValueForAtMost(libraryHubs?.isPending, true);\n  const canManageHubs = server.ownerFeatures?.includes(features.MANAGE_HUBS);\n  const hasHomeLibraryAccessLabels = useSelector(\n    createUserFeatureSelector(features.HOME_LIBRARY_ACCESS_LABELS)\n  );\n\n  const { Modal, onOpen: onUpgradeLibraryPress } = useAgentUpgradeLibraryModal(\n    props.machineIdentifier,\n    props.contentDirectory\n  );\n\n  const onEditPress = useCallback(() => {\n    redispatchLegacyServerAction(\n      // @ts-expect-error ts-migrate(2554) FIXME: Expected 0 arguments, but got 1.\n      providerActions.editLibrary({\n        contentDirectory,\n      })\n    );\n  }, [contentDirectory, redispatchLegacyServerAction]);\n\n  // The icon is based off the child items and if the library is 'other videos'\n  // This can be removed once subtype is added for this library type\n  // https://github.com/plexinc/plex-media-server/issues/12144\n  const leafType = contentDirectory.type\n    ? getMetadataTypeChild(contentDirectory.type)\n    : null;\n  const isOtherVideosLibrary =\n    contentDirectory.agent === agentIdentifiers.NONE &&\n    contentDirectory.type === MetadataType.Movie;\n  const contentDirectoryType = isOtherVideosLibrary\n    ? MetadataType.Clip\n    : contentDirectory.type;\n  const type = leafType ?? contentDirectoryType;\n\n  const metadataIcon = type ? <MetadataIcon type={type} /> : null;\n\n  const { hasPlexMusicUpgrade, hasPlexMovieUpgrade, hasPlexSeriesUpgrade } =\n    getDirectoryUpgrade(server, contentDirectory);\n  const isLibraryUpgradeAvailable =\n    hasPlexMusicUpgrade || hasPlexMovieUpgrade || hasPlexSeriesUpgrade;\n\n  return (\n    <>\n      <ListRow\n        ref={hoverRef}\n        alternateClassName={styles.alternateRow}\n        className={styles.row}\n        isAlternate={!!(index % 2)}\n        isHovered={isHovered || isFocused}\n        onBlur={onBlur}\n        onFocus={onFocus}\n      >\n        <Link\n          aria-label={t('Manage {libraryTitle}', {\n            libraryTitle: title,\n          })}\n          className={styles.underlay}\n          onPress={canManageHubs ? hubListState.onToggle : onEditPress}\n        />\n\n        <div className={styles.overlay}>\n          <div className={styles.iconContainer}>\n            {isScanning ? <Spinner size={CoreSize.Small} /> : metadataIcon}\n          </div>\n\n          <Link className={styles.title} title={title} to={route}>\n            {title}\n          </Link>\n\n          {isLibraryUpgradeAvailable && !hubListState.isOpen ? (\n            <Link\n              className={styles.action}\n              kind={Kind.Primary}\n              onPress={onUpgradeLibraryPress}\n            >\n              <Row gap={Size.XS} verticalAlign={Align.Center}>\n                <IconUpCircledFilled />\n                <span\n                  className={\n                    isHovered ? styles.upgradeTextHovered : styles.upgradeText\n                  }\n                >\n                  {t('Upgrade Library')}\n                </span>\n              </Row>\n            </Link>\n          ) : null}\n\n          <div\n            className={classNames(\n              styles.actions,\n              isActionsVisible && styles.visible\n            )}\n          >\n            {hubListState.isOpen ? (\n              <div className={styles.header}>\n                {libraryHubs?.options.length ? (\n                  <>\n                    <span\n                      className={styles.columnHeader}\n                      title={t('Library Recommended')}\n                    >\n                      {t('Library Recommended')}\n                    </span>\n                    <span className={styles.columnHeader} title={t('Home')}>\n                      {t('Home')}\n                    </span>\n                    <span\n                      className={styles.columnHeader}\n                      title={\n                        hasHomeLibraryAccessLabels\n                          ? t(\"Friends' Home\")\n                          : t(\"Shared Users' Home\")\n                      }\n                    >\n                      {hasHomeLibraryAccessLabels\n                        ? t(\"Friends' Home\")\n                        : t(\"Shared Users' Home\")}\n                    </span>\n                  </>\n                ) : null}\n                <Link className={styles.action} onPress={hubListState.onClose}>\n                  <span className={styles.headerIcon}>\n                    {isLoading ? (\n                      <Spinner size={CoreSize.Small} />\n                    ) : (\n                      <DisclosureArrow direction={directions.UP} />\n                    )}\n                  </span>\n                </Link>\n              </div>\n            ) : (\n              <div className={styles.header}>\n                {canManageHubs ? (\n                  <Link className={styles.action} onPress={hubListState.onOpen}>\n                    <DisclosureArrow direction={directions.DOWN} />\n                    {t('Manage Recommendations')}\n                  </Link>\n                ) : null}\n                <Link className={styles.action} onPress={onEditPress}>\n                  <Row gap={Size.XXS} verticalAlign={Align.Center}>\n                    <IconEditFilled />\n                    {t('Edit Library')}\n                  </Row>\n                </Link>\n                <Link\n                  aria-label={t('More Actions')}\n                  className={styles.action}\n                  data-testid=\"metadataRowMoreButton\"\n                  id={moreButtonID}\n                  onPress={actionsMenuState.onToggle}\n                >\n                  <span className={styles.headerIcon}>\n                    <IconOverflowVerticalAlt />\n                  </span>\n                </Link>\n              </div>\n            )}\n          </div>\n        </div>\n\n        <LibraryActionsMenu\n          contentDirectory={contentDirectory}\n          isOpen={actionsMenuState.isOpen}\n          machineIdentifier={props.machineIdentifier}\n          providerEntityID={props.providerEntityID}\n          target={moreButtonID}\n          onMenuClose={actionsMenuState.onClose}\n        />\n      </ListRow>\n      {hubListState.isOpen ? <LibraryHubList sourceURI={sourceURI} /> : null}\n      <Modal />\n    </>\n  );\n}\n","import { useMemo } from 'react';\nimport { useSelector } from 'react-redux';\nimport { ContentDirectory } from 'app/js/v4/core/providers/providersTypes';\nimport createLibraryUpdateActivitySelector from 'app/js/v4/core/serverActivities/selectors/createLibraryUpdateActivitySelector';\nimport { Server } from 'app/js/v4/core/servers/serversTypes';\n\nexport default function useLibraryUpdating(\n  server: Server,\n  contentDirectory?: ContentDirectory\n): boolean {\n  const selectProviderContentDirectoryUpdateActivity = useMemo(\n    () =>\n      contentDirectory\n        ? createLibraryUpdateActivitySelector(server, contentDirectory)\n        : () => undefined,\n    [contentDirectory, server]\n  );\n  const libraryUpdateActivity = useSelector(\n    selectProviderContentDirectoryUpdateActivity\n  );\n\n  // PMS Version 1.20.5 includes the needed Context to match to the content\n  // directory, so fallback to the contentDirectory attribute, which may be\n  // removed at a later date to make provider objects more stable\n  return !!libraryUpdateActivity || !!contentDirectory?.refreshing;\n}\n","import { createSelector, Selector } from 'reselect';\nimport * as activityTypes from 'app/js/utils/server/activityTypes';\nimport { ContentDirectory } from 'app/js/v4/core/providers/providersTypes';\nimport createServerActivitiesSelector from 'app/js/v4/core/serverActivities/selectors/createServerActivitiesSelector';\nimport { ServerActivity } from 'app/js/v4/core/serverActivities/serverActivitiesTypes';\nimport { Server } from 'app/js/v4/core/servers/serversTypes';\nimport { LegacyRootState } from 'app/js/v4/root/rootTypes';\n\nfunction createLibraryUpdateActivitySelector(\n  server: Server,\n  contentDirectory: ContentDirectory\n): Selector<LegacyRootState, ServerActivity | undefined> {\n  return createSelector(\n    createServerActivitiesSelector(server),\n    (activities) => {\n      return activities.find((activity) => {\n        return (\n          activity.type === activityTypes.LIBRARY_UPDATE_SECTION &&\n          activity.Context.librarySectionID === contentDirectory.id\n        );\n      });\n    }\n  );\n}\n\nexport default createLibraryUpdateActivitySelector;\n","import {\n  MetadataSubtype,\n  MetadataType,\n} from 'app/js/v4/core/metadata/metadataTypes';\n\nexport function getMetadataTypeChild(\n  type: MetadataType,\n  subtype?: MetadataSubtype\n): MetadataType | undefined {\n  switch (subtype) {\n    case MetadataSubtype.Podcast:\n      switch (type) {\n        case MetadataType.Show:\n          return MetadataType.Track;\n      }\n  }\n\n  switch (type) {\n    case MetadataType.Show:\n      return MetadataType.Season;\n    case MetadataType.Season:\n      return MetadataType.Episode;\n    case MetadataType.Artist:\n      return MetadataType.Album;\n    case MetadataType.Author:\n      return MetadataType.Audiobook;\n    case MetadataType.Audiobook:\n      return MetadataType.Chapter;\n    case MetadataType.Album:\n      return MetadataType.Track;\n    case MetadataType.PhotoAlbum:\n      return MetadataType.Photo;\n    case MetadataType.Collection:\n      switch (subtype) {\n        case MetadataSubtype.Movie:\n          return MetadataType.Movie;\n        case MetadataSubtype.Show:\n          return MetadataType.Show;\n        case MetadataSubtype.Season:\n          return MetadataType.Season;\n        case MetadataSubtype.Episode:\n          return MetadataType.Episode;\n        case MetadataSubtype.Artist:\n          return MetadataType.Artist;\n        case MetadataSubtype.Album:\n          return MetadataType.Album;\n        case MetadataSubtype.Track:\n          return MetadataType.Track;\n        case MetadataSubtype.Author:\n          return MetadataType.Author;\n        case MetadataSubtype.Audiobook:\n          return MetadataType.Audiobook;\n        case MetadataSubtype.Chapter:\n          return MetadataType.Chapter;\n      }\n  }\n\n  return;\n}\n\nexport function getMetadataTypeLeaf(\n  type: MetadataType,\n  subtype?: MetadataSubtype\n): MetadataType | undefined {\n  switch (subtype) {\n    case MetadataSubtype.Podcast:\n      switch (type) {\n        case MetadataType.Show:\n          return MetadataType.Track;\n      }\n  }\n\n  switch (type) {\n    case MetadataType.Show:\n    case MetadataType.Season:\n      return MetadataType.Episode;\n    case MetadataType.Author:\n    case MetadataType.Audiobook:\n      return MetadataType.Chapter;\n    case MetadataType.Artist:\n    case MetadataType.Album:\n      return MetadataType.Track;\n    case MetadataType.PhotoAlbum:\n      return MetadataType.Photo;\n    case MetadataType.Collection:\n      switch (subtype) {\n        case MetadataSubtype.Movie:\n          return MetadataType.Movie;\n        case MetadataSubtype.Show:\n        case MetadataSubtype.Season:\n        case MetadataSubtype.Episode:\n          return MetadataType.Episode;\n        case MetadataSubtype.Artist:\n        case MetadataSubtype.Album:\n        case MetadataSubtype.Track:\n          return MetadataType.Track;\n      }\n  }\n\n  return;\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"header\":\"cW3My\",\"libraryCount\":\"yw9KU\",\"button\":\"lsSr2\"};","/* eslint-plugin-disable @typescript-eslint */\n\nimport AbstractModel from 'app/js/models/AbstractModel';\nimport attrTypes from 'app/js/models/attrTypes';\nimport MetadataListModel from 'app/js/models/metadata/MetadataListModel';\nimport * as responseTypes from 'app/js/models/responseTypes';\nimport replaceMetadataXMLElementNames from 'app/js/utils/parser/replaceMetadataXMLElementNames';\nimport parser2 from 'app/js/utils/parser2';\n\nconst DeprecatedPluginModel = AbstractModel.extend({\n  //\n  // Properties\n  name: 'DeprecatedPluginModel',\n  context: ['server', 'channel'],\n  idAttribute: 'key',\n  url() {\n    // While we usually have a key for a channel, requesting a channel in the\n    // channel directory only provides an identifier.\n    return this.id ? this.id : this.identifierUrl(this.get('identifier'));\n  },\n  identifierUrl(identifier: any) {\n    return `/:/plugins/${identifier}/root`;\n  },\n  syncedAttrs: {\n    key: attrTypes.string,\n    identifier: attrTypes.string,\n    type: attrTypes.string,\n    name: attrTypes.string,\n    title1: attrTypes.string,\n    title2: attrTypes.string,\n    message: attrTypes.string,\n    summary: attrTypes.string,\n    thumb: attrTypes.string,\n    art: attrTypes.string,\n    prefsKey: attrTypes.string,\n    searchKey: attrTypes.string,\n    installed: attrTypes.boolean,\n    noCache: attrTypes.boolean,\n    allowSync: attrTypes.boolean,\n    hasPrefs: attrTypes.boolean,\n    hasStoreServices: attrTypes.boolean,\n    share: attrTypes.boolean,\n    lastAccessedAt: attrTypes.integer,\n  },\n  syncedRelations: {\n    metadataList: {\n      relationClass: MetadataListModel,\n      attrs(data: any) {\n        return {\n          containerKey: data.key\n            ? data.key\n            : (this as any).identifierUrl(data.identifier),\n        };\n      },\n      // @ts-expect-error ts-migrate(6133) FIXME: 'data' is declared but its value is never read.\n      options(data: any) {\n        return {\n          channel: this,\n          skipCache: true,\n        };\n      },\n    },\n  },\n  derivedAttrs: {\n    title() {\n      // The channel directory uses the `name` attribute, while browsing a\n      // channel will use `title1` or `title2` depending on if you are at the\n      // root of the channel.\n      return (\n        (this as any).get('name') ||\n        (this as any).get('title2') ||\n        (this as any).get('title1')\n      );\n    },\n  },\n  //\n  // Control\n  augmentResponseText(responseText: any, responseType: any) {\n    return responseType === responseTypes.xml\n      ? replaceMetadataXMLElementNames(responseText, {\n          includeDirectories: true,\n        })\n      : responseText;\n  },\n  augmentResponse(response: any) {\n    // The key does not come back when fetching the channel directly and we may\n    // need this key for old channels like iTunes.\n    if (this.has('key')) {\n      response.key = this.get('key');\n    }\n    // View history in the channel directory returns channels with \"none\" for\n    // their `key`, which causes issues within a collection since the `key` is\n    // used as an identifier that should not conflict.\n    if (response.key === 'none') {\n      delete response.key;\n    }\n    if (response.key) {\n      // Use the key to deduce a type for the channel, which can be used in a\n      // listening of channels to differentiate channels with the same title but\n      // different types.\n      const typeMatch = response.key.match(/^\\/(\\w+)\\//);\n      if (typeMatch) {\n        response.type = typeMatch[1];\n      }\n    }\n    // The `title` derived attribute helps with other title discrepancies. Use\n    // `name` for the synced attribute, which is standard in the channel\n    // directory, but use the derived attribute for display in views.\n    if (response.title) {\n      response.name = response.title;\n    }\n    const metadataItems = parser2.parseArray(response.Metadata);\n    for (let i = metadataItems.length - 1; i >= 0; i--) {\n      const metadataItem = metadataItems[i];\n      // Remove the settings and search items from the array. We do not want to\n      // display these in a list.\n      if (metadataItem.settings || metadataItem.search) {\n        const keyName = metadataItem.settings ? 'prefsKey' : 'searchKey';\n        response[keyName] = metadataItem.key;\n        metadataItems.splice(i, 1);\n      }\n    }\n    // A little tricky, but we want the metadata list model to know about the\n    // root attributes, so pass the entire response to it.\n    response.Metadata = metadataItems;\n    response.metadataList = response;\n    return response;\n  },\n});\nexport default DeprecatedPluginModel;\n","/* eslint-plugin-disable @typescript-eslint */\n\nimport AbstractCollection from 'app/js/models/AbstractCollection';\nimport DeprecatedPluginModel from './DeprecatedPluginModel';\n\nconst DeprecatedPluginCollection = AbstractCollection.extend({\n  //\n  // Properties\n\n  name: 'DeprecatedPluginCollection',\n  context: ['server', 'channel'],\n\n  model: DeprecatedPluginModel,\n\n  url() {\n    return this.containerKey;\n  },\n\n  //\n  // Control\n\n  comparator(deprecatedPlugin: any) {\n    return deprecatedPlugin.get('title').toLowerCase();\n  },\n\n  filterByType(type: any) {\n    const nextDeprecatedPlugins = this.filter((deprecatedPlugin: any) => {\n      return deprecatedPlugin.get('type') === type;\n    });\n\n    return this.clone(nextDeprecatedPlugins);\n  },\n});\n\nexport default DeprecatedPluginCollection;\n","/* eslint-plugin-disable @typescript-eslint */\n\nimport AbstractModel from 'app/js/models/AbstractModel';\nimport attrTypes from 'app/js/models/attrTypes';\nimport paginatedListModelMixin from 'app/js/models/mixins/paginatedListModelMixin';\nimport path from 'app/js/utils/url/path';\nimport DeprecatedPluginCollection from './DeprecatedPluginCollection';\n\nconst DeprecatedPluginListModel = AbstractModel.extend({\n  mixins: [paginatedListModelMixin],\n\n  //\n  // Properties\n\n  name: 'DeprecatedPluginListModel',\n  context: ['server'],\n\n  idAttribute: 'key',\n  collectionName: 'channels',\n\n  url() {\n    const key = this.get('key');\n    const url = key ? key : path.join(['/channels', this.get('subset')]);\n\n    return this.getPaginatedUrl(url);\n  },\n\n  sessionAttrs: {\n    key: attrTypes.string,\n    // @ts-expect-error ts-migrate(2554) FIXME: Expected 0 arguments, but got 2.\n    subset: attrTypes.oneOf('all', 'recentlyViewed'),\n    currentPageStart: attrTypes.integer,\n    currentPageSize: attrTypes.integer,\n    populatedRange: attrTypes.object,\n  },\n\n  syncedAttrs: {\n    totalSize: attrTypes.integer,\n    viewGroup: attrTypes.string,\n    title1: attrTypes.string,\n    title2: attrTypes.string,\n  },\n\n  syncedRelations: {\n    channels: {\n      relationClass: DeprecatedPluginCollection,\n      rootPropertyName: 'Directory',\n\n      setOptions(parseOptions: any) {\n        // `fetchRange` will add these options, which we'll need to provide when\n        // setting models for the collection.\n\n        return {\n          remove: parseOptions.remove,\n          at: parseOptions.at,\n        };\n      },\n    },\n  },\n\n  defaults() {\n    return {\n      subset: 'all',\n      populatedRange: {\n        start: 0,\n        end: 0,\n        size: 0,\n      },\n    };\n  },\n\n  //\n  // Init\n\n  initialize() {\n    this.startPopulatedRangeMonitor();\n  },\n});\n\nexport default DeprecatedPluginListModel;\n","/* eslint-plugin-disable @typescript-eslint */\n\nimport $ from 'jquery';\nimport _ from 'underscore';\nimport dispatcher from 'app/js/utils/dispatcher';\nimport t from 'app/js/utils/t';\nimport path from 'app/js/utils/url/path';\nimport BaseModal from 'app/js/views/modals/BaseModal';\n// @ts-expect-error ts-migrate(2307) FIXME: Cannot find module 'app/templates/depre... Remove this comment to see the full error message\nimport tpl from 'app/templates/deprecatedPlugin/DeprecatedPluginSettingsModal.tpl';\n\nconst DeprecatedPluginSettingsModal = BaseModal.extend({\n  //\n  // Properties\n\n  name: 'DeprecatedPluginSettingsModal',\n  className: 'channel-settings-modal modal fade',\n  template: tpl,\n\n  ui: {\n    submitBtn: '.submit-btn',\n  },\n\n  events: _.extend(\n    {\n      'change input[name]': 'onInputChange',\n      'change select[name]': 'onInputChange',\n      'submit #channel-settings-form': 'onSubmit',\n    },\n    BaseModal.prototype.events\n  ),\n\n  //\n  // Init\n\n  initialize: function () {\n    // eslint-disable-next-line prefer-rest-params\n    BaseModal.prototype.initialize.apply(this, arguments);\n\n    this.changes = {};\n  },\n\n  //\n  // Control\n\n  serializeData: function () {\n    const title = this.model.get('title') || this.model.get('name');\n\n    return {\n      escapedTitle: _.escape(title ? title : 'Preferences...'),\n      settings: this.collection.toJSON(),\n    };\n  },\n\n  //\n  // Listeners\n\n  onInputChange: function (event: any) {\n    const target = event.currentTarget;\n    let value = target.value;\n\n    if (target.type === 'checkbox') {\n      value = target.checked;\n    }\n\n    this.changes[target.name] = value;\n  },\n\n  onSubmit: function (event: any) {\n    event.preventDefault();\n\n    // If no changes were made, just close the modal.\n    if (_.isEmpty(this.changes)) {\n      this.hide();\n      return;\n    }\n\n    const submitBtn = this.ui.submitBtn;\n\n    if (submitBtn.hasClass('active')) {\n      return;\n    }\n\n    submitBtn.addClass('active');\n\n    const setting = this.collection.first();\n    const params = setting.getSaveParams(this.changes);\n    const urlRoot = _.result(this.collection, 'url');\n    const url = path.join([urlRoot, '/set'], params);\n\n    const promise = $.ajax(setting.server.getXHROptions(url));\n\n    promise.done(() => {\n      this.hide();\n    });\n\n    promise.fail(() => {\n      dispatcher.trigger('show:alert', {\n        type: 'error',\n        message: t('There was a problem saving these settings.'),\n      });\n    });\n\n    promise.always(() => {\n      submitBtn.removeClass('active');\n    });\n  },\n});\n\nexport default DeprecatedPluginSettingsModal;\n","/* eslint-plugin-disable @typescript-eslint */\n\nimport commands from 'app/js/commands/commands';\nimport Marionette from 'app/js/initializers/extensions/MarionetteExtension';\nimport ServerSettingCollection from 'app/js/models/server/ServerSettingCollection';\nimport dispatcher from 'app/js/utils/dispatcher';\nimport t from 'app/js/utils/t';\nimport MediaPosterImage from 'app/js/views/images/MediaPosterImage';\nimport DeprecatedPluginSettingsModal from 'app/js/views/modals/DeprecatedPluginSettingsModal';\n// @ts-expect-error ts-migrate(2307) FIXME: Cannot find module 'app/templates/depre... Remove this comment to see the full error message\nimport tpl from 'app/templates/deprecatedPlugin/DeprecatedPluginTileListItem.tpl';\n\nconst DeprecatedPluginTileListItem = Marionette.ItemView.extend({\n  //\n  // Properties\n\n  tagName: 'li',\n  className: 'poster-item media-tile-list-item channel',\n  template: tpl,\n\n  ui: {\n    poster: '.media-poster',\n  },\n\n  events: {\n    'click .settings-btn': 'onSettingsClick',\n    'click .uninstall-btn': 'onUninstallClick',\n  },\n\n  //\n  // Init\n\n  // @ts-expect-error ts-migrate(6133) FIXME: 'options' is declared but its value is never read.\n  initialize: function (options: any) {\n    this.image = new MediaPosterImage({\n      model: this.model,\n      type: 'channel',\n      width: 150,\n    });\n\n    this.shared = this.model.server.get('shared');\n  },\n\n  //\n  // Control\n\n  serializeData: function () {\n    return {\n      item: this.model.toJSON(),\n      shared: this.shared,\n    };\n  },\n\n  //\n  // Bindings\n\n  bindings: {\n    '.media-title': {\n      modelAttribute: 'title',\n    },\n\n    '.media-subtitle-1': {\n      modelAttribute: 'type',\n      autohide: true,\n\n      formatter: (type: any) => {\n        if (type === 'video') {\n          return t('Video');\n        } else if (type === 'music') {\n          return t('Music');\n        } else if (type === 'photos') {\n          return t('Photo');\n        }\n\n        return t('Utility');\n      },\n    },\n  },\n\n  //\n  // Listeners\n\n  onRender: function () {\n    this.image.setElement(this.ui.poster);\n  },\n\n  onClose: function () {\n    // Manually close the poster image because we aren't actually showing it\n    // so it won't be cleaned up automatically.\n    this.image.close();\n  },\n\n  onSettingsClick: function (event: any) {\n    event.preventDefault();\n\n    if (this.$el.hasClass('active')) {\n      return;\n    }\n\n    this.$el.addClass('active');\n\n    const settings = new ServerSettingCollection([], {\n      server: this.model.server,\n      url: this.model.id + '/:/prefs',\n    });\n\n    const promise = settings.fetch();\n\n    promise.done(() => {\n      dispatcher.trigger(\n        'show:modal',\n        new DeprecatedPluginSettingsModal({\n          model: this.model,\n          collection: settings,\n        })\n      );\n    });\n\n    promise.always(() => {\n      this.$el.removeClass('active');\n    });\n  },\n\n  onUninstallClick: function (event: any) {\n    event.preventDefault();\n\n    if (this.$el.hasClass('active')) {\n      return;\n    }\n\n    this.$el.addClass('active');\n\n    const promise = commands.execute('uninstallChannel', {\n      channel: this.model,\n    });\n\n    promise.done(() => {\n      // Destroy the channel so it is removed from the channels list.\n      this.model.trigger('destroy', this.model, this.model.collection);\n    });\n\n    promise.always(() => {\n      this.$el.removeClass('active');\n    });\n  },\n});\n\nexport default DeprecatedPluginTileListItem;\n","/* eslint-plugin-disable @typescript-eslint */\n\nimport BaseList from 'app/js/views/lists/BaseList';\nimport DeprecatedPluginTileListItem from './DeprecatedPluginTileListItem';\n\nconst DeprecatedPluginTileList = BaseList.extend({\n  //\n  // Properties\n\n  tagName: 'ul',\n  className: 'tile-list media-tile-list channel-tile-list',\n  itemView: DeprecatedPluginTileListItem,\n});\n\nexport default DeprecatedPluginTileList;\n","/* eslint-plugin-disable @typescript-eslint */\n\nimport $ from 'jquery';\nimport Marionette from 'app/js/initializers/extensions/MarionetteExtension';\n// @ts-expect-error ts-migrate(2307) FIXME: Cannot find module 'app/templates/depre... Remove this comment to see the full error message\nimport tpl from 'app/templates/deprecatedPlugin/DeprecatedPluginsView.tpl';\nimport DeprecatedPluginTileList from './DeprecatedPluginTileList';\n\nconst DeprecatedPluginsView = Marionette.Layout.extend({\n  //\n  // Properties\n\n  className: 'container',\n  template: tpl,\n\n  ui: {\n    navLinks: '.nav a',\n  },\n\n  regions: {\n    list: '.channels-container',\n  },\n\n  events: {\n    'click .nav a': 'onNavClick',\n    'click .all-btn': 'onAllClick',\n    'click .video-btn': 'onVideoClick',\n    'click .music-btn': 'onMusicClick',\n    'click .photo-btn': 'onPhotoClick',\n  },\n\n  //\n  // Init\n\n  initialize: function ({ deprecatedPlugins }: any) {\n    this.collection = deprecatedPlugins.get('channels');\n    this.videoCollection = this.collection.filterByType('video');\n    this.musicCollection = this.collection.filterByType('music');\n    this.photoCollection = this.collection.filterByType('photos');\n  },\n\n  //\n  // Control\n\n  serializeData: function () {\n    return {\n      serverID: this.collection.server.id,\n      allCount: this.collection.length,\n      hasInstalledChannels: this.collection.length > 0,\n      videoCount: this.videoCollection.length,\n      musicCount: this.musicCollection.length,\n      photoCount: this.photoCollection.length,\n    };\n  },\n\n  //\n  // Listeners\n\n  onRender: function () {\n    this.list.show(\n      new DeprecatedPluginTileList({ collection: this.collection })\n    );\n  },\n\n  onNavClick: function (event: any) {\n    // Wipe out any existing selected classes before we add the new one.\n    this.ui.navLinks.removeClass('selected');\n\n    $(event.currentTarget).addClass('selected');\n  },\n\n  onAllClick: function (event: any) {\n    event.preventDefault();\n\n    this.list.show(\n      new DeprecatedPluginTileList({ collection: this.collection })\n    );\n  },\n\n  onVideoClick: function (event: any) {\n    event.preventDefault();\n\n    this.list.show(\n      new DeprecatedPluginTileList({ collection: this.videoCollection })\n    );\n  },\n\n  onMusicClick: function (event: any) {\n    event.preventDefault();\n\n    this.list.show(\n      new DeprecatedPluginTileList({ collection: this.musicCollection })\n    );\n  },\n\n  onPhotoClick: function (event: any) {\n    event.preventDefault();\n\n    this.list.show(\n      new DeprecatedPluginTileList({ collection: this.photoCollection })\n    );\n  },\n});\n\nexport default DeprecatedPluginsView;\n","/* eslint-plugin-disable @typescript-eslint */\n\nimport { resolve } from 'app/js/adapters/adapters';\nimport ConnectionModel from 'app/js/models/server/ConnectionModel';\nimport { addLogLine } from 'app/js/stores/actions/ui/serverLogPageActions';\nimport BaseMediaServerEventConnection from 'app/js/utils/pubsub/BaseMediaServerEventConnection';\nimport * as messageTypes from 'app/js/utils/pubsub/messageTypes';\n\nconst MESSAGE_TYPES = [messageTypes.LOG];\n\nconst MediaServerLogEventConnection = BaseMediaServerEventConnection.extend({\n  //\n  // Properties\n\n  name: 'MediaServerLogEventConnection',\n\n  url() {\n    const activeConnection = this.server.get('activeConnection');\n    const socketConnectionUri = activeConnection.id.replace(/^http/, 'ws');\n\n    // If the the app is being served over https we want to use wss://\n    // instead of ws:// to prevent warnings about insecure connections.\n    return this.server.resolveUrl('/:/websockets/notifications', {\n      params: {\n        filters: 'log',\n      },\n      connection: new ConnectionModel({ uri: socketConnectionUri }),\n      appendToken: true,\n    });\n  },\n\n  //\n  // Messages\n\n  getMessageTypes() {\n    return MESSAGE_TYPES;\n  },\n\n  [messageTypes.LOG](message: any) {\n    const appStore = resolve('appStore');\n    appStore.dispatch(\n      addLogLine({ message, serverEntityID: this.server.entityID() })\n    );\n  },\n});\n\nexport default MediaServerLogEventConnection;\n","// extracted by mini-css-extract-plugin\nexport default {\"toolbarButton\":\"N1BT3\",\"bottomLeft\":\"dCdeu iH9ts GtJsp If9gp cb5I0 FDsdp\",\"bottomCenter\":\"tCLpa a1e4c GtJsp If9gp cb5I0 rII2m\",\"bottomRight\":\"rihSU BCoc8 GtJsp If9gp cb5I0 c63xo\",\"hasFocus\":\"xL7EL\"};","/* eslint-plugin-disable @typescript-eslint */\n\nimport React, { Component } from 'react';\nimport Link, { LinkProps } from 'app/js/views/v3/components/core/buttons/Link';\nimport TooltipTrigger from 'app/js/views/v3/components/core/tooltips/TooltipTrigger';\nimport * as tooltipAttachments from 'app/js/views/v3/helpers/props/tooltipAttachments';\nimport styles from './ToolbarButton.css';\n\ninterface ToolbarButtonProps extends LinkProps {\n  tooltip?: string;\n  className?: string;\n  hasLabel?: boolean;\n  tooltipAttachment?: string;\n  hideOnPress?: boolean;\n  onPress?: (...args: any[]) => any;\n}\n\nclass ToolbarButton extends Component<ToolbarButtonProps> {\n  static defaultProps = {\n    className: styles.toolbarButton,\n    tooltipAttachment: tooltipAttachments.BOTTOM_CENTER,\n  };\n\n  //\n  // Render\n\n  render() {\n    const {\n      children,\n      tooltip,\n      className,\n      hasLabel,\n      tooltipAttachment,\n      hideOnPress,\n      onPress,\n      ...otherProps\n    } = this.props;\n\n    // @ts-expect-error ts-migrate(2538) FIXME: Type 'undefined' cannot be used as an index type.\n    const tooltipClassName = styles[tooltipAttachment];\n    const tooltipFocusedClassName = `${tooltipClassName} ${styles.hasFocus}`;\n\n    return (\n      <TooltipTrigger\n        aria-label={tooltip}\n        className={className}\n        // @ts-expect-error ts-migrate(2739) FIXME: Type 'typeof Link' is missing the following proper... Remove this comment to see the full error message\n        component={Link}\n        hideOnPress={hideOnPress}\n        tooltip={tooltip}\n        tooltipClassName={tooltipClassName}\n        tooltipFocusedClassName={tooltipFocusedClassName}\n        onPress={onPress}\n        {...otherProps}\n      >\n        {children}\n      </TooltipTrigger>\n    );\n  }\n}\n\nexport default ToolbarButton;\n","/* eslint-plugin-disable @typescript-eslint */\n\nimport React from 'react';\nimport styles from './PageHeader.css';\n\ninterface PageHeaderProps {\n  children?: React.ReactNode;\n}\n\nfunction PageHeader({ children, ...otherProps }: PageHeaderProps) {\n  return (\n    <div className={styles.pageHeader} {...otherProps}>\n      {children}\n    </div>\n  );\n}\n\nexport default PageHeader;\n","// extracted by mini-css-extract-plugin\nexport default {\"pageHeader\":\"fRzjN\"};","/* eslint-plugin-disable @typescript-eslint */\n\nimport React from 'react';\nimport styles from './PageHeaderLeft.css';\n\ninterface PageHeaderLeftProps {\n  className?: string;\n  children?: React.ReactNode;\n}\n\nfunction PageHeaderLeft({ className, children }: PageHeaderLeftProps) {\n  return <div className={className}>{children}</div>;\n}\n\nPageHeaderLeft.defaultProps = {\n  className: styles.pageHeaderLeft,\n};\n\nexport default PageHeaderLeft;\n","// extracted by mini-css-extract-plugin\nexport default {\"pageHeaderLeft\":\"hr38l\"};","/* eslint-plugin-disable @typescript-eslint */\n\nimport React from 'react';\nimport styles from './PageHeaderRight.css';\n\ninterface PageHeaderRightProps {\n  className?: string;\n  children?: React.ReactNode;\n}\n\nfunction PageHeaderRight({ className, children }: PageHeaderRightProps) {\n  return <div className={className}>{children}</div>;\n}\n\nPageHeaderRight.defaultProps = {\n  className: styles.pageHeaderRight,\n};\n\nexport default PageHeaderRight;\n","// extracted by mini-css-extract-plugin\nexport default {\"pageHeaderRight\":\"dBaGw\"};","/* eslint-plugin-disable @typescript-eslint */\n\nconst serverLogLevels = [4, 3, 2, 1, 0];\n\nexport default serverLogLevels;\n","/* eslint-plugin-disable @typescript-eslint */\n\nimport t from 'app/js/utils/t';\n\nfunction getLogLevelLabel(level: any) {\n  switch (level) {\n    case 0:\n      return t('Error');\n    case 1:\n      return t('Warning');\n    case 2:\n      return t('Info');\n    case 3:\n      return t('Debug');\n    case 4:\n      return t('Verbose');\n    default:\n      return t('Unknown');\n  }\n}\n\nexport default getLogLevelLabel;\n","/* eslint-plugin-disable @typescript-eslint */\n\nimport React, { Component } from 'react';\nimport DisclosureArrowButton from 'app/js/views/v3/components/core/buttons/DisclosureArrowButton';\nimport Link from 'app/js/views/v3/components/core/buttons/Link';\nimport * as directions from 'app/js/views/v3/helpers/props/directions';\nimport styles from './PageHeaderBreadcrumbButton.css';\n\ninterface PageHeaderBreadcrumbButtonProps {\n  linkClassName?: string;\n  buttonClassName?: string;\n  to?: string;\n  hasMenu?: boolean;\n  isMenuOpen?: boolean;\n  isSelected?: boolean;\n  isDisabled?: boolean;\n}\n\nclass PageHeaderBreadcrumbButton extends Component<PageHeaderBreadcrumbButtonProps> {\n  static defaultProps = {\n    linkClassName: styles.link,\n    buttonClassName: styles.button,\n    hasMenu: false,\n    isMenuOpen: false,\n    isSelected: false,\n    isDisabled: false,\n  };\n\n  //\n  // Render\n\n  render() {\n    const {\n      linkClassName,\n      buttonClassName,\n      children,\n      to,\n      hasMenu,\n      isMenuOpen,\n      isSelected,\n      isDisabled,\n      ...otherProps\n    } = this.props;\n\n    if (!hasMenu && !to) {\n      return <span className={linkClassName}>{children}</span>;\n    }\n\n    if (!hasMenu) {\n      return (\n        <Link className={linkClassName} isDisabled={isDisabled} to={to}>\n          {children}\n        </Link>\n      );\n    }\n\n    return (\n      <DisclosureArrowButton\n        className={buttonClassName}\n        data-testid=\"typeDropdownButton\"\n        direction={isMenuOpen ? directions.UP : directions.DOWN}\n        // @ts-expect-error ts-migrate(2769) FIXME: No overload matches this call.\n        isDisabled={isDisabled}\n        isSelected={isSelected}\n        {...otherProps}\n      >\n        {children}\n      </DisclosureArrowButton>\n    );\n  }\n}\n\nexport default PageHeaderBreadcrumbButton;\n","// extracted by mini-css-extract-plugin\nexport default {\"link\":\"kS7gD\",\"button\":\"oVUtZ IZ0cW x5jRQ\"};","/* eslint-plugin-disable @typescript-eslint */\n\nimport React, { Component } from 'react';\nimport serverLogLevels from 'app/js/utils/constants/serverLogLevels';\nimport getLogLevelLabel from 'app/js/utils/server/getLogLevelLabel';\nimport t from 'app/js/utils/t';\nimport PageHeaderBreadcrumbButton from 'app/js/views/v3/components/core/header/PageHeaderBreadcrumbButton';\nimport Menu from 'app/js/views/v3/components/core/menus/Menu';\nimport MenuSeparator from 'app/js/views/v3/components/core/menus/MenuSeparator';\nimport SelectedMenuItem from 'app/js/views/v3/components/core/menus/SelectedMenuItem';\nimport getUniqueElementID from 'app/js/views/v3/helpers/getUniqueElementID';\nimport { LARGE } from 'app/js/views/v3/helpers/props/sizes';\n\ntype ServerLogLevelMenuProps = {\n  logLevels: any[];\n  onResetLogLevels: (...args: any[]) => any;\n  onToggleLogLevel: (...args: any[]) => any;\n};\n\ntype ServerLogLevelMenuState = any;\n\nclass ServerLogLevelMenu extends Component<\n  ServerLogLevelMenuProps,\n  ServerLogLevelMenuState\n> {\n  // eslint-disable-next-line react/sort-comp\n  _buttonID: any;\n\n  //\n  // Lifecycle\n\n  constructor(props: any, context: any) {\n    super(props, context);\n\n    this._buttonID = getUniqueElementID();\n\n    this.state = {\n      isMenuOpen: false,\n    };\n  }\n\n  //\n  // Listeners\n\n  onMenuPress = () => {\n    this.setState((prevState: any) => {\n      return { isMenuOpen: !prevState.isMenuOpen };\n    });\n  };\n\n  onMenuClose = () => {\n    this.setState({ isMenuOpen: false });\n  };\n\n  onAllPress = () => {\n    this.props.onResetLogLevels();\n  };\n\n  onLogLevelSelect = (logLevel: any) => {\n    this.props.onToggleLogLevel(logLevel);\n  };\n\n  //\n  // Render\n\n  render() {\n    const { logLevels } = this.props;\n\n    const { isMenuOpen } = this.state;\n\n    let label;\n\n    if (!logLevels.length) {\n      label = t('All');\n    } else if (logLevels.length === 1) {\n      label = getLogLevelLabel(logLevels[0]);\n    } else {\n      label = t('Custom');\n    }\n\n    return (\n      <>\n        <PageHeaderBreadcrumbButton\n          hasMenu={true}\n          // @ts-expect-error ts-migrate(2769) FIXME: No overload matches this call.\n          id={this._buttonID}\n          isMenuOpen={isMenuOpen}\n          onPress={this.onMenuPress}\n        >\n          {label}\n        </PageHeaderBreadcrumbButton>\n\n        <Menu\n          isOpen={isMenuOpen}\n          size={LARGE}\n          target={this._buttonID}\n          onMenuClose={this.onMenuClose}\n        >\n          <SelectedMenuItem\n            key=\"all\"\n            isSelected={!logLevels.length}\n            onPress={this.onAllPress}\n          >\n            {t('All')}\n          </SelectedMenuItem>\n\n          <MenuSeparator />\n\n          {serverLogLevels.map((logLevel, i) => (\n            <SelectedMenuItem\n              key={i}\n              isSelected={logLevels.indexOf(logLevel) !== -1}\n              value={logLevel}\n              onSelect={this.onLogLevelSelect}\n            >\n              {getLogLevelLabel(logLevel)}\n            </SelectedMenuItem>\n          ))}\n        </Menu>\n      </>\n    );\n  }\n}\n\nexport default ServerLogLevelMenu;\n","/* eslint-plugin-disable @typescript-eslint */\n\nimport { connect } from 'react-redux';\nimport { createSelector } from 'reselect';\nimport {\n  resetLogLevels,\n  toggleLogLevel,\n} from 'app/js/stores/actions/ui/serverLogPageActions';\nimport ServerLogLevelMenu from './ServerLogLevelMenu';\n\nconst mapStateToProps = createSelector(\n  // @ts-expect-error ts-migrate(2571) FIXME: Object is of type 'unknown'.\n  (appState) => appState.ui.serverLogPage.logLevels,\n  (logLevels) => {\n    return {\n      logLevels,\n    };\n  }\n);\n\nfunction createMapDispatchToProps(dispatch: any, props: any) {\n  const { serverEntityID } = props;\n\n  return {\n    onResetLogLevels() {\n      dispatch(resetLogLevels({ serverEntityID }));\n    },\n\n    onToggleLogLevel(logLevel: any) {\n      dispatch(toggleLogLevel({ serverEntityID, logLevel }));\n    },\n  };\n}\n\nexport default connect(\n  mapStateToProps,\n  createMapDispatchToProps\n)(ServerLogLevelMenu);\n","\n    import PropTypes from 'prop-types';\n    import React from 'react';\n    import styles from 'app/js/views/v3/components/core/base/PlexIcon.css';\n\n    function IconCircleBackslash(props) {\n      const label = props['aria-label'];\n      const className = props.className;\n      const style = props.style;\n\n      const svgProps = {\"xmlns\":\"http://www.w3.org/2000/svg\",\"viewBox\":\"0 0 560 560\",\"id\":\"plex-icon-circle-backslash-560\"};\n\n      svgProps['aria-hidden'] = !label;\n      svgProps.style = style;\n      svgProps.className = styles.plexIcon + (className ? ' ' + className : '');\n\n      const children = [React.createElement.apply(React, ['g', undefined].concat([React.createElement.apply(React, ['path', {\"d\":\"M280 518C148.56 518 42 411.44 42 280S148.56 42 280 42s238 106.56 238 238-106.56 238-238 238m0-42c108.25 0 196-87.75 196-196S388.25 84 280 84 84 171.75 84 280s87.75 196 196 196\"}].concat([])),React.createElement.apply(React, ['path', {\"d\":\"M157.246 125.568l277.186 277.186-31.678 31.678-277.186-277.186\"}].concat([]))]))];\n\n      if (label) {\n        children.unshift(React.createElement('title', null, label));\n      }\n\n      // Arrays require a key, but a fixed number of elements don't.\n      // Spread the elements since it'll be a fixed number anyways\n      return React.createElement.apply(React, ['svg', svgProps].concat(children));\n    };\n\n    IconCircleBackslash.propTypes = {\n      'aria-label': PropTypes.string,\n      className: PropTypes.string,\n      style: PropTypes.object\n    };\n\n    export default IconCircleBackslash;\n  ","\n    import PropTypes from 'prop-types';\n    import React from 'react';\n    import styles from 'app/js/views/v3/components/core/base/PlexIcon.css';\n\n    function IconTimer(props) {\n      const label = props['aria-label'];\n      const className = props.className;\n      const style = props.style;\n\n      const svgProps = {\"viewBox\":\"0 0 560 560\",\"xmlns\":\"http://www.w3.org/2000/svg\",\"strokeMiterlimit\":\"1.414\",\"strokeLinejoin\":\"round\",\"id\":\"plex-icon-timer-560\"};\n\n      svgProps['aria-hidden'] = !label;\n      svgProps.style = style;\n      svgProps.className = styles.plexIcon + (className ? ' ' + className : '');\n\n      const children = [React.createElement.apply(React, ['path', {\"d\":\"M364 84h-56v29.99c1.22.173 2.437.36 3.653.558 8.207 1.334 16.33 3.195 24.298 5.567 8.232 2.452 16.3 5.45 24.137 8.966 9.732 4.368 19.104 9.535 27.995 15.428 9.163 6.073 17.813 12.915 25.836 20.428 8.158 7.64 15.666 15.974 22.414 24.884 6.66 8.792 12.578 18.144 17.668 27.928 4.312 8.29 8.03 16.89 11.11 25.713 3.058 8.765 5.487 17.747 7.264 26.856C474.794 282.723 476 295.36 476 308c0 8.956-.604 17.91-1.818 26.785-1.35 9.864-3.456 19.624-6.297 29.166-2.904 9.754-6.576 19.277-10.968 28.457-5.02 10.496-10.983 20.54-17.784 29.982-6.88 9.547-14.615 18.477-23.084 26.648-8.758 8.45-18.297 16.087-28.46 22.78-10.073 6.632-20.757 12.334-31.878 17-12.24 5.137-25.002 9.015-38.028 11.556-12.2 2.38-24.622 3.586-37.05 3.625-12.443.038-24.89-1.09-37.117-3.395-13.052-2.462-25.848-6.263-38.126-11.327-11.153-4.6-21.876-10.24-31.992-16.815-10.205-6.63-19.79-14.213-28.598-22.61-8.517-8.12-16.305-17.003-23.24-26.51-6.857-9.397-12.877-19.403-17.96-29.865-4.446-9.148-8.174-18.643-11.137-28.372-2.897-9.516-5.062-19.254-6.474-29.1C84.66 326.732 84 317.365 84 308c0-12.028 1.09-24.054 3.283-35.88 1.657-8.94 3.94-17.765 6.83-26.385 2.974-8.87 6.59-17.524 10.804-25.874 5.062-10.025 10.99-19.613 17.69-28.627 6.67-8.97 14.103-17.37 22.193-25.085 8.096-7.72 16.85-14.75 26.136-20.985 9.017-6.055 18.538-11.36 28.434-15.838 7.823-3.54 15.88-6.56 24.102-9.036 7.958-2.398 16.07-4.283 24.27-5.643 1.416-.235 2.836-.455 4.258-.658V84h-56V56h168v28m-83.5 70h-1c-2.815.014-5.627.094-8.436.254-5.51.315-11.005.924-16.45 1.827-12.92 2.144-25.556 5.957-37.505 11.32-7.786 3.493-15.277 7.64-22.376 12.374-6.938 4.628-13.5 9.82-19.604 15.502-6.326 5.89-12.16 12.307-17.42 19.166-5.18 6.754-9.802 13.936-13.8 21.452-3.513 6.607-6.542 13.47-9.052 20.52-2.385 6.7-4.3 13.568-5.727 20.535-2.09 10.21-3.13 20.63-3.13 31.05 0 7.212.496 14.425 1.497 21.568 1.06 7.573 2.69 15.067 4.872 22.397 2.276 7.648 5.156 15.117 8.6 22.316 4.013 8.388 8.79 16.407 14.247 23.935 5.436 7.5 11.547 14.508 18.23 20.92 7.247 6.95 15.167 13.195 23.617 18.615 7.583 4.864 15.592 9.06 23.91 12.522 9.61 4 19.63 7.01 29.854 8.97C260.436 461.085 270.218 462 280 462s19.564-.915 29.172-2.758c10.223-1.96 20.243-4.97 29.855-8.97 8.888-3.7 17.424-8.238 25.464-13.533 7.87-5.182 15.263-11.084 22.062-17.606 6.573-6.304 12.59-13.187 17.96-20.545 5.57-7.636 10.44-15.783 14.518-24.31 3.444-7.198 6.324-14.666 8.6-22.315 2.183-7.33 3.812-14.823 4.873-22.397 1-7.143 1.497-14.356 1.497-21.568 0-10.42-1.04-20.84-3.13-31.052-1.46-7.12-3.428-14.136-5.886-20.976-2.48-6.895-5.455-13.61-8.895-20.08-4.143-7.787-8.957-15.217-14.367-22.184-5.016-6.46-10.544-12.525-16.515-18.116-6.425-6.018-13.363-11.49-20.716-16.33-6.868-4.523-14.098-8.496-21.6-11.863-11.95-5.363-24.585-9.176-37.506-11.32-5.445-.902-10.94-1.51-16.45-1.826-2.81-.16-5.62-.24-8.435-.253M252 336V185.167c8.998-2.085 18.374-3.167 28-3.167 34.77 0 66.27 14.115 89.078 36.922L252 336\"}].concat([]))];\n\n      if (label) {\n        children.unshift(React.createElement('title', null, label));\n      }\n\n      // Arrays require a key, but a fixed number of elements don't.\n      // Spread the elements since it'll be a fixed number anyways\n      return React.createElement.apply(React, ['svg', svgProps].concat(children));\n    };\n\n    IconTimer.propTypes = {\n      'aria-label': PropTypes.string,\n      className: PropTypes.string,\n      style: PropTypes.object\n    };\n\n    export default IconTimer;\n  ","/* eslint-plugin-disable @typescript-eslint */\n\nimport React, { Component } from 'react';\nimport t from 'app/js/utils/t';\nimport TextInput from 'app/js/views/v3/components/core/forms/TextInput';\nimport { LARGE } from 'app/js/views/v3/helpers/props/sizes';\nimport styles from './ServerLogFilterInput.css';\n\ntype ServerLogFilterInputProps = {\n  filter: string;\n  onTextFilterChange: (...args: any[]) => any;\n};\n\ntype ServerLogFilterInputState = any;\n\nclass ServerLogFilterInput extends Component<\n  ServerLogFilterInputProps,\n  ServerLogFilterInputState\n> {\n  // eslint-disable-next-line react/sort-comp\n  _timeoutID: any;\n\n  //\n  // Static\n\n  static getDerivedStateFromProps(nextProps: any, prevState: any) {\n    // Respect external changes to the filter value, e.g. `clearFilter` action.\n    if (nextProps.filter !== prevState.filterFromStore) {\n      return {\n        filter: nextProps.filter,\n        filterFromStore: nextProps.filter,\n      };\n    }\n\n    // No change\n    return null;\n  }\n\n  //\n  // Lifecycle\n\n  constructor(props: any, context: any) {\n    super(props, context);\n\n    this.state = {\n      filter: props.filter,\n      filterFromStore: props.filter,\n    };\n  }\n\n  componentWillUnmount() {\n    this._clearOnTextFilterChangeTimeout();\n  }\n\n  //\n  // Control\n\n  _clearOnTextFilterChangeTimeout() {\n    if (this._timeoutID) {\n      window.clearTimeout(this._timeoutID);\n    }\n  }\n\n  //\n  // Listeners\n\n  onTextFilterChange = (filter: any) => {\n    this._clearOnTextFilterChangeTimeout();\n\n    this.setState({ filter }, () => {\n      this._timeoutID = window.setTimeout(() => {\n        this._timeoutID = null;\n        this.props.onTextFilterChange(this.state.filter);\n      }, 200);\n    });\n  };\n\n  //\n  // Render\n\n  render() {\n    const { filter } = this.state;\n\n    return (\n      <TextInput\n        className={styles.input}\n        initialValue={filter}\n        name=\"filter\"\n        placeholder={t('Filter logs')}\n        size={LARGE}\n        value={filter}\n        onChange={this.onTextFilterChange}\n      />\n    );\n  }\n}\n\nexport default ServerLogFilterInput;\n","// extracted by mini-css-extract-plugin\nexport default {\"input\":\"dpdSy zFgJZ kasAI\"};","// extracted by mini-css-extract-plugin\nexport default {\"container\":\"YmaIl\",\"separator\":\"TVwUf\",\"input\":\"dSX8Y zFgJZ kasAI\"};","/* eslint-plugin-disable @typescript-eslint */\n\nimport React, { Component } from 'react';\nimport t from 'app/js/utils/t';\nimport TextInput from 'app/js/views/v3/components/core/forms/TextInput';\nimport { LARGE } from 'app/js/views/v3/helpers/props/sizes';\nimport styles from './ServerLogTimeFilterInputs.css';\n\ntype ServerLogTimeFilterInputsProps = {\n  timeFilterStart: string;\n  timeFilterEnd: string;\n  isTimeFilterStartValid: boolean;\n  isTimeFilterEndValid: boolean;\n  onTimeFilterChange: (...args: any[]) => any;\n};\n\ntype ServerLogTimeFilterInputsState = any;\n\nclass ServerLogTimeFilterInputs extends Component<\n  ServerLogTimeFilterInputsProps,\n  ServerLogTimeFilterInputsState\n> {\n  // eslint-disable-next-line react/sort-comp\n  _timeoutID: any;\n\n  //\n  // Static\n\n  static getDerivedStateFromProps(nextProps: any, prevState: any) {\n    // Respect external changes to the filter value, e.g. `clearFilter` action.\n    if (\n      nextProps.timeFilterStart !== prevState.timeFilterStartFromStore ||\n      nextProps.timeFilterEnd !== prevState.timeFilterEndFromStore\n    ) {\n      return {\n        timeFilterStart: nextProps.timeFilterStart,\n        timeFilterStartFromStore: nextProps.timeFilterStart,\n        timeFilterEnd: nextProps.timeFilterEnd,\n        timeFilterEndFromStore: nextProps.timeFilterEnd,\n      };\n    }\n\n    // No change\n    return null;\n  }\n\n  //\n  // Lifecycle\n\n  constructor(props: any, context: any) {\n    super(props, context);\n\n    this.state = {\n      timeFilterStart: props.timeFilterStart,\n      timeFilterStartFromStore: props.timeFilterStart,\n      timeFilterEnd: props.timeFilterEnd,\n      timeFilterEndFromStore: props.timeFilterEnd,\n    };\n  }\n\n  componentWillUnmount() {\n    this._clearOnTextFilterChangeTimeout();\n  }\n\n  //\n  // Control\n\n  _flushValues = () => {\n    this._timeoutID = window.setTimeout(() => {\n      this._timeoutID = null;\n      this.props.onTimeFilterChange(\n        this.state.timeFilterStart,\n        this.state.timeFilterEnd\n      );\n    }, 200);\n  };\n\n  _clearOnTextFilterChangeTimeout() {\n    if (this._timeoutID) {\n      window.clearTimeout(this._timeoutID);\n    }\n  }\n\n  //\n  // Listeners\n\n  onFilterStartChange = (timeFilterStart: any) => {\n    this._clearOnTextFilterChangeTimeout();\n\n    this.setState({ timeFilterStart }, this._flushValues);\n  };\n\n  onFilterEndChange = (timeFilterEnd: any) => {\n    this._clearOnTextFilterChangeTimeout();\n\n    this.setState({ timeFilterEnd }, this._flushValues);\n  };\n\n  //\n  // Render\n\n  render() {\n    const { isTimeFilterStartValid, isTimeFilterEndValid } = this.props;\n\n    const { timeFilterStart, timeFilterEnd } = this.state;\n\n    return (\n      <div className={styles.container}>\n        <TextInput\n          className={styles.input}\n          hasError={!isTimeFilterStartValid}\n          initialValue={timeFilterStart}\n          name=\"timeFilterStart\"\n          placeholder=\"Jun 15, 2018 09:00:00\"\n          size={LARGE}\n          value={timeFilterStart}\n          onChange={this.onFilterStartChange}\n        />\n\n        <span className={styles.separator}>{t('to')}</span>\n\n        <TextInput\n          className={styles.input}\n          hasError={!isTimeFilterEndValid}\n          initialValue={timeFilterEnd}\n          name=\"timeFilterEnd\"\n          placeholder=\"Jun 15, 2018 09:01:00\"\n          size={LARGE}\n          value={timeFilterEnd}\n          onChange={this.onFilterEndChange}\n        />\n      </div>\n    );\n  }\n}\n\nexport default ServerLogTimeFilterInputs;\n","/* eslint-plugin-disable @typescript-eslint */\n\nimport React, { Component } from 'react';\nimport t from 'app/js/utils/t';\nimport DashSeparator from 'app/js/views/v3/components/core/base/DashSeparator';\nimport Link from 'app/js/views/v3/components/core/buttons/Link';\nimport ToolbarButton from 'app/js/views/v3/components/core/buttons/ToolbarButton';\nimport PageHeader from 'app/js/views/v3/components/core/header/PageHeader';\nimport PageHeaderLeft from 'app/js/views/v3/components/core/header/PageHeaderLeft';\nimport PageHeaderRight from 'app/js/views/v3/components/core/header/PageHeaderRight';\nimport ServerLogLevelMenuConnector from 'app/js/views/v3/components/pages/serverSettings/panes/logs/ServerLogLevelMenuConnector';\nimport IconCircleBackslash from 'app/glyphs/circle-backslash-560.svg';\nimport IconTimer from 'app/glyphs/timer-560.svg';\nimport ServerLogFilterInput from './ServerLogFilterInput';\nimport ServerLogTimeFilterInputs from './ServerLogTimeFilterInputs';\nimport styles from './ServerLogPageHeader.css';\n\ntype ServerLogPageHeaderProps = {\n  filter: string;\n  timeFilterStart: string;\n  timeFilterEnd: string;\n  isTimeFilterStartValid: boolean;\n  isTimeFilterEndValid: boolean;\n  showTimeFilter: boolean;\n  showRawText: boolean;\n  title: string;\n  logLines: any[];\n  unfilteredLogLinesCount: number;\n  onTextFilterChange: (...args: any[]) => any;\n  onTimeFilterChange: (...args: any[]) => any;\n  onToggleTimeFilter: (...args: any[]) => any;\n  onToggleRaw: (...args: any[]) => any;\n  onClearLog: (...args: any[]) => any;\n};\n\nclass ServerLogPageHeader extends Component<ServerLogPageHeaderProps> {\n  //\n  // Render\n\n  render() {\n    const {\n      filter,\n      timeFilterStart,\n      timeFilterEnd,\n      isTimeFilterStartValid,\n      isTimeFilterEndValid,\n      showTimeFilter,\n      showRawText,\n      title,\n      unfilteredLogLinesCount,\n      logLines,\n      onTextFilterChange,\n      onTimeFilterChange,\n      onToggleTimeFilter,\n      onToggleRaw,\n      onClearLog,\n    } = this.props;\n\n    const hiddenLinesCount = unfilteredLogLinesCount - logLines.length;\n\n    return (\n      <>\n        <PageHeader>\n          <PageHeaderLeft>\n            {title}\n            <DashSeparator />\n            {t('Plex Media Server Logs')}\n\n            {hiddenLinesCount > 0 ? (\n              <span className={styles.controlsHiddenLinesCount}>\n                <DashSeparator />\n                {t('{hiddenLinesCount} items hidden by filters', {\n                  hiddenLinesCount,\n                })}\n              </span>\n            ) : null}\n          </PageHeaderLeft>\n\n          <PageHeaderRight>\n            <ServerLogLevelMenuConnector />\n\n            <ServerLogFilterInput\n              filter={filter}\n              onTextFilterChange={onTextFilterChange}\n            />\n\n            <ToolbarButton\n              isSelected={showTimeFilter}\n              tooltip={t('Time Filter')}\n              onPress={onToggleTimeFilter}\n            >\n              <IconTimer />\n            </ToolbarButton>\n\n            <Link\n              className={styles.rawButton}\n              isSelected={showRawText}\n              onPress={onToggleRaw}\n            >\n              {t('Raw')}\n            </Link>\n\n            <ToolbarButton tooltip={t('Clear Logs')} onPress={onClearLog}>\n              <IconCircleBackslash />\n            </ToolbarButton>\n          </PageHeaderRight>\n        </PageHeader>\n\n        {showTimeFilter ? (\n          <ServerLogTimeFilterInputs\n            isTimeFilterEndValid={isTimeFilterEndValid}\n            isTimeFilterStartValid={isTimeFilterStartValid}\n            timeFilterEnd={timeFilterEnd}\n            timeFilterStart={timeFilterStart}\n            onTimeFilterChange={onTimeFilterChange}\n          />\n        ) : null}\n      </>\n    );\n  }\n}\n\nexport default ServerLogPageHeader;\n","// extracted by mini-css-extract-plugin\nexport default {\"controlsHiddenLinesCount\":\"PjkSa\",\"rawButton\":\"GEiZs\"};","/* eslint-plugin-disable @typescript-eslint */\n\nimport { connect } from 'react-redux';\nimport { createSelector } from 'reselect';\nimport * as serverLogPageActions from 'app/js/stores/actions/ui/serverLogPageActions';\nimport { scheduleImmediateUpdate } from 'app/js/utils/state/stateUpdateScheduler';\nimport ServerLogPageHeader from './ServerLogPageHeader';\n\nconst mapStateToProps = createSelector(\n  // @ts-expect-error ts-migrate(2571) FIXME: Object is of type 'unknown'.\n  (appState) => appState.ui.serverLogPage,\n  (serverLogPage) => {\n    return {\n      filter: serverLogPage.filter,\n      timeFilterStart: serverLogPage.timeFilterStart,\n      timeFilterEnd: serverLogPage.timeFilterEnd,\n      isTimeFilterStartValid: serverLogPage.isTimeFilterStartValid,\n      isTimeFilterEndValid: serverLogPage.isTimeFilterEndValid,\n      showTimeFilter: serverLogPage.showTimeFilter,\n      showRawText: serverLogPage.showRawText,\n      logLines: serverLogPage.logLines,\n      unfilteredLogLinesCount: serverLogPage.unfilteredLogLinesCount,\n    };\n  }\n);\n\nfunction createMapDispatchToProps(dispatch: any, props: any) {\n  const { serverEntityID } = props;\n\n  return {\n    onTextFilterChange(filter: any) {\n      // Avoid a race between debounced local changes and the state change.\n      scheduleImmediateUpdate(() => {\n        dispatch(\n          serverLogPageActions.changeTextFilter({ serverEntityID, filter })\n        );\n      });\n    },\n    onTimeFilterChange(timeFilterStart: any, timeFilterEnd: any) {\n      // Avoid a race between debounced local changes and the state change.\n      scheduleImmediateUpdate(() => {\n        dispatch(\n          serverLogPageActions.changeTimeFilter({\n            serverEntityID,\n            timeFilterStart,\n            timeFilterEnd,\n          })\n        );\n      });\n    },\n    onToggleTimeFilter() {\n      dispatch(serverLogPageActions.toggleTimeFilter({ serverEntityID }));\n    },\n    onToggleRaw() {\n      dispatch(serverLogPageActions.toggleRaw());\n    },\n    onClearLog() {\n      dispatch(serverLogPageActions.clearLog({ serverEntityID }));\n    },\n  };\n}\n\nexport default connect(\n  mapStateToProps,\n  createMapDispatchToProps\n)(ServerLogPageHeader);\n","// extracted by mini-css-extract-plugin\nexport default {\"container\":\"NZbv_\",\"scrollContainer\":\"MEDi3\",\"expandContent\":\"jI6LO\",\"shrinkContent\":\"iyarV jI6LO\"};","/* eslint-plugin-disable @typescript-eslint */\n\nimport React, { Component } from 'react';\nimport assert from 'app/js/utils/log/assert';\nimport shouldPureComponentUpdate from 'app/js/views/v3/helpers/shouldPureComponentUpdate';\nimport styles from './Measure.css';\n\ninterface MeasureProps {\n  id?: string;\n  className?: string;\n  style?: any;\n  ignoreWidth?: boolean;\n  ignoreHeight?: boolean;\n  ignorePosition?: boolean;\n  ignoreTransforms?: boolean;\n  resizeTimeout: number;\n  onMeasure?: (...args: any[]) => any;\n  onContainerRef?: (...args: any[]) => any;\n  onKeyDown?: (...args: any[]) => any;\n}\ntype MeasureState = any;\nclass Measure extends Component<MeasureProps, MeasureState> {\n  static defaultProps = {\n    className: styles.container,\n    ignoreWidth: false,\n    ignoreHeight: false,\n    ignorePosition: false,\n    ignoreTransforms: false,\n    resizeTimeout: 100,\n  };\n  // eslint-disable-next-line react/sort-comp\n  _container: any;\n  _expandContainer: any;\n  _frameRequestID: any;\n  _measureTimeoutID: any;\n  _shrinkContainer: any;\n  //\n  // Lifecycle\n  constructor(props: any, context: any) {\n    super(props, context);\n    const { ignoreWidth, ignoreHeight, ignorePosition } = props;\n    // The `scrollWidth` property provides a consistent value for containers\n    // which overflow their `offsetParent` on both X and Y axis. Other width\n    // access methods return values influenced by the container's `position`\n    // style in conjunction with the axis which they overflow their\n    // `offsetParent`.\n    this.state = {\n      isMeasured: false,\n      width: ignoreWidth ? undefined : 0,\n      scrollWidth: ignoreWidth ? undefined : 0,\n      height: ignoreHeight ? undefined : 0,\n      scrollHeight: ignoreHeight ? undefined : 0,\n      x: ignorePosition ? undefined : 0,\n      y: ignorePosition ? undefined : 0,\n    };\n  }\n  componentDidMount() {\n    this._requestFrame();\n  }\n  shouldComponentUpdate(nextProps: MeasureProps, nextState: MeasureState) {\n    // @ts-expect-error ts-migrate(2554) FIXME: Expected 5 arguments, but got 3.\n    return shouldPureComponentUpdate(this, nextProps, nextState);\n  }\n  componentWillUnmount() {\n    this._cancelFrame();\n    this._clearTimeout();\n  }\n  //\n  // Control\n  _requestFrame = () => {\n    this._clearTimeout();\n    this._cancelFrame();\n    this._frameRequestID = window.requestAnimationFrame(this._measure);\n  };\n  _requestTimeout = () => {\n    this._clearTimeout();\n    this._cancelFrame();\n    this._measureTimeoutID = window.setTimeout(\n      this._requestFrame,\n      this.props.resizeTimeout\n    );\n  };\n  _cancelFrame() {\n    if (this._frameRequestID) {\n      this._frameRequestID = window.cancelAnimationFrame(this._frameRequestID);\n    }\n  }\n  _clearTimeout() {\n    if (this._measureTimeoutID) {\n      this._measureTimeoutID = window.clearTimeout(this._measureTimeoutID);\n    }\n  }\n  _measure = () => {\n    const { ignoreWidth, ignoreHeight, ignorePosition, ignoreTransforms } =\n      this.props;\n    const { isMeasured, width, scrollWidth, height, scrollHeight, x, y } =\n      this.state;\n    const container = this._container;\n    if (!container) {\n      // container is null so do no work. _setContainerRef will get called with\n      // `null` when the element changes or is unmounted. Guard when _measure\n      // gets called during this case.\n      return;\n    }\n    __DEV__ &&\n      assert(\n        window.getComputedStyle(container).position !== 'static',\n        'The `Measure` container needs a `position` style other than `static`'\n      );\n    const boundingRect = container.getBoundingClientRect();\n    // When there are transforms applied to the element, offsetWidth and\n    // offsetHeight return its layout width and height, while\n    // getBoundingClientRect() returns the rendering width and height.\n    // See: https://developer.mozilla.org/en-US/docs/Web/API/CSS_Object_Model/Determining_the_dimensions_of_elements\n    const containerWidth = ignoreTransforms\n      ? container.offsetWidth\n      : boundingRect.width;\n    const containerHeight = ignoreTransforms\n      ? container.offsetHeight\n      : boundingRect.height;\n    const hasMeasuredChanged = isMeasured !== true;\n    const hasPositionChanged =\n      !ignorePosition && (boundingRect.left !== x || boundingRect.top !== y);\n    const hasWidthChanged =\n      !ignoreWidth &&\n      (containerWidth !== width || container.scrollWidth !== scrollWidth);\n    const hasHeightChanged =\n      !ignoreHeight &&\n      (containerHeight !== height || container.scrollHeight !== scrollHeight);\n    // Reset before notifying `onMeasure` to avoid any complications arising if\n    // the `Measure` component is unmounted during the `onMeasure` callstack.\n    this._reset();\n    if (\n      hasMeasuredChanged ||\n      hasPositionChanged ||\n      hasWidthChanged ||\n      hasHeightChanged\n    ) {\n      const style = window.getComputedStyle(container);\n      const measurements = { isMeasured: true };\n      if (!ignorePosition) {\n        (measurements as any).x = hasPositionChanged ? boundingRect.left : x;\n        (measurements as any).y = hasPositionChanged ? boundingRect.top : y;\n      }\n      if (!ignoreWidth) {\n        const paddingRight = parseInt(style.paddingRight, 10) || 0;\n        const paddingLeft = parseInt(style.paddingLeft, 10) || 0;\n        (measurements as any).width = hasWidthChanged\n          ? containerWidth - paddingLeft - paddingRight\n          : width;\n        (measurements as any).scrollWidth = hasWidthChanged\n          ? container.scrollWidth\n          : scrollWidth;\n      }\n      if (!ignoreHeight) {\n        const paddingTop = parseInt(style.paddingTop, 10) || 0;\n        const paddingBottom = parseInt(style.paddingBottom, 10) || 0;\n        (measurements as any).height = hasHeightChanged\n          ? containerHeight - paddingTop - paddingBottom\n          : height;\n        (measurements as any).scrollHeight = hasHeightChanged\n          ? container.scrollHeight\n          : scrollHeight;\n      }\n      this.setState(measurements);\n      if (this.props.onMeasure) {\n        this.props.onMeasure(measurements);\n      }\n    }\n  };\n  _reset() {\n    const expandContainer = this._expandContainer;\n    const shrinkContainer = this._shrinkContainer;\n    expandContainer.scrollTop = 100000;\n    expandContainer.scrollLeft = 100000;\n    shrinkContainer.scrollTop = 100000;\n    shrinkContainer.scrollLeft = 100000;\n  }\n  _setContainerRef = (ref: any) => {\n    this._container = ref;\n    const { onContainerRef } = this.props;\n    if (onContainerRef) {\n      onContainerRef(ref);\n    }\n  };\n  _setExpandContainerRef = (ref: any) => {\n    this._expandContainer = ref;\n  };\n  _setShrinkContainerRef = (ref: any) => {\n    this._shrinkContainer = ref;\n  };\n  //\n  // Listeners\n  // @ts-expect-error ts-migrate(6133) FIXME: 'event' is declared but its value is never read.\n  onScroll = (event: any) => {\n    this._requestTimeout();\n  };\n  //\n  // Render\n  render() {\n    const { id, className, children, style, onKeyDown, onMeasure } = this.props;\n    const isControlled = typeof children !== 'function';\n    if (__DEV__) {\n      assert(\n        onMeasure || !isControlled,\n        `There are two ways to use the \\`Measure\\` component:\n        1. Use a \\`children\\` function that returns a node, e.g. \\`({ width, height }) => PropTypes.node\\`\n        2. Treat \\`Measure\\` as a controlled component with an \\`onMeasure\\` callback and \\`children\\` node`\n      );\n    }\n    return (\n      <div\n        ref={this._setContainerRef}\n        className={className}\n        id={id}\n        style={style}\n        onKeyDown={onKeyDown}\n      >\n        {isControlled ? children : children(this.state)}\n\n        <div\n          ref={this._setExpandContainerRef}\n          className={styles.scrollContainer}\n          onScroll={this.onScroll}\n        >\n          <div className={styles.expandContent} />\n        </div>\n\n        <div\n          ref={this._setShrinkContainerRef}\n          className={styles.scrollContainer}\n          onScroll={this.onScroll}\n        >\n          <div className={styles.shrinkContent} />\n        </div>\n      </div>\n    );\n  }\n}\nexport default Measure;\n","/* eslint-plugin-disable @typescript-eslint */\n\nimport classNames from 'classnames';\nimport React, { Component } from 'react';\nimport _ from 'underscore';\nimport createKeyPool from 'app/js/views/v3/helpers/createKeyPool';\nimport { IS_SCROLLING } from 'app/js/views/v3/helpers/modifierClassNames';\nimport layoutShape from 'app/js/views/v3/helpers/props/shapes/layoutShape';\nimport shallowEqual from 'app/js/views/v3/helpers/shallowEqual';\n\ninterface VirtualListProps {\n  className?: string;\n  keyPropName: string;\n  items: any[];\n  itemsOffset: number;\n  size: number;\n  layout: layoutShape;\n  cellRenderer: (...args: any[]) => any;\n  hasNestedList?: boolean;\n  viewportWidth?: number;\n  viewportHeight?: number;\n  listTop?: number;\n  listLeft?: number;\n  isScrolling?: boolean;\n  skipRenderCells?: boolean;\n  scrollTop?: number;\n  scrollLeft?: number;\n  onListUpdate?: (...args: any[]) => any;\n  onPageRequest?: (...args: any[]) => any;\n}\ntype VirtualListState = any;\nclass VirtualList extends Component<VirtualListProps, VirtualListState> {\n  static defaultProps = {\n    keyPropName: 'entityID',\n    items: [],\n    itemsOffset: 0,\n    hasNestedList: false,\n    listTop: 0,\n    listLeft: 0,\n    isScrolling: false,\n    skipRenderCells: false,\n  };\n  // eslint-disable-next-line react/sort-comp\n  _keyPool: any;\n  _shouldRequestPage: any;\n  //\n  // Lifecycle\n  constructor(props: any, context: any) {\n    super(props, context);\n    this.state = this._getListState(props);\n    this._keyPool = createKeyPool('cell');\n    this._shouldRequestPage = false;\n  }\n  UNSAFE_componentWillMount() {\n    if (this.props.onListUpdate) {\n      this.props.onListUpdate(this.state);\n    }\n  }\n  componentDidMount() {\n    this._checkForPageRequest();\n  }\n  UNSAFE_componentWillReceiveProps(nextProps: VirtualListProps) {\n    const nextState = this._getListState(nextProps);\n    if (!shallowEqual(this.state, nextState)) {\n      this.setState(nextState);\n    }\n  }\n  shouldComponentUpdate(\n    nextProps: VirtualListProps,\n    nextState: VirtualListState\n  ) {\n    const props = this.props;\n    const state = this.state;\n    if (nextProps.items !== props.items || nextProps.size !== props.size) {\n      return true;\n    }\n    if (\n      nextProps.viewportWidth !== props.viewportWidth ||\n      nextProps.viewportHeight !== props.viewportHeight\n    ) {\n      return true;\n    }\n    if (\n      nextProps.listTop !== props.listTop ||\n      nextProps.listLeft !== props.listLeft\n    ) {\n      return true;\n    }\n    if (nextProps.isScrolling !== props.isScrolling) {\n      return true;\n    }\n    if (nextProps.skipRenderCells !== props.skipRenderCells) {\n      return true;\n    }\n    if (nextProps.layout !== props.layout) {\n      return true;\n    }\n    if (nextProps.cellRenderer !== props.cellRenderer) {\n      return true;\n    }\n    if (nextState.visibleStartIndex !== state.visibleStartIndex) {\n      return true;\n    }\n    if (nextState.visibleEndIndex !== state.visibleEndIndex) {\n      return true;\n    }\n    if (\n      nextState.partiallyVisibleStartIndex !== state.partiallyVisibleStartIndex\n    ) {\n      return true;\n    }\n    if (nextState.partiallyVisibleEndIndex !== state.partiallyVisibleEndIndex) {\n      return true;\n    }\n    if (nextState.renderStartIndex !== state.renderStartIndex) {\n      return true;\n    }\n    if (nextState.renderEndIndex !== state.renderEndIndex) {\n      return true;\n    }\n    if (nextState.moveIndex !== state.moveIndex) {\n      return true;\n    }\n    return false;\n  }\n  UNSAFE_componentWillUpdate(\n    // @ts-expect-error ts-migrate(6133) FIXME: 'nextProps' is declared but its value is never rea... Remove this comment to see the full error message\n    nextProps: VirtualListProps,\n    nextState: VirtualListState\n  ) {\n    if (this.props.onListUpdate && nextState !== this.state) {\n      this.props.onListUpdate(nextState);\n    }\n  }\n  componentDidUpdate() {\n    this._checkForPageRequest();\n  }\n  //\n  // Control\n  _getListState(props: any) {\n    const listStyle = this._getListStyle(props);\n    const landmarks = props.layout.getLandmarks && props.layout.getLandmarks();\n    const ranges = props.layout.getRangesForPosition(\n      props.scrollTop,\n      props.scrollLeft,\n      props.size\n    );\n    return {\n      listStyle,\n      landmarks,\n      visibleStartIndex: ranges.visibleStartIndex,\n      visibleEndIndex: ranges.visibleEndIndex,\n      partiallyVisibleStartIndex: ranges.partiallyVisibleStartIndex,\n      partiallyVisibleEndIndex: ranges.partiallyVisibleEndIndex,\n      renderStartIndex: ranges.renderStartIndex,\n      renderEndIndex: ranges.renderEndIndex,\n      moveIndex: props.moveIndex,\n    };\n  }\n  _getListStyle(props: any) {\n    const { size, layout, viewportWidth, viewportHeight, listTop, listLeft } =\n      props;\n    const measurements = {\n      viewportWidth,\n      viewportHeight,\n      listTop,\n      listLeft,\n    };\n    return layout.getListStyle(measurements, size);\n  }\n  _checkForPageRequest() {\n    const state = this.state;\n    if (this._shouldRequestPage) {\n      this._shouldRequestPage = false;\n      // @ts-expect-error ts-migrate(2722) FIXME: Cannot invoke an object which is possibly 'undefin... Remove this comment to see the full error message\n      this.props.onPageRequest({\n        startIndex: state.renderStartIndex,\n        endIndex: state.renderEndIndex,\n      });\n    }\n  }\n  //\n  // Render\n  renderCells() {\n    const {\n      keyPropName,\n      items,\n      itemsOffset,\n      size,\n      layout,\n      hasNestedList,\n      viewportWidth,\n      viewportHeight,\n      scrollLeft,\n      scrollTop,\n      cellRenderer,\n      isScrolling,\n      onPageRequest,\n    } = this.props;\n    const {\n      moveIndex,\n      renderStartIndex,\n      renderEndIndex,\n      partiallyVisibleStartIndex,\n      partiallyVisibleEndIndex,\n    } = this.state;\n    if (!size) {\n      return [];\n    }\n    // In an infinite scroll list, the last item can be rendered, but there may\n    // be more items to fetch.\n    let shouldRequestPage =\n      size > items.length && renderEndIndex === items.length - 1;\n    const keys = this._keyPool.getKeys(\n      renderStartIndex,\n      renderEndIndex,\n      items,\n      itemsOffset,\n      keyPropName\n    );\n    const cells: any = [];\n    _.each(keys, (value, key) => {\n      const index = value.index;\n      const item = value.item;\n      const isVisible =\n        index >= partiallyVisibleStartIndex &&\n        index <= partiallyVisibleEndIndex;\n      const position = layout.getPositionForIndex(index, size, items);\n      // In a virtualized list, not every cell will have an item immediately. An\n      // empty cell is a signal that more items need to be fetched.\n      if (item === null || hasNestedList) {\n        shouldRequestPage = true;\n      }\n      let cellProps = {\n        key,\n        keyPropName,\n        isVirtual: true,\n        isVisible,\n        isScrolling,\n        moveIndex,\n        viewportWidth,\n        viewportHeight,\n        cellIndex: index,\n        cellX: position.cellX,\n        cellY: position.cellY,\n        cellWidth: position.cellWidth,\n        cellHeight: position.cellHeight,\n      };\n      if (hasNestedList) {\n        (cellProps as any).scrollLeft = scrollLeft;\n        (cellProps as any).scrollTop = scrollTop;\n      }\n      if (_.isString(item)) {\n        // @ts-expect-error ts-migrate(7053) FIXME: Element implicitly has an 'any' type because expre... Remove this comment to see the full error message\n        cellProps[keyPropName] = item;\n      } else {\n        cellProps = {\n          ...item,\n          ...cellProps,\n        };\n      }\n      cells.push(cellRenderer(cellProps));\n    });\n    this._shouldRequestPage = onPageRequest\n      ? shouldRequestPage && !isScrolling\n      : false;\n    return cells;\n  }\n  render() {\n    const listStyle = this._getListStyle(this.props);\n    const { className, isScrolling, skipRenderCells, children } = this.props;\n    return (\n      <div\n        className={classNames(className, isScrolling && IS_SCROLLING)}\n        style={listStyle}\n      >\n        {!skipRenderCells ? this.renderCells() : null}\n        {children}\n      </div>\n    );\n  }\n}\nexport default VirtualList;\n","/* eslint-plugin-disable @typescript-eslint */\n\nimport _ from 'underscore';\n\nexport default function createKeyPool(prefix = '') {\n  const pool: any = [];\n  const itemsByKey = {};\n  const keysByItem = {};\n  let counter = 0;\n\n  function generateKey() {\n    let key;\n\n    if (pool.length) {\n      key = pool.shift();\n    } else {\n      key = prefix + counter;\n      counter++;\n    }\n\n    return key;\n  }\n\n  function deleteItemByKey(key: any) {\n    // @ts-expect-error ts-migrate(7053) FIXME: Element implicitly has an 'any' type because expre... Remove this comment to see the full error message\n    delete itemsByKey[key];\n  }\n\n  return {\n    getKeys(\n      startIndex: any,\n      endIndex: any,\n      items: any,\n      offset = 0,\n      keyPropName: any\n    ) {\n      // Recycle keys for placeholder cells or cells that are now outside the\n      // rendered range. Don't remove the recycled keys from the `itemsByKey`\n      // object immediately. This keeps items consistently ordered between\n      // renders, which reduces the number of DOM operations.\n\n      _.each(itemsByKey, (value, key) => {\n        // @ts-expect-error ts-migrate(2571) FIXME: Object is of type 'unknown'.\n        const item = value.item;\n\n        if (item === null) {\n          pool.push(key);\n        } else {\n          const itemKey = _.isString(item) ? item : item[keyPropName];\n          const itemIndex = items.indexOf(item) + offset;\n\n          if (itemIndex < startIndex || itemIndex > endIndex) {\n            pool.push(key);\n            // @ts-expect-error ts-migrate(7053) FIXME: Element implicitly has an 'any' type because expre... Remove this comment to see the full error message\n            delete keysByItem[itemKey];\n          }\n        }\n      });\n\n      // Loop through the rendered range and either generate new keys or reuse\n      // keys that were just recycled.\n\n      for (let i = startIndex; i <= endIndex; i++) {\n        const item = items[i - offset] || null;\n        const itemKey = item && (_.isString(item) ? item : item[keyPropName]);\n        // @ts-expect-error ts-migrate(7053) FIXME: Element implicitly has an 'any' type because expre... Remove this comment to see the full error message\n        let key = item && keysByItem[itemKey];\n\n        if (!key) {\n          key = generateKey();\n\n          if (item) {\n            // @ts-expect-error ts-migrate(7053) FIXME: Element implicitly has an 'any' type because expre... Remove this comment to see the full error message\n            keysByItem[itemKey] = key;\n          }\n        }\n\n        // @ts-expect-error ts-migrate(7053) FIXME: Element implicitly has an 'any' type because expre... Remove this comment to see the full error message\n        itemsByKey[key] = { index: i, item: item };\n      }\n\n      // Finally, clean up unused keys in the pool so they are not listed in the\n      // `itemsByKey` object and empty the pool. Holding on to excess keys\n      // introduces inconsistent key ordering.\n\n      pool.forEach(deleteItemByKey);\n\n      pool.length = 0;\n\n      return _.extend({}, itemsByKey);\n    },\n  };\n}\n","/* eslint-plugin-disable @typescript-eslint */\n\nimport React, { Component } from 'react';\nimport Measure from 'app/js/views/v3/components/core/base/Measure';\nimport Scroller from 'app/js/views/v3/components/core/base/Scroller';\nimport VirtualList from 'app/js/views/v3/components/core/lists/VirtualList';\nimport pageStorage from 'app/js/views/v3/helpers/pageStorage';\nimport * as scrollDirections from 'app/js/views/v3/helpers/props/scrollDirections';\n// @ts-expect-error ts-migrate(6133) FIXME: 'forwardedRefShape' is declared but its value is n... Remove this comment to see the full error message\nimport forwardedRefShape from 'app/js/views/v3/helpers/props/shapes/forwardedRefShape';\nimport layoutShape from 'app/js/views/v3/helpers/props/shapes/layoutShape';\nimport shouldPureComponentUpdate from 'app/js/views/v3/helpers/shouldPureComponentUpdate';\nimport styles from './VirtualListScroller.css';\n\nexport function calculateScrollPositions(\n  scrollDirection: any,\n  cellPosition: any,\n  {\n    shouldCenterCell,\n    outerPaddingLeft,\n    outerPaddingTop,\n    scrollerWidth,\n    scrollerHeight,\n  }: any\n) {\n  const scrollLeft =\n    scrollDirection === scrollDirections.HORIZONTAL\n      ? calculateScrollPosition(cellPosition.cellX, {\n          shouldCenterCell,\n          offset: outerPaddingLeft,\n          viewportDimension: scrollerWidth,\n          cellDimension: cellPosition.cellWidth,\n        })\n      : 0;\n  const scrollTop =\n    scrollDirection === scrollDirections.VERTICAL\n      ? calculateScrollPosition(cellPosition.cellY, {\n          shouldCenterCell,\n          offset: outerPaddingTop,\n          viewportDimension: scrollerHeight,\n          cellDimension: cellPosition.cellHeight,\n        })\n      : 0;\n  return {\n    scrollLeft,\n    scrollTop,\n  };\n}\nfunction calculateScrollPosition(cellPosition: any, options: any) {\n  if (options.shouldCenterCell) {\n    const halfAvailableDimension =\n      (options.viewportDimension - options.cellDimension) / 2;\n    const centeredScrollPosition = Math.round(\n      cellPosition - halfAvailableDimension\n    );\n    return Math.max(centeredScrollPosition, 0);\n  }\n  return cellPosition - (options.offset || 0);\n}\ninterface VirtualListScrollerProps {\n  // @ts-expect-error ts-migrate(2749) FIXME: 'forwardedRefShape' refers to a value, but is bein... Remove this comment to see the full error message\n  forwardedRef?: forwardedRefShape;\n  className?: string;\n  scrollerClassName?: string;\n  virtualListClassName?: string;\n  layout?: layoutShape;\n  ignoreWidth?: boolean;\n  ignoreHeight?: boolean;\n  resizeTimeout?: number;\n  scrollDirection?: string;\n  scrollIndex?: number;\n  shouldCenterScrollIndex?: boolean;\n  scrollPositionStorageKey?: string;\n  scrollerStyle?: any;\n  smoothScroll?: boolean;\n  onListUpdate?: (...args: any[]) => any;\n  onListScrollIndexChange?: (...args: any[]) => any;\n  onScroll?: (...args: any[]) => any;\n  onMeasure?: (...args: any[]) => any;\n}\ntype VirtualListScrollerState = any;\nclass VirtualListScroller extends Component<\n  VirtualListScrollerProps,\n  VirtualListScrollerState\n> {\n  static defaultProps = {\n    scrollDirection: scrollDirections.VERTICAL,\n    scrollerClassName: styles.scroller,\n    shouldCenterScrollIndex: false,\n  };\n  // eslint-disable-next-line react/sort-comp\n  _currentScrollIndex: any;\n  _scrollPositionKey: any;\n  //\n  // Lifecycle\n  constructor(props: any, context: any) {\n    super(props, context);\n    this.state = {\n      isRestoringScrollPosition: false,\n      isMeasured: false,\n      width: null,\n      height: null,\n      scrollTop: 0,\n      scrollLeft: 0,\n    };\n    this._currentScrollIndex = 0;\n    if (props.scrollPositionStorageKey) {\n      // Set the key early and use it when the component unmounts. The hash will\n      // have changed after a page change and before the component can unmount,\n      // which would lead to different keys.\n      this._scrollPositionKey = `${pageStorage.getPageKey()}!scrollPosition!${\n        props.scrollPositionStorageKey\n      }`;\n    }\n  }\n  UNSAFE_componentWillMount() {\n    if (!this.props.scrollIndex) {\n      this._restoreScrollPosition();\n    }\n  }\n  shouldComponentUpdate(\n    nextProps: VirtualListScrollerProps,\n    nextState: VirtualListScrollerState\n  ) {\n    // @ts-expect-error ts-migrate(2554) FIXME: Expected 5 arguments, but got 3.\n    return shouldPureComponentUpdate(this, nextProps, nextState);\n  }\n  componentDidUpdate(\n    prevProps: VirtualListScrollerProps,\n    prevState: VirtualListScrollerState\n  ) {\n    const { scrollIndex, scrollDirection, shouldCenterScrollIndex, layout } =\n      this.props;\n    const { scrollLeft, scrollTop, width, height, isMeasured } = this.state;\n    if (\n      scrollIndex == null ||\n      (scrollIndex === this._currentScrollIndex && !shouldCenterScrollIndex)\n    ) {\n      return;\n    }\n    const isInitialScrollToIndex =\n      isMeasured && !prevState.isMeasured && scrollIndex > 0;\n    const hasScrollIndexChanged =\n      isMeasured && scrollIndex !== prevProps.scrollIndex;\n    const hasShouldCenterScrollIndexChanged =\n      shouldCenterScrollIndex !== prevProps.shouldCenterScrollIndex;\n    if (\n      isInitialScrollToIndex ||\n      hasScrollIndexChanged ||\n      hasShouldCenterScrollIndexChanged\n    ) {\n      // @ts-expect-error ts-migrate(2532) FIXME: Object is possibly 'undefined'.\n      const position = layout.getPositionForIndex(Math.max(scrollIndex, 0));\n      const scrollPositions = calculateScrollPositions(\n        scrollDirection,\n        position,\n        {\n          shouldCenterCell: shouldCenterScrollIndex,\n          outerPaddingLeft: (layout as any).options.outerPaddingLeft,\n          outerPaddingTop: (layout as any).options.outerPaddingTop,\n          scrollerWidth: width,\n          scrollerHeight: height,\n        }\n      );\n      const hasScrollPositionsChanged =\n        scrollPositions.scrollLeft !== scrollLeft ||\n        scrollPositions.scrollTop !== scrollTop;\n      // eslint-disable-next-line react/no-did-update-set-state\n      this.setState({\n        scrollLeft: scrollPositions.scrollLeft,\n        scrollTop: scrollPositions.scrollTop,\n        isRestoringScrollPosition:\n          isInitialScrollToIndex && hasScrollPositionsChanged,\n      });\n    }\n  }\n  componentWillUnmount() {\n    if (this._scrollPositionKey) {\n      pageStorage.set(this._scrollPositionKey, {\n        scrollTop: this.state.scrollTop,\n        scrollLeft: this.state.scrollLeft,\n      });\n    }\n  }\n  //\n  // Control\n  _restoreScrollPosition() {\n    if (this._scrollPositionKey) {\n      const scrollPosition = pageStorage.get(this._scrollPositionKey);\n      if (scrollPosition) {\n        this.setState({\n          isRestoringScrollPosition: true,\n          ...scrollPosition,\n        });\n      }\n    }\n  }\n  //\n  // Listeners\n  onScrollPositionChange = ({ scrollTop, scrollLeft }: any) => {\n    this.setState({\n      scrollTop,\n      scrollLeft,\n    });\n  };\n  onListUpdate = (listState: any) => {\n    const { visibleStartIndex } = listState;\n    const { scrollIndex, onListScrollIndexChange, onListUpdate } = this.props;\n    this._currentScrollIndex = visibleStartIndex;\n    if (this.state.isRestoringScrollPosition) {\n      this.setState({ isRestoringScrollPosition: false });\n    }\n    if (onListScrollIndexChange && scrollIndex !== visibleStartIndex) {\n      onListScrollIndexChange(visibleStartIndex);\n    }\n    if (onListUpdate) {\n      onListUpdate(listState);\n    }\n  };\n  onMeasure = (measurements: any) => {\n    const width = Math.round(measurements.width);\n    const height = Math.round(measurements.height);\n    const { onMeasure } = this.props;\n    this.setState({\n      isMeasured: true,\n      width,\n      height,\n    });\n    if (onMeasure) {\n      onMeasure(measurements);\n    }\n  };\n  //\n  // Render\n  render() {\n    const {\n      className,\n      children,\n      scrollerClassName,\n      virtualListClassName,\n      ignoreWidth,\n      ignoreHeight,\n      resizeTimeout,\n      scrollDirection,\n      scrollIndex,\n      scrollPositionStorageKey,\n      smoothScroll,\n      scrollerStyle,\n      forwardedRef,\n      onListUpdate,\n      onMeasure,\n      onScroll,\n      ...otherProps\n    } = this.props;\n    const {\n      isMeasured,\n      isRestoringScrollPosition,\n      width,\n      height,\n      scrollTop,\n      scrollLeft,\n    } = this.state;\n    return (\n      <Measure\n        className={className}\n        ignoreHeight={ignoreHeight}\n        ignorePosition={true}\n        ignoreWidth={ignoreWidth}\n        resizeTimeout={resizeTimeout}\n        onMeasure={this.onMeasure}\n      >\n        {isMeasured ? (\n          // @ts-expect-error ts-migrate(2322) FIXME: Type '{ children: (string | number | boolean | {} ... Remove this comment to see the full error message\n          <Scroller\n            ref={forwardedRef}\n            className={scrollerClassName}\n            enableChildrenProps={true}\n            scrollDirection={scrollDirection}\n            scrollLeft={scrollLeft}\n            scrollTop={scrollTop}\n            smoothScroll={\n              smoothScroll === false ? false : !isRestoringScrollPosition\n            }\n            style={scrollerStyle}\n            onScroll={onScroll}\n            onScrollPositionChange={this.onScrollPositionChange}\n          >\n            {/* @ts-expect-error ts-migrate(2739) FIXME: Type '{ layout?: layoutShape | undefined; shouldCe... Remove this comment to see the full error message */}\n            <VirtualList\n              className={virtualListClassName}\n              skipRenderCells={isRestoringScrollPosition}\n              viewportHeight={height}\n              viewportWidth={width}\n              onListUpdate={this.onListUpdate}\n              {...otherProps}\n            />\n            {children}\n          </Scroller>\n        ) : null}\n      </Measure>\n    );\n  }\n}\nexport default React.forwardRef((props, ref) => {\n  return <VirtualListScroller {...props} forwardedRef={ref} />;\n});\n","// extracted by mini-css-extract-plugin\nexport default {\"scroller\":\"vEa7P\"};","/* eslint-plugin-disable @typescript-eslint */\n\nimport assert from 'app/js/utils/log/assert';\nimport clampListIndex from './clampListIndex';\n\nexport const VERTICAL = 'vertical';\nexport const HORIZONTAL = 'horizontal';\n\nexport default function createGridLayout(options = {}) {\n  const {\n    // @ts-expect-error ts-migrate(2339) FIXME: Property 'direction' does not exist on type '{}'.\n    direction = VERTICAL,\n    // @ts-expect-error ts-migrate(2339) FIXME: Property 'rows' does not exist on type '{}'.\n    rows,\n    // @ts-expect-error ts-migrate(2339) FIXME: Property 'columns' does not exist on type '{}'.\n    columns,\n    // @ts-expect-error ts-migrate(2339) FIXME: Property 'overscan' does not exist on type '{}'.\n    overscan = 0,\n    // @ts-expect-error ts-migrate(2339) FIXME: Property 'innerHorizontalPadding' does not exist o... Remove this comment to see the full error message\n    innerHorizontalPadding = 0,\n    // @ts-expect-error ts-migrate(2339) FIXME: Property 'innerVerticalPadding' does not exist on ... Remove this comment to see the full error message\n    innerVerticalPadding = 0,\n    // @ts-expect-error ts-migrate(2339) FIXME: Property 'outerPaddingTop' does not exist on type ... Remove this comment to see the full error message\n    outerPaddingTop = 0,\n    // @ts-expect-error ts-migrate(2339) FIXME: Property 'outerPaddingRight' does not exist on typ... Remove this comment to see the full error message\n    outerPaddingRight = 0,\n    // @ts-expect-error ts-migrate(2339) FIXME: Property 'outerPaddingBottom' does not exist on ty... Remove this comment to see the full error message\n    outerPaddingBottom = 0,\n    // @ts-expect-error ts-migrate(2339) FIXME: Property 'outerPaddingLeft' does not exist on type... Remove this comment to see the full error message\n    outerPaddingLeft = 0,\n    // @ts-expect-error ts-migrate(2339) FIXME: Property 'getCellWidth' does not exist on type '{}... Remove this comment to see the full error message\n    getCellWidth,\n    // @ts-expect-error ts-migrate(2339) FIXME: Property 'getCellHeight' does not exist on type '{... Remove this comment to see the full error message\n    getCellHeight,\n  } = options;\n\n  let listTop: any;\n  let listLeft: any;\n  let cellWidth: any;\n  let cellHeight: any;\n\n  // These are the maximum potential values.\n  let cellsPerColumn: any;\n  let cellsPerRow: any;\n  let cellsPerPage: any;\n\n  let getListStyleMemoKey: any;\n  let getListStyleMemo: any;\n  let getPositionForIndexCache: any;\n\n  function getListStyle(measurements: any, size: any) {\n    // `getListStyle()` is a hot method which is frequently presented args\n    // with the same values, although different objects. Coerce and concatenate\n    // the args into a unique memoization flags.\n    const fields = [\n      outerPaddingTop,\n      outerPaddingRight,\n      outerPaddingBottom,\n      outerPaddingLeft,\n      size,\n    ];\n\n    for (const key in measurements) {\n      fields.push(measurements[key]);\n    }\n\n    const memoKey = fields.join(':');\n\n    if (memoKey === getListStyleMemoKey) {\n      return getListStyleMemo;\n    }\n\n    __DEV__ &&\n      assert(\n        rows || measurements.viewportHeight != null,\n        'A grid list must have a viewport height or a fixed number of rows'\n      );\n\n    __DEV__ &&\n      assert(\n        columns || measurements.viewportWidth != null,\n        'A grid list must have a viewport width or a fixed number of columns'\n      );\n\n    listTop = measurements.listTop;\n    listLeft = measurements.listLeft;\n\n    let innerViewportWidth =\n      (measurements.viewportWidth || 0) - outerPaddingRight - outerPaddingLeft;\n    let innerViewportHeight =\n      (measurements.viewportHeight || 0) - outerPaddingTop - outerPaddingBottom;\n\n    if (direction === VERTICAL) {\n      innerViewportWidth -= listLeft;\n    } else {\n      innerViewportHeight -= listTop;\n    }\n\n    innerViewportWidth = Math.max(0, innerViewportWidth);\n    innerViewportHeight = Math.max(0, innerViewportHeight);\n\n    cellWidth = getCellWidth({\n      innerViewportWidth,\n      innerViewportHeight,\n      innerHorizontalPadding,\n      innerVerticalPadding,\n    });\n\n    cellHeight = getCellHeight({\n      cellWidth,\n      innerViewportWidth,\n      innerViewportHeight,\n      innerHorizontalPadding,\n      innerVerticalPadding,\n    });\n\n    cellsPerColumn = Math.max(\n      0,\n      rows ||\n        Math.floor(\n          (innerViewportHeight + innerVerticalPadding) /\n            (cellHeight + innerVerticalPadding)\n        )\n    );\n    cellsPerRow = Math.max(\n      0,\n      columns ||\n        Math.floor(\n          (innerViewportWidth + innerHorizontalPadding) /\n            (cellWidth + innerHorizontalPadding)\n        )\n    );\n    cellsPerPage = cellsPerRow * cellsPerColumn;\n\n    let width = 0;\n    let height = 0;\n\n    if (direction === VERTICAL && cellsPerRow) {\n      width =\n        cellsPerRow * (cellWidth + innerHorizontalPadding) -\n        innerHorizontalPadding;\n      height =\n        Math.ceil(size / cellsPerRow) * (cellHeight + innerVerticalPadding) -\n        innerVerticalPadding;\n    } else if (direction === HORIZONTAL && cellsPerColumn) {\n      width =\n        Math.ceil(size / cellsPerColumn) *\n          (cellWidth + innerHorizontalPadding) -\n        innerHorizontalPadding;\n      height =\n        cellsPerColumn * (cellHeight + innerVerticalPadding) -\n        innerVerticalPadding;\n    }\n\n    // `getListStyle()` sets stateful values for `getPositionForIndex`. Empty\n    // the cache for each call to `getListStyle()` which passes the above\n    // `getListStyleMemo` check.\n    getPositionForIndexCache = {};\n\n    getListStyleMemoKey = memoKey;\n\n    getListStyleMemo = {\n      width: width + outerPaddingRight + outerPaddingLeft,\n      height: height + outerPaddingTop + outerPaddingBottom,\n    };\n\n    return getListStyleMemo;\n  }\n\n  function getPositionForIndex(index: any) {\n    __DEV__ &&\n      assert(\n        cellWidth !== undefined,\n        '`getListStyle` must be called before `getPositionForIndex`'\n      );\n\n    const cacheKey = index;\n\n    if (getPositionForIndexCache[cacheKey]) {\n      return getPositionForIndexCache[cacheKey];\n    }\n\n    const column = getColumn(index);\n    const row = getRow(index);\n    const position = {\n      column,\n      row,\n      cellX:\n        column * (cellWidth + innerHorizontalPadding) +\n        listLeft +\n        outerPaddingLeft,\n      cellY:\n        row * (cellHeight + innerVerticalPadding) + listTop + outerPaddingTop,\n      cellWidth,\n      cellHeight,\n    };\n\n    getPositionForIndexCache[cacheKey] = position;\n\n    return position;\n  }\n\n  function getRangesForPosition(scrollTop: any, scrollLeft: any, size: any) {\n    __DEV__ &&\n      assert(\n        cellWidth !== undefined,\n        '`getListStyle` must be called before `getRangesForPosition`'\n      );\n\n    // The render range represents cells that will be rendered in the list. The\n    // visible range represents cells that can actually be seen in the list.\n    // Cells within the render range, but outside the visible range may defer\n    // loading an image, for example. Clamp the ranges to indices that actually\n    // exist in the list of items.\n\n    const finalCellHeight = cellHeight + innerVerticalPadding;\n    const finalCellWidth = cellWidth + innerHorizontalPadding;\n    const finalScrollTop = scrollTop - listTop;\n    const finalScrollLeft = scrollLeft - listLeft;\n\n    const cellsPerGroup = direction === VERTICAL ? cellsPerRow : cellsPerColumn;\n\n    const groupIndex =\n      direction === VERTICAL\n        ? finalScrollTop / finalCellHeight\n        : finalScrollLeft / finalCellWidth;\n\n    const maxRenderedCells =\n      cellsPerPage + cellsPerGroup * 2 + overscan * cellsPerGroup * 2;\n\n    const visibleStartIndex = Math.ceil(groupIndex) * cellsPerGroup;\n    const visibleEndIndex = visibleStartIndex + cellsPerPage - 1;\n\n    const partiallyVisibleStartIndex = Math.floor(groupIndex) * cellsPerGroup;\n    const partiallyVisibleEndIndex =\n      visibleStartIndex + cellsPerPage + cellsPerGroup - 1;\n\n    let renderStartIndex =\n      partiallyVisibleStartIndex - cellsPerGroup * overscan;\n    const renderEndIndex =\n      clampListIndex(renderStartIndex, size) + maxRenderedCells - 1;\n\n    if (renderEndIndex >= size) {\n      renderStartIndex = size - maxRenderedCells;\n    }\n\n    return {\n      visibleStartIndex: clampListIndex(visibleStartIndex, size),\n      visibleEndIndex: clampListIndex(visibleEndIndex, size),\n      partiallyVisibleStartIndex: clampListIndex(\n        partiallyVisibleStartIndex,\n        size\n      ),\n      partiallyVisibleEndIndex: clampListIndex(partiallyVisibleEndIndex, size),\n      renderStartIndex: clampListIndex(renderStartIndex, size),\n      renderEndIndex: clampListIndex(renderEndIndex, size),\n    };\n  }\n\n  function getRelativeIndex(\n    index: any,\n    delta: any,\n    relativeDirection: any,\n    size: any\n  ) {\n    __DEV__ &&\n      assert(\n        cellsPerRow !== undefined && cellsPerColumn !== undefined,\n        '`getListStyle` must be called before `getRelativeIndex`'\n      );\n\n    const directionsAlign = direction === relativeDirection;\n    const isSingleDimension =\n      (direction === VERTICAL && cellsPerRow === 1) ||\n      (direction === HORIZONTAL && cellsPerColumn === 1);\n\n    if (directionsAlign && isSingleDimension) {\n      return clampListIndex(index + delta, size);\n    }\n\n    let workingDelta;\n    let firstIndex;\n    let lastIndex;\n\n    if (relativeDirection === VERTICAL) {\n      workingDelta = directionsAlign ? cellsPerRow * delta : delta;\n      firstIndex = getFirstCellInColumn(index, size);\n      lastIndex = getLastCellInColumn(index, size);\n    }\n\n    if (relativeDirection === HORIZONTAL) {\n      workingDelta = directionsAlign ? cellsPerColumn * delta : delta;\n      firstIndex = getFirstCellInRow(index, size);\n      lastIndex = getLastCellInRow(index, size);\n    }\n\n    const workingIndex = index + workingDelta;\n\n    return firstIndex || lastIndex\n      ? // @ts-expect-error ts-migrate(2345) FIXME: Argument of type 'number | undefined' is not assig... Remove this comment to see the full error message\n        Math.max(Math.min(workingIndex, lastIndex), firstIndex)\n      : index;\n  }\n\n  function getRow(index: any) {\n    return direction === VERTICAL\n      ? Math.floor(index / cellsPerRow)\n      : index % cellsPerColumn;\n  }\n\n  function getColumn(index: any) {\n    return direction === VERTICAL\n      ? index % cellsPerRow\n      : Math.floor(index / cellsPerColumn);\n  }\n\n  // @ts-expect-error ts-migrate(6133) FIXME: 'size' is declared but its value is never read.\n  function getFirstCellInRow(index: any, size: any) {\n    const row = getRow(index);\n\n    return direction === VERTICAL ? row * cellsPerRow : row;\n  }\n\n  // @ts-expect-error ts-migrate(6133) FIXME: 'size' is declared but its value is never read.\n  function getFirstCellInColumn(index: any, size: any) {\n    const column = getColumn(index);\n\n    return direction === VERTICAL ? column : column * cellsPerColumn;\n  }\n\n  function getLastCellInRow(index: any, size: any) {\n    if (direction === VERTICAL) {\n      const firstColumn = getFirstCellInRow(index, size);\n      return clampListIndex(firstColumn + (cellsPerRow - 1), size);\n    } else {\n      const lastIndex = size - 1;\n      const row = getRow(index);\n      const lastColumn = getColumn(lastIndex);\n      const lastLogicalRowIndex =\n        (lastColumn + 1) * cellsPerColumn - (cellsPerColumn - row);\n\n      let rowLastIndex;\n\n      if (lastLogicalRowIndex < size) {\n        rowLastIndex = lastLogicalRowIndex;\n      } else {\n        rowLastIndex =\n          lastIndex - (size % cellsPerColumn) - (cellsPerColumn - 1 - row);\n      }\n\n      return rowLastIndex;\n    }\n  }\n\n  function getLastCellInColumn(index: any, size: any) {\n    if (direction === VERTICAL) {\n      const lastIndex = size - 1;\n      const column = getColumn(index);\n      const lastRow = getRow(lastIndex);\n      const lastLogicalColumnIndex =\n        (lastRow + 1) * cellsPerRow - (cellsPerRow - column);\n\n      let columnLastIndex;\n\n      if (lastLogicalColumnIndex < size) {\n        columnLastIndex = lastLogicalColumnIndex;\n      } else {\n        columnLastIndex =\n          lastIndex - (size % cellsPerRow) - (cellsPerRow - 1 - column);\n      }\n\n      return columnLastIndex;\n    } else {\n      const firstRow = getFirstCellInColumn(index, size);\n      return clampListIndex(firstRow + (cellsPerColumn - 1), size);\n    }\n  }\n\n  function getCoordinateDistance(indexA: any, indexB: any) {\n    const x1 = getRow(indexA);\n    const x2 = getRow(indexB);\n    const y1 = getColumn(indexA);\n    const y2 = getColumn(indexB);\n\n    return Math.sqrt(Math.pow(x2 - x1, 2) + Math.pow(y2 - y1, 2));\n  }\n\n  return {\n    options,\n    getListStyle,\n    getRelativeIndex,\n    getCoordinateDistance,\n    getPositionForIndex,\n    getRangesForPosition,\n  };\n}\n","/* eslint-plugin-disable @typescript-eslint */\n\nimport { useEffect, useMemo, useReducer, useRef } from 'react';\nimport usePrevious from 'app/js/views/v3/helpers/hooks/usePrevious';\nimport animations from 'app/styles/variables/animations';\n\nfunction getCellStyle({\n  cellX,\n  cellY,\n  cellWidth,\n  cellHeight,\n  style,\n  isMoving,\n  moveDurationMilliseconds,\n  isVirtual,\n}: any) {\n  if (!isVirtual) {\n    return {\n      position: 'relative',\n      ...style,\n    };\n  }\n\n  return {\n    position: 'absolute',\n    width: cellWidth,\n    height: cellHeight,\n    transform: `translate3d(${cellX}px, ${cellY}px, 0)`,\n    zIndex: isMoving ? 1 : 0,\n    transition: isMoving ? `transform ${animations.defaultSpeed}` : 'none',\n    transitionDuration: isMoving ? `${moveDurationMilliseconds}ms` : 0,\n    ...style,\n  };\n}\n\nfunction isCellPlaceholder({ isVirtual, isVisible, isScrolling }: any) {\n  return (isVirtual && !isVisible) || isScrolling;\n}\n\nexport default function useVirtualCell(props: any) {\n  const {\n    cellIndex,\n    cellX,\n    cellY,\n    cellWidth,\n    cellHeight,\n    style,\n    keyPropName,\n    moveDurationMilliseconds = 400,\n    isVirtual,\n  } = props;\n\n  const item = props[keyPropName];\n  const prevItem = usePrevious(item);\n  const prevCellIndex = usePrevious(cellIndex);\n\n  const isSameItemAtDifferentIndex = !!(\n    prevItem != null &&\n    prevCellIndex != null &&\n    item === prevItem &&\n    props.cellIndex !== prevCellIndex\n  );\n\n  // Be wary of editing this to destructure the `forceRender` callback.\n  // See: https://github.com/plexinc/plex-web-client/issues/14883\n  const reducer = useReducer((state) => state + 1, 0);\n  const forceRender = reducer[1];\n\n  const isMovingRef = useRef(isSameItemAtDifferentIndex);\n  const isMoving = isMovingRef.current || isSameItemAtDifferentIndex;\n\n  const finalStyle = useMemo(() => {\n    return getCellStyle({\n      cellX,\n      cellY,\n      cellWidth,\n      cellHeight,\n      style,\n      moveDurationMilliseconds,\n      isMoving,\n      isVirtual,\n    });\n  }, [\n    cellX,\n    cellY,\n    cellWidth,\n    cellHeight,\n    style,\n    moveDurationMilliseconds,\n    isMoving,\n    isVirtual,\n  ]);\n\n  const lastVisibleItemRef = useRef(isCellPlaceholder(props) ? null : item);\n\n  // Once an item is visible, do not switch to an offscreen placeholder if it is\n  // scrolled out of view. Keep the item visible until the cell is reused.\n\n  let isPlaceholder;\n\n  if (isCellPlaceholder(props)) {\n    isPlaceholder = lastVisibleItemRef.current !== item;\n\n    if (isPlaceholder) {\n      lastVisibleItemRef.current = null;\n    }\n  } else {\n    isPlaceholder = false;\n    lastVisibleItemRef.current = item;\n  }\n\n  // Prefer a ref for isMoving over state in order to avoid a re-render when a\n  // cell starts the move transition. Otherwise, the cell's position would\n  // change before the transition styles could be applied. Then, force a\n  // re-render when the move transition completes to clean up the transition\n  // styles. Give the transition extra time in case it stutters.\n\n  useEffect(() => {\n    let timeoutID: any;\n\n    if (isMoving) {\n      isMovingRef.current = true;\n\n      timeoutID = window.setTimeout(() => {\n        isMovingRef.current = false;\n        // @ts-expect-error ts-migrate(2554) FIXME: Expected 0 arguments, but got 1.\n        forceRender({});\n      }, moveDurationMilliseconds * 2);\n    }\n\n    return () => {\n      if (timeoutID) {\n        window.clearTimeout(timeoutID);\n      }\n    };\n  }, [moveDurationMilliseconds, isMoving, forceRender]);\n\n  return {\n    style: finalStyle,\n    isPlaceholder,\n  };\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"line\":\"Hd3Cy\",\"field\":\"qr6f1\",\"fieldTime\":\"cTBIJ qr6f1\",\"fieldThread\":\"OKS6k qr6f1\",\"fieldMessage\":\"HVtiD qr6f1\",\"levelError\":\"DWB30 Hd3Cy\",\"levelWarning\":\"J2uzx Hd3Cy\",\"levelInfo\":\"qAuBG Hd3Cy\",\"levelDebug\":\"gz6Ei Hd3Cy\",\"levelVerbose\":\"oOt4Y Hd3Cy\",\"levelUnknown\":\"IGa4n Hd3Cy\",\"isHighlighted\":\"pFEvy\"};","/* eslint-plugin-disable @typescript-eslint */\n\nimport { connect } from 'react-redux';\nimport { createSelector } from 'reselect';\nimport ServerLogLine from './ServerLogLine';\n\nfunction createMapStateToProps() {\n  return createSelector(\n    (appState) => appState.ui.serverLogPage.highlightedLineIndex,\n    // @ts-expect-error ts-migrate(6133) FIXME: 'appState' is declared but its value is never read... Remove this comment to see the full error message\n    (appState: any, { index }: any) => index,\n    (highlightedLineIndex, index) => {\n      return {\n        isHighlighted: highlightedLineIndex === index,\n      };\n    }\n  );\n}\n\nexport default connect(createMapStateToProps)(ServerLogLine);\n","/* eslint-plugin-disable @typescript-eslint */\n\nimport classNames from 'classnames';\nimport React, { useCallback } from 'react';\nimport Link from 'app/js/views/v3/components/core/buttons/Link';\nimport useVirtualCell from 'app/js/views/v3/helpers/hooks/useVirtualCell';\nimport styles from './ServerLogLine.css';\n\nfunction getLineClassName(level: any) {\n  return (\n    [\n      styles.levelError,\n      styles.levelWarning,\n      styles.levelInfo,\n      styles.levelDebug,\n      styles.levelVerbose,\n    ][level] || styles.levelUnknown\n  );\n}\n\ntype ServerLogLineProps = {\n  index?: number;\n  level?: number;\n  message?: string;\n  thread: number | string;\n  time?: string;\n  isHighlighted?: boolean;\n  cellX: number;\n  cellY: number;\n  cellWidth: number;\n  cellHeight: number;\n  onLogLinePress: (...args: any[]) => any;\n};\n\nfunction ServerLogLine(props: ServerLogLineProps) {\n  const { index, level, message, thread, time, isHighlighted, onLogLinePress } =\n    props;\n\n  const cell = useVirtualCell(props);\n\n  const onPress = useCallback(\n    // @ts-expect-error ts-migrate(6133) FIXME: 'event' is declared but its value is never read.\n    (event) => {\n      onLogLinePress({\n        index: index,\n        time: time,\n        thread: thread,\n        level: level,\n        message: message,\n      });\n    },\n    [index, time, thread, level, message, onLogLinePress]\n  );\n\n  const lineClassName = getLineClassName(level);\n\n  return (\n    <div style={cell.style}>\n      <Link\n        className={classNames(\n          lineClassName,\n          isHighlighted && styles.isHighlighted\n        )}\n        // @ts-expect-error ts-migrate(2322) FIXME: Type 'number | undefined' is not assignable to typ... Remove this comment to see the full error message\n        tabIndex={index}\n        onPress={onPress}\n      >\n        <span className={styles.fieldTime}>{time}</span>\n\n        <span className={styles.fieldThread}>[{thread}]</span>\n\n        <span className={styles.fieldMessage}>{message}</span>\n      </Link>\n    </div>\n  );\n}\n\nexport default ServerLogLine;\n","/* eslint-plugin-disable @typescript-eslint */\n\nimport escapeRegExp from 'app/js/utils/string/escapeRegExp';\n\nfunction formatThreadFilterText(filterText: any, thread: any) {\n  // Remove the thread id if it's already present in the filter\n  const filterWithThreadRemoved = filterText\n    .replace(new RegExp(`\\\\s?${escapeRegExp(thread)}`), '')\n    .trim();\n\n  // Prepend the thread id to the filter text\n  const filter = filterWithThreadRemoved.length\n    ? `${thread} ${filterWithThreadRemoved}`\n    : thread;\n\n  return filter;\n}\n\nexport default formatThreadFilterText;\n","// extracted by mini-css-extract-plugin\nexport default {\"container\":\"HecJK\",\"containerWithTimeFilter\":\"GK_lq\",\"closeButton\":\"qtc1W x5jRQ\",\"action\":\"EieHW\",\"label\":\"e0vQU\",\"containerError\":\"nlbUc HecJK\",\"containerWarning\":\"jMyQO HecJK\",\"containerInfo\":\"B9ybP HecJK\",\"containerDebug\":\"iLeYb HecJK\",\"containerVerbose\":\"ysgY6 HecJK\",\"containerUnknown\":\"D_aHJ HecJK\",\"levelError\":\"YlkB3\",\"levelWarning\":\"f18nA\",\"levelInfo\":\"z4XtS\"};","/* eslint-plugin-disable @typescript-eslint */\n\nimport React, { Component } from 'react';\nimport * as keyCodes from 'app/js/utils/constants/keyCodes';\nimport getLogLevelLabel from 'app/js/utils/server/getLogLevelLabel';\nimport t from 'app/js/utils/t';\nimport DisclosureArrow from 'app/js/views/v3/components/core/base/DisclosureArrow';\nimport Scroller from 'app/js/views/v3/components/core/base/Scroller';\nimport Button from 'app/js/views/v3/components/core/buttons/Button';\nimport Link from 'app/js/views/v3/components/core/buttons/Link';\nimport Menu from 'app/js/views/v3/components/core/menus/Menu';\nimport MenuItem from 'app/js/views/v3/components/core/menus/MenuItem';\nimport getUniqueElementID from 'app/js/views/v3/helpers/getUniqueElementID';\nimport * as directions from 'app/js/views/v3/helpers/props/directions';\nimport * as kinds from 'app/js/views/v3/helpers/props/kinds';\nimport * as sizes from 'app/js/views/v3/helpers/props/sizes';\nimport IconRemove from 'app/glyphs/remove-560.svg';\nimport formatThreadFilterText from './formatThreadFilterText';\nimport styles from './ServerLogLineModal.css';\n\nfunction getLogContainerStyle(level: any) {\n  return (\n    [\n      styles.containerError,\n      styles.containerWarning,\n      styles.containerInfo,\n      styles.containerDebug,\n      styles.containerVerbose,\n    ][level] || styles.containerUnknown\n  );\n}\n\nfunction getLevelLabelStyle(level: any) {\n  return [styles.levelError, styles.levelWarning, styles.levelInfo][level];\n}\n\ntype ServerLogLineModalProps = {\n  index?: number;\n  level?: number;\n  time?: string;\n  thread?: string;\n  message?: string;\n  filter?: string;\n  timeFilterStart: string;\n  timeFilterEnd: string;\n  onJumpToContext: (...args: any[]) => any;\n  onTextFilterChange: (...args: any[]) => any;\n  onTimeFilterChange: (...args: any[]) => any;\n  onClose: (...args: any[]) => any;\n};\n\ntype ServerLogLineModalState = any;\n\nclass ServerLogLineModal extends Component<\n  ServerLogLineModalProps,\n  ServerLogLineModalState\n> {\n  // eslint-disable-next-line react/sort-comp\n  _timeMenuButtonID: any;\n\n  //\n  // Lifecycle\n\n  constructor(props: any, context: any) {\n    super(props, context);\n\n    this._timeMenuButtonID = getUniqueElementID();\n\n    this.state = {\n      isTimeMenuOpen: false,\n    };\n  }\n\n  componentDidMount() {\n    document.addEventListener('keydown', this.onKeyDown);\n  }\n\n  componentWillUnmount() {\n    document.removeEventListener('keydown', this.onKeyDown);\n  }\n\n  //\n  // Listeners\n\n  // @ts-expect-error ts-migrate(6133) FIXME: 'event' is declared but its value is never read.\n  onClosePress = (event: any) => {\n    this.props.onClose();\n  };\n\n  // @ts-expect-error ts-migrate(6133) FIXME: 'event' is declared but its value is never read.\n  onShowContextPress = (event: any) => {\n    // Reveal 10 preceding log lines.\n    // @ts-expect-error ts-migrate(2532) FIXME: Object is possibly 'undefined'.\n    this.props.onJumpToContext(Math.max(this.props.index - 10, 0));\n  };\n\n  onFilterFromPress = () => {\n    this.props.onTimeFilterChange({\n      timeFilterStart: this.props.time,\n      timeFilterEnd: this.props.timeFilterEnd,\n    });\n  };\n\n  onFilterToPress = () => {\n    this.props.onTimeFilterChange({\n      timeFilterStart: this.props.timeFilterStart,\n      timeFilterEnd: this.props.time,\n    });\n  };\n\n  onThreadPress = () => {\n    this.props.onTextFilterChange({\n      filter: formatThreadFilterText(this.props.filter, this.props.thread),\n    });\n  };\n\n  onTimeMenuPress = () => {\n    this.setState({ isTimeMenuOpen: !this.state.isTimeMenuOpen });\n  };\n\n  onTimeMenuClose = () => {\n    this.setState({ isTimeMenuOpen: false });\n  };\n\n  onKeyDown = (event: any) => {\n    const keyCode = event.keyCode;\n\n    if (keyCode === keyCodes.ESCAPE) {\n      event.preventDefault();\n      event.stopPropagation();\n\n      this.props.onClose();\n    }\n  };\n\n  //\n  // Render\n\n  render() {\n    const { level, time, thread, message } = this.props;\n\n    const { isTimeMenuOpen } = this.state;\n\n    return (\n      // @ts-expect-error ts-migrate(2322) FIXME: Type '{ children: Element[]; className: string; au... Remove this comment to see the full error message\n      <Scroller autoScroll={true} className={getLogContainerStyle(level)}>\n        <Link\n          aria-label={t('Close')}\n          className={styles.closeButton}\n          onPress={this.onClosePress}\n        >\n          <IconRemove />\n        </Link>\n\n        <p>\n          <span className={styles.label}>{t('Time')}</span>\n          <Link\n            // @ts-expect-error ts-migrate(2322) FIXME: Type '{ children: (string | Element | undefined)[]... Remove this comment to see the full error message\n            id={this._timeMenuButtonID}\n            kind={kinds.PRIMARY}\n            onPress={this.onTimeMenuPress}\n          >\n            {time}\n            <DisclosureArrow\n              direction={isTimeMenuOpen ? directions.UP : directions.DOWN}\n              kind={kinds.PRIMARY}\n            />\n          </Link>\n          <Menu\n            isOpen={isTimeMenuOpen}\n            size={sizes.LARGE}\n            target={this._timeMenuButtonID}\n            onMenuClose={this.onTimeMenuClose}\n          >\n            <MenuItem onPress={this.onFilterFromPress}>\n              {t('Filter from this time')}\n            </MenuItem>\n            <MenuItem onPress={this.onFilterToPress}>\n              {t('Filter to this time')}\n            </MenuItem>\n          </Menu>\n        </p>\n\n        <p>\n          <span className={styles.label}>{t('Level')}</span>\n          <span className={getLevelLabelStyle(level)}>\n            {getLogLevelLabel(level)}\n          </span>\n        </p>\n\n        <p>\n          <span className={styles.label}>{t('Thread')}</span>\n          <Link kind={kinds.PRIMARY} onPress={this.onThreadPress}>\n            {thread}\n          </Link>\n        </p>\n\n        <p>\n          <span className={styles.label}>{t('Message')}</span>\n          {message}\n        </p>\n\n        <div className={styles.action}>\n          <Button onPress={this.onShowContextPress}>\n            {t('Clear Filters and Jump to Context')}\n          </Button>\n        </div>\n      </Scroller>\n    );\n  }\n}\n\nexport default ServerLogLineModal;\n","/* eslint-plugin-disable @typescript-eslint */\n\nimport React, { Component } from 'react';\nimport getLogLevelLabel from 'app/js/utils/server/getLogLevelLabel';\nimport Scroller from 'app/js/views/v3/components/core/base/Scroller';\n\ntype ServerLogRawTextProps = {\n  className: string;\n  filter: string;\n  logLevels: any[];\n  lines: any[];\n};\n\nclass ServerLogRawText extends Component<ServerLogRawTextProps> {\n  //\n  // Lifecycle\n\n  shouldComponentUpdate(nextProps: ServerLogRawTextProps) {\n    // Do not re-render when new lines are added. Only re-render when filters\n    // are modified.\n\n    return (\n      nextProps.filter !== this.props.filter ||\n      nextProps.logLevels !== this.props.logLevels\n    );\n  }\n\n  //\n  // Render\n\n  render() {\n    const { className, lines } = this.props;\n\n    return (\n      // @ts-expect-error ts-migrate(2322) FIXME: Type '{ children: Element; className: string; }' i... Remove this comment to see the full error message\n      <Scroller className={className}>\n        <pre>\n          {lines.reduce((str, line) => {\n            str += `${line.time} [${line.thread}] ${getLogLevelLabel(\n              line.level\n            )} — ${line.message}\\n`;\n            return str;\n          }, '')}\n        </pre>\n      </Scroller>\n    );\n  }\n}\n\nexport default ServerLogRawText;\n","/* eslint-plugin-disable @typescript-eslint */\n\nimport React, { Component } from 'react';\nimport t from 'app/js/utils/t';\nimport Link from 'app/js/views/v3/components/core/buttons/Link';\nimport VirtualListScroller from 'app/js/views/v3/components/core/lists/VirtualListScroller';\nimport createVerticalLayout from 'app/js/views/v3/helpers/layouts/createVerticalLayout';\nimport ServerLogLineConnector from './ServerLogLineConnector';\nimport ServerLogLineModal from './ServerLogLineModal';\nimport ServerLogRawText from './ServerLogRawText';\nimport styles from './ServerLog.css';\n\nconst LINE_HEIGHT = 26;\nconst layout = createVerticalLayout(LINE_HEIGHT, 10, {\n  outerPaddingTop: 10,\n  outerPaddingBottom: 10,\n});\n\nfunction getInitialState() {\n  return {\n    isSticky: true,\n    scrollIndex: 0,\n    scrollIndexAfterFilterChange: null,\n    selectedLogLine: null,\n  };\n}\n\nfunction hasFilter(props: any) {\n  return !!(\n    props.filter ||\n    props.timeFilterStart ||\n    props.timeFilterEnd ||\n    props.logLevels.length\n  );\n}\n\ntype ServerLogProps = {\n  filter: string;\n  timeFilterStart: string;\n  timeFilterEnd: string;\n  logLevels: any[];\n  showRawText: boolean;\n  logLines: any[];\n  onTextFilterChange: (...args: any[]) => any;\n  onTimeFilterChange: (...args: any[]) => any;\n  onHighlightLine: (...args: any[]) => any;\n  onClearFilter: (...args: any[]) => any;\n};\n\ntype ServerLogState = any;\n\nclass ServerLog extends Component<ServerLogProps, ServerLogState> {\n  // eslint-disable-next-line react/sort-comp\n  _lastScrollTop: any;\n  _scrollerRef: any;\n\n  //\n  // Static\n\n  static getDerivedStateFromProps(nextProps: any, prevState: any) {\n    if (\n      prevState.scrollIndexAfterFilterChange != null &&\n      !hasFilter(nextProps)\n    ) {\n      return {\n        isSticky: false,\n        scrollIndex: prevState.scrollIndexAfterFilterChange,\n        scrollIndexAfterFilterChange: null,\n      };\n    }\n\n    if (\n      nextProps.showRawText &&\n      (!prevState.isSticky ||\n        prevState.scrollIndex ||\n        prevState.selectedLogLine)\n    ) {\n      return getInitialState();\n    }\n\n    return null;\n  }\n\n  //\n  // Lifecycle\n\n  constructor(props: any, context: any) {\n    super(props, context);\n\n    this.state = getInitialState();\n    this._scrollerRef = React.createRef();\n  }\n\n  //\n  // Listeners\n\n  onScroll = () => {\n    const scrollerRef = this._scrollerRef.current;\n\n    if (\n      scrollerRef.scrollTop + scrollerRef.clientHeight >=\n      scrollerRef.scrollHeight\n    ) {\n      this.setState({\n        isSticky: true,\n        scrollIndex: null,\n      });\n    } else if (scrollerRef.scrollTop < this._lastScrollTop) {\n      this.setState({ isSticky: false });\n    }\n\n    this._lastScrollTop = scrollerRef.scrollTop;\n  };\n\n  onJumpToContext = (scrollIndex: any) => {\n    // If there is an active filter, we need to clear in order to scroll to the\n    // correct index.\n\n    if (hasFilter(this.props)) {\n      this.setState(\n        {\n          isSticky: false,\n          scrollIndexAfterFilterChange: scrollIndex,\n          selectedLogLine: null,\n        },\n        () => {\n          this.props.onClearFilter();\n        }\n      );\n    } else {\n      this.setState({\n        isSticky: false,\n        scrollIndex,\n        selectedLogLine: null,\n      });\n    }\n  };\n\n  onTextFilterChange = (...args: any[]) => {\n    this.setState({ scrollIndex: 0, selectedLogLine: null });\n    this.props.onTextFilterChange(...args);\n  };\n\n  onTimeFilterChange = (...args: any[]) => {\n    this.setState({ scrollIndex: 0, selectedLogLine: null });\n    this.props.onTimeFilterChange(...args);\n  };\n\n  onLogLinePress = (logLine: any) => {\n    this.setState({ selectedLogLine: logLine });\n    this.props.onHighlightLine(logLine);\n  };\n\n  // @ts-expect-error ts-migrate(6133) FIXME: 'event' is declared but its value is never read.\n  onModalClose = (event: any) => {\n    this.setState({ selectedLogLine: null });\n  };\n\n  onJumpToLatestPress = () => {\n    this.setState({ isSticky: true });\n  };\n\n  //\n  // Render\n\n  renderLogLine = (cellProps: any) => {\n    return (\n      <ServerLogLineConnector\n        {...cellProps}\n        onLogLinePress={this.onLogLinePress}\n      />\n    );\n  };\n\n  render() {\n    const {\n      filter,\n      timeFilterStart,\n      timeFilterEnd,\n      logLevels,\n      showRawText,\n      logLines,\n    } = this.props;\n\n    const { isSticky, scrollIndex, selectedLogLine } = this.state;\n\n    const showSelectedLogLineModal = !!selectedLogLine;\n    const hideLogLinesScroller = showSelectedLogLineModal || showRawText;\n\n    return (\n      <>\n        {showRawText ? (\n          <ServerLogRawText\n            className={styles.rawTextScroller}\n            filter={filter}\n            lines={logLines}\n            logLevels={logLevels}\n          />\n        ) : null}\n        <VirtualListScroller\n          ref={this._scrollerRef}\n          // @ts-expect-error ts-migrate(2322) FIXME: Type '{ className: string; scrollerClassName: stri... Remove this comment to see the full error message\n          cellRenderer={this.renderLogLine}\n          className={\n            hideLogLinesScroller ? styles.hiddenPageContent : styles.pageContent\n          }\n          items={logLines}\n          keyPropName=\"index\"\n          layout={layout}\n          scrollIndex={isSticky ? logLines.length - 1 : scrollIndex}\n          scrollerClassName={styles.pageContentScroller}\n          size={logLines.length}\n          smoothScroll={false}\n          onScroll={this.onScroll}\n        />\n        <Link\n          className={isSticky ? styles.jumpLinkHidden : styles.jumpLinkVisible}\n          onPress={this.onJumpToLatestPress}\n        >\n          {t('Jump to latest')}\n        </Link>\n        {showSelectedLogLineModal ? (\n          <ServerLogLineModal\n            {...selectedLogLine}\n            filter={filter}\n            timeFilterEnd={timeFilterEnd}\n            timeFilterStart={timeFilterStart}\n            onClose={this.onModalClose}\n            onJumpToContext={this.onJumpToContext}\n            onTextFilterChange={this.onTextFilterChange}\n            onTimeFilterChange={this.onTimeFilterChange}\n          />\n        ) : null}\n      </>\n    );\n  }\n}\n\nexport default ServerLog;\n","/* eslint-plugin-disable @typescript-eslint */\n\nimport createGridLayout, {\n  VERTICAL,\n} from 'app/js/views/v3/helpers/layouts/createGridLayout';\n\nexport default function createVerticalLayout(\n  rowHeight = 40,\n  overscan = 10,\n  options: any\n) {\n  const verticalLayout = createGridLayout({\n    direction: VERTICAL,\n    columns: 1,\n    overscan,\n\n    getCellWidth: (viewportOptions: any) => viewportOptions.innerViewportWidth,\n    getCellHeight: () => rowHeight,\n\n    ...options,\n  });\n\n  return verticalLayout;\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"pageContent\":\"e10mU t0i7E\",\"hiddenPageContent\":\"gS3I2\",\"pageContentScroller\":\"XqBhY\",\"rawTextScroller\":\"hwcRg\",\"jumpLinkVisible\":\"OIWSf x5jRQ\",\"jumpLinkHidden\":\"c24DQ OIWSf x5jRQ\"};","/* eslint-plugin-disable @typescript-eslint */\n\nimport { connect } from 'react-redux';\nimport { createSelector } from 'reselect';\nimport {\n  changeTextFilter,\n  changeTimeFilter,\n  clearFilter,\n  highlightLine,\n} from 'app/js/stores/actions/ui/serverLogPageActions';\nimport ServerLog from './ServerLog';\n\nconst mapStateToProps = createSelector(\n  // @ts-expect-error ts-migrate(2571) FIXME: Object is of type 'unknown'.\n  (appState) => appState.ui.serverLogPage,\n  (serverLogPage) => {\n    return {\n      filter: serverLogPage.filter,\n      timeFilterStart: serverLogPage.timeFilterStart,\n      timeFilterEnd: serverLogPage.timeFilterEnd,\n      logLevels: serverLogPage.logLevels,\n      showRawText: serverLogPage.showRawText,\n      logLines: serverLogPage.logLines,\n    };\n  }\n);\n\nfunction createMapDispatchToProps(dispatch: any, props: any) {\n  const { serverEntityID } = props;\n\n  return {\n    onTextFilterChange(...args: any[]) {\n      dispatch(changeTextFilter(...args));\n    },\n\n    onTimeFilterChange(...args: any[]) {\n      dispatch(changeTimeFilter(...args));\n    },\n\n    onHighlightLine(logLine: any) {\n      dispatch(highlightLine(logLine));\n    },\n\n    onClearFilter() {\n      dispatch(clearFilter({ serverEntityID }));\n    },\n  };\n}\n\nconst ServerLogConnector = connect(\n  mapStateToProps,\n  createMapDispatchToProps\n)(ServerLog);\n\nexport default ServerLogConnector;\n","/* eslint-plugin-disable @typescript-eslint */\n\nimport React, { Component } from 'react';\nimport t from 'app/js/utils/t';\nimport Spinner from 'app/js/views/v3/components/core/Spinner';\nimport PageConnector from 'app/js/views/v3/components/pages/PageConnector';\nimport ServerLogPageHeaderConnector from 'app/js/views/v3/components/pages/serverSettings/panes/logs/ServerLogPageHeaderConnector';\nimport * as scrollDirections from 'app/js/views/v3/helpers/props/scrollDirections';\nimport IconCircleBackslash from 'app/glyphs/circle-backslash-560.svg';\nimport ServerLogConnector from './ServerLogConnector';\nimport styles from './ServerLogPage.css';\n\nconst TOO_MANY_FILES = 1;\nconst ONLY_LOG_FILES_ALLOWED = 2;\n\n// @ts-expect-error ts-migrate(7030) FIXME: Not all code paths return a value.\nfunction getFileDragError(event: any) {\n  const items = event.dataTransfer.items;\n  const item = items[0];\n\n  if (item.type !== '' || item.kind !== 'file') {\n    return ONLY_LOG_FILES_ALLOWED;\n  } else if (items.length > 1) {\n    return TOO_MANY_FILES;\n  }\n}\n\ntype ServerLogPageProps = {\n  title: string;\n  metricsPage: string;\n  metricsPane?: string;\n  onDrop: (...args: any[]) => any;\n};\n\ntype ServerLogPageState = any;\n\nclass ServerLogPage extends Component<ServerLogPageProps, ServerLogPageState> {\n  //\n  // Lifecycle\n\n  constructor(props: any, context: any) {\n    super(props, context);\n\n    this.state = {\n      title: props.title,\n      isDraggingFile: false,\n      isDroppingFile: false,\n      fileDragError: null,\n    };\n  }\n\n  //\n  // Listeners\n\n  onDragOver = (event: any) => {\n    this.setState({\n      isDraggingFile: true,\n      fileDragError: getFileDragError(event),\n    });\n\n    event.preventDefault();\n  };\n\n  onDragLeave = () => {\n    this.setState({\n      isDraggingFile: false,\n      fileDragError: null,\n    });\n  };\n\n  onDrop = (event: any) => {\n    event.preventDefault();\n\n    const fileDragError = getFileDragError(event);\n\n    if (fileDragError) {\n      // If a file drop can be rejected before parsing, treat it as a no-op\n      this.setState({\n        isDraggingFile: false,\n        fileDragError: null,\n      });\n\n      return;\n    }\n\n    this.setState({\n      isDroppingFile: true,\n    });\n\n    const file = event.dataTransfer.files[0];\n    const fileReader = new window.FileReader();\n    fileReader.onload = () => {\n      this.setState({\n        title: file.name,\n        isDraggingFile: false,\n        isDroppingFile: false,\n      });\n\n      this.props.onDrop({ result: fileReader.result });\n    };\n    fileReader.readAsText(file);\n  };\n\n  //\n  // Render\n\n  render() {\n    const { metricsPage, metricsPane } = this.props;\n\n    const { title, isDraggingFile, isDroppingFile, fileDragError } = this.state;\n\n    const draggingFileMessage =\n      isDraggingFile &&\n      !isDroppingFile &&\n      ((fileDragError === TOO_MANY_FILES && t('Only one file at a time')) ||\n        (fileDragError === ONLY_LOG_FILES_ALLOWED &&\n          t('Only log files are allowed')) ||\n        t('Load log file'));\n\n    return (\n      <PageConnector\n        metricsPage={metricsPage}\n        metricsProperties={{ pane: metricsPane }}\n        scrollDirection={scrollDirections.NONE}\n        onDragLeave={this.onDragLeave}\n        onDragOver={this.onDragOver}\n        onDrop={this.onDrop}\n      >\n        <ServerLogPageHeaderConnector title={title} />\n        <ServerLogConnector />\n\n        {isDraggingFile ? (\n          <div className={styles.dropFileOverlay}>\n            {fileDragError ? (\n              <IconCircleBackslash className={styles.icon} />\n            ) : null}\n            {draggingFileMessage}\n            {isDroppingFile ? <Spinner /> : null}\n          </div>\n        ) : null}\n      </PageConnector>\n    );\n  }\n}\n\nexport default ServerLogPage;\n","// extracted by mini-css-extract-plugin\nexport default {\"dropFileOverlay\":\"KDUZy\",\"icon\":\"JSmWw\"};","/* eslint-plugin-disable @typescript-eslint */\n\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { createSelector } from 'reselect';\nimport { resolve } from 'app/js/adapters/adapters';\nimport MediaServerEventConnectionRetryManager from 'app/js/managers/MediaServerEventConnectionRetryManager';\nimport ServerEventManager from 'app/js/managers/ServerEventManager';\nimport {\n  clearLog,\n  loadLogFile,\n} from 'app/js/stores/actions/ui/serverLogPageActions';\nimport createUnstableServerSelector from 'app/js/stores/selectors/server/createUnstableServerSelector';\nimport MediaServerLogEventConnection from 'app/js/utils/pubsub/MediaServerLogEventConnection';\nimport ServerLogPage from './ServerLogPage';\n\nfunction createMapStateToProps() {\n  return createSelector(createUnstableServerSelector(), (server) => {\n    return {\n      title: server.friendlyName,\n    };\n  });\n}\n\nconst mapDispatchToProps = {\n  dispatchClearLog: clearLog,\n  dispatchLoadLogFile: loadLogFile,\n};\n\ntype UnconnectedServerLogPageConnectorProps = {\n  serverEntityID: string;\n  dispatchClearLog: (...args: any[]) => any;\n  dispatchLoadLogFile: (...args: any[]) => any;\n};\n\nexport class UnconnectedServerLogPageConnector extends Component<UnconnectedServerLogPageConnectorProps> {\n  // eslint-disable-next-line react/sort-comp\n  _isServerEventManagerStopped: any;\n  _serverEventManager: any;\n\n  //\n  // Lifecycle\n\n  constructor(props: any, context: any) {\n    super(props, context);\n\n    const appModel = resolve('appModel');\n\n    this._serverEventManager = new ServerEventManager({\n      name: 'MediaServerLogEventManager',\n      appModel,\n      isValidServer: (server: any) =>\n        server.entityID() === props.serverEntityID,\n      supportsLongPolling: false,\n      ServerEventConnection: MediaServerLogEventConnection,\n      ServerRetryManager: MediaServerEventConnectionRetryManager,\n    });\n  }\n\n  componentDidMount() {\n    this.props.dispatchClearLog();\n\n    this._serverEventManager.start();\n    const appModel = resolve('appModel');\n\n    const servers = appModel.get('servers');\n\n    servers.forEach((server: any) => {\n      const isResolved = server.get('isResolved');\n      if (isResolved) {\n        this._serverEventManager.onServerResolvedChange(server, isResolved);\n      }\n    });\n  }\n\n  componentWillUnmount() {\n    this._stopServerEventManager();\n  }\n\n  //\n  // Control\n\n  _stopServerEventManager() {\n    if (!this._isServerEventManagerStopped) {\n      this._serverEventManager.stop();\n\n      // Clear out old log lines to free up memory\n      this.props.dispatchClearLog();\n\n      this._isServerEventManagerStopped = true;\n    }\n  }\n\n  //\n  // Listeners\n\n  onDrop = (...args: any[]) => {\n    this._stopServerEventManager();\n    this.props.dispatchLoadLogFile(...args);\n  };\n\n  //\n  // Render\n\n  render() {\n    // @ts-expect-error ts-migrate(2739) FIXME: Type '{ serverEntityID: string; dispatchClearLog: ... Remove this comment to see the full error message\n    return <ServerLogPage onDrop={this.onDrop} {...this.props} />;\n  }\n}\n\nexport default connect(\n  createMapStateToProps,\n  mapDispatchToProps\n)(UnconnectedServerLogPageConnector);\n","/* eslint-plugin-disable @typescript-eslint */\n\nimport { createSelector } from 'reselect';\nimport _ from 'underscore';\nimport * as activityTypes from 'app/js/utils/server/activityTypes';\nimport createServerActivitiesSelector from './createServerActivitiesSelector';\n\nexport default function createServerActivitySelector(type: any) {\n  return createSelector(createServerActivitiesSelector(), (activities) =>\n    _.find(activities, { type })\n  );\n}\n\n//\n// Shortcuts\n\nexport function createServerOptimizeDatabaseActivitySelector() {\n  return createServerActivitySelector(activityTypes.OPTIMIZE_DATABASE);\n}\n\nexport function createServerCleanBundlesActivitySelector() {\n  return createServerActivitySelector(activityTypes.CLEAN_BUNDLES);\n}\n\nexport function createServerLibraryDeleteActivitySelector() {\n  return createServerActivitySelector(activityTypes.LIBRARY_DELETE);\n}\n","/* eslint-plugin-disable @typescript-eslint */\n\nimport { createSelector } from 'reselect';\nimport createUnstableServerSelector from 'app/js/stores/selectors/server/createUnstableServerSelector';\n\nfunction createServerActivitiesSelector() {\n  return createSelector(createUnstableServerSelector(), (server) => {\n    if (!server) {\n      return;\n    }\n\n    const serverFlexState = server[__PLATFORM__];\n\n    return serverFlexState.activities;\n  });\n}\n\nexport default createServerActivitiesSelector;\n","/* eslint-plugin-disable @typescript-eslint */\n\nimport { createSelector } from 'reselect';\nimport createUnstableServerSelector from 'app/js/stores/selectors/server/createUnstableServerSelector';\nimport path from 'app/js/utils/url/path';\n\nexport default function createServerDownloadUrlSelector(downloadPath: any) {\n  return createSelector(createUnstableServerSelector(), (server) => {\n    if (!server || !server.activeConnection) {\n      return null;\n    }\n\n    const uri = server.activeConnection.uri;\n    const params = server.accessToken\n      ? { 'X-Plex-Token': server.accessToken }\n      : {};\n\n    return path.join([uri, downloadPath], params);\n  });\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"troubleshootingSection\":\"LugwT\",\"buttonContainer\":\"RoRSl\",\"buttonStatus\":\"amzTd\",\"buttonStatusSuccess\":\"WqCXl amzTd\",\"buttonStatusError\":\"DDyD7 amzTd\",\"button\":\"WYCSx\",\"description\":\"UGwPo\"};","/* eslint-plugin-disable @typescript-eslint */\n\nimport React, { Component } from 'react';\nimport { SUPPORT_URL } from 'app/js/utils/constants/commonUrls';\nimport t from 'app/js/utils/t';\nimport TagInjector from 'app/js/views/v3/components/core/TagInjector';\nimport Button from 'app/js/views/v3/components/core/buttons/Button';\nimport Link from 'app/js/views/v3/components/core/buttons/Link';\nimport SpinnerButton from 'app/js/views/v3/components/core/buttons/SpinnerButton';\nimport * as kinds from 'app/js/views/v3/helpers/props/kinds';\nimport getServerSettingsRoute from 'app/js/views/v3/helpers/routes/getServerSettingsRoute';\nimport IconRemove from 'app/glyphs/remove-560.svg';\nimport IconSelected from 'app/glyphs/selected-560.svg';\nimport styles from './ServerTroubleshootingPane.css';\n\ntype ServerTroubleshootingPaneProps = {\n  machineIdentifier: string;\n  downloadDatabasesUrl?: string;\n  downloadLogsUrl?: string;\n  cleanBundlesError?: string;\n  optimizeDatabaseError?: string;\n  isCleanBundlesInProgress: boolean;\n  isOptimizeDatabaseInProgress: boolean;\n  showDownloadDatabases: boolean;\n  showDownloadLogs: boolean;\n  onCleanBundlesPress: (...args: any[]) => any;\n  onOptimizeDatabasePress: (...args: any[]) => any;\n};\ntype ServerTroubleshootingPaneState = any;\nclass ServerTroubleshootingPane extends Component<\n  ServerTroubleshootingPaneProps,\n  ServerTroubleshootingPaneState\n> {\n  //\n  // Static\n  static getDerivedStateFromProps(nextProps: any, prevState: any) {\n    const cleanBundlesProgressChanged =\n      nextProps.isCleanBundlesInProgress !== prevState.isCleanBundlesInProgress;\n    const optimizeDatabaseProgressChanged =\n      nextProps.isOptimizeDatabaseInProgress !==\n      prevState.isOptimizeDatabaseInProgress;\n    if (!cleanBundlesProgressChanged && !optimizeDatabaseProgressChanged) {\n      return null;\n    }\n    const derivedState = {};\n    if (cleanBundlesProgressChanged) {\n      (derivedState as any).isCleanBundlesInProgress =\n        nextProps.isCleanBundlesInProgress;\n      (derivedState as any).isCleanBundlesComplete =\n        prevState.isCleanBundlesInProgress &&\n        !nextProps.isCleanBundlesInProgress;\n    }\n    if (optimizeDatabaseProgressChanged) {\n      (derivedState as any).isOptimizeDatabaseInProgress =\n        nextProps.isOptimizeDatabaseInProgress;\n      (derivedState as any).isOptimizeDatabaseComplete =\n        prevState.isOptimizeDatabaseInProgress &&\n        !nextProps.isOptimizeDatabaseInProgress;\n    }\n    return derivedState;\n  }\n  //\n  // Lifecycle\n  constructor(props: any, context: any) {\n    super(props, context);\n    this.state = {\n      isCleanBundlesInProgress: false,\n      isOptimizeDatabaseInProgress: false,\n      isCleanBundlesComplete: false,\n      isOptimizeDatabaseComplete: false,\n    };\n  }\n  //\n  // Render\n  render() {\n    const {\n      downloadDatabasesUrl,\n      downloadLogsUrl,\n      cleanBundlesError,\n      optimizeDatabaseError,\n      isCleanBundlesInProgress,\n      isOptimizeDatabaseInProgress,\n      showDownloadDatabases,\n      showDownloadLogs,\n      onCleanBundlesPress,\n      onOptimizeDatabasePress,\n    } = this.props;\n    const { isCleanBundlesComplete, isOptimizeDatabaseComplete } = this.state;\n    return (\n      <div>\n        <div className={styles.troubleshootingSection}>\n          <div className={styles.buttonContainer}>\n            <SpinnerButton\n              className={styles.button}\n              isSpinning={isOptimizeDatabaseInProgress}\n              onPress={onOptimizeDatabasePress}\n            >\n              {t('Optimize Database')}\n            </SpinnerButton>\n            {isOptimizeDatabaseComplete && !optimizeDatabaseError ? (\n              <div className={styles.buttonStatusSuccess}>\n                <IconSelected />\n                <div className={styles.textStatus}>\n                  {t('Optimize database complete')}\n                </div>\n              </div>\n            ) : null}\n            {isOptimizeDatabaseComplete && optimizeDatabaseError ? (\n              <div className={styles.buttonStatusError}>\n                <IconRemove />\n                <div className={styles.textStatus}>{optimizeDatabaseError}</div>\n              </div>\n            ) : null}\n          </div>\n\n          <div className={styles.description}>\n            {t(\n              \"Cleans up the library database and ensures it is operating as quickly as possible. This is especially useful when you've added or removed a large amount of media from the library.\"\n            )}\n          </div>\n        </div>\n\n        <div className={styles.troubleshootingSection}>\n          <div className={styles.buttonContainer}>\n            <SpinnerButton\n              className={styles.button}\n              isSpinning={isCleanBundlesInProgress}\n              onPress={onCleanBundlesPress}\n            >\n              {t('Clean Bundles')}\n            </SpinnerButton>\n            {isCleanBundlesComplete && !cleanBundlesError ? (\n              <div className={styles.buttonStatusSuccess}>\n                <IconSelected />\n                <div>{t('Bundles cleaned')}</div>\n              </div>\n            ) : null}\n            {isCleanBundlesComplete && cleanBundlesError ? (\n              <div className={styles.buttonStatusError}>\n                <IconRemove />\n                <div>{cleanBundlesError}</div>\n              </div>\n            ) : null}\n          </div>\n\n          <div className={styles.description}>\n            <TagInjector\n              className={styles.description}\n              message={t(\n                'Poster images and other metadata for items in your library are kept in \"bundle\" packages. When you remove items from your library, these bundles aren’t immediately removed. Removing them can reduce the size of your install. By default, your server will automatically clean up old bundles once a week as part of {openScheduledTass}Scheduled Tasks{closeScheduledTass}.'\n              )}\n              tags={[\n                {\n                  open: 'openScheduledTass',\n                  close: 'closeScheduledTass',\n                  component: Link,\n                  kind: kinds.PRIMARY,\n                  to: getServerSettingsRoute('settings', 'butler'),\n                },\n              ]}\n            />\n          </div>\n        </div>\n\n        {showDownloadLogs || showDownloadDatabases ? (\n          <div className={styles.troubleshootingSection}>\n            <div className={styles.buttonContainer}>\n              {showDownloadLogs ? (\n                <Button\n                  className={styles.button}\n                  target={__EXTERNAL_LINK_TARGET__}\n                  to={downloadLogsUrl}\n                >\n                  {t('Download Logs')}\n                </Button>\n              ) : null}\n              {showDownloadDatabases ? (\n                <Button\n                  className={styles.button}\n                  target={__EXTERNAL_LINK_TARGET__}\n                  to={downloadDatabasesUrl}\n                >\n                  {t('Download Database')}\n                </Button>\n              ) : null}\n            </div>\n\n            <div className={styles.description}>\n              {t(\n                'The Plex Media Server logs and database can be helpful to developers and forum community members in diagnosing server issues.'\n              )}\n            </div>\n          </div>\n        ) : null}\n\n        <div className={styles.description}>\n          <TagInjector\n            className={styles.description}\n            message={t(\n              'You can find additional documentation, guides and FAQs as well as our friendly Community Forums among our {openSupportLink}support resources{closeSupportLink}.'\n            )}\n            tags={[\n              {\n                open: 'openSupportLink',\n                close: 'closeSupportLink',\n                component: Link,\n                kind: kinds.PRIMARY,\n                to: SUPPORT_URL,\n                target: '_blank',\n              },\n            ]}\n          />\n        </div>\n      </div>\n    );\n  }\n}\nexport default ServerTroubleshootingPane;\n","/* eslint-plugin-disable @typescript-eslint */\n\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { createSelector } from 'reselect';\nimport * as serverActions from 'app/js/stores/actions/serverActions';\nimport * as serverActivitySelectors from 'app/js/stores/selectors/server/createServerActivitySelector';\nimport createServerDownloadUrlSelector from 'app/js/stores/selectors/server/createServerDownloadUrlSelector';\nimport createUnstableServerSelector from 'app/js/stores/selectors/server/createUnstableServerSelector';\nimport ServerTroubleshootingPane from './ServerTroubleshootingPane';\n\nfunction createMapStateToProps() {\n  return createSelector(\n    createUnstableServerSelector(),\n    createServerDownloadUrlSelector('/diagnostics/databases'),\n    createServerDownloadUrlSelector('/diagnostics/logs'),\n    serverActivitySelectors.createServerCleanBundlesActivitySelector(),\n    serverActivitySelectors.createServerOptimizeDatabaseActivitySelector(),\n    (\n      server,\n      downloadDatabasesUrl,\n      downloadLogsUrl,\n      cleanBundlesActivity,\n      optimizeDatabaseActivity\n    ) => {\n      const diagnostics = server.diagnostics;\n\n      return {\n        machineIdentifier: server.machineIdentifier,\n        downloadDatabasesUrl,\n        downloadLogsUrl,\n        cleanBundlesError: server[__PLATFORM__].cleanBundlesError,\n        optimizeDatabaseError: server[__PLATFORM__].optimizeDatabaseError,\n        isCleanBundlesInProgress: !!cleanBundlesActivity,\n        isOptimizeDatabaseInProgress: !!optimizeDatabaseActivity,\n        showDownloadDatabases: !!(\n          downloadDatabasesUrl &&\n          diagnostics &&\n          diagnostics.indexOf('databases') !== -1\n        ),\n        showDownloadLogs: !!(\n          downloadLogsUrl &&\n          diagnostics &&\n          diagnostics.indexOf('logs') !== -1\n        ),\n      };\n    }\n  );\n}\n\nconst mapDispatchToProps = {\n  dispatchCleanBundles: serverActions.cleanBundles,\n  dispatchOptimizeDatabase: serverActions.optimizeDatabase,\n};\n\ntype ServerTroubleshootingPaneConnectorProps = {\n  serverEntityID: string;\n  dispatchCleanBundles: (...args: any[]) => any;\n  dispatchOptimizeDatabase: (...args: any[]) => any;\n};\n\nexport class ServerTroubleshootingPaneConnector extends Component<ServerTroubleshootingPaneConnectorProps> {\n  //\n  // Control\n\n  onCleanBundlesPress = () => {\n    this.props.dispatchCleanBundles({\n      serverEntityID: this.props.serverEntityID,\n      hideAlerts: true,\n    });\n  };\n\n  onOptimizeDatabasePress = () => {\n    this.props.dispatchOptimizeDatabase({\n      serverEntityID: this.props.serverEntityID,\n      hideAlerts: true,\n    });\n  };\n\n  //\n  // Render\n\n  render() {\n    const { dispatchCleanBundles, dispatchOptimizeDatabase, ...otherProps } =\n      this.props;\n\n    return (\n      // @ts-expect-error ts-migrate(2739) FIXME: Type '{ serverEntityID: string; children?: ReactNo... Remove this comment to see the full error message\n      <ServerTroubleshootingPane\n        onCleanBundlesPress={this.onCleanBundlesPress}\n        onOptimizeDatabasePress={this.onOptimizeDatabasePress}\n        {...otherProps}\n      />\n    );\n  }\n}\n\nexport default connect(\n  createMapStateToProps,\n  mapDispatchToProps\n)(ServerTroubleshootingPaneConnector);\n","import React, { ReactElement } from 'react';\nimport { IconActivity } from '@plex/react-chroma-icon';\n\ninterface ActivityIconProps {\n  isActive: boolean;\n}\n\nfunction ActivityIcon(props: ActivityIconProps): ReactElement | null {\n  const { isActive } = props;\n\n  if (!isActive) {\n    return null;\n  }\n\n  return <IconActivity />;\n}\n\nexport default ActivityIcon;\n","// extracted by mini-css-extract-plugin\nexport default {\"iconContainer\":\"cfdOh\",\"unknown\":\"iVq97 cfdOh\",\"error\":\"Mmoqt cfdOh\",\"ok\":\"nBGGF cfdOh\"};","import React, { ReactElement } from 'react';\nimport {\n  IconCheckForm,\n  IconExclamationCircledFilled,\n  IconQuestionCircledFilled,\n} from '@plex/react-chroma-icon';\nimport {\n  REMOTE_ACCESS_STATE_CONNECTING,\n  REMOTE_ACCESS_STATE_DISCONNECTING,\n  REMOTE_ACCESS_STATE_OK,\n  REMOTE_ACCESS_STATE_UNREACHABLE,\n} from 'app/js/models/server/ServerCloudAccountModel';\nimport styles from './RemoteAccessStateIcon.css';\n\nconst remoteAccessStateIconProps: { [key: string]: ReactElement } = {\n  [REMOTE_ACCESS_STATE_CONNECTING]: (\n    <div className={styles.unknown}>\n      <IconQuestionCircledFilled />\n    </div>\n  ),\n  [REMOTE_ACCESS_STATE_DISCONNECTING]: (\n    <div className={styles.unknown}>\n      <IconQuestionCircledFilled />\n    </div>\n  ),\n  [REMOTE_ACCESS_STATE_UNREACHABLE]: (\n    <div className={styles.error}>\n      <IconExclamationCircledFilled />\n    </div>\n  ),\n  [REMOTE_ACCESS_STATE_OK]: (\n    <div className={styles.ok}>\n      <IconCheckForm />\n    </div>\n  ),\n};\n\ninterface RemoteAccessStateIconProps {\n  remoteAccessState?: string;\n}\n\nfunction RemoteAccessStateIcon(\n  props: RemoteAccessStateIconProps\n): ReactElement | null {\n  const { remoteAccessState } = props;\n\n  if (!remoteAccessState) {\n    return null;\n  }\n\n  const icon = remoteAccessStateIconProps[remoteAccessState];\n\n  return icon || null;\n}\n\nexport default RemoteAccessStateIcon;\n","// extracted by mini-css-extract-plugin\nexport default {\"icon\":\"zA6X6\"};","import React, { ReactElement } from 'react';\nimport { IconWarningBadge } from '@plex/react-chroma-icon';\nimport styles from './ServerIsClaimedIcon.css';\n\ninterface ServerIsClaimedIconProps {\n  isClaimed: boolean;\n}\n\nfunction ServerIsClaimedIcon(\n  props: ServerIsClaimedIconProps\n): ReactElement | null {\n  const { isClaimed } = props;\n\n  if (isClaimed) {\n    return null;\n  }\n\n  return (\n    <div className={styles.icon}>\n      <IconWarningBadge />\n    </div>\n  );\n}\n\nexport default ServerIsClaimedIcon;\n","/* eslint-plugin-disable @typescript-eslint */\n\nimport React from 'react';\nimport * as metricsPages from 'app/js/utils/constants/metrics/metricsPages';\nimport t from 'app/js/utils/t';\nimport LiveTVSettingsPage from 'app/js/v4/features/dvrManagement/components/settings/LiveTVSettingsPage';\nimport ManageLibrariesPane from 'app/js/v4/features/libraryManagement/components/ManageLibrariesPane';\nimport DeprecatedPluginsPage from 'app/js/views/v3/components/pages/deprecatedPlugins/DeprecatedPluginsPage';\nimport ServerLogPageConnector from 'app/js/views/v3/components/pages/serverSettings/panes/logs/ServerLogPageConnector';\nimport ServerTroubleshootingPaneConnector from 'app/js/views/v3/components/pages/serverSettings/panes/troubleshooting/ServerTroubleshootingPaneConnector';\nimport ActivityIcon from 'app/js/views/v3/components/sidebar/settings/ActivityIcon';\nimport RemoteAccessStateIcon from 'app/js/views/v3/components/sidebar/settings/RemoteAccessStateIcon';\nimport ServerIsClaimedIcon from 'app/js/views/v3/components/sidebar/settings/ServerIsClaimedIcon';\n\nfunction isOwned(server: any) {\n  return !server.isShared;\n}\n\nfunction hasSettings(server: any) {\n  return !!server[__PLATFORM__].isSettingsPopulated;\n}\n\nfunction hasStreamingLogs(server: any) {\n  const diagnostics = server.diagnostics;\n\n  return !!(diagnostics && diagnostics.indexOf('streaminglogs') !== -1);\n}\n\n// @ts-expect-error ts-migrate(6133) FIXME: 'server' is declared but its value is never read.\nfunction hasSessions(server: any, nowPlayingSessionsCount: any) {\n  return nowPlayingSessionsCount > 0;\n}\n\nfunction hasPlugins(server: any) {\n  return server.allowChannelAccess;\n}\n\nfunction hasConversions(server: any) {\n  return server[__PLATFORM__].backgroundTranscodeJobs.length > 0;\n}\n\nfunction getRemoteAccessState(server: any) {\n  const cloudAccount = server[__PLATFORM__].cloudAccount;\n  return cloudAccount && cloudAccount.remoteAccessState;\n}\n\nconst serverSettingsSections = [\n  {\n    key: 'status',\n    title: () => t('Status'),\n    isVisible: true,\n    metricsPage: metricsPages.STATUS,\n    metricsPanePrefix: '',\n    groups: [\n      {\n        key: 'server-dashboard',\n        title: () => t('Dashboard'),\n        isVisible: isOwned,\n        createStatusIndicator: (server: any, nowPlayingSessionsCount: any) => (\n          <ActivityIcon\n            isActive={hasSessions(server, nowPlayingSessionsCount)}\n          />\n        ),\n      },\n      {\n        key: 'alerts',\n        title: () => t('Alerts'),\n        isVisible: isOwned,\n      },\n      {\n        key: 'conversion',\n        title: () => t('Conversions'),\n        isVisible: isOwned,\n        createStatusIndicator: (server: any) => (\n          <ActivityIcon isActive={hasConversions(server)} />\n        ),\n      },\n    ],\n  },\n  {\n    key: 'settings',\n    title: () => t('Settings'),\n    isVisible: isOwned,\n    metricsPage: metricsPages.SETTINGS,\n    metricsPanePrefix: 'server:',\n    groups: [\n      {\n        key: 'general',\n        title: () => t('General'),\n        isVisible: hasSettings,\n        createStatusIndicator: (server: any) => (\n          <ServerIsClaimedIcon isClaimed={!!server.isClaimed} />\n        ),\n      },\n      {\n        key: 'remoteAccess',\n        title: () => t('Remote Access'),\n        isVisible: (server: any) => hasSettings(server),\n        createStatusIndicator: (server: any) => (\n          <RemoteAccessStateIcon\n            remoteAccessState={getRemoteAccessState(server)}\n          />\n        ),\n      },\n      {\n        key: 'agents',\n        title: () => t('Agents'),\n        isVisible: hasSettings,\n      },\n      {\n        key: 'library',\n        title: () => t('Library'),\n      },\n      {\n        key: 'channels',\n        title: () => t('Plugins'),\n        isVisible: hasSettings,\n      },\n      {\n        key: 'network',\n        title: () => t('Network'),\n      },\n      {\n        key: 'transcoder',\n        title: () => t('Transcoder'),\n      },\n      {\n        key: 'languages',\n        title: () => t('Languages'),\n        isVisible: hasSettings,\n      },\n      {\n        key: 'dlna',\n        title: () => t('DLNA'),\n      },\n      {\n        key: 'butler',\n        title: () => t('Scheduled Tasks'),\n      },\n      {\n        key: 'extras',\n        title: () => t('Extras'),\n      },\n    ],\n  },\n  {\n    key: 'manage',\n    title: () => t('Manage'),\n    isVisible: true,\n    groups: [\n      {\n        key: 'libraries',\n        title: () => t('Libraries'),\n        isVisible: isOwned,\n        metricsPage: metricsPages.SETTINGS,\n        metricsPane: 'server:libraries',\n        paneComponent: ManageLibrariesPane,\n      },\n      {\n        key: 'versions',\n        title: () => t('Optimized Versions'),\n        isVisible: (server: any) => {\n          return isOwned(server) && hasSettings(server);\n        },\n        metricsPage: metricsPages.STATUS,\n        metricsPane: 'versions',\n      },\n      {\n        key: 'dvr',\n        title: () => t('Live TV & DVR'),\n        isVisible: (server: any) =>\n          isOwned(server) && server.livetv >= 1 && hasSettings(server),\n        metricsPage: metricsPages.SETTINGS,\n        metricsPane: 'server:dvr',\n        paneComponent: LiveTVSettingsPage,\n      },\n      {\n        key: 'help',\n        title: () => t('Troubleshooting'),\n        isVisible: (server: any) => isOwned(server) && hasSettings(server),\n        metricsPage: metricsPages.SETTINGS,\n        metricsPane: 'server:help',\n        paneComponent: ServerTroubleshootingPaneConnector,\n      },\n      {\n        key: 'console',\n        title: () => t('Console'),\n        isVisible: (server: any) => isOwned(server) && hasStreamingLogs(server),\n        metricsPage: metricsPages.SETTINGS,\n        metricsPane: 'server:console',\n        pageComponent: ServerLogPageConnector,\n      },\n      {\n        key: 'plugins',\n        title: () => t('Plugins'),\n        isVisible: hasPlugins,\n        metricsPage: metricsPages.SETTINGS,\n        metricsPane: 'server:plugins',\n        paneComponent: DeprecatedPluginsPage,\n      },\n    ],\n  },\n];\n\nexport default serverSettingsSections;\n","import React, { ReactElement, useCallback, useMemo } from 'react';\nimport { useSelector } from 'react-redux';\nimport * as serverActions from 'app/js/stores/actions/serverActions';\nimport t from 'app/js/utils/t';\nimport createProviderContentDirectoriesSelector from 'app/js/v4/core/providers/selectors/createProviderContentDirectoriesSelector';\nimport createProviderSelector from 'app/js/v4/core/providers/selectors/createProviderSelector';\nimport createIsServerLibrariesUpdatingSelector from 'app/js/v4/core/serverActivities/selectors/createIsServerLibrariesUpdatingSelector';\nimport SourceContextProvider from 'app/js/v4/core/servers/components/SourceContextProvider';\nimport { useRedispatchLegacyServerAction } from 'app/js/v4/core/servers/hooks/useRedispatchLegacyServerAction';\nimport createStableServerSelector from 'app/js/v4/core/servers/selectors/createStableServerSelector';\nimport Button from 'app/js/v4/core/ui/buttons/components/Button';\nimport Size from 'app/js/v4/core/ui/types/Size';\nimport LibrarySettings from 'app/js/v4/features/libraryManagement/components/LibrarySettings';\nimport ManageLibrarySummary from 'app/js/v4/features/libraryManagement/components/ManageLibrarySummary';\nimport styles from './ManageLibrariesPane.css';\n\ninterface ManageLibrariesPaneProps {\n  machineIdentifier: string;\n  providerIdentifier: string;\n}\n\nexport default function ManageLibrariesPane({\n  machineIdentifier,\n  providerIdentifier,\n}: ManageLibrariesPaneProps): ReactElement {\n  const directories = useSelector(\n    createProviderContentDirectoriesSelector(\n      machineIdentifier,\n      providerIdentifier\n    )\n  );\n\n  const server = useSelector(createStableServerSelector(machineIdentifier));\n  const provider = useSelector(\n    createProviderSelector(machineIdentifier, providerIdentifier)\n  );\n\n  const visibleDirectories = useMemo(\n    () => directories.filter(({ key, hubKey, type }) => key && hubKey && type),\n    [directories]\n  );\n\n  const redispatchLegacyServerAction = useRedispatchLegacyServerAction({\n    server,\n    provider,\n  });\n\n  const isScanning = useSelector(\n    createIsServerLibrariesUpdatingSelector(server)\n  );\n\n  const onAddLibraryPress = useCallback(() => {\n    redispatchLegacyServerAction(\n      // @ts-expect-error ts-migrate(2554) FIXME: Expected 0 arguments, but got 1.\n      serverActions.addLibrary({\n        redirect: false,\n      })\n    );\n  }, [redispatchLegacyServerAction]);\n\n  const onScanLibrariesPress = useCallback(() => {\n    // @ts-expect-error ts-migrate(2554) FIXME: Expected 0 arguments, but got 1.\n    redispatchLegacyServerAction(serverActions.startLibrariesRefresh());\n  }, [redispatchLegacyServerAction]);\n\n  const onCancelScanLibrariesPress = useCallback(() => {\n    redispatchLegacyServerAction(serverActions.cancelLibrariesRefresh());\n  }, [redispatchLegacyServerAction]);\n\n  return (\n    <SourceContextProvider\n      machineIdentifier={machineIdentifier}\n      providerIdentifier={providerIdentifier}\n    >\n      <div className={styles.header}>\n        <div className={styles.libraryCount}>\n          {visibleDirectories.length === 1\n            ? t('1 library')\n            : t('{1} libraries', visibleDirectories.length)}\n        </div>\n        <Button\n          className={styles.button}\n          size={Size.Small}\n          onPress={onAddLibraryPress}\n        >\n          {t('Add Library')}\n        </Button>\n        {isScanning ? (\n          <Button\n            className={styles.button}\n            size={Size.Small}\n            onPress={onCancelScanLibrariesPress}\n          >\n            {t('Cancel Scan')}\n          </Button>\n        ) : (\n          <Button\n            className={styles.button}\n            size={Size.Small}\n            onPress={onScanLibrariesPress}\n          >\n            {t('Scan Library Files')}\n          </Button>\n        )}\n      </div>\n\n      {visibleDirectories.map((contentDirectory, index) => (\n        <ManageLibrarySummary\n          key={index}\n          contentDirectory={contentDirectory}\n          index={index}\n          machineIdentifier={machineIdentifier}\n          providerEntityID={provider.entityID}\n        />\n      ))}\n\n      <LibrarySettings />\n    </SourceContextProvider>\n  );\n}\n","import { createSelector, Selector } from 'reselect';\nimport * as activityTypes from 'app/js/utils/server/activityTypes';\nimport createServerActivitiesSelector from 'app/js/v4/core/serverActivities/selectors/createServerActivitiesSelector';\nimport { Server } from 'app/js/v4/core/servers/serversTypes';\nimport { LegacyRootState } from 'app/js/v4/root/rootTypes';\n\nfunction createIsServerLibrariesUpdatingSelector(\n  server: Server\n): Selector<LegacyRootState, boolean> {\n  return createSelector(createServerActivitiesSelector(server), (activities) =>\n    activities.some(({ type }) => type === activityTypes.LIBRARY_UPDATE_SECTION)\n  );\n}\n\nexport default createIsServerLibrariesUpdatingSelector;\n","import React, { ReactElement, useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport serverFeatures from 'app/js/models/server/serverFeatures';\nimport {\n  clearDVRSettingsUI,\n  initDVRSettingsUI,\n} from 'app/js/stores/actions/ui/dvrSettingsUIActions';\nimport * as metricsContexts from 'app/js/utils/constants/metrics/metricsContexts';\nimport * as features from 'app/js/utils/constants/user/features';\nimport isVersionOrNewer from 'app/js/utils/isVersionOrNewer';\nimport t from 'app/js/utils/t';\nimport createEPGProviderSelector from 'app/js/v4/core/providers/selectors/createEPGProviderSelector';\nimport SourceContextProvider from 'app/js/v4/core/servers/components/SourceContextProvider';\nimport createStableServerSelector from 'app/js/v4/core/servers/selectors/createStableServerSelector';\nimport useDisclosure from 'app/js/v4/core/ui/hooks/useDisclosure';\nimport EmptyPageContent from 'app/js/v4/core/ui/pages/components/empty/EmptyPageContent';\nimport ErrorPageContent from 'app/js/v4/core/ui/pages/components/empty/ErrorPageContent';\nimport Spinner from 'app/js/v4/core/ui/spinners/components/Spinner';\nimport createUserFeatureSelector from 'app/js/v4/core/user/selectors/createUserFeatureSelector';\nimport DVRSetupModal from 'app/js/v4/features/dvrManagement/components/setup/DVRSetupModal';\nimport dvrSetupSlice from 'app/js/v4/features/dvrManagement/dvrSetupSlice';\nimport epgSettingsSlice from 'app/js/v4/features/dvrManagement/epgSettingsSlice';\nimport selectDVRSetup from 'app/js/v4/features/dvrManagement/selectors/selectDVRSetup';\nimport selectLegacyDVRSettingsUI from 'app/js/v4/features/dvrManagement/selectors/selectLegacyDVRSettingsUI';\nimport selectMappedLiveTVChannels from 'app/js/v4/features/livetv/selectors/selectMappedLiveTVChannels';\nimport LiveTVSettingsChannelList from './LiveTVSettingsChannelList';\nimport LiveTVSettingsDVR from './LiveTVSettingsDVR';\nimport LiveTVSettingsDeviceList from './LiveTVSettingsDeviceList';\nimport LiveTVSettingsZeroState from './LiveTVSettingsZeroState';\nimport styles from './LiveTVSettingsPage.css';\n\ninterface LiveTVSettingsPageProps {\n  machineIdentifier: string;\n}\n\nexport default function LiveTVSettingsPage({\n  machineIdentifier,\n}: LiveTVSettingsPageProps): ReactElement {\n  const dispatch = useDispatch();\n  const setupModalState = useDisclosure();\n  const server = useSelector(createStableServerSelector(machineIdentifier));\n  const provider = useSelector(createEPGProviderSelector(machineIdentifier));\n  const hasLiveTVSetupFeature = useSelector(\n    createUserFeatureSelector(features.LIVE_TV_SETUP)\n  );\n  const channels = useSelector(selectMappedLiveTVChannels);\n  const {\n    selectedDVR: { dvr, isPending: isDVRPending, error: dvrError },\n  } = useSelector(selectDVRSetup);\n  const hasDVRFeature =\n    !!server.ownerFeatures && server.ownerFeatures.indexOf('dvr') > -1;\n\n  const hasUnsupportedServer = !isVersionOrNewer(\n    server.version,\n    serverFeatures.v4DVRSetup\n  );\n\n  const { isUIPopulated, isDvrsPending } = useSelector(\n    selectLegacyDVRSettingsUI\n  );\n  const isPending = !isUIPopulated || isDvrsPending || isDVRPending;\n\n  //\n  // Effects\n\n  useEffect(() => {\n    dispatch(initDVRSettingsUI({ serverEntityID: server.entityID }));\n\n    return () => {\n      dispatch(dvrSetupSlice.actions.reset());\n      dispatch(epgSettingsSlice.actions.reset());\n      dispatch(clearDVRSettingsUI());\n    };\n  }, [server, dispatch]);\n\n  useEffect(() => {\n    if (isUIPopulated && !isDvrsPending) {\n      dispatch(dvrSetupSlice.actions.dvrFetchRequested({ server }));\n    }\n  }, [server, dispatch, isUIPopulated, isDvrsPending]);\n\n  //\n  // Render\n\n  return (\n    <SourceContextProvider\n      machineIdentifier={machineIdentifier}\n      providerIdentifier={provider.identifier}\n    >\n      {isPending ? (\n        <EmptyPageContent>\n          <Spinner />\n        </EmptyPageContent>\n      ) : null}\n\n      {!isPending && !dvr && !dvrError ? (\n        <LiveTVSettingsZeroState\n          hasDVRFeature={hasDVRFeature}\n          hasLiveTVSetupFeature={hasLiveTVSetupFeature}\n          hasUnsupportedServer={hasUnsupportedServer}\n          onSetupPress={setupModalState.onOpen}\n        />\n      ) : null}\n\n      {!isPending && dvrError ? (\n        <ErrorPageContent title={t('Unable to load DVRs')} />\n      ) : null}\n\n      {!isPending && !dvrError && dvr ? (\n        <div className={styles.container}>\n          <div className={styles.deviceListContainer}>\n            <div className={styles.sectionTitle}>{t('Channel Sources')}</div>\n            <LiveTVSettingsDeviceList\n              dvrID={dvr.key}\n              onAddDevicePress={setupModalState.onOpen}\n            />\n          </div>\n          <div className={styles.channelsListContainer}>\n            <div className={styles.sectionTitle}>\n              {t('My Channels')} ({channels.length})\n            </div>\n            <LiveTVSettingsChannelList />\n          </div>\n          <div className={styles.dvrContainer}>\n            <div className={styles.sectionTitle}>{t('DVR')}</div>\n            <LiveTVSettingsDVR\n              dvr={dvr}\n              hasDVRFeature={hasDVRFeature}\n              hasLiveTVSetupFeature={hasLiveTVSetupFeature}\n            />\n          </div>\n        </div>\n      ) : null}\n\n      <DVRSetupModal\n        dvrID={dvr?.key}\n        isOpen={setupModalState.isOpen}\n        machineIdentifier={machineIdentifier}\n        metricsContext={metricsContexts.SETTINGS}\n        providerIdentifier={provider.identifier}\n        onModalClose={setupModalState.onClose}\n      />\n    </SourceContextProvider>\n  );\n}\n","/* eslint-plugin-disable @typescript-eslint */\n\nimport React, { useState } from 'react';\nimport { resolve } from 'app/js/adapters/adapters';\nimport DeprecatedPluginListModel from 'app/js/models/deprecatedPlugin/DeprecatedPluginListModel';\nimport t from 'app/js/utils/t';\nimport DeprecatedPluginsView from 'app/js/views/deprecatedPlugin/DeprecatedPluginsView';\nimport MarionetteComponent from 'app/js/views/v3/components/MarionetteComponent';\nimport Spinner from 'app/js/views/v3/components/core/Spinner';\nimport EmptyPage from 'app/js/views/v3/components/pages/empty/EmptyPage';\nimport ErrorPage from 'app/js/views/v3/components/pages/empty/ErrorPage';\nimport useEffectOnce from 'app/js/views/v3/helpers/hooks/useEffectOnce';\n\ntype DeprecatedPluginsPageProps = {\n  serverEntityID: string;\n};\n\nfunction DeprecatedPluginsPage(props: DeprecatedPluginsPageProps) {\n  const { serverEntityID } = props;\n\n  const [deprecatedPluginsState, setDeprecatedPluginsState] = useState({\n    deprecatedPlugins: null,\n    isDeprecatedPluginsPending: true,\n    deprecatedPluginsError: false,\n  });\n\n  useEffectOnce(() => {\n    const appModel = resolve('appModel');\n    const server = appModel\n      .get('entities')\n      .get('servers')\n      .get(serverEntityID)\n      ?.get('model');\n    const deprecatedPlugins = new DeprecatedPluginListModel({}, { server });\n\n    deprecatedPlugins.fetch().then(\n      () => {\n        setDeprecatedPluginsState({\n          deprecatedPlugins,\n          isDeprecatedPluginsPending: false,\n          deprecatedPluginsError: false,\n        });\n      },\n      () => {\n        setDeprecatedPluginsState({\n          deprecatedPlugins: null,\n          isDeprecatedPluginsPending: false,\n          deprecatedPluginsError: true,\n        });\n      }\n    );\n  });\n\n  if (deprecatedPluginsState.isDeprecatedPluginsPending) {\n    return (\n      <EmptyPage>\n        <Spinner />\n      </EmptyPage>\n    );\n  }\n\n  if (deprecatedPluginsState.deprecatedPluginsError) {\n    return <ErrorPage title={t('Plugins are not available.')} />;\n  }\n\n  return (\n    <MarionetteComponent\n      view={DeprecatedPluginsView}\n      viewOptions={{\n        deprecatedPlugins: deprecatedPluginsState.deprecatedPlugins,\n      }}\n    />\n  );\n}\n\nexport default DeprecatedPluginsPage;\n","/* eslint-plugin-disable @typescript-eslint */\n\nimport { createSelector } from 'reselect';\nimport _ from 'underscore';\nimport createServerNowPlayingSessionsCountSelector from 'app/js/stores/selectors/server/createServerNowPlayingSessionsCountSelector';\nimport createServerSettingsSelector from 'app/js/stores/selectors/server/createServerSettingsSelector';\nimport createUnstableServerSelector from 'app/js/stores/selectors/server/createUnstableServerSelector';\nimport selectUser from 'app/js/stores/selectors/user/selectUser';\nimport serverSettingsSections from 'app/js/utils/constants/serverSettingsSections';\nimport getServerSettingsRoute from 'app/js/views/v3/helpers/routes/getServerSettingsRoute';\n\nfunction createAvailableGroupsSelector() {\n  return createSelector(createServerSettingsSelector(), (settings) => {\n    return settings.reduce((acc: any, setting: any) => {\n      if (setting.group && !acc.includes(setting.group) && !setting.hidden) {\n        acc.push(setting.group);\n      }\n\n      return acc;\n    }, []);\n  });\n}\n\nfunction evaluateIsVisible(isVisible: any, server: any, user: any) {\n  return (\n    isVisible === true || (_.isFunction(isVisible) && isVisible(server, user))\n  );\n}\n\nexport default function createVisibleSettingsSectionsSelector() {\n  return createSelector(\n    createUnstableServerSelector(),\n    createServerNowPlayingSessionsCountSelector(),\n    selectUser,\n    createAvailableGroupsSelector(),\n    (server, nowPlayingSessionsCount, user, availableGroups) => {\n      if (!server || server.isUnavailable) {\n        return [];\n      }\n\n      return serverSettingsSections.reduce((acc, section) => {\n        if (!evaluateIsVisible(section.isVisible, server, user)) {\n          return acc;\n        }\n\n        // @ts-expect-error ts-migrate(2349) FIXME: This expression is not callable.\n        const visibleItems = section.groups.reduce(\n          (groupAcc: any, group: any) => {\n            if (\n              evaluateIsVisible(group.isVisible, server, user) ||\n              (group.isVisible !== false && availableGroups.includes(group.key))\n            ) {\n              groupAcc.push({\n                key: group.key,\n                title: group.title(),\n                statusIndicator:\n                  group.createStatusIndicator &&\n                  group.createStatusIndicator(server, nowPlayingSessionsCount),\n                pageComponent: group.pageComponent,\n                paneComponent: group.paneComponent,\n                route: getServerSettingsRoute(section.key, group.key),\n              });\n            }\n\n            return groupAcc;\n          },\n          []\n        );\n\n        if (visibleItems.length > 0) {\n          acc.push({\n            // @ts-expect-error ts-migrate(2322) FIXME: Type 'string' is not assignable to type 'never'.\n            key: section.key,\n            // @ts-expect-error ts-migrate(2322) FIXME: Type 'any' is not assignable to type 'never'.\n            title: section.title(),\n            // @ts-expect-error ts-migrate(2322) FIXME: Type 'any' is not assignable to type 'never'.\n            groups: visibleItems,\n          });\n        }\n\n        return acc;\n      }, []);\n    }\n  );\n}\n","/* eslint-plugin-disable @typescript-eslint */\n\nimport { createSelector } from 'reselect';\nimport createUnstableServerSelector from 'app/js/stores/selectors/server/createUnstableServerSelector';\n\nexport default function createServerSettingsSelector() {\n  return createSelector(createUnstableServerSelector(), (server) =>\n    server ? server[__PLATFORM__].settings : []\n  );\n}\n","/* eslint-plugin-disable @typescript-eslint */\n\nimport _ from 'underscore';\nimport serverSettingsSections from 'app/js/utils/constants/serverSettingsSections';\n\nexport default function getServerSettingsMetricsProps(\n  settingsSection: any,\n  settingsGroup: any\n) {\n  const section = _.findWhere(serverSettingsSections, { key: settingsSection });\n  // @ts-expect-error ts-migrate(2532) FIXME: Object is possibly 'undefined'.\n  const group = _.findWhere(section.groups, { key: settingsGroup });\n  if ((group as any).metricsPage) {\n    return {\n      metricsPage: (group as any).metricsPage,\n      metricsPane: (group as any).metricsPane,\n    };\n  }\n  return {\n    // @ts-expect-error ts-migrate(2532) FIXME: Object is possibly 'undefined'.\n    metricsPage: section.metricsPage,\n    // @ts-expect-error ts-migrate(2532) FIXME: Object is possibly 'undefined'.\n    metricsPane: section.metricsPanePrefix + group.key,\n  };\n}\n","import Marionette from 'app/js/initializers/extensions/MarionetteExtension';\n// @ts-expect-error ts-migrate(2307) FIXME: Cannot find module 'app/templates/lists... Remove this comment to see the full error message\nimport tpl from 'app/templates/lists/settings/AgentListItem.tpl';\n\nconst AgentListItem = Marionette.ItemView.extend({\n  //\n  // Properties\n  tagName: 'li',\n  template: tpl,\n  //\n  // Bindings\n  bindings: {\n    a: {\n      modelAttribute: 'selected',\n      manual: true,\n      formatter: function (selected: any) {\n        (this as any).$el.toggleClass('active', !!selected);\n      },\n    },\n  },\n});\nexport default AgentListItem;\n","import BaseList from 'app/js/views/lists/BaseList';\nimport AgentListItem from 'app/js/views/lists/settings/AgentListItem';\n\nconst AgentList = BaseList.extend({\n  //\n  // Properties\n\n  tagName: 'ul',\n  className: 'agents-nav nav nav-pills nav-pills-sm',\n  itemView: AgentListItem,\n});\n\nexport default AgentList;\n","import BaseImage from 'app/js/views/images/BaseImage';\nimport BaseModal from 'app/js/views/modals/BaseModal';\n// @ts-expect-error ts-migrate(2307) FIXME: Cannot find module 'app/templates/modal... Remove this comment to see the full error message\nimport tpl from 'app/templates/modals/AgentInfoModal.tpl';\n\nconst AgentInfoModal = BaseModal.extend({\n  //\n  // Properties\n\n  name: 'agentInfoModal',\n  className: 'agent-info-modal modal fade',\n  template: tpl,\n\n  regions: {\n    icon: '.agent-icon-container',\n  },\n\n  //\n  // Control\n\n  serializeData: function () {\n    return {\n      agent: this.model.toJSON(),\n      attribution: this.model.get('attribution').get('content'),\n    };\n  },\n\n  //\n  // Listeners\n\n  onRender: function () {\n    // eslint-disable-next-line prefer-rest-params\n    BaseModal.prototype.onRender.apply(this, arguments);\n\n    this.icon.show(\n      new BaseImage({\n        model: this.model,\n        url: '/system/agents/attribution/image?identifier=' + this.model.id,\n        className: 'agent-icon',\n        width: 100,\n        height: 100,\n      })\n    );\n  },\n});\n\nexport default AgentInfoModal;\n","import _ from 'underscore';\nimport Marionette from 'app/js/initializers/extensions/MarionetteExtension';\nimport ServerSettingCollection from 'app/js/models/server/ServerSettingCollection';\nimport dispatcher from 'app/js/utils/dispatcher';\nimport AgentInfoModal from 'app/js/views/modals/AgentInfoModal';\nimport DeprecatedPluginSettingsModal from 'app/js/views/modals/DeprecatedPluginSettingsModal';\n// @ts-expect-error ts-migrate(2307) FIXME: Cannot find module 'app/templates/lists... Remove this comment to see the full error message\nimport tpl from 'app/templates/lists/settings/ContributorListItem.tpl';\n\nconst ContributorListItem = Marionette.ItemView.extend({\n  //\n  // Properties\n\n  tagName: 'li',\n  className: 'card card-sortable',\n  template: tpl,\n\n  events: {\n    'change input[type=checkbox]': 'onEnabledChange',\n    'click .settings-btn': 'onSettingsClick',\n    'click .info-btn': 'onInfoClick',\n  },\n\n  //\n  // Init\n\n  initialize: function () {\n    this.attribution = this.model.get('attribution');\n    this.attribution.fetch();\n  },\n\n  //\n  // Bindings\n\n  bindings: {\n    '.info-btn': {\n      model: 'attribution',\n      modelAttribute: 'content',\n      manual: true,\n      autohide: true,\n    },\n\n    '.settings-btn': {\n      modelAttribute: 'hasPrefs',\n      manual: true,\n      autohide: true,\n    },\n  },\n\n  //\n  // Listeners\n\n  onEnabledChange: function (event: any) {\n    this.model.set('enabled', event.target.checked);\n  },\n\n  onSettingsClick: function (event: any) {\n    event.preventDefault();\n\n    const settings = new ServerSettingCollection([], {\n      server: this.model.server,\n      url: '/:/plugins/' + this.model.id + '/prefs',\n    });\n\n    settings.fetch().done(\n      _.bind(function () {\n        dispatcher.trigger(\n          'show:modal',\n          new DeprecatedPluginSettingsModal({\n            // @ts-expect-error ts-migrate(2683) FIXME: 'this' implicitly has type 'any' because it does n... Remove this comment to see the full error message\n            model: this.model,\n            collection: settings,\n          })\n        );\n      }, this)\n    );\n  },\n\n  onInfoClick: function (event: any) {\n    event.preventDefault();\n\n    dispatcher.trigger('show:modal', new AgentInfoModal({ model: this.model }));\n  },\n});\n\nexport default ContributorListItem;\n","import Sortable from 'sortablejs';\nimport BaseList from 'app/js/views/lists/BaseList';\nimport ContributorListItem from 'app/js/views/lists/settings/ContributorListItem';\n\nconst ContributorList = BaseList.extend({\n  //\n  // Properties\n\n  tagName: 'ul',\n  className: 'list contributor-list',\n  itemView: ContributorListItem,\n\n  events: {\n    'change input[type=checkbox]': 'save',\n    update: 'save',\n  },\n\n  //\n  // Control\n\n  save: function () {\n    const contributors: any = [];\n\n    this.$(':checked').each(function () {\n      // @ts-expect-error ts-migrate(2683) FIXME: 'this' implicitly has type 'any' because it does n... Remove this comment to see the full error message\n      contributors.push(this.name);\n    });\n\n    this.trigger('save', contributors.join(','));\n  },\n\n  //\n  // Listeners\n\n  onRender: function () {\n    this.sortable = new Sortable(this.$el[0], {\n      draggable: '.card-sortable',\n      animation: 200,\n    });\n  },\n\n  onClose: function () {\n    this.sortable.destroy();\n  },\n});\n\nexport default ContributorList;\n","import $ from 'jquery';\nimport _ from 'underscore';\nimport Marionette from 'app/js/initializers/extensions/MarionetteExtension';\nimport AgentCollection from 'app/js/models/server/AgentCollection';\nimport * as agentIdentifiers from 'app/js/utils/constants/agentIdentifiers';\nimport {\n  ALBUM,\n  ARTIST,\n  getMetadataType,\n  MOVIE,\n  PHOTO,\n  SHOW,\n} from 'app/js/utils/types/metadataTypes';\nimport AgentList from 'app/js/views/lists/settings/AgentList';\nimport ContributorList from 'app/js/views/lists/settings/ContributorList';\n// @ts-expect-error ts-migrate(2307) FIXME: Cannot find module 'app/templates/setti... Remove this comment to see the full error message\nimport tpl from 'app/templates/settings/server/ServerSettingsAgentsPane.tpl';\n\nconst ServerSettingsAgentsPane = Marionette.Layout.extend({\n  //\n  // Properties\n\n  template: tpl,\n\n  ui: {\n    agentLabel: '.agent-label',\n    typeNavItems: '.agent-types-nav li',\n    agentNavItems: '.agents-nav li',\n  },\n\n  regions: {\n    agentsList: '.agents-list-container',\n    contributorsList: '.contributors-list-container',\n  },\n\n  events: {\n    'click .agent-types-nav a': 'onAgentTypeClick',\n    'click .agents-nav a': 'onAgentClick',\n  },\n\n  //\n  // Init\n\n  initialize: function () {\n    this.bindAllWhenRendered('onAgentsReset', 'onContributorsReset');\n\n    this.agentTypes = [];\n    this.agentTypes.push(getMetadataType(MOVIE));\n    this.agentTypes.push(getMetadataType(SHOW));\n    this.agentTypes.push(getMetadataType(ARTIST));\n    this.agentTypes.push(getMetadataType(ALBUM));\n    this.agentTypes.push(getMetadataType(PHOTO));\n\n    this.currentType = _.first(this.agentTypes);\n\n    this.populateAgents();\n  },\n\n  //\n  // Control\n\n  serializeData: function () {\n    return {\n      currentType: this.currentType,\n      agentTypes: this.agentTypes,\n    };\n  },\n\n  populateAgents: function () {\n    const agents = new AgentCollection([], {\n      server: this.model,\n      mediaTypeID: this.currentType.id,\n    });\n\n    agents.populate({ reset: true }).then(() => {\n      const filteredAgents = agents.filter(\n        (agent: any) =>\n          agent.get('identifier') !== agentIdentifiers.PLEXMUSIC &&\n          agent.get('identifier') !== agentIdentifiers.PLEXMOVIE &&\n          agent.get('identifier') !== agentIdentifiers.PLEXSERIES\n      );\n\n      this.agents = agents.clone(filteredAgents);\n\n      this.onAgentsReset();\n    });\n  },\n\n  selectAgent: function (agent: any) {\n    if (this.currentAgent) {\n      this.currentAgent.set('selected', false);\n    }\n\n    this.currentAgent = agent;\n    agent.set('selected', true);\n\n    this.ui.agentLabel.text(agent.get('name'));\n\n    this.additionalAgents = new AgentCollection([], {\n      server: this.model,\n      mediaTypeID: this.currentType.id,\n      relatedAgentID: agent.id,\n    });\n\n    this.contributors = new AgentCollection([], {\n      server: this.model,\n      mediaTypeID: this.currentType.id,\n      primaryAgentID: agent.id,\n    });\n\n    this.contributorsList.show(\n      new ContributorList({ collection: this.contributors })\n    );\n    this.listenTo(\n      this.contributorsList.currentView,\n      'save',\n      this.onContributorsSave\n    );\n\n    this.populateContributors();\n  },\n\n  populateContributors: function () {\n    const requests = [];\n\n    requests.push(this.additionalAgents.populate({ reset: true }));\n    requests.push(this.contributors.populate({ reset: true }));\n\n    // eslint-disable-next-line prefer-spread\n    const promise = $.when.apply($, requests);\n    promise.done(_.bind(this.onContributorsReset, this));\n  },\n\n  //\n  // Listeners\n\n  onAgentsReset: function () {\n    this.agentsList.show(new AgentList({ collection: this.agents }));\n\n    if (this.agents.length) {\n      const selectedAgent =\n        this.agents.findWhere({ selected: true }) || this.agents.first();\n\n      this.selectAgent(selectedAgent);\n    }\n  },\n\n  onContributorsReset: function () {\n    // We need to find where additional agents and contributors intersect.\n    // The primary agent should always be included as a contributor.\n\n    const filterByContributors = _.bind(function (additionalAgent: any) {\n      // @ts-expect-error ts-migrate(2683) FIXME: 'this' implicitly has type 'any' because it does n... Remove this comment to see the full error message\n      if (additionalAgent.id === this.currentAgent.id) {\n        additionalAgent.set('isPrimary', true);\n        return true;\n      }\n\n      // @ts-expect-error ts-migrate(2683) FIXME: 'this' implicitly has type 'any' because it does n... Remove this comment to see the full error message\n      return !!this.contributors.get(additionalAgent.id);\n    }, this);\n\n    this.contributors.reset(this.additionalAgents.filter(filterByContributors));\n  },\n\n  onAgentTypeClick: function (event: any) {\n    event.preventDefault();\n\n    const $target = $(event.currentTarget);\n    const type = $target.data('type');\n\n    this.currentType = getMetadataType(type);\n    this.populateAgents();\n\n    this.ui.typeNavItems.removeClass('active');\n    $target.parent('li').addClass('active');\n  },\n\n  onAgentClick: function (event: any) {\n    event.preventDefault();\n\n    const $target = $(event.target);\n    const id = $target.data('identifier');\n    const agent = this.agents.get(id);\n\n    if (agent) {\n      this.selectAgent(agent);\n    }\n  },\n\n  onContributorsSave: function (order: any) {\n    this.currentAgent.url =\n      'system/agents/' +\n      this.currentAgent.id +\n      '/config/' +\n      this.currentType.id;\n\n    const promise = this.currentAgent.save({ order: order });\n\n    promise.done(\n      _.bind(function () {\n        // We don't want to update the list immediately, but we want to make\n        // sure the collections are up-to-date if the user navigates away\n        // and back to this agent.\n        // @ts-expect-error ts-migrate(2683) FIXME: 'this' implicitly has type 'any' because it does n... Remove this comment to see the full error message\n        this.additionalAgents.fetch({ silent: true });\n        // @ts-expect-error ts-migrate(2683) FIXME: 'this' implicitly has type 'any' because it does n... Remove this comment to see the full error message\n        this.contributors.fetch({ silent: true });\n      }, this)\n    );\n  },\n});\n\nexport default ServerSettingsAgentsPane;\n","import _ from 'underscore';\nimport Marionette from 'app/js/initializers/extensions/MarionetteExtension';\nimport t from 'app/js/utils/t';\n// @ts-expect-error ts-migrate(2307) FIXME: Cannot find module 'app/templates/setti... Remove this comment to see the full error message\nimport tpl from 'app/templates/settings/server/ServerSettingsPane.tpl';\n\nconst ServerSettingsPane = Marionette.Layout.extend({\n  //\n  // Properties\n\n  className: 'form-group',\n  template: tpl,\n\n  isDisabled: true,\n  isActive: false,\n\n  ui: {\n    submitBtn: '.submit-btn',\n    message: '.form-message',\n  },\n\n  events: {\n    'change #server-settings-form input[name]': 'onInputChange',\n    'input #server-settings-form input[type=text]': 'onInputChange',\n    'change #server-settings-form select[name]': 'onInputChange',\n    'submit #server-settings-form': 'onSubmit',\n  },\n\n  //\n  // Init\n\n  initialize: function (options: any) {\n    this.changes = options.changes;\n  },\n\n  //\n  // Control\n\n  serializeData: function () {\n    return _.where(this.collection.toJSON(), {\n      group: this.options.group,\n      hidden: false,\n    });\n  },\n\n  enable: function () {\n    this.isDisabled = false;\n    this.ui.submitBtn.removeClass('disabled');\n    this.ui.message.text('');\n    this.ui.message.removeClass('has-error');\n  },\n\n  updateModel: function (key: any, value: any) {\n    const setting = this.collection.get(key);\n    if (setting) {\n      return setting.set('value', value);\n    }\n  },\n\n  //\n  // Listeners\n\n  onRender: function () {\n    if (!_.isEmpty(this.changes)) {\n      this.enable();\n    }\n  },\n\n  onInputChange: function (event: any) {\n    const target = event.currentTarget;\n    const key = target.name;\n    let change = target.value;\n    let value = target.value;\n\n    // Extensions (LastPass) can trigger input changes we should ignore.\n    if (!key) {\n      return;\n    }\n\n    if (target.type === 'checkbox') {\n      value = target.checked;\n\n      if (!value) {\n        change = '0';\n      }\n    }\n\n    // Only recognize the change if we found a corresponding model, just as\n    // an extra safeguard against extensions.\n    const setting = this.updateModel(key, value);\n    if (setting) {\n      this.changes[target.name] = change;\n      this.enable();\n    }\n  },\n\n  onSubmit: function (event: any) {\n    event.preventDefault();\n\n    this.trigger('save');\n  },\n\n  onBeforeSave: function () {\n    this.isActive = true;\n    this.ui.submitBtn.addClass('active');\n  },\n\n  onAfterSave: function (isSuccess: any) {\n    this.isActive = false;\n    this.ui.submitBtn.removeClass('active');\n\n    if (isSuccess) {\n      // Disable the form after a successful save until further changes.\n      this.isDisabled = true;\n      this.ui.submitBtn.addClass('disabled');\n      this.ui.message.removeClass('has-error');\n      this.ui.message.text(t('Your changes have been saved.'));\n    } else {\n      this.ui.message.addClass('has-error');\n      this.ui.message.text(t('Your changes could not be saved.'));\n    }\n  },\n});\n\nexport default ServerSettingsPane;\n","import _ from 'underscore';\nimport ServerSettingsPane from 'app/js/views/settings/server/ServerSettingsPane';\n\nconst ServerSettingsChannelsPane = ServerSettingsPane.extend({\n  //\n  // Properties\n\n  prefix: 'channel.',\n\n  //\n  // Control\n\n  serializeData: function () {\n    const settings = ServerSettingsPane.prototype.serializeData.apply(\n      this,\n      // eslint-disable-next-line prefer-rest-params\n      arguments\n    );\n    const channelSettings = this.options.channelSettings.toJSON();\n\n    _.each(\n      channelSettings,\n      function (channelSetting) {\n        // @ts-expect-error ts-migrate(2683) FIXME: 'this' implicitly has type 'any' because it does n... Remove this comment to see the full error message\n        channelSetting.id = this.prefix + channelSetting.id;\n      },\n      this\n    );\n\n    // eslint-disable-next-line prefer-spread\n    settings.unshift.apply(settings, channelSettings);\n\n    return settings;\n  },\n\n  updateModel: function (key: any, value: any) {\n    // If the setting is found in the main collection, update that model.\n    const setting = ServerSettingsPane.prototype.updateModel.apply(\n      this,\n      // eslint-disable-next-line prefer-rest-params\n      arguments\n    );\n    if (setting) {\n      return setting;\n    }\n\n    // Otherwise, look for one of our special settings.\n    const unprefixedKey = key.replace(this.prefix, '');\n    const channelSetting = this.options.channelSettings.get(unprefixedKey);\n    if (channelSetting) {\n      return channelSetting.set('value', value);\n    }\n  },\n});\n\nexport default ServerSettingsChannelsPane;\n","/* eslint-plugin-disable @typescript-eslint */\n\nimport { createSelector } from 'reselect';\nimport createUnstableServerSelector from 'app/js/stores/selectors/server/createUnstableServerSelector';\n\nfunction createServerCloudAccountSelector() {\n  return createSelector(createUnstableServerSelector(), (server) =>\n    server ? server[__PLATFORM__].cloudAccount : null\n  );\n}\n\nexport default createServerCloudAccountSelector;\n","// extracted by mini-css-extract-plugin\nexport default {\"avatar\":\"LjS83\",\"icon\":\"ArmM_\"};","/* eslint-plugin-disable @typescript-eslint */\n\nimport React from 'react';\nimport AvatarImg from 'app/js/views/v3/components/core/images/AvatarImg';\nimport IconAlert from 'app/glyphs/alert-560.svg';\nimport styles from './ServerAvatar.css';\n\nconst AVATAR_SIZE = 60;\n\ntype ServerAvatarProps = {\n  serverEntityID: string;\n  avatarUrl?: string;\n};\n\nfunction ServerAvatar(props: ServerAvatarProps) {\n  const { serverEntityID, avatarUrl } = props;\n\n  return (\n    <div className={styles.avatar}>\n      {!avatarUrl ? <IconAlert className={styles.icon} /> : null}\n\n      <AvatarImg\n        height={AVATAR_SIZE}\n        serverEntityID={serverEntityID}\n        url={avatarUrl}\n        width={AVATAR_SIZE}\n      />\n    </div>\n  );\n}\n\nexport default ServerAvatar;\n","/* eslint-plugin-disable @typescript-eslint */\n\nimport { connect } from 'react-redux';\nimport { createSelector } from 'reselect';\nimport selectUser from 'app/js/stores/selectors/user/selectUser';\nimport ServerAvatar from './ServerAvatar';\n\nconst mapStateToProps = createSelector(selectUser, (user) => {\n  const avatarUrl = user.isSignedIn ? user.thumb : null;\n\n  return {\n    avatarUrl,\n  };\n});\n\nexport default connect(mapStateToProps)(ServerAvatar);\n","/* eslint-plugin-disable @typescript-eslint */\n\nimport React from 'react';\nimport t from 'app/js/utils/t';\nimport SpinnerButton from 'app/js/views/v3/components/core/buttons/SpinnerButton';\nimport { DEFAULT } from 'app/js/views/v3/helpers/props/kinds';\nimport { MEDIUM } from 'app/js/views/v3/helpers/props/sizes';\nimport ClaimedServerAvatarConnector from './ClaimedServerAvatarConnector';\nimport styles from './ClaimedServer.css';\n\ntype ClaimedServerProps = {\n  isSigningOut: boolean;\n  username: string;\n  serverEntityID: string;\n  onSignOutPress: (...args: any[]) => any;\n};\n\nfunction ClaimedServer(props: ClaimedServerProps) {\n  const { isSigningOut, username, serverEntityID, onSignOutPress } = props;\n\n  return (\n    <div className={styles.container}>\n      <ClaimedServerAvatarConnector serverEntityID={serverEntityID} />\n\n      <div className={styles.message}>\n        <div className={styles.messageHeader}>{t('Server signed in as')}</div>\n        <div className={styles.messageDetails}>{username}</div>\n      </div>\n\n      <SpinnerButton\n        className={styles.button}\n        isSpinning={isSigningOut}\n        kind={DEFAULT}\n        size={MEDIUM}\n        onPress={onSignOutPress}\n      >\n        {t('Sign Out')}\n      </SpinnerButton>\n    </div>\n  );\n}\n\nexport default ClaimedServer;\n","// extracted by mini-css-extract-plugin\nexport default {\"container\":\"ciQ0f\",\"message\":\"BFpJu\",\"messageHeader\":\"k7Xkr\",\"messageDetails\":\"AHxFa\",\"button\":\"QjFZC mfBoX r2dcz x5jRQ\"};","/* eslint-plugin-disable @typescript-eslint */\n\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { createSelector } from 'reselect';\nimport { signOutServer } from 'app/js/stores/actions/server/claimServerActions';\nimport createServerCloudAccountSelector from 'app/js/stores/selectors/server/createServerCloudAccountSelector';\nimport selectAuthCodeExchange from 'app/js/stores/selectors/user/selectAuthCodeExchange';\nimport ClaimedServer from './ClaimedServer';\n\nfunction createServerCloudAccountUsernameSelector() {\n  return createSelector(\n    createServerCloudAccountSelector(),\n    (serverCloudAccount) =>\n      (serverCloudAccount && serverCloudAccount.username) || null\n  );\n}\n\nconst selectIsBusy = createSelector(\n  selectAuthCodeExchange,\n  (authCodeExchangeProps) => authCodeExchangeProps.isBusy\n);\n\nfunction createMapStateToProps() {\n  return createSelector(\n    selectIsBusy,\n    createServerCloudAccountUsernameSelector(),\n    (isSigningOut, serverCloudAccountUsername) => {\n      return {\n        isSigningOut,\n        username: serverCloudAccountUsername,\n      };\n    }\n  );\n}\n\nconst mapDispatchToProps = {\n  dispatchSignOutServer: signOutServer,\n};\n\ntype ClaimedServerConnectorProps = {\n  serverEntityID: string;\n  dispatchSignOutServer: (...args: any[]) => any;\n};\n\nclass ClaimedServerConnector extends Component<ClaimedServerConnectorProps> {\n  //\n  // Listeners\n\n  // @ts-expect-error ts-migrate(6133) FIXME: 'event' is declared but its value is never read.\n  onSignOutPress = (event: any) => {\n    this.props.dispatchSignOutServer({\n      serverEntityID: this.props.serverEntityID,\n    });\n  };\n\n  //\n  // Render\n\n  render() {\n    const { dispatchSignOutServer, ...otherProps } = this.props;\n\n    return (\n      // @ts-expect-error ts-migrate(2739) FIXME: Type '{ onSignOutPress: (event: any) => void; serv... Remove this comment to see the full error message\n      <ClaimedServer {...otherProps} onSignOutPress={this.onSignOutPress} />\n    );\n  }\n}\n\nexport default connect(\n  createMapStateToProps,\n  mapDispatchToProps\n)(ClaimedServerConnector);\n","/* eslint-plugin-disable @typescript-eslint */\n\nimport React from 'react';\nimport t from 'app/js/utils/t';\nimport SpinnerButton from 'app/js/views/v3/components/core/buttons/SpinnerButton';\nimport { DEFAULT } from 'app/js/views/v3/helpers/props/kinds';\nimport { MEDIUM } from 'app/js/views/v3/helpers/props/sizes';\nimport styles from './ClaimServerButton.css';\n\nfunction ClaimServerButton(props: any) {\n  return (\n    <SpinnerButton\n      className={styles.button}\n      kind={DEFAULT}\n      size={MEDIUM}\n      target=\"_blank\"\n      {...props}\n    >\n      {t('Claim Server')}\n    </SpinnerButton>\n  );\n}\n\nexport default ClaimServerButton;\n","// extracted by mini-css-extract-plugin\nexport default {\"button\":\"f9Snx mfBoX r2dcz x5jRQ\"};","/* eslint-plugin-disable @typescript-eslint */\n\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { createSelector } from 'reselect';\nimport { claimServer } from 'app/js/stores/actions/server/claimServerActions';\nimport createUserAttributeSelector from 'app/js/stores/selectors/user/createUserAttributeSelector';\nimport ClaimServerButton from './ClaimServerButton';\n\nconst mapStateToProps = createSelector(\n  createUserAttributeSelector('authToken'),\n  (authToken) => {\n    return {\n      authToken,\n    };\n  }\n);\n\nconst mapDispatchToProps = {\n  dispatchClaimServer: claimServer,\n};\n\ntype ClaimServerSignedInButtonConnectorProps = {\n  serverEntityID: string;\n  isBusy: boolean;\n  isDisabled: boolean;\n  authToken: string;\n  dispatchClaimServer: (...args: any[]) => any;\n};\n\nclass ClaimServerSignedInButtonConnector extends Component<ClaimServerSignedInButtonConnectorProps> {\n  //\n  // Listeners\n\n  onClaimServerPress = () => {\n    this.props.dispatchClaimServer({\n      serverEntityID: this.props.serverEntityID,\n      authToken: this.props.authToken,\n    });\n  };\n\n  //\n  // Render\n\n  render() {\n    const { isBusy, isDisabled } = this.props;\n\n    return (\n      <ClaimServerButton\n        isDisabled={isDisabled}\n        isSpinning={isBusy}\n        onPress={this.onClaimServerPress}\n      />\n    );\n  }\n}\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n  // @ts-expect-error ts-migrate(2345) FIXME: Argument of type 'typeof ClaimServerSignedInButton... Remove this comment to see the full error message\n)(ClaimServerSignedInButtonConnector);\n","/* eslint-plugin-disable @typescript-eslint */\n\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport {\n  createPIN,\n  signInThenClaimServer,\n} from 'app/js/stores/actions/server/claimServerActions';\nimport { readStoredPIN } from 'app/js/stores/actions/user/authCodeExchangeActions';\nimport selectAuthCodeExchange from 'app/js/stores/selectors/user/selectAuthCodeExchange';\nimport RedirectToConnector from 'app/js/views/v3/components/pages/serverSettings/RedirectToConnector';\nimport ServiceAuthUrlConnector from 'app/js/views/v3/components/pages/serverSettings/ServiceAuthUrlConnector';\nimport ClaimServerButton from './ClaimServerButton';\n\nconst mapDispatchToProps = {\n  dispatchReadStoredPIN: readStoredPIN,\n  dispatchCreatePIN: createPIN,\n  dispatchSignInThenClaimServer: signInThenClaimServer,\n};\n\ntype ClaimServerSignedOutLaunchButtonConnectorProps = {\n  serverEntityID: string;\n  isBusy: boolean;\n  isDisabled: boolean;\n  pinID?: number;\n  code?: string;\n  authToken?: string;\n  dispatchReadStoredPIN: (...args: any[]) => any;\n  dispatchCreatePIN: (...args: any[]) => any;\n  dispatchSignInThenClaimServer: (...args: any[]) => any;\n};\n\nclass ClaimServerSignedOutLaunchButtonConnector extends Component<ClaimServerSignedOutLaunchButtonConnectorProps> {\n  //\n  // Lifecycle\n\n  componentDidMount() {\n    this.props.dispatchReadStoredPIN({ shouldCreatePIN: false });\n  }\n\n  componentDidUpdate(\n    prevProps: ClaimServerSignedOutLaunchButtonConnectorProps\n  ) {\n    const didReceiveAuthToken =\n      this.props.authToken !== prevProps.authToken && this.props.authToken;\n\n    if (didReceiveAuthToken) {\n      this.props.dispatchSignInThenClaimServer({\n        serverEntityID: this.props.serverEntityID,\n        authToken: this.props.authToken,\n      });\n    }\n  }\n\n  //\n  // Listeners\n\n  onClaimServerPress = () => {\n    this.props.dispatchCreatePIN();\n  };\n\n  //\n  // Render\n\n  render() {\n    const { isBusy, isDisabled, pinID, code } = this.props;\n\n    if (pinID) {\n      return (\n        <ServiceAuthUrlConnector\n          code={code}\n          component={RedirectToConnector}\n          pinID={pinID}\n        />\n      );\n    }\n\n    return (\n      <ClaimServerButton\n        isDisabled={isDisabled}\n        isSpinning={isBusy}\n        onPress={this.onClaimServerPress}\n      />\n    );\n  }\n}\n\nexport default connect(\n  selectAuthCodeExchange,\n  mapDispatchToProps\n)(ClaimServerSignedOutLaunchButtonConnector);\n","/* eslint-plugin-disable @typescript-eslint */\n\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { signInThenClaimServer } from 'app/js/stores/actions/server/claimServerActions';\nimport {\n  beginPolling,\n  preloadPIN,\n  stopPolling,\n} from 'app/js/stores/actions/user/authCodeExchangeActions';\nimport selectAuthCodeExchange from 'app/js/stores/selectors/user/selectAuthCodeExchange';\nimport t from 'app/js/utils/t';\nimport TagInjector from 'app/js/views/v3/components/core/TagInjector';\nimport Link from 'app/js/views/v3/components/core/buttons/Link';\nimport * as kinds from 'app/js/views/v3/helpers/props/kinds';\nimport ClaimServerButton from './ClaimServerButton';\nimport ServiceAuthUrlConnector from './ServiceAuthUrlConnector';\n\nconst mapDispatchToProps = {\n  dispatchPreloadPIN: preloadPIN,\n  dispatchBeginPolling: beginPolling,\n  dispatchStopPolling: stopPolling,\n  dispatchSignInThenClaimServer: signInThenClaimServer,\n};\n\ntype ClaimServerSignedOutPollButtonConnectorProps = {\n  serverEntityID: string;\n  isBusy: boolean;\n  isDisabled: boolean;\n  pinID?: number;\n  code?: string;\n  authToken?: string;\n  dispatchPreloadPIN: (...args: any[]) => any;\n  dispatchBeginPolling: (...args: any[]) => any;\n  dispatchStopPolling: (...args: any[]) => any;\n  dispatchSignInThenClaimServer: (...args: any[]) => any;\n};\n\nclass ClaimServerSignedOutPollButtonConnector extends Component<ClaimServerSignedOutPollButtonConnectorProps> {\n  //\n  // Lifecycle\n\n  componentDidMount() {\n    this.props.dispatchPreloadPIN();\n  }\n\n  componentDidUpdate(prevProps: ClaimServerSignedOutPollButtonConnectorProps) {\n    const didReceiveAuthToken =\n      this.props.authToken !== prevProps.authToken && this.props.authToken;\n\n    if (didReceiveAuthToken) {\n      this.props.dispatchSignInThenClaimServer({\n        serverEntityID: this.props.serverEntityID,\n        authToken: this.props.authToken,\n      });\n    }\n  }\n\n  componentWillUnmount() {\n    this.props.dispatchStopPolling();\n  }\n\n  //\n  // Listeners\n\n  onClaimServerPress = () => {\n    this.props.dispatchBeginPolling({ pinID: this.props.pinID });\n  };\n\n  onStillTherePress = () => {\n    this.props.dispatchPreloadPIN();\n  };\n\n  //\n  // Render\n\n  render() {\n    const { code, pinID, isBusy, isDisabled } = this.props;\n\n    const showTimedOut = !(isBusy || this.props.code);\n\n    if (showTimedOut) {\n      return (\n        <TagInjector\n          message={t(\n            'Server claiming timed out. {openLink}Try again?{closeLink}'\n          )}\n          tags={[\n            {\n              open: 'openLink',\n              close: 'closeLink',\n              component: Link,\n              kind: kinds.PRIMARY,\n              onPress: this.onStillTherePress,\n            },\n          ]}\n        />\n      );\n    }\n\n    return (\n      <ServiceAuthUrlConnector\n        code={code}\n        component={ClaimServerButton}\n        isDisabled={isDisabled || !pinID}\n        isSpinning={isBusy}\n        pinID={pinID}\n        onPress={this.onClaimServerPress}\n      />\n    );\n  }\n}\n\nexport default connect(\n  selectAuthCodeExchange,\n  mapDispatchToProps\n)(ClaimServerSignedOutPollButtonConnector);\n","// extracted by mini-css-extract-plugin\nexport default {\"container\":\"eZ_TB\",\"message\":\"v3_D2\",\"messageHeader\":\"f3ju8\",\"messageDetails\":\"fgsXs\"};","/* eslint-plugin-disable @typescript-eslint */\n\nimport React from 'react';\nimport t from 'app/js/utils/t';\nimport ServerAvatar from './ServerAvatar';\nimport styles from './UnclaimedServer.css';\n\ntype UnclaimedServerProps = {\n  serverEntityID: string;\n  isBusy: boolean;\n  isAnonymousUser: boolean;\n  isUserRestricted: boolean;\n  ClaimServerButtonConnectorComponent: React.ReactElement;\n};\n\nfunction UnclaimedServer(props: UnclaimedServerProps) {\n  const {\n    serverEntityID,\n    isBusy,\n    isAnonymousUser,\n    isUserRestricted,\n    ClaimServerButtonConnectorComponent,\n  } = props;\n\n  return (\n    <div className={styles.container}>\n      <ServerAvatar serverEntityID={serverEntityID} />\n\n      {isAnonymousUser ? (\n        <div className={styles.message}>\n          <div className={styles.messageHeader}>\n            {t('This server is unclaimed and not secure')}\n          </div>\n          <div className={styles.messageDetails}>\n            {t('You need to sign in to claim this server.')}\n          </div>\n        </div>\n      ) : null}\n\n      {isUserRestricted ? (\n        <div className={styles.message}>\n          <div className={styles.messageHeader}>\n            {t('This server is unclaimed and not secure')}\n          </div>\n          <div className={styles.messageDetails}>\n            {t('You are signed in as a managed user.')}\n          </div>\n          <div className={styles.messageDetails}>\n            {t('Switch to a full user account to claim this server.')}\n          </div>\n        </div>\n      ) : null}\n\n      {!isAnonymousUser && !isUserRestricted ? (\n        <div className={styles.message}>\n          <div className={styles.messageHeader}>\n            {t('This server is unclaimed and not secure')}\n          </div>\n          <div className={styles.messageDetails}>\n            {t(\n              'Claiming this server will associate it with your Plex account. This helps your devices find each other and helps keep your media safe.'\n            )}\n          </div>\n        </div>\n      ) : null}\n\n      {/* @ts-expect-error ts-migrate(2604) FIXME: JSX element type 'ClaimServerButtonConnectorCompon... Remove this comment to see the full error message */}\n      <ClaimServerButtonConnectorComponent\n        isBusy={isBusy}\n        isDisabled={isAnonymousUser || isUserRestricted}\n        serverEntityID={serverEntityID}\n      />\n    </div>\n  );\n}\n\nexport default UnclaimedServer;\n","/* eslint-plugin-disable @typescript-eslint */\n\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { createSelector } from 'reselect';\nimport { claimServer } from 'app/js/stores/actions/server/claimServerActions';\nimport createUserAttributeSelector from 'app/js/stores/selectors/user/createUserAttributeSelector';\nimport selectAuthCodeExchange from 'app/js/stores/selectors/user/selectAuthCodeExchange';\nimport selectIsAnonymousUser from 'app/js/stores/selectors/user/selectIsAnonymousUser';\nimport shouldClientPoll from 'app/js/utils/shouldClientPoll';\nimport ClaimServerSignedInButtonConnector from './ClaimServerSignedInButtonConnector';\nimport ClaimServerSignedOutLaunchButtonConnector from './ClaimServerSignedOutLaunchButtonConnector';\nimport ClaimServerSignedOutPollButtonConnector from './ClaimServerSignedOutPollButtonConnector';\nimport UnclaimedServer from './UnclaimedServer';\n\nconst SIGNED_IN_BUTTON = 'SIGNED_IN_BUTTON';\nconst SIGNED_OUT_POLL_BUTTON = 'SIGNED_OUT_POLL_BUTTON';\nconst SIGNED_OUT_LAUNCH_BUTTON = 'SIGNED_OUT_LAUNCH_BUTTON';\n\nfunction createMapStateToProps() {\n  return createSelector(\n    selectAuthCodeExchange,\n    selectIsAnonymousUser,\n    createUserAttributeSelector('isSignedIn'),\n    createUserAttributeSelector('restricted'),\n    (\n      authCodeExchangeProps,\n      isAnonymousUser,\n      isUserSignedIn,\n      isUserRestricted\n    ) => {\n      let componentType;\n      if (isUserSignedIn) {\n        componentType = SIGNED_IN_BUTTON;\n      } else if (shouldClientPoll()) {\n        componentType = SIGNED_OUT_POLL_BUTTON;\n      } else {\n        componentType = SIGNED_OUT_LAUNCH_BUTTON;\n      }\n\n      return {\n        componentType,\n        isUserRestricted: !!isUserRestricted,\n        isAnonymousUser,\n        ...authCodeExchangeProps,\n      };\n    }\n  );\n}\n\nconst mapDispatchToProps = {\n  dispatchClaimServer: claimServer,\n};\n\nconst claimComponents = {\n  [SIGNED_IN_BUTTON]: ClaimServerSignedInButtonConnector,\n  [SIGNED_OUT_POLL_BUTTON]: ClaimServerSignedOutPollButtonConnector,\n  [SIGNED_OUT_LAUNCH_BUTTON]: ClaimServerSignedOutLaunchButtonConnector,\n};\n\ntype UnclaimedServerConnectorProps = {\n  serverEntityID: string;\n  componentType: any; // TODO: PropTypes.oneOf(Object.keys(claimComponents))\n  isBusy: boolean;\n  isAnonymousUser: boolean;\n  isUserRestricted: boolean;\n  authToken?: string;\n};\n\nclass UnclaimedServerConnector extends Component<UnclaimedServerConnectorProps> {\n  //\n  // Render\n\n  render() {\n    const {\n      serverEntityID,\n      componentType,\n      isBusy,\n      isAnonymousUser,\n      isUserRestricted,\n    } = this.props;\n\n    return (\n      <UnclaimedServer\n        // @ts-expect-error ts-migrate(7053) FIXME: Element implicitly has an 'any' type because expre... Remove this comment to see the full error message\n        ClaimServerButtonConnectorComponent={claimComponents[componentType]}\n        isAnonymousUser={isAnonymousUser}\n        isBusy={isBusy}\n        isUserRestricted={isUserRestricted}\n        serverEntityID={serverEntityID}\n      />\n    );\n  }\n}\n\nexport default connect(\n  createMapStateToProps,\n  mapDispatchToProps\n)(UnclaimedServerConnector);\n","/* eslint-plugin-disable @typescript-eslint */\n\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport { createSelector } from 'reselect';\nimport createIsServerClaimedSelector from 'app/js/stores/selectors/server/createIsServerClaimedSelector';\nimport ClaimedServerConnector from './ClaimedServerConnector';\nimport UnclaimedServerConnector from './UnclaimedServerConnector';\n\nfunction createMapStateToProps() {\n  return createSelector(createIsServerClaimedSelector(), (isServerClaimed) => {\n    return {\n      isServerClaimed,\n    };\n  });\n}\n\ntype ClaimServerConnectorProps = {\n  isServerClaimed: boolean;\n};\n\nfunction ClaimServerConnector(props: ClaimServerConnectorProps) {\n  const { isServerClaimed, ...otherProps } = props;\n\n  if (isServerClaimed) {\n    return <ClaimedServerConnector {...otherProps} />;\n  } else {\n    // @ts-expect-error ts-migrate(2739) FIXME: Type '{}' is missing the following properties from... Remove this comment to see the full error message\n    return <UnclaimedServerConnector {...otherProps} />;\n  }\n}\n\nexport default connect(createMapStateToProps)(ClaimServerConnector);\n","/* eslint-plugin-disable @typescript-eslint */\n\nimport { createSelector } from 'reselect';\nimport createServerCloudAccountSelector from 'app/js/stores/selectors/server/createServerCloudAccountSelector';\nimport createUnstableServerSelector from 'app/js/stores/selectors/server/createUnstableServerSelector';\n\nfunction createIsServerClaimedSelector() {\n  return createSelector(\n    createUnstableServerSelector(),\n    createServerCloudAccountSelector(),\n    (server, serverCloudAccount) =>\n      !!(\n        // After claiming a server, the local server model will consider itself\n        // claimed, but its serverCloudAccount will not be marked as signed-in,\n        // and its connections cannot be relied upon until it appears in the\n        // plex.tv resources response.\n        (\n          server &&\n          server.isClaimed &&\n          serverCloudAccount &&\n          serverCloudAccount.signedIn\n        )\n      )\n  );\n}\n\nexport default createIsServerClaimedSelector;\n","/* eslint-plugin-disable @typescript-eslint */\n\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { resolve } from 'app/js/adapters/adapters';\nimport AbstractReactView from 'app/js/views/AbstractReactView';\nimport ClaimServerConnector from 'app/js/views/v3/components/pages/serverSettings/ClaimServerConnector';\n\nconst ServerSettingsClaimViewReact = AbstractReactView.extend({\n  //\n  // Properties\n\n  template: () => '',\n\n  //\n  // Control\n\n  mountReact() {\n    const appStore = resolve('appStore');\n\n    const serverEntityID = this.model.entityID();\n\n    ReactDOM.render(\n      <Provider store={appStore}>\n        <ClaimServerConnector serverEntityID={serverEntityID} />\n      </Provider>,\n      this.el\n    );\n  },\n});\n\nexport default ServerSettingsClaimViewReact;\n","/* eslint-plugin-disable @typescript-eslint */\n\nimport _ from 'underscore';\nimport BaseModal from 'app/js/views/modals/BaseModal';\n// @ts-expect-error ts-migrate(2307) FIXME: Cannot find module 'app/templates/modal... Remove this comment to see the full error message\nimport tpl from 'app/templates/modals/ReleaseNotesModal.tpl';\n\nfunction splitList(list: any) {\n  if (!list) {\n    return [];\n  }\n\n  return list.split('\\n');\n}\n\nconst ReleaseNotesModal = BaseModal.extend({\n  //\n  // Properties\n\n  name: 'releaseNotesModal',\n  template: tpl,\n\n  //\n  // Control\n\n  serializeData: function () {\n    const data = this.model.toJSON();\n    data.escapedVersion = _.escape(data.version.replace(/-.*/gi, ''));\n    data.added = splitList(data.added);\n    data.fixed = splitList(data.fixed);\n\n    return data;\n  },\n});\n\nexport default ReleaseNotesModal;\n","import $ from 'jquery';\nimport _ from 'underscore';\nimport * as adapters from 'app/js/adapters/adapters';\nimport Marionette from 'app/js/initializers/extensions/MarionetteExtension';\nimport {\n  checkForServerUpdate,\n  dismissServerUpdate,\n  downloadServerUpdate,\n  fetchServerUpdateStatus,\n  installServerUpdate,\n} from 'app/js/stores/actions/serverUpdateActions';\nimport * as serverUpdateStates from 'app/js/utils/constants/serverUpdateStates';\nimport dispatcher from 'app/js/utils/dispatcher';\nimport shortVersion from 'app/js/utils/string/shortVersion';\nimport t from 'app/js/utils/t';\nimport ReleaseNotesModal from 'app/js/views/modals/ReleaseNotesModal';\n// @ts-expect-error ts-migrate(2307) FIXME: Cannot find module 'app/templates/setti... Remove this comment to see the full error message\nimport tpl from 'app/templates/settings/server/ServerSettingsUpdateView.tpl';\n\nconst viewStates = {\n  ...serverUpdateStates,\n  CHECKING: 'checking',\n};\nconst ServerSettingsUpdateView = Marionette.ItemView.extend({\n  //\n  // Properties\n  tagName: 'span',\n  className: 'check-for-updates-container',\n  template: tpl,\n  ui: {\n    checkForUpdatesBtn: '.check-for-updates-btn',\n    downloadUpdatesContainer: '.downloading-updates-container',\n    downloadProgressContainer: '.downloading-progress-container',\n    downloadProgressLabel: '.downloading-progress-label',\n    updateProgressLabel: '.downloading-updates-label',\n    updateErrorMessage: '.update-error-message',\n    installManualLink: '.install-manual-link',\n  },\n  modelEvents: {\n    'change:isChecking': 'onIsCheckingChange',\n    'change:state': 'onStateChange',\n    'change:progress': 'onProgressChange',\n  },\n  events: {\n    'click .check-for-updates-btn': 'onCheckForUpdatesClick',\n    'click .available-updates-btn': 'onDownloadUpdatesClick',\n    'click .install-updates-btn': 'onInstallUpdatesClick',\n    'click .install-manual-link': 'onInstallManualClick',\n    'click .release-notes-btn': 'onInfoClick',\n  },\n  //\n  // Initialize\n  initialize: function () {\n    adapters.resolve('appStore').dispatch(\n      fetchServerUpdateStatus({\n        serverEntityID: this.model.server.entityID(),\n      })\n    );\n  },\n  //\n  // Control\n  serializeData: function () {\n    return {\n      canCheckForUpdate: this.canCheckForUpdate(this.model),\n    };\n  },\n  checkForUpdates: function (options = {}) {\n    adapters.resolve('appStore').dispatch(\n      checkForServerUpdate({\n        serverEntityID: this.model.server.entityID(),\n        download: (options as any).download,\n        initialState: (options as any).initialState,\n      })\n    );\n  },\n  dismissUpdates: function () {\n    adapters.resolve('appStore').dispatch(\n      dismissServerUpdate({\n        serverEntityID: this.model.server.entityID(),\n        version: shortVersion(this.model.get('version')),\n      })\n    );\n  },\n  downloadUpdates: function () {\n    adapters\n      .resolve('appStore')\n      .dispatch(\n        downloadServerUpdate({ serverEntityID: this.model.server.entityID() })\n      );\n  },\n  installUpdates: function () {\n    adapters\n      .resolve('appStore')\n      .dispatch(\n        installServerUpdate({ serverEntityID: this.model.server.entityID() })\n      );\n  },\n  waitForInstall: function () {\n    this.onWaitingForInstallCheck();\n    // When the server announces it's going to restart, we need to be\n    // notified when it becomes available again.\n    this.listenTo(\n      this.model.server,\n      'change:isConnected',\n      this.onServerConnectedChange\n    );\n  },\n  setCurrentViewState: function (viewState: any) {\n    this.$el.removeClass(this.currentViewState);\n    this.currentViewState = viewState;\n    this.$el.addClass(this.currentViewState);\n  },\n  showUpdateState: function () {\n    const state = this.model.get('state');\n    if (this.model.previous('state') === serverUpdateStates.INSTALLING) {\n      this.stopListening(\n        this.model.server,\n        'change:isConnected',\n        this.onServerConnectedChange\n      );\n    }\n    // Older media servers will use the available state instead of notify\n    // if a release is available but the server cannot install it.\n    let viewState = state;\n    if (\n      !this.model.get('canInstall') &&\n      state === serverUpdateStates.AVAILABLE\n    ) {\n      viewState = viewStates.NOTIFY;\n    } else if (this.model.get('isChecking')) {\n      viewState = viewStates.CHECKING;\n    }\n    this.setCurrentViewState(viewState);\n    const hasReleaseNotes = !!(\n      this.model.get('added') || this.model.get('fixed')\n    );\n    this.$el.toggleClass('has-release-notes', hasReleaseNotes);\n    if (viewState === viewStates.INSTALLING) {\n      this.waitForInstall();\n    } else if (\n      viewState === viewStates.ERROR ||\n      viewState === viewStates.NOTIFY\n    ) {\n      let errorMessage;\n      if (this.model.get('error')) {\n        // If the server provided an error message, display only that\n        // message.\n        errorMessage = this.model.get('error');\n        this.ui.installManualLink.addClass('hidden');\n      } else if (!this.model.get('canInstall')) {\n        // If the server does not support installing updates automatically,\n        // show a friendly message and a link to download the update\n        // manually.\n        errorMessage = t('An update is available.');\n        this.ui.installManualLink.removeClass('hidden');\n      } else {\n        // Otherwise, show a generic error and a link to download the update\n        // manually.\n        errorMessage = t('Something went wrong.');\n        this.ui.installManualLink.removeClass('hidden');\n      }\n      // Use the update's downloadURL if available, otherwise use the\n      // generic download page.\n      const appModel = adapters.resolve('appModel');\n      const cloudServer = appModel.get('user').server;\n      const url = this.model.get('downloadURL') || cloudServer.get('appsUrl');\n      this.ui.installManualLink.attr('href', url);\n      this.ui.updateErrorMessage.text(errorMessage);\n    }\n  },\n  canCheckForUpdate: function (model: any) {\n    const state = model.get('state');\n    const isChecking = model.get('isChecking');\n    return (\n      !isChecking &&\n      (state === serverUpdateStates.DONE ||\n        state === serverUpdateStates.ERROR ||\n        state === serverUpdateStates.NONE)\n    );\n  },\n  onViewStateChange: function (model: any) {\n    if (this.isRendered) {\n      this.showUpdateState();\n      this.ui.checkForUpdatesBtn.toggleClass(\n        'active',\n        !this.canCheckForUpdate(model)\n      );\n    }\n  },\n  //\n  // Listeners\n  onRender: function () {\n    this.showUpdateState();\n  },\n  onIsCheckingChange: function (model: any) {\n    this.onViewStateChange(model);\n  },\n  onStateChange: function (model: any) {\n    this.onViewStateChange(model);\n  },\n  // @ts-expect-error ts-migrate(6133) FIXME: 'model' is declared but its value is never read.\n  onProgressChange: function (model: any, progress: any) {\n    if (_.isNumber(progress)) {\n      this.ui.downloadUpdatesContainer.css({\n        backgroundSize: progress + '% 100%',\n      });\n      this.ui.downloadProgressContainer.removeClass('hidden');\n      this.ui.downloadProgressLabel.text(progress);\n    } else {\n      this.ui.downloadProgressContainer.addClass('hidden');\n    }\n  },\n  // @ts-expect-error ts-migrate(6133) FIXME: 'server' is declared but its value is never read.\n  onServerConnectedChange: function (server: any, isConnected: any) {\n    if (isConnected) {\n      this.checkForUpdates();\n    } else if (this._waitingTimeoutID) {\n      this._waitingTimeoutID = window.clearTimeout(this._waitingTimeoutID);\n    }\n  },\n  onWaitingForInstallCheck: function () {\n    const server = this.model.server;\n    if (\n      server.get('isConnected') &&\n      this.model.get('state') === serverUpdateStates.INSTALLING\n    ) {\n      const xhrOptions = server.getXHROptions('/updater/check', {\n        type: 'PUT',\n      });\n      const promise = $.ajax(xhrOptions).promise();\n      promise.always(() => {\n        this._waitingTimeoutID = window.setTimeout(\n          this.onWaitingForInstallCheck.bind(this),\n          2000\n        );\n      });\n    }\n  },\n  onCheckForUpdatesClick: function (event: any) {\n    event.preventDefault();\n    if (!this.ui.checkForUpdatesBtn.isDisabled()) {\n      this.ui.checkForUpdatesBtn.addClass('active');\n      this.checkForUpdates({ download: true });\n    }\n  },\n  onDownloadUpdatesClick: function (event: any) {\n    event.preventDefault();\n    this.downloadUpdates();\n  },\n  onInstallUpdatesClick: function (event: any) {\n    event.preventDefault();\n    this.installUpdates();\n  },\n  onInstallManualClick: function () {\n    this.dismissUpdates();\n  },\n  onInfoClick: function (event: any) {\n    event.preventDefault();\n    dispatcher.trigger(\n      'show:modal',\n      new ReleaseNotesModal({ model: this.model })\n    );\n  },\n});\nexport default ServerSettingsUpdateView;\n","import _ from 'underscore';\nimport { resolve } from 'app/js/adapters/adapters';\nimport { findUserModel } from 'app/js/utils/state/modelFinders';\nimport t from 'app/js/utils/t';\nimport ServerSettingsClaimViewReact from 'app/js/views/settings/server/ServerSettingsClaimViewReact';\nimport ServerSettingsPane from 'app/js/views/settings/server/ServerSettingsPane';\nimport ServerSettingsUpdateView from 'app/js/views/settings/server/ServerSettingsUpdateView';\n// @ts-expect-error ts-migrate(2307) FIXME: Cannot find module 'app/templates/setti... Remove this comment to see the full error message\nimport tpl from 'app/templates/settings/server/ServerSettingsGeneralPane.tpl';\n\nconst ServerSettingsGeneralPane = ServerSettingsPane.extend({\n  //\n  // Properties\n\n  template: tpl,\n\n  regions: {\n    signIn: '.sign-in-region',\n    update: '.update-region',\n  },\n\n  //\n  // Control\n\n  serializeData: function () {\n    const settings = ServerSettingsPane.prototype.serializeData.apply(\n      this,\n      // eslint-disable-next-line prefer-rest-params\n      arguments\n    );\n\n    // Show the server's name as placeholder for the friendly name if not\n    // explicitly set.\n    const friendlyName = _.findWhere(settings, { id: 'FriendlyName' });\n    if (friendlyName) {\n      friendlyName.placeholder = this.model.get('friendlyName');\n    }\n\n    return settings;\n  },\n\n  //\n  // Bindings\n\n  bindings: {\n    '.version': {\n      modelAttribute: 'version',\n\n      formatter: function (version: any) {\n        const appModel = resolve('appModel');\n        const user = findUserModel(appModel);\n        const isNinja = user.isNinja();\n\n        return t(\n          'Version {1}',\n          isNinja ? version : (this as any).model.get('shortVersion')\n        );\n      },\n    },\n  },\n\n  //\n  // Listeners\n\n  onRender: function () {\n    // eslint-disable-next-line prefer-rest-params\n    ServerSettingsPane.prototype.onRender.apply(this, arguments);\n    this.signIn.show(\n      new ServerSettingsClaimViewReact({\n        model: this.model,\n      })\n    );\n\n    if (this.model.get('updater')) {\n      this.update.show(\n        new ServerSettingsUpdateView({\n          model: this.model.get(__PLATFORM__).get('update'),\n          collection: this.collection,\n        })\n      );\n    }\n  },\n});\n\nexport default ServerSettingsGeneralPane;\n","/* eslint-plugin-disable @typescript-eslint */\n\nimport languages, {\n  sortedLanguageCodes,\n} from 'app/js/utils/language/languages';\nimport t from 'app/js/utils/t';\nimport ServerSettingsPane from 'app/js/views/settings/server/ServerSettingsPane';\n\nconst ServerSettingsLanguagesPane = ServerSettingsPane.extend({\n  //\n  // Properties\n\n  prefix: 'account.',\n\n  //\n  // Control\n\n  serializeData: function () {\n    const account = this.options.account;\n    const languageSettings = [];\n\n    const enumLanguages = sortedLanguageCodes.map((languageCode) => {\n      return {\n        value: languageCode,\n        // @ts-expect-error ts-migrate(7053) FIXME: Element implicitly has an 'any' type because expre... Remove this comment to see the full error message\n        label: languages[languageCode],\n      };\n    });\n\n    languageSettings.push({\n      id: this.prefix + 'autoSelectAudio',\n      label: t('Automatically select audio and subtitle tracks'),\n      summary: t(\n        'Automatically select audio and subtitle tracks in your preferred language when possible.'\n      ),\n      default: false,\n      value: account.get('autoSelectAudio'),\n      type: 'bool',\n      group: 'account.language',\n      advanced: false,\n      hidden: false,\n    });\n\n    languageSettings.push({\n      id: this.prefix + 'defaultAudioLanguage',\n      label: t('Prefer audio tracks in'),\n      default: 'en',\n      value: account.get('defaultAudioLanguage'),\n      type: 'text',\n      group: 'account.language',\n      advanced: false,\n      hidden: false,\n      enumValues: enumLanguages,\n    });\n\n    languageSettings.push({\n      id: this.prefix + 'subtitleMode',\n      label: t('Subtitle mode'),\n      default: 1,\n      value: parseInt(account.get('subtitleMode'), 10),\n      type: 'int',\n      group: 'account.language',\n      advanced: false,\n      hidden: false,\n      enumValues: [\n        { value: 0, label: t('Manually selected') },\n        { value: 1, label: t('Shown with foreign audio') },\n        { value: 2, label: t('Always enabled') },\n      ],\n    });\n\n    languageSettings.push({\n      id: this.prefix + 'defaultSubtitleLanguage',\n      label: t('Prefer subtitles in'),\n      default: 'en',\n      value: account.get('defaultSubtitleLanguage'),\n      type: 'text',\n      group: 'account.language',\n      advanced: false,\n      hidden: false,\n      enumValues: enumLanguages,\n    });\n\n    return languageSettings;\n  },\n\n  updateModel: function (key: any, value: any) {\n    // If the setting is found in the main collection, update that model.\n    const setting = ServerSettingsPane.prototype.updateModel.apply(\n      this,\n      // eslint-disable-next-line prefer-rest-params\n      arguments\n    );\n    if (setting) {\n      return setting;\n    }\n\n    // Otherwise, look for one of our special settings.\n    const unprefixedKey = key.replace(this.prefix, '');\n    const account = this.options.account;\n\n    if (account.has(unprefixedKey)) {\n      return account.set(unprefixedKey, value);\n    }\n  },\n});\n\nexport default ServerSettingsLanguagesPane;\n","import $ from 'jquery';\nimport _ from 'underscore';\nimport commands from 'app/js/commands/commands';\nimport { REMOTE_ACCESS_STATE_CONNECTING } from 'app/js/models/server/ServerCloudAccountModel';\nimport dispatcher from 'app/js/utils/dispatcher';\nimport t from 'app/js/utils/t';\nimport navigateToRoute from 'app/js/v4/routes/navigateToRoute';\nimport ConfirmModal from 'app/js/views/modals/ConfirmModal';\nimport ServerSettingsPane from 'app/js/views/settings/server/ServerSettingsPane';\n// @ts-expect-error ts-migrate(2307) FIXME: Cannot find module 'app/templates/setti... Remove this comment to see the full error message\nimport tpl from 'app/templates/settings/server/ServerSettingsRemoteAccessPane.tpl';\n\nconst ServerSettingsRemoteAccessPane = ServerSettingsPane.extend({\n  //\n  // Properties\n  className: 'remote-access-container',\n  template: tpl,\n  ui: {\n    manualPortMappingMode: '#ManualPortMappingMode',\n    manualPortMappingPort: '#ManualPortMappingPort',\n    wanTotalMaxUploadRate: '#WanTotalMaxUploadRate',\n    uploadContainer: '.remote-access-upload-container',\n    submitBtn: '.submit-btn',\n    message: '.form-message',\n  },\n  events: {\n    'change .remote-access-error-container input[id]': 'onErrorInputChange',\n    'click .sign-in-link': 'onSignInClick',\n    'click .remote-access-enable-btn': 'onEnableClick',\n    'click .retry-btn': 'onRetryClick',\n    'click .remote-access-disable-btn': 'onDisableClick',\n    'change input[name=WanTotalMaxUploadRate]': 'onTotalRateChange',\n    'keyup input[name=WanTotalMaxUploadRate]': 'onTotalRateChange',\n    'change select[name=WanPerStreamMaxUploadRate]': 'onPerStreamRateChange',\n    'submit #remote-access-upload-form': 'onUploadFormSubmit',\n  },\n  //\n  // Init\n  initialize: function (options: any) {\n    this.cloudAccount = options.cloudAccount;\n    this.changes = options.changes;\n    this.listenTo(this.cloudAccount, {\n      'change:signInState': this.render,\n      'change:remoteAccessState': this.render,\n    });\n  },\n  //\n  // Control\n  serializeData: function () {\n    const publishSetting = this.collection.get('PublishServerOnPlexOnlineKey');\n    const mappingModeSetting = this.collection.get('ManualPortMappingMode');\n    const mappingPortSetting = this.collection.get('ManualPortMappingPort');\n    const totalRateSetting = this.collection.get('WanTotalMaxUploadRate');\n    const perStreamRateSetting = this.collection.get(\n      'WanPerStreamMaxUploadRate'\n    );\n    const cloudAccount = this.cloudAccount.toJSON();\n    const isDisabled = !publishSetting.get('value');\n    const isSignedOut = !cloudAccount.signedIn;\n    const isUnavailable = isDisabled || isSignedOut;\n    const hasPrivateAddress = !!(\n      cloudAccount.privateAddress && cloudAccount.privatePort != null\n    );\n    const hasPublicAddress = !!(\n      cloudAccount.publicAddress && cloudAccount.publicPort != null\n    );\n    const data = {\n      forceAdvanced: !isDisabled && !!cloudAccount.mappingError,\n      isDisabled: isDisabled,\n      isSignedOut: isSignedOut,\n      isUnavailable: isUnavailable,\n      canEditPort:\n        !isUnavailable && mappingModeSetting && mappingModeSetting.get('value'),\n      hasPrivateAddress,\n      hasPublicAddress,\n      cloudAccount: cloudAccount,\n      hasMappingSettings: !!(mappingModeSetting && mappingPortSetting),\n      hasUploadLimitSettings: !!(totalRateSetting && perStreamRateSetting),\n      mappingModeSetting: mappingModeSetting\n        ? mappingModeSetting.toJSON()\n        : null,\n      mappingPortSetting: mappingPortSetting\n        ? mappingPortSetting.toJSON()\n        : null,\n      uploadSettings: [],\n    };\n    if (totalRateSetting) {\n      (data as any).totalRateSettingID = totalRateSetting.id;\n      (data as any).totalRateSettingValue =\n        totalRateSetting.get('value') / 1000;\n    }\n    if (perStreamRateSetting) {\n      // @ts-expect-error ts-migrate(2345) FIXME: Argument of type 'any' is not assignable to parame... Remove this comment to see the full error message\n      data.uploadSettings.push(perStreamRateSetting.toJSON());\n    }\n    return data;\n  },\n  enable: function () {\n    // Always keep the mapping form enabled.\n  },\n  enableUploadForm: function () {\n    this.isDisabled = false;\n    this.ui.message.text('');\n    this.ui.message.removeClass('has-error');\n    this.ui.submitBtn.removeClass('disabled');\n  },\n  updateUploadSetting: function (key: any, value: any) {\n    // Extensions (LastPass) can trigger input changes we should ignore.\n    if (!key) {\n      return;\n    }\n    // Only recognize the change if we found a corresponding model, just as\n    // an extra safeguard against extensions.\n    const setting = this.updateModel(key, value);\n    if (setting) {\n      this.changes[key] = value;\n      this.enable();\n    }\n  },\n  connect: function () {\n    return commands.execute('connectServer', {\n      cloudAccount: this.cloudAccount,\n      value: true,\n    });\n  },\n  disconnect: function () {\n    return commands.execute('connectServer', {\n      cloudAccount: this.cloudAccount,\n      value: false,\n    });\n  },\n  reconnect: function () {\n    return commands.execute('reconnectServer', {\n      cloudAccount: this.cloudAccount,\n    });\n  },\n  saveChanges: function () {\n    if (_.isEmpty(this.changes)) {\n      return $.Deferred().resolve().promise();\n    }\n    const promise = this.collection.first().save(this.changes);\n    promise.done(\n      _.bind(function () {\n        // @ts-expect-error ts-migrate(2683) FIXME: 'this' implicitly has type 'any' because it does n... Remove this comment to see the full error message\n        this.changes = {};\n      }, this)\n    );\n    return promise;\n  },\n  //\n  // Listeners\n  onErrorInputChange: function () {\n    // eslint-disable-next-line prefer-rest-params\n    ServerSettingsPane.prototype.onInputChange.apply(this, arguments);\n    this.ui.manualPortMappingPort.prop(\n      'disabled',\n      !this.ui.manualPortMappingMode.prop('checked')\n    );\n  },\n  onSignInClick: function (event: any) {\n    event.preventDefault();\n    // Need to do a full navigation to ensure title and sidebar are\n    // updated correctly.\n    navigateToRoute('serverSettings', {\n      machineIdentifier: this.model.id,\n      settingsSection: 'settings',\n      settingsGroup: 'general',\n    });\n  },\n  onEnableClick: function (event: any) {\n    event.preventDefault();\n    this.connect();\n  },\n  onDisableClick: function (event: any) {\n    event.preventDefault();\n\n    const isPrivateConnection = this.model.get('isPrivateConnection');\n    const hasManualPortMappingModeEnabled = this.collection\n      .get('ManualPortMappingMode')\n      .get('value');\n\n    const confirmModal = new ConfirmModal({\n      title: t('Disable Remote Access'),\n      message: isPrivateConnection\n        ? t(\n            'This server will no longer be accessible outside this network. Are you sure you want to disable remote access?'\n          )\n        : t(\n            \"This server will no longer be accessible outside the local network. You're currently using a remote connection to this server and you may lose access if you continue. Are you sure you want to disable remote access?\"\n          ),\n      warningMessage: hasManualPortMappingModeEnabled\n        ? t(\n            'Note: This will not affect any custom network configuration or manual port forwarding from your router. Please review your network settings to ensure complete removal of access to this host and port.'\n          )\n        : undefined,\n      confirmLabel: t('Disable'),\n      cancelLabel: t('Cancel'),\n      hasDanger: true,\n    });\n\n    confirmModal.promise.then(() => {\n      this.disconnect();\n    });\n\n    dispatcher.trigger('show:modal', confirmModal);\n  },\n  onRetryClick: function (event: any) {\n    event.preventDefault();\n    this.cloudAccount.set('remoteAccessState', REMOTE_ACCESS_STATE_CONNECTING);\n    this.saveChanges().always(_.bind(this.reconnect, this));\n  },\n  onTotalRateChange: function (event: any) {\n    const target = event.currentTarget;\n    // @ts-expect-error ts-migrate(2554) FIXME: Expected 1 arguments, but got 2.\n    const value = parseFloat(target.value, 10);\n    const bitrate = _.isNaN(value) ? 0 : Math.max(value, 0);\n    this.updateUploadSetting(target.name, bitrate * 1000);\n    this.enableUploadForm();\n  },\n  onPerStreamRateChange: function (event: any) {\n    const target = event.currentTarget;\n    this.updateUploadSetting(target.name, target.value);\n    this.enableUploadForm();\n  },\n  onUploadFormSubmit: function (event: any) {\n    event.preventDefault();\n    this.trigger('save');\n    const totalRateSettingValue = this.collection\n      .get('WanTotalMaxUploadRate')\n      .get('value');\n    const showWarning = !totalRateSettingValue;\n    this.ui.wanTotalMaxUploadRate.val(totalRateSettingValue / 1000);\n    this.ui.uploadContainer.toggleClass('show-warning', showWarning);\n  },\n});\nexport default ServerSettingsRemoteAccessPane;\n","import Marionette from 'app/js/initializers/extensions/MarionetteExtension';\n// @ts-expect-error ts-migrate(2307) FIXME: Cannot find module 'app/templates/Loadi... Remove this comment to see the full error message\nimport tpl from 'app/templates/LoadingView.tpl';\n\nconst LoadingView = Marionette.ItemView.extend({\n  //\n  // Properties\n\n  className: 'loading',\n  template: tpl,\n\n  //\n  // Init\n\n  initialize: function (options: any) {\n    if (options?.inline) {\n      this.$el.addClass('loading-inline');\n    }\n  },\n});\n\nexport default LoadingView;\n","import Marionette from 'app/js/initializers/extensions/MarionetteExtension';\n// @ts-expect-error ts-migrate(2307) FIXME: Cannot find module 'app/templates/lists... Remove this comment to see the full error message\nimport tpl from 'app/templates/lists/library/convert/VersionGeneratorListEmptyView.tpl';\n\nconst VersionGeneratorListEmptyView = Marionette.ItemView.extend({\n  //\n  // Properties\n\n  template: tpl,\n});\n\nexport default VersionGeneratorListEmptyView;\n","const generatorStates = {\n  PENDING: 'pending',\n  FAILED: 'failed',\n  COMPLETE: 'complete',\n\n  failureCodes: {\n    INVALID_PATH: 'invalidPath',\n    DISK_FULL: 'diskFull',\n    DISK_UNWRITABLE: 'diskUnwritable',\n  },\n};\n\nexport default generatorStates;\n","/* eslint-plugin-disable @typescript-eslint */\n\nimport getPixelRatio from 'app/js/utils/constants/getPixelRatio';\nimport posterPlaceholders from 'app/js/utils/posterPlaceholders';\nimport path from 'app/js/utils/url/path';\nimport BaseImage from 'app/js/views/images/BaseImage';\n\nconst CompositeImage = BaseImage.extend({\n  //\n  // Properties\n\n  background: true,\n\n  //\n  // Init\n\n  setup: function (options: any) {\n    this.model = options.model;\n\n    if (!options.noPlaceholder) {\n      this.placeholderClass = posterPlaceholders.playlist;\n    }\n\n    const pixelRatio = getPixelRatio();\n\n    const params = {\n      width: Math.round((options.width || options.height || 256) * pixelRatio),\n      height: Math.round((options.height || options.width || 256) * pixelRatio),\n      rows: options.rows || 2,\n      cols: options.columns || 2,\n      border: options.border || 0,\n      media: options.media || 'thumb',\n      repeat: options.unique ? 0 : 1,\n    };\n\n    const url = this.model.get('composite');\n    if (url) {\n      this.url = this.model.server.resolveUrl(path.join(url, params), {\n        appendToken: true,\n      });\n    }\n  },\n});\n\nexport default CompositeImage;\n","/* eslint-plugin-disable @typescript-eslint */\n\nimport _ from 'underscore';\n\nconst sizes = ['Bytes', 'KB', 'MB', 'GB', 'TB'];\n\nfunction bytesToSize(bytes: any, decimals: any) {\n  bytes = parseInt(bytes, 10);\n  decimals = decimals || 1;\n\n  if (_.isNaN(bytes)) {\n    return '';\n  }\n\n  if (bytes === 0) {\n    return '0 Bytes';\n  }\n\n  // @ts-expect-error ts-migrate(2345) FIXME: Argument of type 'number' is not assignable to par... Remove this comment to see the full error message\n  const i = parseInt(Math.floor(Math.log(bytes) / Math.log(1024)), 10);\n\n  return (bytes / Math.pow(1024, i)).toFixed(decimals) + ' ' + sizes[i];\n}\n\nexport default bytesToSize;\n","const backgroundProcessingStates = {\n  PENDING: 'pending',\n  ERROR: 'error',\n  PROCESSED: 'processed',\n\n  contexts: {\n    OK: 'ok',\n    FILE_UNAVAILABLE: 'sourceFileUnavailable',\n    METADATA_ERROR: 'sourceFileMetadataError',\n    PROFILE_ERROR: 'clientProfileError',\n    IO_ERROR: 'ioError',\n    TRANSCODER_ERROR: 'transcoderError',\n    UNKNOWN_ERROR: 'unknownError',\n    ANALYSIS_ERROR: 'mediaAnalysisError',\n    DOWNLOAD_FAILED: 'downloadFailed',\n    CANNOT_TRANSCODE: 'cannotTranscode',\n  },\n};\n\nexport default backgroundProcessingStates;\n","import commands from 'app/js/commands/commands';\nimport Marionette from 'app/js/initializers/extensions/MarionetteExtension';\nimport backgroundProcessingStates from 'app/js/utils/constants/convert/backgroundProcessingStates';\nimport getSeasonEpisodeIndex from 'app/js/utils/media/getSeasonEpisodeIndex';\nimport t from 'app/js/utils/t';\nimport MediaPosterImage from 'app/js/views/images/MediaPosterImage';\nimport ConversionStatusView from 'app/js/views/lists/activity/convert/ConversionStatusView';\n// @ts-expect-error ts-migrate(2307) FIXME: Cannot find module 'app/templates/lists... Remove this comment to see the full error message\nimport tpl from 'app/templates/lists/library/convert/VersionGeneratorMetadataListItem.tpl';\n\nconst VersionGeneratorMetadataListItem = Marionette.Layout.extend({\n  //\n  // Properties\n  tagName: 'li',\n  className: 'striped-list-item version-generator-metadata-list-item',\n  template: tpl,\n  ui: {\n    poster: '.media-poster',\n  },\n  regions: {\n    statusRegion: '.conversion-status-region',\n  },\n  events: {\n    'click .enable-btn': 'onEnableClick',\n    'click .retry-btn': 'onRetryClick',\n  },\n  modelEvents: {\n    'change:processingState': 'onProcessingStateChange',\n  },\n  //\n  // Init\n  initialize: function (options: any) {\n    this.generator = options.generator;\n    this.transcodeJobs = options.transcodeJobs;\n    this.pausedSetting = options.pausedSetting;\n    this.type = this.model.get('type');\n    this.image = new MediaPosterImage({\n      model: this.model,\n      type: 'movie',\n      height: 60,\n      modelAttribute: this.type === 'episode' ? 'grandparentThumb' : 'thumb',\n    });\n  },\n  //\n  // Bindings\n  bindings: {\n    '.generator-metadata-title': {\n      modelAttribute: 'title',\n      formatter: function (title: any) {\n        return (\n          (this as any).model.get('grandparentTitle') ||\n          (this as any).model.get('parentTitle') ||\n          title\n        );\n      },\n    },\n    '.generator-metadata-episode-index': {\n      modelAttribute: 'index',\n      autohide: true,\n      formatter: function (index: any) {\n        if ((this as any).type === 'episode') {\n          return getSeasonEpisodeIndex({\n            seasonIndex: (this as any).model.get('parentIndex'),\n            episodeIndex: index,\n            date: (this as any).model.get('originallyAvailableAt'),\n            noLeadingZero: true,\n            separator: ' · ',\n          });\n        }\n\n        return;\n      },\n    },\n    '.generator-metadata-year': {\n      modelAttribute: 'year',\n      autohide: true,\n      formatter: function (year: any) {\n        if ((this as any).type === 'movie') {\n          return year;\n        }\n      },\n    },\n    '.conversion-status-failed-message': {\n      modelAttribute: 'processingStateContext',\n      formatter: function (processingStateContext: any) {\n        return (this as any).getErrorMessage(processingStateContext);\n      },\n    },\n  },\n  //\n  // Control\n  getErrorMessage: function (processingStateContext: any) {\n    const contexts = backgroundProcessingStates.contexts;\n    // Provide some friendly messages for common errors.\n    switch (processingStateContext) {\n      case contexts.FILE_UNAVAILABLE:\n        return t('File unavailable');\n      case contexts.METADATA_ERROR:\n        return t('Invalid metadata');\n      case contexts.PROFILE_ERROR:\n        return t('Invalid profile');\n      case contexts.ANALYSIS_ERROR:\n        return t('Unable to analyze');\n    }\n    return t('Unable to convert');\n  },\n  //\n  // Listeners\n  onRender: function () {\n    this.image.setElement(this.ui.poster);\n    this.statusRegion.show(\n      new ConversionStatusView({\n        model: this.model,\n        generator: this.generator,\n        transcodeJobs: this.transcodeJobs,\n        pausedSetting: this.pausedSetting,\n        initialState: this.model.get('processingState'),\n        initialErrorMessage: this.getErrorMessage(\n          this.model.get('processingStateContext')\n        ),\n      })\n    );\n  },\n  onClose: function () {\n    this.image.close();\n  },\n  // @ts-expect-error ts-migrate(6133) FIXME: 'model' is declared but its value is never read.\n  onProcessingStateChange: function (model: any, processingState: any) {\n    if (this.statusRegion.currentView) {\n      this.statusRegion.currentView.enterState(processingState);\n    }\n  },\n  onEnableClick: function (event: any) {\n    event.preventDefault();\n    commands.execute('enableVersionGenerator', {\n      generator: this.model.generator,\n      ratingKey: this.model.id,\n    });\n  },\n  onRetryClick: function (event: any) {\n    event.preventDefault();\n    commands.execute('reprocessVersionGenerator', {\n      generator: this.model.generator,\n      ratingKey: this.model.id,\n    });\n  },\n});\nexport default VersionGeneratorMetadataListItem;\n","import BaseList from 'app/js/views/lists/BaseList';\nimport VersionGeneratorMetadataListItem from 'app/js/views/lists/library/convert/VersionGeneratorMetadataListItem';\n\nconst VersionGeneratorMetadataList = BaseList.extend({\n  //\n  // Properties\n\n  tagName: 'ul',\n  className: 'list version-generator-metadata-list',\n  itemView: VersionGeneratorMetadataListItem,\n});\n\nexport default VersionGeneratorMetadataList;\n","import _ from 'underscore';\nimport stateMachineMixin from 'app/js/mixins/views/stateMachineMixin';\nimport bytesToSize from 'app/js/utils/number/bytesToSize';\nimport t from 'app/js/utils/t';\nimport VersionGeneratorMetadataList from 'app/js/views/lists/library/convert/VersionGeneratorMetadataList';\nimport BaseModal from 'app/js/views/modals/BaseModal';\n// @ts-expect-error ts-migrate(2307) FIXME: Cannot find module 'app/templates/modal... Remove this comment to see the full error message\nimport tpl from 'app/templates/modals/convert/VersionGeneratorMetadataModal.tpl';\n\nconst VersionGeneratorMetadataModal = BaseModal.extend({\n  mixins: [stateMachineMixin],\n  //\n  // Properties\n  name: 'versionGeneratorMetadataModal',\n  className: 'version-generator-metadata-modal modal fade',\n  template: tpl,\n  pageSize: 20,\n  scrollThreshold: 50,\n  ui: {\n    body: '.modal-body',\n    loading: '.loading',\n    errorMessage: '.error-message',\n  },\n  regions: {\n    listRegion: '.list-region',\n  },\n  //\n  // Init\n  initialize: function (options: any) {\n    this.status = this.model.get('status');\n    this.listModel = options.listModel;\n    this.collection = this.listModel.get('metadataItems');\n    this.transcodeJobs = options.transcodeJobs;\n    this.pausedSetting = options.pausedSetting;\n    this.handleScroll = _.throttle(this.whenRendered(this.onScroll), 100);\n  },\n  //\n  // States\n  states: {\n    base: {},\n    loading: {\n      onEnter: function () {\n        (this as any).ui.loading.removeClass('hidden');\n      },\n      onExit: function () {\n        (this as any).ui.loading.addClass('hidden');\n      },\n    },\n    error: {\n      onEnter: function () {\n        (this as any).ui.errorMessage.removeClass('hidden');\n      },\n      onExit: function () {\n        (this as any).ui.errorMessage.addClass('hidden');\n      },\n    },\n  },\n  //\n  // Bindings\n  bindings: {\n    '.generator-title': {\n      modelAttribute: 'title',\n    },\n    '.generator-items-count': {\n      model: 'status',\n      modelAttribute: 'itemsCount',\n      formatter: function (itemsCount: any) {\n        return itemsCount === 1\n          ? t('{1} item', itemsCount)\n          : t('{1} items', itemsCount);\n      },\n    },\n    '.generator-total-size': {\n      model: 'status',\n      modelAttribute: 'totalSize',\n      formatter: function (totalSize: any) {\n        if (totalSize) {\n          // @ts-expect-error ts-migrate(2554) FIXME: Expected 2 arguments, but got 1.\n          return bytesToSize(totalSize);\n        } else {\n          return t('0 files');\n        }\n      },\n    },\n    '.generator-failure-container': {\n      model: 'status',\n      modelAttribute: 'failure',\n      manual: true,\n      autohide: function (failure: any) {\n        return !!failure;\n      },\n    },\n    '.generator-failure-message': {\n      model: 'status',\n      modelAttribute: 'failure',\n      formatter: function (failure: any) {\n        return failure;\n      },\n    },\n  },\n  //\n  // Control\n  populatePage: function () {\n    this.enterState('loading');\n    const promise = this.listModel.populateRange({\n      start: 0,\n      end: this.listModel.get('populatedRange').end + this.pageSize,\n    });\n    promise.done(\n      this.whenRendered(function () {\n        // @ts-expect-error ts-migrate(2683) FIXME: 'this' implicitly has type 'any' because it does n... Remove this comment to see the full error message\n        this.enterState('base');\n      })\n    );\n    promise.fail(\n      this.whenRendered(function () {\n        // @ts-expect-error ts-migrate(2683) FIXME: 'this' implicitly has type 'any' because it does n... Remove this comment to see the full error message\n        this.enterState('error');\n      })\n    );\n    return promise;\n  },\n  //\n  // Listeners\n  onRender: function () {\n    // eslint-disable-next-line prefer-rest-params\n    BaseModal.prototype.onRender.apply(this, arguments);\n    // Scroll event doesn't bubble up so we can't declare it in events\n    // delegate hash.\n    this.ui.body.on('scroll', this.handleScroll);\n    // Fetch the generator in case the number of files has changed.\n    this.model.fetch();\n    // Populate the first page of items.\n    this.populatePage();\n    this.listRegion.show(\n      new VersionGeneratorMetadataList({\n        collection: this.collection,\n        itemViewOptions: {\n          generator: this.model,\n          transcodeJobs: this.transcodeJobs,\n          pausedSetting: this.pausedSetting,\n        },\n      })\n    );\n  },\n  onClose: function () {\n    this.ui.body.off('scroll', this.handleScroll);\n    // Reset so if the modal is opened again, we populate a fresh set of\n    // items.\n    this.collection.reset();\n  },\n  onScroll: function () {\n    // Don't keep trying to request items if there was an error.\n    if (this.currentState === 'error') {\n      return;\n    }\n    const containerHeight =\n      this.ui.body.prop('scrollHeight') - this.ui.body.innerHeight();\n    const atEnd =\n      containerHeight - this.ui.body.scrollTop() < this.scrollThreshold;\n    if (\n      atEnd &&\n      this.listModel.get('populatedRange').end < this.listModel.get('totalSize')\n    ) {\n      this.populatePage();\n    }\n  },\n});\nexport default VersionGeneratorMetadataModal;\n","import commands from 'app/js/commands/commands';\nimport Marionette from 'app/js/initializers/extensions/MarionetteExtension';\nimport generatorStates from 'app/js/utils/constants/convert/generatorStates';\nimport dispatcher from 'app/js/utils/dispatcher';\nimport posterSizes from 'app/js/utils/posterSizes';\nimport t from 'app/js/utils/t';\nimport CompositeImage from 'app/js/views/images/CompositeImage';\nimport ConvertModal from 'app/js/views/modals/convert/ConvertModal';\nimport VersionGeneratorMetadataModal from 'app/js/views/modals/convert/VersionGeneratorMetadataModal';\n// @ts-expect-error ts-migrate(2307) FIXME: Cannot find module 'app/templates/lists... Remove this comment to see the full error message\nimport tpl from 'app/templates/lists/library/convert/VersionGeneratorListItem.tpl';\n\nconst VersionGeneratorListItem = Marionette.ItemView.extend({\n  //\n  // Properties\n  className:\n    'striped-list-item media-list-item playlist-item version-generator-item',\n  tagName: 'li',\n  template: tpl,\n  ui: {\n    poster: '.media-poster',\n    status: '.generator-status',\n  },\n  events: {\n    'click .playlist-inner-item': 'onClick',\n    'click .retry-btn': 'onRetryClick',\n    'click .edit-btn': 'onEditClick',\n    'click .delete-btn': 'onDeleteClick',\n  },\n  attributes: function () {\n    return {\n      'data-generator-id': this.model.id,\n    };\n  },\n  //\n  // Init\n  initialize: function (options: any) {\n    this.transcodeJobs = options.transcodeJobs;\n    this.pausedSetting = options.pausedSetting;\n    this.status = this.model.get('status');\n    const posterHeight = 60;\n    this.compositeImage = new CompositeImage({\n      model: this.model,\n      width: posterSizes.getPosterWidth('movie', posterHeight),\n      height: posterHeight,\n      rows: 1,\n      columns: 1,\n    });\n    this.listenTo(\n      this.transcodeJobs,\n      'reset add remove',\n      this.onTranscodeJobsChange\n    );\n  },\n  //\n  // Control\n  resetState: function () {\n    const states = [\n      'converting',\n      generatorStates.PENDING,\n      generatorStates.COMPLETE,\n      generatorStates.FAILED,\n    ];\n    this.ui.status.removeClass(states.join(' '));\n  },\n  getState: function (status: any) {\n    // `converting` is not a real generator state, but we will use it to\n    // distinguish between waiting and waiting with an active transcode job.\n    if (this.transcodeJobs.findWhere({ generatorID: this.model.id })) {\n      return 'converting';\n    }\n    // A generator can be in a complete state with failed items, but we\n    // want to show a failed state in that case.\n    if (status.get('itemsFailedCount') > 0) {\n      return generatorStates.FAILED;\n    }\n    return status.get('state');\n  },\n  //\n  // Bindings\n  bindings: {\n    '.generator-title': {\n      modelAttribute: 'title',\n    },\n    '.generator-target': {\n      modelAttribute: 'target',\n    },\n    '.generator-status': {\n      model: 'status',\n      modelAttribute: 'state',\n      modelListeners: ['state', 'itemsFailedCount'],\n      manual: true,\n      // @ts-expect-error ts-migrate(6133) FIXME: 'state' is declared but its value is never read.\n      formatter: function (state: any, $el: any) {\n        (this as any).resetState();\n        $el.addClass((this as any).getState((this as any).status));\n      },\n    },\n    '.generator-status-failed-message': {\n      model: 'status',\n      modelAttribute: 'itemsFailedCount',\n      formatter: function (itemsFailedCount: any) {\n        return itemsFailedCount === 1\n          ? t('1 failed item')\n          : t('{1} failed items', itemsFailedCount);\n      },\n    },\n    '.retry-btn': {\n      model: 'status',\n      modelAttribute: 'state',\n      modelListeners: ['state', 'itemsFailedCount'],\n      manual: true,\n      autohide: function () {\n        return (\n          (this as any).getState((this as any).status) ===\n          generatorStates.FAILED\n        );\n      },\n    },\n  },\n  //\n  // Listeners\n  onRender: function () {\n    this.compositeImage.setElement(this.ui.poster);\n  },\n  onClose: function () {\n    this.compositeImage.close();\n  },\n  onTranscodeJobsChange: function () {\n    const state = this.getState(this.status);\n    this.resetState();\n    this.ui.status.addClass(state);\n  },\n  onClick: function (event: any) {\n    event.preventDefault();\n    dispatcher.trigger(\n      'show:modal',\n      new VersionGeneratorMetadataModal({\n        model: this.model,\n        listModel: this.model.get('children'),\n        transcodeJobs: this.transcodeJobs,\n        pausedSetting: this.pausedSetting,\n      })\n    );\n  },\n  onRetryClick: function (event: any) {\n    event.preventDefault();\n    event.stopImmediatePropagation();\n    commands.execute('reprocessVersionGenerator', { generator: this.model });\n  },\n  onEditClick: function (event: any) {\n    event.preventDefault();\n    event.stopImmediatePropagation();\n    dispatcher.trigger('show:modal', new ConvertModal({ model: this.model }));\n  },\n  onDeleteClick: function (event: any) {\n    event.preventDefault();\n    event.stopImmediatePropagation();\n    commands.execute('deleteVersionGenerator', { generator: this.model });\n  },\n});\nexport default VersionGeneratorListItem;\n","import $ from 'jquery';\nimport Sortable from 'sortablejs';\nimport _ from 'underscore';\nimport BaseList from 'app/js/views/lists/BaseList';\nimport VersionGeneratorListEmptyView from 'app/js/views/lists/library/convert/VersionGeneratorListEmptyView';\nimport VersionGeneratorListItem from 'app/js/views/lists/library/convert/VersionGeneratorListItem';\n\nconst VersionGeneratorList = BaseList.extend({\n  //\n  // Properties\n\n  tagName: 'ol',\n  className: 'list media-list playlist-items',\n  itemView: VersionGeneratorListItem,\n  emptyView: VersionGeneratorListEmptyView,\n  sorted: true,\n\n  //\n  // Listeners\n\n  onRender: function () {\n    if (this.sortable) {\n      this.sortable.destroy();\n    }\n\n    this.sortable = new Sortable(this.el, {\n      onUpdate: _.bind(this.onItemMove, this),\n      handle: '.sortable-handle',\n      animation: 200,\n      scroll: true,\n      scrollSensitivity: 100,\n      scrollSpeed: 2,\n    });\n  },\n\n  onClose: function () {\n    if (this.sortable) {\n      this.sortable.destroy();\n    }\n  },\n\n  onItemMove: function (event: any) {\n    const movedItemID = $(event.item).data('generator-id');\n    const previousItemID = $(event.item).prev().data('generator-id');\n\n    this.collection.parent.moveItem(movedItemID, previousItemID);\n  },\n});\n\nexport default VersionGeneratorList;\n","import _ from 'underscore';\nimport Marionette from 'app/js/initializers/extensions/MarionetteExtension';\nimport serverFeatures from 'app/js/models/server/serverFeatures';\n// @ts-expect-error ts-migrate(2307) FIXME: Cannot find module 'app/templates/setti... Remove this comment to see the full error message\nimport tpl from 'app/templates/settings/server/ServerSettingsVersionsErrorView.tpl';\n\nconst ServerSettingsVersionsErrorView = Marionette.ItemView.extend({\n  //\n  // Properties\n\n  template: tpl,\n\n  //\n  // Control\n\n  serializeData: function () {\n    return {\n      isTranscoderRequired: !this.model.get('transcoderVideo'),\n      isUpgradeRequired: !this.model.supports('streamReady'),\n      escapedMinServerVersion: _.escape(serverFeatures.streamReady),\n    };\n  },\n});\n\nexport default ServerSettingsVersionsErrorView;\n","import $ from 'jquery';\nimport _ from 'underscore';\nimport commands from 'app/js/commands/commands';\nimport stateMachineMixin from 'app/js/mixins/views/stateMachineMixin';\nimport BackgroundProcessingListCollection from 'app/js/models/library/convert/BackgroundProcessingListCollection';\nimport navigateToRoute from 'app/js/v4/routes/navigateToRoute';\nimport LoadingView from 'app/js/views/LoadingView';\nimport VersionGeneratorList from 'app/js/views/lists/library/convert/VersionGeneratorList';\nimport ServerSettingsPane from 'app/js/views/settings/server/ServerSettingsPane';\nimport ServerSettingsVersionsErrorView from 'app/js/views/settings/server/ServerSettingsVersionsErrorView';\n// @ts-expect-error ts-migrate(2307) FIXME: Cannot find module 'app/templates/setti... Remove this comment to see the full error message\nimport tpl from 'app/templates/settings/server/ServerSettingsVersionsPane.tpl';\n\nconst ServerSettingsVersionsPane = ServerSettingsPane.extend({\n  mixins: [stateMachineMixin],\n  //\n  // Properties\n  className: 'versions-container',\n  template: tpl,\n  ui: {\n    message: '.versions-status-message',\n  },\n  regions: {\n    listRegion: '.background-processing-list-region',\n  },\n  events: {\n    'click .delete-all-btn': 'onDeleteAllVersionsClick',\n    'click .status-conversion-btn': 'onStatusConversionClick',\n  },\n  //\n  // Init\n  initialize: function () {\n    this.pausedSetting = this.collection.get('BackgroundQueueIdlePaused');\n    this.playlists = new BackgroundProcessingListCollection([], {\n      server: this.model,\n      allowInCache: true,\n    });\n    this.transcodeJobs = this.model\n      .get(__PLATFORM__)\n      .get('backgroundTranscodeJobs');\n  },\n  //\n  // States\n  initialState: 'loading',\n  states: {\n    loading: {\n      nextState: 'list',\n      onEnter: function () {\n        const isSupported = (this as any).model.supports('streamReady');\n        const canTranscode = (this as any).model.get('transcoderVideo');\n        (this as any).listRegion.show(new LoadingView({ inline: true }));\n        if (!isSupported || !canTranscode) {\n          (this as any).enterState('error');\n          return;\n        }\n        let promise = $.when(\n          (this as any).playlists.populate(),\n          (this as any).transcodeJobs.fetch()\n        );\n        promise = promise.then(\n          _.bind(function () {\n            // @ts-expect-error ts-migrate(2683) FIXME: 'this' implicitly has type 'any' because it does n... Remove this comment to see the full error message\n            this.playlist = this.playlists.first();\n            // @ts-expect-error ts-migrate(2683) FIXME: 'this' implicitly has type 'any' because it does n... Remove this comment to see the full error message\n            if (this.playlist) {\n              // @ts-expect-error ts-migrate(2683) FIXME: 'this' implicitly has type 'any' because it does n... Remove this comment to see the full error message\n              this.generators = this.playlist.get('children');\n              // @ts-expect-error ts-migrate(2683) FIXME: 'this' implicitly has type 'any' because it does n... Remove this comment to see the full error message\n              return this.generators.fetch();\n            } else {\n              return $.Deferred().reject().promise();\n            }\n          }, this)\n        );\n        promise.done(\n          (this as any).whenRendered(function () {\n            // @ts-expect-error ts-migrate(2683) FIXME: 'this' implicitly has type 'any' because it does n... Remove this comment to see the full error message\n            this.enterNextState();\n          })\n        );\n        promise.fail(\n          (this as any).whenRendered(function () {\n            // @ts-expect-error ts-migrate(2683) FIXME: 'this' implicitly has type 'any' because it does n... Remove this comment to see the full error message\n            this.enterState('error');\n          })\n        );\n      },\n    },\n    list: {\n      onEnter: function () {\n        (this as any).toggleMessage();\n        (this as any).listenTo(\n          (this as any).generators,\n          'reset add remove',\n          (this as any).toggleMessage\n        );\n        (this as any).listRegion.show(\n          new VersionGeneratorList({\n            collection: (this as any).generators,\n            itemViewOptions: {\n              transcodeJobs: (this as any).transcodeJobs,\n              pausedSetting: (this as any).pausedSetting,\n            },\n          })\n        );\n      },\n      onExit: function () {\n        (this as any).stopListening((this as any).generators);\n      },\n    },\n    error: {\n      onEnter: function () {\n        (this as any).listRegion.show(\n          new ServerSettingsVersionsErrorView({ model: (this as any).model })\n        );\n      },\n    },\n  },\n  //\n  // Control\n  toggleMessage: function () {\n    this.ui.message.toggleClass('hidden', !this.generators.length);\n  },\n  //\n  // Listeners\n  onRender: function () {\n    this.enterNextState();\n  },\n  onDeleteAllVersionsClick: function (event: any) {\n    event.preventDefault();\n    commands.execute('deleteAllVersionGenerators', { server: this.model }).then(\n      _.bind(function () {\n        // @ts-expect-error ts-migrate(2683) FIXME: 'this' implicitly has type 'any' because it does n... Remove this comment to see the full error message\n        return this.generators.fetch();\n      }, this)\n    );\n  },\n  onStatusConversionClick: function (event: any) {\n    event.preventDefault();\n    navigateToRoute('serverSettings', {\n      machineIdentifier: this.model.id,\n      settingsSection: 'status',\n      settingsGroup: 'conversion',\n    });\n  },\n});\nexport default ServerSettingsVersionsPane;\n","import $ from 'jquery';\nimport _ from 'underscore';\nimport { resolve } from 'app/js/adapters/adapters';\nimport Backbone from 'app/js/initializers/extensions/BackboneExtension';\nimport Marionette from 'app/js/initializers/extensions/MarionetteExtension';\nimport { checkForServerUpdate } from 'app/js/stores/actions/serverUpdateActions';\nimport { saveExperienceSettings } from 'app/js/stores/actions/userActions';\nimport dispatcher from 'app/js/utils/dispatcher';\nimport path from 'app/js/utils/url/path';\nimport navigateToRoute from 'app/js/v4/routes/navigateToRoute';\nimport ServerSettingsAgentsPane from 'app/js/views/settings/server/ServerSettingsAgentsPane';\nimport ServerSettingsChannelsPane from 'app/js/views/settings/server/ServerSettingsChannelsPane';\nimport ServerSettingsGeneralPane from 'app/js/views/settings/server/ServerSettingsGeneralPane';\nimport ServerSettingsLanguagesPane from 'app/js/views/settings/server/ServerSettingsLanguagesPane';\nimport ServerSettingsPane from 'app/js/views/settings/server/ServerSettingsPane';\nimport ServerSettingsRemoteAccessPane from 'app/js/views/settings/server/ServerSettingsRemoteAccessPane';\nimport ServerSettingsVersionsPane from 'app/js/views/settings/server/ServerSettingsVersionsPane';\n// @ts-expect-error ts-migrate(2307) FIXME: Cannot find module 'app/templates/setti... Remove this comment to see the full error message\nimport tpl from 'app/templates/settings/server/ServerSettingsView.tpl';\n\nconst ServerSettingsInnerView = Marionette.Layout.extend({\n  //\n  // Properties\n\n  className: 'server-settings-container',\n  template: tpl,\n\n  remoteAccessDecorators: {\n    connecting: 'unknown',\n    disconnecting: 'unknown',\n    unreachable: 'error',\n    ok: 'success',\n  },\n\n  regions: {\n    serverDropdown: '.filter-bar',\n    nav: '.nav-region',\n    pane: '.pane-region',\n  },\n\n  events: {\n    'click .toggle-advanced-btn': 'onToggleAdvancedClick',\n  },\n\n  panes: {\n    general: {\n      constructor: ServerSettingsGeneralPane,\n      group: 'general',\n      title: 'General',\n      isVisible: true,\n    },\n    remoteAccess: {\n      constructor: ServerSettingsRemoteAccessPane,\n      group: 'remoteAccess',\n      title: 'Remote Access',\n      isVisible: true,\n    },\n    versions: {\n      constructor: ServerSettingsVersionsPane,\n      group: 'versions',\n      title: 'Optimized Versions',\n      isVisible: true,\n    },\n    agents: {\n      constructor: ServerSettingsAgentsPane,\n      group: 'agents',\n      title: 'Agents',\n      isVisible: true,\n    },\n    library: {\n      constructor: ServerSettingsPane,\n      group: 'library',\n      title: 'Library',\n    },\n    channels: {\n      constructor: ServerSettingsChannelsPane,\n      group: 'channels',\n      title: 'Plugins',\n      isVisible: true,\n    },\n    network: {\n      constructor: ServerSettingsPane,\n      group: 'network',\n      title: 'Network',\n    },\n    transcoder: {\n      constructor: ServerSettingsPane,\n      group: 'transcoder',\n      title: 'Transcoder',\n    },\n    languages: {\n      constructor: ServerSettingsLanguagesPane,\n      group: 'account.language',\n      title: 'Languages',\n      isVisible: true,\n    },\n    dlna: {\n      constructor: ServerSettingsPane,\n      group: 'dlna',\n      title: 'DLNA',\n    },\n    butler: {\n      constructor: ServerSettingsPane,\n      group: 'butler',\n      title: 'Scheduled Tasks',\n    },\n    extras: {\n      constructor: ServerSettingsPane,\n      group: 'extras',\n      title: 'Extras',\n    },\n  },\n\n  //\n  // Init\n\n  initialize: function (options: any) {\n    this.defaultGroup = options.group || 'general';\n    this.account = options.account;\n    this.cloudAccount = options.cloudAccount;\n    this.channelSettings = options.channelSettings;\n\n    // Work with a temporary settings collection, so we can make changes,\n    // which may be discarded if the user does not save, without affecting\n    // the working setting models.\n    this.tempSettings = this.collection.cloneDeep();\n    this.tempAccount = this.account.clone();\n    this.tempChannelSettings = this.channelSettings.cloneDeep();\n    this.changes = {};\n\n    const experienceSettingsModel = resolve('appModel')\n      .get('user')\n      .get('experienceSettings');\n\n    const showAdvanced = experienceSettingsModel.get('showAdvancedSettings');\n    this.$el.toggleClass('show-advanced', showAdvanced);\n\n    this.initGroups();\n\n    // Check if the plex.tv can reach the server, so our Remote Access page\n    // reflects reality.\n    if (this.model.supports('reachability')) {\n      const url = '/myplex/refreshReachability';\n      const xhrOptions = _.extend(this.model.getXHROptions(url), {\n        type: 'PUT',\n      });\n\n      $.ajax(xhrOptions);\n    }\n\n    this.listenTo(dispatcher, 'shortcut:save', this.saveChanges);\n    this.listenTo(this.collection, 'change:value', this.onSettingValueChange);\n  },\n\n  initGroups: function () {\n    const availableGroups = _.keys(this.panes);\n    const representedGroups = _.unique(\n      this.collection\n        .filter(\n          (setting: any) => setting.get('group') && !setting.get('hidden')\n        )\n        .map((setting: any) => setting.get('group'))\n    );\n\n    this.groups = new Backbone.Collection();\n\n    // Only show custom panes or panes that actually have settings returned\n    // by the server.\n\n    availableGroups.forEach((availableGroup) => {\n      const paneDef = this.panes[availableGroup];\n      const isVisible = paneDef.isVisible;\n\n      // isVisible true forces visibility\n      // isVisible false forces suppression\n      // isVisible false-y falls back to inclusion in server-provided groups\n      if (\n        isVisible === true ||\n        (isVisible !== false && _.contains(representedGroups, availableGroup))\n      ) {\n        this.addGroup(availableGroup, paneDef);\n      }\n    });\n\n    // Create new pane definitions for groups that were returned by the\n    // server, but not represented by a pane.\n\n    _.each(\n      representedGroups,\n      function (representedGroup) {\n        if (!_.contains(availableGroups, representedGroup)) {\n          const paneDef = {\n            constructor: ServerSettingsPane,\n            group: representedGroup,\n            title: representedGroup,\n          };\n\n          // @ts-expect-error ts-migrate(2683) FIXME: 'this' implicitly has type 'any' because it does n... Remove this comment to see the full error message\n          this.panes[representedGroup] = paneDef;\n          // @ts-expect-error ts-migrate(2683) FIXME: 'this' implicitly has type 'any' because it does n... Remove this comment to see the full error message\n          this.addGroup(representedGroup, paneDef);\n        }\n      },\n      this\n    );\n  },\n\n  addGroup: function (id: any, paneDef: any) {\n    const attrs = _.omit(paneDef, 'constructor');\n    attrs.id = id;\n\n    this.groups.add(attrs);\n  },\n\n  //\n  // Control\n\n  showPane: function (paneID: any) {\n    if (this.currentPane) {\n      // Avoid switching panes while we are waiting for changes to save.\n      if (this.currentPane.isActive) {\n        return this.currentPane;\n      }\n\n      this.stopListening(this.currentPane);\n      this.flushChanges();\n    }\n\n    const paneDef = this.panes[paneID];\n\n    if (!paneDef || !this.groups.get(paneID)) {\n      // Need to do a full navigation so the side bar and title\n      // are updated.\n      navigateToRoute('serverSettings', {\n        machineIdentifier: this.model.id,\n        settingsSection: 'settings',\n        settingsGroup: 'general',\n      });\n    }\n\n    const PaneViewConstructor = paneDef.constructor;\n    const view = new PaneViewConstructor({\n      model: this.model,\n      collection: this.tempSettings,\n      account: this.tempAccount,\n      cloudAccount: this.cloudAccount,\n      channelSettings: this.tempChannelSettings,\n      group: paneDef.group,\n      changes: this.changes,\n    });\n\n    this.currentPane = view;\n    this.pane.show(view);\n\n    this.listenTo(this.currentPane, 'save', this.saveChanges);\n\n    return view;\n  },\n\n  flushChanges: function () {\n    if (this.currentPane.changes) {\n      _.extend(this.changes, this.currentPane.changes);\n    }\n  },\n\n  saveChanges: function () {\n    this.flushChanges();\n\n    if (this.currentPane.isDisabled || this.currentPane.isActive) {\n      return;\n    }\n\n    this.currentPane.triggerMethod('before:save');\n\n    const requests = [];\n    const channelChanges = this.getPrefixedChanges('channel.');\n    const accountChanges = this.getPrefixedChanges('account.');\n\n    // The settings collections do not have a save method, but we can call\n    // save on a single model and pass it everything we want to change.\n\n    if (!_.isEmpty(channelChanges)) {\n      const channelParams = this.channelSettings\n        .first()\n        .getSaveParams(channelChanges);\n      const channelRootUrl = _.result(this.channelSettings, 'url');\n      const channelUrl = path.join([channelRootUrl, '/set'], channelParams);\n\n      requests.push($.ajax(this.model.getXHROptions(channelUrl)));\n    }\n\n    if (!_.isEmpty(accountChanges)) {\n      requests.push(this.account.save(accountChanges));\n    }\n\n    if (!_.isEmpty(this.changes)) {\n      requests.push(this.collection.first().save(this.changes));\n    }\n\n    // eslint-disable-next-line prefer-spread\n    const promise = $.when.apply($, requests);\n\n    promise.done(\n      _.bind(function () {\n        // Propagate the changes from the temp models to the models from the\n        // working settings collection. We do not need to do this with other\n        // temp models or collections since those are temporarily created for\n        // this view, while the settings collection lifespan extends past this\n        // view's lifespan.\n\n        // @ts-expect-error ts-migrate(2683) FIXME: 'this' implicitly has type 'any' because it does n... Remove this comment to see the full error message\n        const changedKeys = _.keys(this.changes);\n        _.each(\n          changedKeys,\n          function (changedKey) {\n            // @ts-expect-error ts-migrate(2683) FIXME: 'this' implicitly has type 'any' because it does n... Remove this comment to see the full error message\n            const tempModel = this.tempSettings.get(changedKey);\n            // @ts-expect-error ts-migrate(2683) FIXME: 'this' implicitly has type 'any' because it does n... Remove this comment to see the full error message\n            const setting = this.collection.get(changedKey);\n\n            setting.set('value', tempModel.get('value'));\n\n            if (changedKey === 'ButlerUpdateChannel') {\n              // @ts-expect-error ts-migrate(2683) FIXME: 'this' implicitly has type 'any' because it does n... Remove this comment to see the full error message\n              this.onButlerUpdateChannelChange();\n            }\n          },\n          // @ts-expect-error ts-migrate(2683) FIXME: 'this' implicitly has type 'any' because it does n... Remove this comment to see the full error message\n          this\n        );\n\n        // @ts-expect-error ts-migrate(2683) FIXME: 'this' implicitly has type 'any' because it does n... Remove this comment to see the full error message\n        this.changes = {};\n\n        // @ts-expect-error ts-migrate(2683) FIXME: 'this' implicitly has type 'any' because it does n... Remove this comment to see the full error message\n        if (this.currentPane) {\n          // @ts-expect-error ts-migrate(2683) FIXME: 'this' implicitly has type 'any' because it does n... Remove this comment to see the full error message\n          if (this.currentPane.changes) {\n            // @ts-expect-error ts-migrate(2683) FIXME: 'this' implicitly has type 'any' because it does n... Remove this comment to see the full error message\n            this.currentPane.changes = {};\n          }\n\n          // @ts-expect-error ts-migrate(2683) FIXME: 'this' implicitly has type 'any' because it does n... Remove this comment to see the full error message\n          this.currentPane.triggerMethod('after:save', true);\n        }\n      }, this)\n    );\n\n    promise.fail(\n      _.bind(function () {\n        // @ts-expect-error ts-migrate(2683) FIXME: 'this' implicitly has type 'any' because it does n... Remove this comment to see the full error message\n        if (this.currentPane) {\n          // @ts-expect-error ts-migrate(2683) FIXME: 'this' implicitly has type 'any' because it does n... Remove this comment to see the full error message\n          this.currentPane.triggerMethod('after:save', false);\n        }\n      }, this)\n    );\n  },\n\n  getPrefixedChanges: function (prefix: any) {\n    const prefixChanges = {};\n\n    _.each(\n      this.changes,\n      function (value, key) {\n        const hasPrefix = key.lastIndexOf(prefix, 0) === 0;\n\n        if (hasPrefix) {\n          // @ts-expect-error ts-migrate(7053) FIXME: Element implicitly has an 'any' type because expre... Remove this comment to see the full error message\n          prefixChanges[key.substring(prefix.length)] = value;\n          // @ts-expect-error ts-migrate(2683) FIXME: 'this' implicitly has type 'any' because it does n... Remove this comment to see the full error message\n          delete this.changes[key];\n        }\n      },\n      this\n    );\n\n    return prefixChanges;\n  },\n\n  //\n  // Listeners\n\n  onRender: function () {\n    this.showPane(this.defaultGroup);\n  },\n\n  onClose: function () {\n    this.currentPane = null;\n  },\n\n  onSettingValueChange: function (setting: any, value: any) {\n    this.tempSettings.get(setting.id).set('value', value);\n  },\n\n  onServerConnectedChange: function (server: any, connected: any) {\n    if (!connected) {\n      return;\n    }\n\n    // We no longer care about this server's availability changes, since\n    // it's back and in good shape.\n    this.stopListening(\n      server,\n      'change:connected',\n      this.onServerConnectedChange\n    );\n\n    // If the user is still viewing settings, make sure the server that\n    // installed the update is retained as the primary.\n    const appModel = resolve('appModel');\n    appModel.set('primaryServer', server);\n  },\n\n  onToggleAdvancedClick: function (event: any) {\n    event.preventDefault();\n\n    const showingAdvanced = this.$el.hasClass('show-advanced');\n    const appStore = resolve('appStore');\n    appStore.dispatch(\n      saveExperienceSettings({ showAdvancedSettings: !showingAdvanced })\n    );\n\n    this.$el.toggleClass('show-advanced', !showingAdvanced);\n  },\n\n  onButlerUpdateChannelChange: function () {\n    const autoCheckSetting = this.collection.get('ButlerTaskCheckForUpdates');\n    const canAutoUpdate = autoCheckSetting?.get('value');\n\n    if (canAutoUpdate) {\n      resolve('appStore').dispatch(\n        checkForServerUpdate({\n          serverEntityID: this.model.entityID(),\n          download: false,\n        })\n      );\n    }\n  },\n});\n\nexport default ServerSettingsInnerView;\n","\n    import PropTypes from 'prop-types';\n    import React from 'react';\n    import styles from 'app/js/views/v3/components/core/base/PlexIcon.css';\n\n    function IconAlertRound(props) {\n      const label = props['aria-label'];\n      const className = props.className;\n      const style = props.style;\n\n      const svgProps = {\"viewBox\":\"0 0 560 560\",\"xmlns\":\"http://www.w3.org/2000/svg\",\"strokeMiterlimit\":\"1.414\",\"strokeLinejoin\":\"round\",\"id\":\"plex-icon-alert-round-560\"};\n\n      svgProps['aria-hidden'] = !label;\n      svgProps.style = style;\n      svgProps.className = styles.plexIcon + (className ? ' ' + className : '');\n\n      const children = [React.createElement.apply(React, ['path', {\"d\":\"m280 0c154.536 0 280 125.464 280 280 0 154.536-125.464 280-280 280-154.536 0-280-125.464-280-280 0-154.536 125.464-280 280-280m-40 420c0 22.077 17.923 40 40 40 22.077 0 40-17.923 40-40 0-22.077-17.923-40-40-40-22.077 0-40 17.923-40 40m60-320l-40 0c-11.038 0-20 8.962-20 20l0 200c0 11.038 8.962 20 20 20l40 0c11.038 0 20-8.962 20-20l0-200c0-11.038-8.962-20-20-20\"}].concat([]))];\n\n      if (label) {\n        children.unshift(React.createElement('title', null, label));\n      }\n\n      // Arrays require a key, but a fixed number of elements don't.\n      // Spread the elements since it'll be a fixed number anyways\n      return React.createElement.apply(React, ['svg', svgProps].concat(children));\n    };\n\n    IconAlertRound.propTypes = {\n      'aria-label': PropTypes.string,\n      className: PropTypes.string,\n      style: PropTypes.object\n    };\n\n    export default IconAlertRound;\n  ","// extracted by mini-css-extract-plugin\nexport default {\"container\":\"AxlCT\",\"messageContainer\":\"dPzvq\",\"message\":\"CNIgW\",\"icon\":\"HtYb1\",\"button\":\"jg2GF r2dcz x5jRQ\"};","/* eslint-plugin-disable @typescript-eslint */\n\nimport React from 'react';\nimport t from 'app/js/utils/t';\nimport Button from 'app/js/views/v3/components/core/buttons/Button';\nimport * as kinds from 'app/js/views/v3/helpers/props/kinds';\nimport getServerSettingsRoute from 'app/js/views/v3/helpers/routes/getServerSettingsRoute';\nimport IconAlertRound from 'app/glyphs/alert-round-560.svg';\nimport styles from './DVROutdatedServerBanner.css';\n\ntype DVROutdatedServerBannerProps = {\n  className: string;\n  machineIdentifier: string;\n  activeConnectionUri: string;\n  shouldRender: boolean;\n  showButton: boolean;\n};\n\nfunction DVROutdatedServerBanner({\n  machineIdentifier,\n  activeConnectionUri,\n  shouldRender,\n}: DVROutdatedServerBannerProps) {\n  if (!shouldRender) {\n    return null;\n  }\n\n  const encodedMachineIdentifier = encodeURIComponent(machineIdentifier);\n  const dvrSettingsRoute = getServerSettingsRoute('manage', 'dvr');\n  const localUrl = `${activeConnectionUri}/web/index.html${dvrSettingsRoute}`;\n  const updateUrl = `#!/server/${encodedMachineIdentifier}/update`;\n\n  return (\n    <div className={styles.container}>\n      <div className={styles.messageContainer}>\n        <IconAlertRound className={styles.icon} />\n        <div className={styles.message}>\n          {t(\n            \"Your Plex Media Server doesn't support setting up tuner devices on this version of the Plex Web App.\"\n          )}\n        </div>\n      </div>\n\n      <Button\n        className={styles.button}\n        kind={kinds.DARK}\n        target=\"_blank\"\n        to={updateUrl}\n      >\n        {t('Update Server')}\n      </Button>\n\n      <Button\n        className={styles.button}\n        kind={kinds.DARK}\n        target=\"_blank\"\n        to={localUrl}\n      >\n        {t('Use Local Plex Web App')}\n      </Button>\n    </div>\n  );\n}\n\nDVROutdatedServerBanner.defaultProps = {\n  className: styles.container,\n  showButton: true,\n};\nexport default DVROutdatedServerBanner;\n","/* eslint-plugin-disable @typescript-eslint */\n\nimport { connect } from 'react-redux';\nimport { createSelector } from 'reselect';\nimport serverFeatures from 'app/js/models/server/serverFeatures';\nimport createUnstableServerSelector from 'app/js/stores/selectors/server/createUnstableServerSelector';\nimport isVersionOrNewer from 'app/js/utils/isVersionOrNewer';\nimport DVROutdatedServerBanner from './DVROutdatedServerBanner';\n\nfunction createMapStateToProps() {\n  return createSelector(createUnstableServerSelector(), (server) => {\n    const shouldRender =\n      server.version &&\n      !isVersionOrNewer(server.version, serverFeatures.v4DVRSetup);\n\n    return {\n      activeConnectionUri: server.activeConnection.uri,\n      machineIdentifier: server.machineIdentifier,\n      shouldRender,\n    };\n  });\n}\n\nexport default connect(createMapStateToProps)(DVROutdatedServerBanner);\n","/* eslint-plugin-disable @typescript-eslint */\n\nimport classNames from 'classnames';\nimport React from 'react';\nimport styles from './SettingsPageHeader.css';\n\ntype SettingsPageHeaderProps = {\n  className: string;\n  children: React.ReactNode;\n  hasCommunityFeatures?: boolean;\n};\n\nfunction SettingsPageHeader(props: SettingsPageHeaderProps) {\n  return (\n    <h2\n      className={classNames(\n        props.className,\n        props.hasCommunityFeatures && styles.communityFeatures\n      )}\n    >\n      {props.children}\n    </h2>\n  );\n}\n\nSettingsPageHeader.defaultProps = {\n  className: styles.header,\n};\n\nexport default SettingsPageHeader;\n","// extracted by mini-css-extract-plugin\nexport default {\"header\":\"fIzvP\",\"communityFeatures\":\"pSYJh\"};","/* eslint-plugin-disable @typescript-eslint */\n\nexport default function getServerDetail(serverAttrs: any) {\n  const { friendlyName, isShared } = serverAttrs;\n\n  return isShared ? friendlyName : undefined;\n}\n","/* eslint-plugin-disable @typescript-eslint */\n\nexport default function getServerTitle(serverAttrs: any) {\n  const { friendlyName, sourceTitle, isShared } = serverAttrs;\n\n  return isShared ? sourceTitle : friendlyName;\n}\n","/* eslint-plugin-disable @typescript-eslint */\n\nimport React from 'react';\nimport DashSeparator from 'app/js/views/v3/components/core/base/DashSeparator';\nimport DVROutdatedServerBannerConnector from 'app/js/views/v3/components/livetv/dvr/DVROutdatedServerBannerConnector';\nimport SettingsPageHeader from 'app/js/views/v3/components/pages/settings/SettingsPageHeader';\nimport getServerDetail from 'app/js/views/v3/helpers/getServerDetail';\nimport getServerTitle from 'app/js/views/v3/helpers/getServerTitle';\n\ntype ServerSettingsPageHeaderProps = {\n  serverEntityID: string;\n  friendlyName: string;\n  sourceTitle?: string;\n  settingsTitle: string;\n  settingsGroup: string;\n  settingsSection: string;\n  isShared: boolean;\n};\n\nfunction ServerSettingsPageHeader(props: ServerSettingsPageHeaderProps) {\n  const {\n    serverEntityID,\n    friendlyName,\n    sourceTitle,\n    settingsTitle,\n    settingsGroup,\n    settingsSection,\n    isShared,\n  } = props;\n\n  const shouldRenderDVROutdatedServerBanner =\n    settingsSection === 'manage' && settingsGroup === 'dvr';\n  const serverTitleAttrs = { friendlyName, sourceTitle, isShared };\n  const title = getServerTitle(serverTitleAttrs);\n  const detail = getServerDetail(serverTitleAttrs);\n\n  const serverTitle = title && detail ? `${title} (${detail})` : title;\n\n  return (\n    <SettingsPageHeader>\n      {shouldRenderDVROutdatedServerBanner ? (\n        <DVROutdatedServerBannerConnector serverEntityID={serverEntityID} />\n      ) : null}\n      {serverTitle}\n      <DashSeparator />\n      {settingsTitle}\n    </SettingsPageHeader>\n  );\n}\n\nexport default ServerSettingsPageHeader;\n","/* eslint-plugin-disable @typescript-eslint */\n\nimport { connect } from 'react-redux';\nimport { createSelector } from 'reselect';\nimport _ from 'underscore';\nimport createUnstableServerSelector from 'app/js/stores/selectors/server/createUnstableServerSelector';\nimport serverSettingsSections from 'app/js/utils/constants/serverSettingsSections';\nimport ServerSettingsPageHeader from './ServerSettingsPageHeader';\n\nfunction createSettingsGroupTitleSelector() {\n  return createSelector(\n    // @ts-expect-error ts-migrate(6133) FIXME: 'appState' is declared but its value is never read... Remove this comment to see the full error message\n    (appState: any, { settingsSection }: any) => settingsSection,\n    // @ts-expect-error ts-migrate(6133) FIXME: 'appState' is declared but its value is never read... Remove this comment to see the full error message\n    (appState: any, { settingsGroup }: any) => settingsGroup,\n    (settingsSection, settingsGroup) => {\n      const section = _.findWhere(serverSettingsSections, {\n        key: settingsSection,\n      });\n      // @ts-expect-error ts-migrate(2532) FIXME: Object is possibly 'undefined'.\n      const group = _.findWhere(section.groups, { key: settingsGroup });\n\n      // @ts-expect-error ts-migrate(2532) FIXME: Object is possibly 'undefined'.\n      return group.title();\n    }\n  );\n}\n\nfunction createMapStateToProps() {\n  return createSelector(\n    createUnstableServerSelector(),\n    createSettingsGroupTitleSelector(),\n    (server, settingsGroupTitle) => {\n      return {\n        friendlyName: server ? server.friendlyName : '',\n        sourceTitle: server ? server.sourceTitle : '',\n        isShared: !!(server && server.isShared),\n        settingsTitle: settingsGroupTitle,\n      };\n    }\n  );\n}\n\nexport default connect(createMapStateToProps)(ServerSettingsPageHeader);\n","/* eslint-plugin-disable @typescript-eslint */\n\nimport React from 'react';\nimport PageConnector from 'app/js/views/v3/components/pages/PageConnector';\nimport styles from './SettingsPage.css';\n\ntype SettingsPageProps = {\n  children: React.ReactNode;\n  className: string;\n  metricsPage: string;\n  metricsPane?: string;\n  scrollTop?: number;\n  onScrollPositionChange?: (...args: any[]) => any;\n};\n\nfunction SettingsPage({\n  children,\n  className,\n  metricsPage,\n  metricsPane,\n  scrollTop,\n  onScrollPositionChange,\n}: SettingsPageProps) {\n  return (\n    <PageConnector\n      autoScroll={true}\n      metricsPage={metricsPage}\n      metricsProperties={{ pane: metricsPane }}\n      scrollTop={scrollTop}\n      onScrollPositionChange={onScrollPositionChange}\n    >\n      <div className={className}>{children}</div>\n    </PageConnector>\n  );\n}\n\nSettingsPage.defaultProps = {\n  className: styles.content,\n};\n\nexport default SettingsPage;\n","// extracted by mini-css-extract-plugin\nexport default {\"content\":\"xLorI t0i7E\"};","/* eslint-plugin-disable @typescript-eslint */\n\nimport React from 'react';\nimport getServerSettingsMetricsProps from 'app/js/utils/getServerSettingsMetricsProps';\nimport t from 'app/js/utils/t';\nimport ServerSettingsInnerView from 'app/js/views/settings/server/ServerSettingsInnerView';\nimport MarionetteComponent from 'app/js/views/v3/components/MarionetteComponent';\nimport Spinner from 'app/js/views/v3/components/core/Spinner';\nimport ServerUnauthorizedErrorPage from 'app/js/views/v3/components/pages/ServerUnauthorizedErrorPage';\nimport ServerUnavailableErrorPageConnector from 'app/js/views/v3/components/pages/ServerUnavailableErrorPageConnector';\nimport EmptyPage from 'app/js/views/v3/components/pages/empty/EmptyPage';\nimport ErrorPage from 'app/js/views/v3/components/pages/empty/ErrorPage';\nimport InstallingServerUpdatePageConnector from 'app/js/views/v3/components/pages/empty/InstallingServerUpdatePageConnector';\nimport ServerSettingsPageHeaderConnector from 'app/js/views/v3/components/pages/serverSettings/ServerSettingsPageHeaderConnector';\nimport SettingsPage from 'app/js/views/v3/components/pages/settings/SettingsPage';\n\ntype ServerSettingsPageProps = {\n  serverEntityID: string;\n  providerEntityID: string;\n  machineIdentifier: string;\n  providerIdentifier: string;\n  viewDataErrorMessage?: string;\n  isViewDataPending: boolean;\n  isUnavailable: boolean;\n  isUnauthorized: boolean;\n  isInstallingServerUpdate: boolean;\n  isSettingAccessible: boolean;\n  isSettingsPending: boolean;\n  settingsSection?: string;\n  settingsGroup?: string;\n  pageComponent?: React.ReactElement;\n  paneComponent?: React.ReactElement;\n  contentView?: (...args: any[]) => any;\n};\n\nfunction ServerSettingsPage(props: ServerSettingsPageProps) {\n  const {\n    serverEntityID,\n    providerEntityID,\n    machineIdentifier,\n    providerIdentifier,\n    viewDataErrorMessage,\n    isViewDataPending,\n    isInstallingServerUpdate,\n    isUnavailable,\n    isUnauthorized,\n    isSettingAccessible,\n    isSettingsPending,\n    settingsSection,\n    settingsGroup,\n    pageComponent: Page,\n    paneComponent: Pane,\n    contentView,\n    ...otherOptions\n  } = props;\n\n  if (isInstallingServerUpdate) {\n    return (\n      <InstallingServerUpdatePageConnector serverEntityID={serverEntityID} />\n    );\n  }\n\n  if (isViewDataPending) {\n    return (\n      <EmptyPage>\n        <Spinner />\n      </EmptyPage>\n    );\n  }\n\n  if (isUnavailable) {\n    return (\n      <ServerUnavailableErrorPageConnector\n        serverEntityID={props.serverEntityID}\n      />\n    );\n  }\n\n  if (isUnauthorized) {\n    return <ServerUnauthorizedErrorPage />;\n  }\n\n  if (viewDataErrorMessage) {\n    return <ErrorPage title={viewDataErrorMessage} />;\n  }\n\n  if (!isSettingAccessible) {\n    return isSettingsPending ? (\n      <EmptyPage>\n        <Spinner />\n      </EmptyPage>\n    ) : (\n      <ErrorPage\n        title={t('There was an unexpected error loading the settings')}\n      />\n    );\n  }\n\n  if (Page) {\n    return (\n      // @ts-expect-error ts-migrate(2604) FIXME: JSX element type 'Page' does not have any construc... Remove this comment to see the full error message\n      <Page\n        serverEntityID={serverEntityID}\n        {...getServerSettingsMetricsProps(settingsSection, settingsGroup)}\n      />\n    );\n  }\n\n  return (\n    <SettingsPage\n      {...getServerSettingsMetricsProps(settingsSection, settingsGroup)}\n    >\n      <ServerSettingsPageHeaderConnector\n        serverEntityID={serverEntityID}\n        settingsGroup={settingsGroup}\n        settingsSection={settingsSection}\n      />\n      {Pane ? (\n        // @ts-expect-error ts-migrate(2604) FIXME: JSX element type 'Pane' does not have any construc... Remove this comment to see the full error message\n        <Pane\n          machineIdentifier={machineIdentifier}\n          providerEntityID={providerEntityID}\n          providerIdentifier={providerIdentifier}\n          serverEntityID={serverEntityID}\n        />\n      ) : (\n        <MarionetteComponent\n          view={contentView || ServerSettingsInnerView}\n          viewOptions={otherOptions}\n        />\n      )}\n    </SettingsPage>\n  );\n}\n\nexport default ServerSettingsPage;\n","/* eslint-plugin-disable @typescript-eslint */\n\nimport { connect } from 'react-redux';\nimport { createSelector } from 'reselect';\nimport selectStableProvider from 'app/js/stores/selectors/provider/selectStableProvider';\nimport createUnstableServerSelector from 'app/js/stores/selectors/server/createUnstableServerSelector';\nimport createVisibleSettingsSectionsSelector from 'app/js/stores/selectors/settings/createVisibleSettingsSectionsSelector';\nimport ServerSettingsPage from 'app/js/views/v3/components/pages/serverSettings/ServerSettingsPage';\n\nfunction findGroup(settingsSections: any, sectionKey: any, groupKey: any) {\n  const section = settingsSections.find(\n    (settingsSection: any) => settingsSection.key === sectionKey\n  );\n  if (!section) {\n    return null;\n  }\n\n  return section.groups.find((group: any) => group.key === groupKey);\n}\n\nfunction createMapStateToProps() {\n  return createSelector(\n    // @ts-expect-error ts-migrate(6133) FIXME: 'appState' is declared but its value is never read... Remove this comment to see the full error message\n    (appState, { settingsSection }) => settingsSection,\n    // @ts-expect-error ts-migrate(6133) FIXME: 'appState' is declared but its value is never read... Remove this comment to see the full error message\n    (appState, { settingsGroup }) => settingsGroup,\n    createVisibleSettingsSectionsSelector(),\n    createUnstableServerSelector(),\n    selectStableProvider,\n    (settingsSection, settingsGroup, visibleSections, server, provider) => {\n      const group = findGroup(visibleSections, settingsSection, settingsGroup);\n\n      return {\n        machineIdentifier: server && server.machineIdentifier,\n        providerIdentifier: provider && provider.identifier,\n        isInstallingServerUpdate: !!(server && server.isInstallingServerUpdate),\n        isUnavailable: !!(server && server.isUnavailable),\n        isUnauthorized: !!(server && server.isUnauthorized),\n        isSettingAccessible: !!group,\n        isSettingsPending: !!(server && server[__PLATFORM__].isSettingsPending),\n        pageComponent: group && group.pageComponent,\n        paneComponent: group && group.paneComponent,\n      };\n    }\n  );\n}\n\nexport default connect(createMapStateToProps)(ServerSettingsPage);\n","/* eslint-plugin-disable @typescript-eslint */\n\nimport React from 'react';\nimport styles from './SidebarContainer.css';\n\ninterface SidebarContainerProps {\n  className?: string;\n  children?: React.ReactNode;\n}\n\nfunction SidebarContainer(props: SidebarContainerProps) {\n  const { className, children } = props;\n\n  return <div className={className}>{children}</div>;\n}\n\nSidebarContainer.defaultProps = {\n  className: styles.sidebarContainer,\n};\n\nexport default SidebarContainer;\n","// extracted by mini-css-extract-plugin\nexport default {\"sidebarContainer\":\"oHioq\"};","/* eslint-plugin-disable @typescript-eslint */\n\nimport React from 'react';\nimport Scroller from 'app/js/views/v3/components/core/base/Scroller';\nimport styles from './SidebarScroller.css';\n\ninterface SidebarScrollerProps {\n  className?: string;\n}\n\nfunction SidebarScroller(props: SidebarScrollerProps) {\n  const { className } = props;\n\n  // @ts-expect-error ts-migrate(2322) FIXME: Type '{ className: string | undefined; autoScroll:... Remove this comment to see the full error message\n  return <Scroller autoScroll={true} className={className} {...props} />;\n}\n\nSidebarScroller.defaultProps = {\n  className: styles.scroller,\n};\n\nexport default SidebarScroller;\n","// extracted by mini-css-extract-plugin\nexport default {\"scroller\":\"hnNof\"};","/* eslint-plugin-disable @typescript-eslint */\n\nimport classNames from 'classnames';\nimport React, { Component } from 'react';\nimport t from 'app/js/utils/t';\nimport MenuItem from 'app/js/views/v3/components/core/menus/MenuItem';\nimport shouldPureComponentUpdate from 'app/js/views/v3/helpers/shouldPureComponentUpdate';\nimport IconSelected from 'app/glyphs/selected-560.svg';\nimport styles from './ServerMenuItem.css';\n\ntype ServerMenuItemProps = {\n  className?: string;\n  friendlyNameClassName?: string;\n  detailsClassName?: string;\n  to?: string;\n  isSelected?: boolean;\n  isDisabled?: boolean;\n  identifier: string;\n  title?: string;\n  details?: string;\n  onPress?: (...args: any[]) => any;\n};\n\nclass ServerMenuItem extends Component<ServerMenuItemProps> {\n  static defaultProps = {\n    friendlyNameClassName: styles.serverMenuFriendlyName,\n    detailsClassName: styles.serverMenuDetails,\n  };\n\n  //\n  // Lifecycle\n\n  shouldComponentUpdate(nextProps: ServerMenuItemProps, nextState: any) {\n    // @ts-expect-error ts-migrate(2554) FIXME: Expected 5 arguments, but got 3.\n    return shouldPureComponentUpdate(this, nextProps, nextState);\n  }\n\n  //\n  // Render\n\n  render() {\n    const {\n      children,\n      className,\n      friendlyNameClassName,\n      detailsClassName,\n      to,\n      isDisabled,\n      isSelected,\n      identifier,\n      title,\n      details,\n      onPress,\n    } = this.props;\n\n    return (\n      <MenuItem\n        className={classNames(\n          className,\n          styles.serverMenuItem,\n          isSelected && styles.selectedServerMenuItem\n        )}\n        data-testid={'serverMenuItem--' + identifier}\n        isDisabled={isDisabled}\n        to={to}\n        onPress={onPress}\n      >\n        <div className={styles.serverMenuItemContainer}>\n          <div className={styles.serverMenuTitle}>\n            <div className={friendlyNameClassName}>{title}</div>\n            <div className={detailsClassName}>{details}</div>\n          </div>\n          <div className={styles.serverMenuIconContainer}>\n            {isSelected ? (\n              <IconSelected\n                aria-label={t('Selected')}\n                className={classNames(\n                  styles.serverMenuIcon,\n                  styles.selectedIcon\n                )}\n              />\n            ) : null}\n            {children}\n          </div>\n        </div>\n      </MenuItem>\n    );\n  }\n}\n\nexport default ServerMenuItem;\n","// extracted by mini-css-extract-plugin\nexport default {\"serverMenuItem\":\"jmSYk\",\"disabledServerMenuItem\":\"Bc9rG\",\"selectedServerMenuItem\":\"JLviq\",\"serverMenuItemContainer\":\"oy9Ev\",\"serverMenuTitle\":\"xXl6O\",\"serverMenuFriendlyName\":\"T9pMW\",\"serverMenuDetails\":\"lnVgV\",\"serverMenuIconContainer\":\"ajAdy\",\"serverMenuIcon\":\"nTAiW\",\"selectedIcon\":\"xtYms\",\"secureIcon\":\"pXMan\"};","/* eslint-plugin-disable @typescript-eslint */\n\nimport React from 'react';\nimport Spinner from 'app/js/views/v3/components/core/Spinner';\nimport ServerConnectionStatusIcon from 'app/js/views/v3/components/core/icons/ServerConnectionStatusIcon';\nimport * as sizes from 'app/js/views/v3/helpers/props/sizes';\nimport styles from './ServerSettingsStatusIcon.css';\n\ntype ServerSettingsStatusIconProps = {\n  className?: string;\n  isFullOwnedServer: boolean;\n  isInstallingServerUpdate: boolean;\n  isUnavailable: boolean;\n  isSettingsPending: boolean;\n  isRelayed: boolean;\n  isSecure: boolean;\n  isConnected: boolean;\n};\n\nfunction ServerSettingsStatusIcon(props: ServerSettingsStatusIconProps) {\n  const {\n    className,\n    isFullOwnedServer,\n    isInstallingServerUpdate,\n    isUnavailable,\n    isSettingsPending,\n  } = props;\n\n  if (\n    isInstallingServerUpdate ||\n    (isFullOwnedServer && isSettingsPending && !isUnavailable)\n  ) {\n    return (\n      <div className={className}>\n        <Spinner className={styles.spinner} size={sizes.SMALL} />\n      </div>\n    );\n  }\n\n  return <ServerConnectionStatusIcon {...props} />;\n}\n\nexport default ServerSettingsStatusIcon;\n","// extracted by mini-css-extract-plugin\nexport default {\"spinner\":\"GUgIr\"};","/* eslint-plugin-disable @typescript-eslint */\n\nexport default function getServerDetailWithStatus(detail: any, status: any) {\n  return detail && status ? `${status} (${detail})` : status || detail;\n}\n","/* eslint-plugin-disable @typescript-eslint */\n\nimport t from 'app/js/utils/t';\n\nfunction getServerStatus(props: any) {\n  const activeConnection = props.activeConnection;\n  let isConnecting = false;\n  let status;\n\n  if (props.isConnected && activeConnection) {\n    if (props.isOutOfDate) {\n      status = t('Needs Update');\n    } else if (activeConnection.relay) {\n      status = t('Indirect');\n    } else if (activeConnection.isPrivate) {\n      status = t('Nearby');\n    } else {\n      status = t('Remote');\n    }\n  } else if (props.isRelayed) {\n    status = t('Indirect');\n  } else if (props.isUnavailable) {\n    status = t('Unavailable');\n  } else if (props.isUnauthorized) {\n    status = t('Unauthorized');\n  } else {\n    isConnecting = true;\n    status = t('Connecting');\n  }\n\n  return { isConnecting, status };\n}\n\nexport default getServerStatus;\n","/* eslint-plugin-disable @typescript-eslint */\n\nimport { connect } from 'react-redux';\nimport { createSelector } from 'reselect';\nimport createUnstableServerSelector from 'app/js/stores/selectors/server/createUnstableServerSelector';\nimport ServerSettingsServerMenuItem from 'app/js/views/v3/components/sidebar/settings/ServerSettingsServerMenuItem';\n\nfunction createMapStateToProps() {\n  return createSelector(createUnstableServerSelector(), (server) => {\n    return {\n      machineIdentifier: server.machineIdentifier,\n      friendlyName: server.friendlyName,\n      sourceTitle: server.sourceTitle,\n      activeConnection: server.activeConnection,\n      isFullOwnedServer: server.isFullOwnedServer,\n      isInstallingServerUpdate: server.isInstallingServerUpdate,\n      isConnected: server.isConnected,\n      isShared: server.isShared,\n      isUnavailable: server.isUnavailable,\n      isSecure: server.isSecure,\n      isRelayed: server.isRelayed,\n      isSettingsPending: server[__PLATFORM__].isSettingsPending,\n    };\n  });\n}\n\nexport default connect(createMapStateToProps)(ServerSettingsServerMenuItem);\n","/* eslint-plugin-disable @typescript-eslint */\n\nimport classNames from 'classnames';\nimport React from 'react';\nimport ServerMenuItem from 'app/js/views/v3/components/sidebar/menu/ServerMenuItem';\nimport ServerSettingsStatusIcon from 'app/js/views/v3/components/sidebar/settings/ServerSettingsStatusIcon';\nimport getServerDetail from 'app/js/views/v3/helpers/getServerDetail';\nimport getServerDetailWithStatus from 'app/js/views/v3/helpers/getServerDetailWithStatus';\nimport getServerStatus from 'app/js/views/v3/helpers/getServerStatus';\nimport getServerTitle from 'app/js/views/v3/helpers/getServerTitle';\nimport getServerSettingsRoute from 'app/js/views/v3/helpers/routes/getServerSettingsRoute';\nimport styles from './ServerSettingsServerMenuItem.css';\n\ntype ServerSettingsServerMenuItemProps = {\n  machineIdentifier: string;\n  settingsSection?: string;\n  settingsGroup?: string;\n  friendlyName?: string;\n  sourceTitle?: string;\n  activeConnection?: any;\n  isFullOwnedServer: boolean;\n  isInstallingServerUpdate: boolean;\n  isSettingsPending: boolean;\n  isConnected: boolean;\n  isShared: boolean;\n  isUnavailable: boolean;\n  isSecure: boolean;\n  isRelayed: boolean;\n  isSelected: boolean;\n};\n\nfunction ServerSettingsServerMenuItem(\n  props: ServerSettingsServerMenuItemProps\n) {\n  const {\n    isSelected,\n    activeConnection,\n    isConnected,\n    isShared,\n    isUnavailable,\n    isSecure,\n    isRelayed,\n    machineIdentifier,\n    friendlyName,\n    sourceTitle,\n    isFullOwnedServer,\n    isInstallingServerUpdate,\n    isSettingsPending,\n    settingsSection,\n    settingsGroup,\n  } = props;\n\n  // To determine the server status; we pass through only the props that matter.\n  const serverTitleAttrs = {\n    activeConnection,\n    friendlyName,\n    sourceTitle,\n    isFullOwnedServer,\n    isShared,\n    isConnected,\n    isRelayed,\n    isUnavailable,\n  };\n\n  const { isConnecting, status } = getServerStatus(serverTitleAttrs);\n  const statusWithDetail = getServerDetailWithStatus(\n    getServerDetail(serverTitleAttrs),\n    status\n  );\n\n  const isDisabled =\n    (isFullOwnedServer && isSettingsPending) || isConnecting || isUnavailable;\n\n  return (\n    <ServerMenuItem\n      className={classNames(isDisabled && styles.disabled)}\n      details={statusWithDetail}\n      detailsClassName={styles.details}\n      friendlyNameClassName={styles.friendlyName}\n      identifier={machineIdentifier}\n      isDisabled={isConnecting}\n      isSelected={isSelected}\n      title={getServerTitle(serverTitleAttrs)}\n      to={getServerSettingsRoute(\n        settingsSection || 'settings',\n        settingsGroup || 'general'\n      )}\n    >\n      <ServerSettingsStatusIcon\n        className={styles.icon}\n        isConnected={isConnected}\n        isFullOwnedServer={isFullOwnedServer}\n        isInstallingServerUpdate={isInstallingServerUpdate}\n        isRelayed={isRelayed}\n        isSecure={isSecure}\n        isSettingsPending={isSettingsPending}\n        isUnavailable={isUnavailable}\n      />\n    </ServerMenuItem>\n  );\n}\n\nexport default ServerSettingsServerMenuItem;\n","// extracted by mini-css-extract-plugin\nexport default {\"disabled\":\"RtvUO\",\"friendlyName\":\"eD8le\",\"details\":\"koiKt\",\"icon\":\"ybvtq\"};","/* eslint-plugin-disable @typescript-eslint */\n\nimport React from 'react';\nimport Menu from 'app/js/views/v3/components/core/menus/Menu';\nimport ServerSettingsServerMenuItemConnector from 'app/js/views/v3/components/sidebar/settings/ServerSettingsServerMenuItemConnector';\nimport * as scrollDirections from 'app/js/views/v3/helpers/props/scrollDirections';\nimport dimensions from 'app/js/views/v3/styles/variables/dimensions';\nimport styles from './ServerSettingsServerMenu.css';\n\nconst MENU_ITEM_HEIGHT = parseInt(dimensions.serverMenuItemHeight, 10);\nconst MAX_HEIGHT = MENU_ITEM_HEIGHT * 5;\n\nconst scrollerProps = {\n  className: styles.serverMenuScroller,\n  scrollDirection: scrollDirections.VERTICAL,\n  autoScroll: true,\n};\n\ntype ServerSettingsServerMenuProps = {\n  target: string;\n  serverEntityIDs: any[];\n  selectedServerEntityID?: string;\n  settingsSection?: string;\n  settingsGroup?: string;\n  isOpen?: boolean;\n  onMenuClose: (...args: any[]) => any;\n};\n\nfunction ServerSettingsServerMenu(props: ServerSettingsServerMenuProps) {\n  const {\n    target,\n    serverEntityIDs,\n    selectedServerEntityID,\n    settingsSection,\n    settingsGroup,\n    isOpen,\n    onMenuClose,\n  } = props;\n\n  return (\n    <Menu\n      className={styles.serverMenu}\n      // @ts-expect-error ts-migrate(2322) FIXME: Type 'boolean | undefined' is not assignable to ty... Remove this comment to see the full error message\n      isOpen={isOpen}\n      maxHeight={MAX_HEIGHT}\n      scrollerProps={scrollerProps}\n      target={target}\n      onMenuClose={onMenuClose}\n    >\n      {serverEntityIDs.map((serverEntityID) => {\n        return (\n          <ServerSettingsServerMenuItemConnector\n            key={serverEntityID}\n            isSelected={serverEntityID === selectedServerEntityID}\n            serverEntityID={serverEntityID}\n            settingsGroup={settingsGroup}\n            settingsSection={settingsSection}\n          />\n        );\n      })}\n    </Menu>\n  );\n}\n\nexport default ServerSettingsServerMenu;\n","// extracted by mini-css-extract-plugin\nexport default {\"serverMenu\":\"r3V1z CgKY7\",\"serverMenuScroller\":\"WdoAI iYDY8 RXkcY\"};","/* eslint-plugin-disable @typescript-eslint */\n\nimport classNames from 'classnames';\nimport React from 'react';\nimport DisclosureArrow from 'app/js/views/v3/components/core/base/DisclosureArrow';\nimport Spinner from 'app/js/views/v3/components/core/base/Spinner';\nimport Link from 'app/js/views/v3/components/core/buttons/Link';\nimport * as directions from 'app/js/views/v3/helpers/props/directions';\nimport * as sizes from 'app/js/views/v3/helpers/props/sizes';\nimport styles from './SidebarMenuButton.css';\n\ninterface SidebarMenuButtonProps {\n  className?: string;\n  secondaryTitleClassName?: string;\n  id?: string;\n  isMenuOpen?: boolean;\n  isLoading?: boolean;\n  isSelected?: boolean;\n  isDisabled?: boolean;\n  primaryTitle: string;\n  secondaryTitle?: string;\n  children?: React.ReactNode;\n  spinnerComponent?: React.ReactElement;\n  onPress?: (...args: any[]) => any;\n}\n\nfunction SidebarMenuButton(props: SidebarMenuButtonProps) {\n  const {\n    className,\n    secondaryTitleClassName,\n    id,\n    isLoading,\n    isMenuOpen,\n    isDisabled,\n    isSelected,\n    primaryTitle,\n    secondaryTitle,\n    children,\n    spinnerComponent: CustomSpinner,\n    onPress,\n  } = props;\n\n  return (\n    <Link\n      aria-haspopup={!isDisabled}\n      className={classNames(className, isDisabled && styles.isDisabled)}\n      data-testid=\"serverMenuButton\"\n      // @ts-expect-error ts-migrate(2322) FIXME: Type '{ children: Element; id: string | undefined;... Remove this comment to see the full error message\n      id={id}\n      isDisabled={isDisabled}\n      isSelected={isSelected}\n      onPress={onPress}\n    >\n      <div className={styles.sidebarMenuButtonContainer}>\n        <span className={styles.sidebarMenuTitle}>\n          <span className={styles.sidebarMenuPrimaryTitleContainer}>\n            <span className={styles.sidebarMenuPrimaryTitle}>\n              {primaryTitle}\n            </span>\n\n            {!isDisabled ? (\n              <DisclosureArrow\n                direction={isMenuOpen ? directions.UP : directions.DOWN}\n                isSelected={isSelected}\n              />\n            ) : null}\n          </span>\n          {secondaryTitle ? (\n            <span className={secondaryTitleClassName}>{secondaryTitle}</span>\n          ) : null}\n        </span>\n        {isLoading ? (\n          // @ts-expect-error ts-migrate(2604) FIXME: JSX element type 'CustomSpinner' does not have any... Remove this comment to see the full error message\n          <CustomSpinner\n            className={styles.sidebarMenuSpinner}\n            size={sizes.SMALL}\n          />\n        ) : (\n          children\n        )}\n      </div>\n    </Link>\n  );\n}\n\nSidebarMenuButton.defaultProps = {\n  className: styles.sidebarMenuButton,\n  secondaryTitleClassName: styles.sidebarMenuSecondaryTitle,\n  isMenuOpen: false,\n  isSelected: true,\n  isDisabled: false,\n  isLoading: false,\n  spinnerComponent: Spinner,\n};\n\nexport default SidebarMenuButton;\n","// extracted by mini-css-extract-plugin\nexport default {\"sidebarMenuButton\":\"mjdE5\",\"sidebarMenuButtonContainer\":\"GouRQ\",\"sidebarMenuSpinner\":\"FuJuF\",\"sidebarMenuTitle\":\"AclFR\",\"sidebarMenuPrimaryTitleContainer\":\"WCJRD\",\"sidebarMenuPrimaryTitle\":\"MA0yE\",\"sidebarMenuSecondaryTitle\":\"EutX7\",\"icon\":\"DRBQR\",\"isDisabled\":\"KiDzw\"};","/* eslint-plugin-disable @typescript-eslint */\n\nimport React from 'react';\nimport Spinner from 'app/js/views/v3/components/core/Spinner';\nimport CoreSidebarMenuButton from 'app/js/views/v3/components/core/sidebar/SidebarMenuButton';\n\n/*\n(ts-migrate) TODO: Migrate the remaining prop types\n...CoreSidebarMenuButton.propTypes\n*/\ntype SidebarMenuButtonProps = {};\n\nfunction SidebarMenuButton(props: SidebarMenuButtonProps) {\n  // @ts-expect-error ts-migrate(2739) FIXME: Type 'typeof Spinner' is missing the following pro... Remove this comment to see the full error message\n  return <CoreSidebarMenuButton spinnerComponent={Spinner} {...props} />;\n}\n\nexport default SidebarMenuButton;\n","/* eslint-plugin-disable @typescript-eslint */\n\nimport { connect } from 'react-redux';\nimport { createSelector } from 'reselect';\nimport createUnstableServerSelector from 'app/js/stores/selectors/server/createUnstableServerSelector';\nimport ServerSettingsServerMenuButton from './ServerSettingsServerMenuButton';\n\nfunction createMapStateToProps() {\n  return createSelector(createUnstableServerSelector(), (server) => {\n    return {\n      machineIdentifier: server.machineIdentifier,\n      friendlyName: server.friendlyName,\n      isFullOwnedServer: server.isFullOwnedServer,\n      isInstallingServerUpdate: server.isInstallingServerUpdate,\n      isShared: server.isShared,\n      isConnected: server.isConnected,\n      isUnavailable: server.isUnavailable,\n      isSettingsPending: server[__PLATFORM__].isSettingsPending,\n      isSecure: server.isSecure,\n      isRelayed: server.isRelayed,\n      sourceTitle: server.sourceTitle,\n    };\n  });\n}\n\nexport default connect(createMapStateToProps)(ServerSettingsServerMenuButton);\n","/* eslint-plugin-disable @typescript-eslint */\n\nimport React from 'react';\nimport t from 'app/js/utils/t';\nimport SidebarMenuButton from 'app/js/views/v3/components/sidebar/menu/SidebarMenuButton';\nimport ServerSettingsStatusIcon from 'app/js/views/v3/components/sidebar/settings/ServerSettingsStatusIcon';\nimport getServerDetail from 'app/js/views/v3/helpers/getServerDetail';\nimport getServerDetailWithStatus from 'app/js/views/v3/helpers/getServerDetailWithStatus';\nimport getServerTitle from 'app/js/views/v3/helpers/getServerTitle';\nimport styles from './ServerSettingsServerMenuButton.css';\n\ntype ServerSettingsServerMenuButtonProps = {\n  id: string;\n  friendlyName: string;\n  sourceTitle?: string;\n  isFullOwnedServer: boolean;\n  isShared: boolean;\n  isConnected: boolean;\n  isSelected: boolean;\n  isInstallingServerUpdate: boolean;\n  isSettingsPending: boolean;\n  isUnavailable: boolean;\n  isSecure: boolean;\n  isRelayed: boolean;\n  isMenuOpen: boolean;\n  onPress: (...args: any[]) => any;\n};\n\nfunction ServerSettingsServerMenuButton(\n  props: ServerSettingsServerMenuButtonProps\n) {\n  const {\n    id,\n    friendlyName,\n    sourceTitle,\n    isFullOwnedServer,\n    isShared,\n    isConnected,\n    isInstallingServerUpdate,\n    isSelected,\n    isUnavailable,\n    isSecure,\n    isSettingsPending,\n    isRelayed,\n    isMenuOpen,\n    onPress,\n  } = props;\n\n  const serverTitleAttrs = { friendlyName, sourceTitle, isShared };\n  const statusWithDetail = getServerDetailWithStatus(\n    getServerDetail(serverTitleAttrs),\n    isRelayed ? t('Indirect') : null\n  );\n\n  return (\n    // @ts-expect-error ts-migrate(2322) FIXME: Type '{ children: Element; className: string; seco... Remove this comment to see the full error message\n    <SidebarMenuButton\n      className={styles.button}\n      id={id}\n      isMenuOpen={isMenuOpen}\n      isSelected={isSelected}\n      primaryTitle={getServerTitle(serverTitleAttrs)}\n      secondaryTitle={statusWithDetail}\n      secondaryTitleClassName={styles.secondaryTitle}\n      onPress={onPress}\n    >\n      <ServerSettingsStatusIcon\n        className={styles.icon}\n        isConnected={isConnected}\n        isFullOwnedServer={isFullOwnedServer}\n        isInstallingServerUpdate={isInstallingServerUpdate}\n        isRelayed={isRelayed}\n        isSecure={isSecure}\n        isSettingsPending={isSettingsPending}\n        isUnavailable={isUnavailable}\n      />\n    </SidebarMenuButton>\n  );\n}\n\nexport default ServerSettingsServerMenuButton;\n","// extracted by mini-css-extract-plugin\nexport default {\"button\":\"Hm84s mjdE5\",\"secondaryTitle\":\"Q8cm8 EutX7\",\"icon\":\"GtEIM\"};","/* eslint-plugin-disable @typescript-eslint */\n\nimport React from 'react';\nimport Spinner from 'app/js/views/v3/components/core/base/Spinner';\nimport Link from 'app/js/views/v3/components/core/buttons/Link';\nimport getValidComponents from 'app/js/views/v3/helpers/getValidComponents';\nimport styles from './SidebarLink.css';\n\ninterface SidebarLinkProps {\n  className?: string;\n  children?: React.ReactNode;\n  iconClassName?: string;\n  titleClassName?: string;\n  iconSrc?: string;\n  iconComponent?: ((...args: any[]) => any) | string;\n  iconNode?: React.ReactNode;\n  title?: string;\n  showSpinner?: boolean;\n}\n\nfunction SidebarLink(props: SidebarLinkProps) {\n  const {\n    className,\n    children,\n    iconClassName,\n    titleClassName,\n    iconSrc,\n    iconComponent: Icon,\n    iconNode,\n    title,\n    showSpinner,\n    ...otherProps\n  } = props;\n\n  let sidebarIcon;\n  if (iconSrc) {\n    sidebarIcon = <img className={styles.iconImg} src={iconSrc} />;\n  } else if (Icon) {\n    sidebarIcon = <Icon />;\n  } else if (iconNode) {\n    sidebarIcon = iconNode;\n  }\n\n  return (\n    <Link className={className} {...otherProps}>\n      <div className={styles.container}>\n        <div className={iconClassName}>\n          {showSpinner ? <Spinner className={styles.spinner} /> : sidebarIcon}\n        </div>\n        {title ? <div className={titleClassName}>{title}</div> : null}\n        {getValidComponents(children).length ? (\n          <div className={styles.children}>{children}</div>\n        ) : null}\n      </div>\n    </Link>\n  );\n}\n\nSidebarLink.defaultProps = {\n  className: styles.sidebarLink,\n  iconClassName: styles.icon,\n  titleClassName: styles.title,\n};\n\nexport default SidebarLink;\n","// extracted by mini-css-extract-plugin\nexport default {\"sidebarLink\":\"Ug32S TwynL\",\"iconImg\":\"iIGbG\",\"container\":\"A8qxx\",\"icon\":\"_6qDb\",\"title\":\"qMYTC\",\"children\":\"QtL2f\",\"spinner\":\"NBxSE\"};","/* eslint-plugin-disable @typescript-eslint */\n\n// https://github.com/react-bootstrap/react-bootstrap/blob/master/src/utils/ValidComponentChildren.js\n\nimport React from 'react';\n\n/**\n * Return an array of \"valid components\" in the Children container.\n *\n * @param {?*} children Children tree container.\n * @returns {array} of children that are valid components\n */\nexport default function getValidComponents(children: any) {\n  const result: any = [];\n\n  React.Children.forEach(children, (child) => {\n    if (!React.isValidElement(child)) {\n      return;\n    }\n\n    result.push(child);\n  });\n\n  return result;\n}\n","/* eslint-plugin-disable @typescript-eslint */\n\nimport React from 'react';\nimport styles from './SidebarListItem.css';\n\ninterface SidebarListItemProps {\n  className?: string;\n  children?: React.ReactNode;\n}\n\nfunction SidebarListItem({ className, children }: SidebarListItemProps) {\n  return <div className={className}>{children}</div>;\n}\n\nSidebarListItem.defaultProps = {\n  className: styles.sidebarListItem,\n};\n\nexport default SidebarListItem;\n","// extracted by mini-css-extract-plugin\nexport default {\"sidebarListItem\":\"kE5Bm\"};","/* eslint-plugin-disable @typescript-eslint */\n\nimport React from 'react';\nimport SidebarLink from './SidebarLink';\nimport SidebarListItem from './SidebarListItem';\n\nfunction SidebarListLink(props: any) {\n  return (\n    <SidebarListItem>\n      <SidebarLink {...props} />\n    </SidebarListItem>\n  );\n}\n\nexport default SidebarListLink;\n","/* eslint-plugin-disable @typescript-eslint */\n\nimport React from 'react';\nimport styles from './SidebarMessage.css';\n\ninterface SidebarMessageProps {\n  message: string;\n  children?: React.ReactNode;\n}\n\nfunction SidebarMessage({ message, children }: SidebarMessageProps) {\n  return (\n    <div>\n      <p className={styles.sidebarMessage}>{message}</p>\n      {children}\n    </div>\n  );\n}\n\nexport default SidebarMessage;\n","// extracted by mini-css-extract-plugin\nexport default {\"sidebarMessage\":\"m0qfR\"};","/* eslint-plugin-disable @typescript-eslint */\n\nimport React, { Component } from 'react';\nimport {\n  IconLockUnlockedFilled,\n  IconQuestionCircledFilled,\n  IconRefresh,\n  IconX,\n} from '@plex/react-chroma-icon';\nimport { SECURE_CONNECTIONS_SUPPORT_URL } from 'app/js/utils/constants/commonUrls';\nimport * as metricsPages from 'app/js/utils/constants/metrics/metricsPages';\nimport t from 'app/js/utils/t';\nimport ConfirmModal from 'app/js/views/v3/components/core/modals/ConfirmModal';\nimport SidebarListLink from 'app/js/views/v3/components/core/sidebar/SidebarListLink';\nimport SidebarMessage from 'app/js/views/v3/components/core/sidebar/SidebarMessage';\nimport AllowHttpFallbackModalConnector from 'app/js/views/v3/components/pages/empty/AllowHttpFallbackModalConnector';\nimport {\n  shouldAllowInsecureFallback,\n  shouldShowInsecureAppMessage,\n} from 'app/js/views/v3/helpers/insecureFallbackHelpers';\nimport * as kinds from 'app/js/views/v3/helpers/props/kinds';\nimport shouldPureComponentUpdate from 'app/js/views/v3/helpers/shouldPureComponentUpdate';\n\ntype SidebarServerUnavailableMessageProps = {\n  serverEntityID: string;\n  machineIdentifier?: string;\n  friendlyName?: string;\n  presence?: boolean;\n  isPending?: boolean;\n  isFullServer?: boolean;\n  isFullOwnedServer?: boolean;\n  isInstallingServerUpdate?: boolean;\n  isBundled?: boolean;\n  isCloudServerResourcesPending?: boolean;\n  httpsRequired?: boolean;\n  hasHttpsConnections?: boolean;\n  hasFallbackConnections?: boolean;\n  onTryAgainPress: (...args: any[]) => any;\n  onDeleteServerConfirm: (...args: any[]) => any;\n};\n\ntype SidebarServerUnavailableMessageState = any;\n\nclass SidebarServerUnavailableMessage extends Component<\n  SidebarServerUnavailableMessageProps,\n  SidebarServerUnavailableMessageState\n> {\n  //\n  // Lifecycle\n\n  constructor(props: any, context: any) {\n    super(props, context);\n\n    this.state = {\n      isRemoveModalOpen: false,\n      isAllowInsecureConnectionModalOpen: false,\n    };\n  }\n\n  shouldComponentUpdate(\n    nextProps: SidebarServerUnavailableMessageProps,\n    nextState: SidebarServerUnavailableMessageState\n  ) {\n    // @ts-expect-error ts-migrate(2554) FIXME: Expected 5 arguments, but got 3.\n    return shouldPureComponentUpdate(this, nextProps, nextState);\n  }\n\n  //\n  // Listeners\n\n  // @ts-expect-error ts-migrate(6133) FIXME: 'event' is declared but its value is never read.\n  onRemoveServerPress = (event: any) => {\n    this.setState({ isRemoveModalOpen: true });\n  };\n\n  onRemoveConfirm = () => {\n    this.setState({ isRemoveModalOpen: false });\n    this.props.onDeleteServerConfirm(this.props.machineIdentifier);\n  };\n\n  onRemoveCancel = () => {\n    this.setState({ isRemoveModalOpen: false });\n  };\n\n  // @ts-expect-error ts-migrate(6133) FIXME: 'event' is declared but its value is never read.\n  onAllowInsecureConnectionPress = (event: any) => {\n    this.setState({ isAllowInsecureConnectionModalOpen: true });\n  };\n\n  // @ts-expect-error ts-migrate(6133) FIXME: 'event' is declared but its value is never read.\n  onAllowInsecureConnectionCancel = (event: any) => {\n    this.setState({ isAllowInsecureConnectionModalOpen: false });\n  };\n\n  //\n  // Render\n\n  render() {\n    const {\n      serverEntityID,\n      friendlyName,\n      presence,\n      isPending,\n      isBundled,\n      isCloudServerResourcesPending,\n      isFullServer,\n      isFullOwnedServer,\n      isInstallingServerUpdate,\n      httpsRequired,\n      hasHttpsConnections,\n      hasFallbackConnections,\n      onTryAgainPress,\n    } = this.props;\n\n    const { isRemoveModalOpen, isAllowInsecureConnectionModalOpen } =\n      this.state;\n\n    let showAllowFallbackButton;\n    let showFallback;\n    let showWhereIsMyServer;\n    let showRemoveServer;\n    let message;\n\n    if (isInstallingServerUpdate) {\n      showAllowFallbackButton = false;\n      showFallback = false;\n      showWhereIsMyServer = false;\n      showRemoveServer = false;\n      message = t(\n        'Once the server \"{serverName}\" has finished installing the update, Plex will automatically try to reconnect to this server.',\n        { serverName: friendlyName }\n      );\n    } else {\n      const server = {\n        isFullServer,\n        presence,\n        httpsRequired,\n        hasHttpsConnections,\n        hasFallbackConnections,\n      };\n\n      showAllowFallbackButton = shouldAllowInsecureFallback(server);\n      showFallback =\n        shouldShowInsecureAppMessage(server) || showAllowFallbackButton;\n      showWhereIsMyServer = !showFallback;\n      showRemoveServer = isFullOwnedServer && !isBundled;\n\n      message = showFallback\n        ? t('Unable to connect to \"{serverName}\" securely.', {\n            serverName: friendlyName,\n          })\n        : t(\n            'The server \"{serverName}\" is unreachable. Make sure it\\'s running, double check your network, and try again.',\n            { serverName: friendlyName }\n          );\n    }\n\n    const isConnecting = isCloudServerResourcesPending || isPending;\n    const tryAgainLabel = isConnecting ? t('Connecting') : t('Try again');\n\n    return (\n      <SidebarMessage message={message}>\n        <SidebarListLink\n          iconComponent={IconRefresh}\n          isDisabled={isConnecting}\n          showSpinner={isConnecting}\n          title={tryAgainLabel}\n          onPress={onTryAgainPress}\n        />\n        {showAllowFallbackButton ? (\n          <>\n            <SidebarListLink\n              iconComponent={IconLockUnlockedFilled}\n              title={t('Allow insecure connection')}\n              onPress={this.onAllowInsecureConnectionPress}\n            />\n            <AllowHttpFallbackModalConnector\n              isOpen={isAllowInsecureConnectionModalOpen}\n              serverEntityID={serverEntityID}\n              onModalClose={this.onAllowInsecureConnectionCancel}\n            />\n          </>\n        ) : null}\n        {showFallback ? (\n          <SidebarListLink\n            iconComponent={IconQuestionCircledFilled}\n            target=\"_blank\"\n            title={t('Learn more')}\n            to={SECURE_CONNECTIONS_SUPPORT_URL}\n          />\n        ) : null}\n        {showWhereIsMyServer ? (\n          <SidebarListLink\n            iconComponent={IconQuestionCircledFilled}\n            target=\"_blank\"\n            title={t('Where is my server?')}\n            to=\"https://help.plex.tv/noserver\"\n          />\n        ) : null}\n        {showRemoveServer ? (\n          <>\n            <SidebarListLink\n              iconComponent={IconX}\n              title={t('Remove server')}\n              onPress={this.onRemoveServerPress}\n            />\n            <ConfirmModal\n              confirmLabel={t('Remove')}\n              isOpen={isRemoveModalOpen}\n              kind={kinds.DANGER}\n              message={t(\n                'If this server is restarted, it will automatically be added to your account again.'\n              )}\n              metricsPage={metricsPages.CONFIRM_DELETE_SERVER}\n              title={t('Remove {serverName}', { serverName: friendlyName })}\n              onCancel={this.onRemoveCancel}\n              onConfirm={this.onRemoveConfirm}\n            />\n          </>\n        ) : null}\n      </SidebarMessage>\n    );\n  }\n}\n\nexport default SidebarServerUnavailableMessage;\n","/* eslint-plugin-disable @typescript-eslint */\n\nimport { createSelector } from 'reselect';\nimport { discoverServers } from 'app/js/stores/actions/appActions';\nimport * as serverActions from 'app/js/stores/actions/serverActions';\nimport createUnstableServerSelector from 'app/js/stores/selectors/server/createUnstableServerSelector';\nimport selectCloudServer from 'app/js/stores/selectors/server/selectCloudServer';\nimport connectWithMetrics from 'app/js/views/v3/decorators/connectWithMetrics';\nimport SidebarServerUnavailableMessage from './SidebarServerUnavailableMessage';\n\nfunction createMapStateToProps() {\n  return createSelector(\n    selectCloudServer,\n    createUnstableServerSelector(),\n    (cloudServer, server) => {\n      return {\n        machineIdentifier: server.machineIdentifier,\n        friendlyName: server.friendlyName,\n        presence: server.presence,\n        isPending: server.isPending,\n        isFullServer: server.isFullServer,\n        isFullOwnedServer: server.isFullOwnedServer,\n        isInstallingServerUpdate: server.isInstallingServerUpdate,\n        isBundled: server.isBundled,\n        isCloudServerResourcesPending: cloudServer.isResourcesPending,\n        httpsRequired: server.httpsRequired,\n        hasHttpsConnections: server.hasHttpsConnections,\n        hasFallbackConnections: server.hasFallbackConnections,\n      };\n    }\n  );\n}\n\nfunction createMapDispatchToProps(dispatch: any, props: any) {\n  const payload = {\n    serverEntityID: props.serverEntityID,\n    metricsPage: props.metricsPage,\n  };\n\n  return {\n    onDeleteServerConfirm() {\n      dispatch(serverActions.deleteServer(payload));\n    },\n\n    onTryAgainPress() {\n      dispatch(discoverServers());\n      dispatch(serverActions.testServer(payload));\n    },\n  };\n}\n\nexport default connectWithMetrics(\n  createMapStateToProps,\n  createMapDispatchToProps\n)(SidebarServerUnavailableMessage);\n","/* eslint-plugin-disable @typescript-eslint */\n\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport getDisplayName from 'app/js/views/v3/helpers/getDisplayName';\n\nexport default function connectWithMetrics(...args: any[]) {\n  // @ts-expect-error ts-migrate(2556) FIXME: Expected 0-4 arguments, but got 0 or more.\n  const connectHOC = connect(...args);\n\n  return (Component: any) => {\n    const Connector = connectHOC(Component);\n\n    function ConnectWithMetrics(\n      props: any,\n      { metricsPage, metricsContext }: any\n    ) {\n      const { metricsContext: propsMetricsContext, ...otherProps } = props;\n\n      return (\n        <Connector\n          metricsContext={propsMetricsContext || metricsContext}\n          metricsPage={metricsPage}\n          {...otherProps}\n        />\n      );\n    }\n\n    ConnectWithMetrics.displayName = `ConnectWithMetrics(${getDisplayName(\n      Component\n    )})`;\n\n    ConnectWithMetrics.contextTypes = {\n      metricsPage: PropTypes.string,\n      metricsContext: PropTypes.string,\n    };\n\n    ConnectWithMetrics.propTypes = {\n      ...Connector.propTypes,\n      metricsContext: PropTypes.string,\n    };\n\n    return ConnectWithMetrics;\n  };\n}\n","/* eslint-plugin-disable @typescript-eslint */\n\nimport React from 'react';\nimport styles from './SidebarList.css';\n\ninterface SidebarListProps {\n  className?: string;\n  headerContainerClassName?: string;\n  headerClassName?: string;\n  title: string;\n  icon?: React.ReactNode;\n  children?: React.ReactNode;\n  onRef?: (...args: any[]) => any;\n}\n\nfunction SidebarList(props: SidebarListProps) {\n  const {\n    className,\n    headerContainerClassName,\n    headerClassName,\n    children,\n    title,\n    icon,\n    onRef,\n  } = props;\n\n  return (\n    <div ref={onRef} className={className} role=\"navigation\">\n      <div className={headerContainerClassName}>\n        <div className={headerClassName} role=\"header\">\n          {title}\n        </div>\n        {icon ? (\n          <div className={styles.sidebarListHeaderIcon}>{icon}</div>\n        ) : null}\n      </div>\n\n      {children}\n    </div>\n  );\n}\n\nSidebarList.defaultProps = {\n  headerContainerClassName: styles.sidebarListHeaderContainer,\n  headerClassName: styles.sidebarListHeader,\n};\n\nexport default SidebarList;\n","// extracted by mini-css-extract-plugin\nexport default {\"sidebarListHeaderContainer\":\"Niv7v\",\"sidebarListHeader\":\"tR59i\",\"sidebarListHeaderIcon\":\"I3_zN\"};","/* eslint-plugin-disable @typescript-eslint */\n\nimport React from 'react';\nimport SidebarList from 'app/js/views/v3/components/core/sidebar/SidebarList';\nimport styles from './SettingsSidebarList.css';\n\nfunction SettingsSidebarList(props: any) {\n  return <SidebarList headerClassName={styles.header} {...props} />;\n}\n\nexport default SettingsSidebarList;\n","// extracted by mini-css-extract-plugin\nexport default {\"header\":\"nryR9 tR59i\"};","// extracted by mini-css-extract-plugin\nexport default {\"icon\":\"S36tx _6qDb\",\"selectedIcon\":\"AhwAa S36tx _6qDb\"};","/* eslint-plugin-disable @typescript-eslint */\n\nimport React from 'react';\nimport isFramed from 'app/js/utils/window/isFramed';\nimport SidebarListLink from 'app/js/views/v3/components/core/sidebar/SidebarListLink';\nimport styles from './SettingsSidebarListLink.css';\n\ntype SettingsSidebarListLinkProps = {\n  className?: string;\n  children?: React.ReactNode;\n  selectableKey?: string;\n  selectedKey?: string;\n  to: string;\n  title: string;\n};\n\nfunction SettingsSidebarListLink(props: SettingsSidebarListLinkProps) {\n  const { className, children, selectableKey, selectedKey, to, title } = props;\n\n  const isSelected = selectedKey && selectedKey === selectableKey;\n\n  let target;\n  if (!/^#/.test(to)) {\n    target = isFramed() ? '_blank' : __EXTERNAL_LINK_TARGET__;\n  }\n\n  return (\n    <SidebarListLink\n      key={selectableKey}\n      className={className}\n      iconClassName={isSelected ? styles.selectedIcon : styles.icon}\n      isSelected={isSelected}\n      target={target}\n      title={title}\n      to={to}\n    >\n      {children}\n    </SidebarListLink>\n  );\n}\n\nexport default SettingsSidebarListLink;\n","/* eslint-plugin-disable @typescript-eslint */\n\nimport React from 'react';\nimport { createServerSettingsSidebarKey } from 'app/js/utils/settingsSidebarKey';\nimport SidebarServerUnavailableMessageConnector from 'app/js/views/v3/components/sidebar/server/SidebarServerUnavailableMessageConnector';\nimport SettingsSidebarList from 'app/js/views/v3/components/sidebar/settings/SettingsSidebarList';\nimport SettingsSidebarListLink from 'app/js/views/v3/components/sidebar/settings/SettingsSidebarListLink';\n\ntype ServerSettingsSidebarListProps = {\n  serverEntityID: string;\n  machineIdentifier: string;\n  friendlyName: string;\n  selectedKey?: string;\n  isShared: boolean;\n  isUnavailable: boolean;\n  isSettingsPending: boolean;\n  isInstallingServerUpdate: boolean;\n  settingsSections: {\n    key: string;\n    title: string;\n    groups: {\n      key: string;\n      title: string;\n      statusIndicator?: React.ReactNode;\n      route: string;\n    }[];\n  }[];\n};\n\nfunction ServerSettingsSidebarList(props: ServerSettingsSidebarListProps) {\n  const {\n    serverEntityID,\n    machineIdentifier,\n    selectedKey,\n    isShared,\n    isInstallingServerUpdate,\n    isUnavailable,\n    isSettingsPending,\n    settingsSections,\n  } = props;\n\n  if (isInstallingServerUpdate || isUnavailable) {\n    return (\n      <SidebarServerUnavailableMessageConnector\n        serverEntityID={serverEntityID}\n      />\n    );\n  }\n\n  if (isSettingsPending) {\n    return null;\n  }\n\n  return settingsSections.map((settingsSection, sectionIndex) => {\n    if (isShared && settingsSection.groups.length === 1) {\n      const group = settingsSection.groups[0];\n\n      return (\n        <SettingsSidebarListLink\n          key={sectionIndex}\n          selectableKey={createServerSettingsSidebarKey(\n            machineIdentifier,\n            settingsSection.key,\n            group.key\n          )}\n          selectedKey={selectedKey}\n          title={group.title}\n          to={group.route}\n        />\n      );\n    }\n\n    return (\n      <SettingsSidebarList key={sectionIndex} title={settingsSection.title}>\n        {settingsSection.groups.map((settingsGroup, groupIndex) => (\n          <SettingsSidebarListLink\n            key={`${sectionIndex}${groupIndex}`}\n            selectableKey={createServerSettingsSidebarKey(\n              machineIdentifier,\n              settingsSection.key,\n              settingsGroup.key\n            )}\n            selectedKey={selectedKey}\n            title={settingsGroup.title}\n            to={settingsGroup.route}\n          >\n            {settingsGroup.statusIndicator}\n          </SettingsSidebarListLink>\n        ))}\n      </SettingsSidebarList>\n    );\n  });\n}\n\nexport default ServerSettingsSidebarList;\n","/* eslint-plugin-disable @typescript-eslint */\n\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { createSelector } from 'reselect';\nimport * as serverActions from 'app/js/stores/actions/serverActions';\nimport createUnstableServerSelector from 'app/js/stores/selectors/server/createUnstableServerSelector';\nimport createVisibleSettingsSectionsSelector from 'app/js/stores/selectors/settings/createVisibleSettingsSectionsSelector';\nimport ServerSettingsSidebarList from './ServerSettingsSidebarList';\n\nfunction createMapStateToProps() {\n  return createSelector(\n    createUnstableServerSelector(),\n    createVisibleSettingsSectionsSelector(),\n    (server, settingsSections) => {\n      return {\n        machineIdentifier: server.machineIdentifier,\n        friendlyName: server.friendlyName,\n        isShared: server.isShared,\n        isInstallingServerUpdate: server.isInstallingServerUpdate,\n        isConnected: server.isConnected,\n        isUnavailable: server.isUnavailable,\n        isSettingsPending:\n          server.isFullOwnedServer && server[__PLATFORM__].isSettingsPending,\n        isFullOwnedServer: server.isFullOwnedServer,\n        settingsSections,\n      };\n    }\n  );\n}\n\nconst mapDispatchToProps = {\n  dispatchPopulateSettings: serverActions.populateSettings,\n};\n\ntype ServerSettingsSidebarListConnectorProps = {\n  serverEntityID: string;\n  isConnected?: boolean;\n  isFullOwnedServer?: boolean;\n  dispatchPopulateSettings: (...args: any[]) => any;\n};\n\nclass ServerSettingsSidebarListConnector extends Component<ServerSettingsSidebarListConnectorProps> {\n  //\n  // Lifecycle\n\n  componentDidMount() {\n    this._populate();\n  }\n\n  componentDidUpdate(prevProps: ServerSettingsSidebarListConnectorProps) {\n    if (prevProps.serverEntityID !== this.props.serverEntityID) {\n      this._populate();\n    }\n  }\n\n  //\n  // Control\n\n  _populate() {\n    const {\n      serverEntityID,\n      isConnected,\n      isFullOwnedServer,\n      dispatchPopulateSettings,\n    } = this.props;\n\n    if (isConnected && isFullOwnedServer) {\n      dispatchPopulateSettings({ serverEntityID });\n    }\n  }\n\n  //\n  // Render\n\n  render() {\n    const {\n      isConnected,\n      isFullOwnedServer,\n      dispatchPopulateSettings,\n      ...otherProps\n    } = this.props;\n\n    // @ts-expect-error ts-migrate(2740) FIXME: Type '{ serverEntityID: string; children?: ReactNo... Remove this comment to see the full error message\n    return <ServerSettingsSidebarList {...otherProps} />;\n  }\n}\n\nexport default connect(\n  createMapStateToProps,\n  mapDispatchToProps\n)(ServerSettingsSidebarListConnector);\n","/* eslint-plugin-disable @typescript-eslint */\n\nimport React, { Component } from 'react';\nimport * as metricsPages from 'app/js/utils/constants/metrics/metricsPages';\nimport { createWebClientSettingsSidebarKey } from 'app/js/utils/settingsSidebarKey';\nimport Measure from 'app/js/views/v3/components/core/base/Measure';\nimport MetricsPageTracker from 'app/js/views/v3/components/core/metrics/MetricsPageTracker';\nimport SidebarContainer from 'app/js/views/v3/components/core/sidebar/SidebarContainer';\nimport SidebarScroller from 'app/js/views/v3/components/core/sidebar/SidebarScroller';\nimport ServerSettingsServerMenu from 'app/js/views/v3/components/sidebar/settings/ServerSettingsServerMenu';\nimport ServerSettingsServerMenuButtonConnector from 'app/js/views/v3/components/sidebar/settings/ServerSettingsServerMenuButtonConnector';\nimport ServerSettingsSidebarListConnector from 'app/js/views/v3/components/sidebar/settings/ServerSettingsSidebarListConnector';\nimport getUniqueElementID from 'app/js/views/v3/helpers/getUniqueElementID';\nimport pageStorage from 'app/js/views/v3/helpers/pageStorage';\nimport styles from './SettingsSidebar.css';\n\nconst SCROLL_TOP_KEY = 'SettingsSidebarScrollTop';\n\ntype SettingsSidebarProps = {\n  manageableServerEntityIDs: any[];\n  serverMenuServerEntityID?: string;\n  selectedKey?: string;\n  settingsSection?: string;\n  settingsGroup?: string;\n};\n\ntype SettingsSidebarState = {\n  isMeasured: boolean;\n  scrollTop: number;\n  isMenuOpen: boolean;\n};\n\nclass SettingsSidebar extends Component<\n  SettingsSidebarProps,\n  SettingsSidebarState\n> {\n  // eslint-disable-next-line react/sort-comp\n  _serverMenuButtonID: any;\n\n  //\n  // Lifecycle\n\n  constructor(props: any, context: any) {\n    super(props, context);\n\n    const scrollTop = pageStorage.get(SCROLL_TOP_KEY);\n\n    this.state = {\n      isMeasured: false,\n      scrollTop: scrollTop || 0,\n      isMenuOpen: false,\n    };\n\n    this._serverMenuButtonID = getUniqueElementID();\n  }\n\n  //\n  // Listeners\n\n  onMeasure = () => {\n    this.setState({ isMeasured: true });\n  };\n\n  onScrollPositionChange = ({ scrollTop }: any) => {\n    this.setState({ scrollTop }, () => {\n      // Ideally persisting the scrollTop would live in componentWillUnmount.\n      // And it should once all the settings pages are full react.  Until then\n      // react does not get a chance to unmount when user navigates between\n      // settings pages.  So for now we persist the scrollTop as it changes.\n\n      pageStorage.set(SCROLL_TOP_KEY, scrollTop);\n    });\n  };\n\n  onMenuButtonPress = () => {\n    this.setState({ isMenuOpen: !this.state.isMenuOpen });\n  };\n\n  onMenuClose = () => {\n    this.setState({ isMenuOpen: false });\n  };\n\n  //\n  // Render\n\n  render() {\n    const {\n      manageableServerEntityIDs,\n      serverMenuServerEntityID,\n      selectedKey,\n      settingsSection,\n      settingsGroup,\n    } = this.props;\n\n    const { scrollTop, isMenuOpen } = this.state;\n\n    // @ts-expect-error ts-migrate(2554) FIXME: Expected 1 arguments, but got 0.\n    const webClientSettingsSidebarKey = createWebClientSettingsSidebarKey();\n\n    return (\n      <MetricsPageTracker\n        isDelegated={true}\n        page={metricsPages.SETTINGS_SIDEBAR}\n      >\n        <Measure\n          ignorePosition={true}\n          ignoreWidth={true}\n          onMeasure={this.onMeasure}\n        >\n          <SidebarContainer>\n            {this.state.isMeasured ? (\n              // @ts-expect-error ts-migrate(2322) FIXME: Type '{ children: Element; smoothScroll: boolean; ... Remove this comment to see the full error message\n              <SidebarScroller\n                scrollTop={scrollTop}\n                smoothScroll={false}\n                onScrollPositionChange={this.onScrollPositionChange}\n              >\n                <div className={styles.sidebarContent}>\n                  {serverMenuServerEntityID ? (\n                    <>\n                      <ServerSettingsServerMenuButtonConnector\n                        id={this._serverMenuButtonID}\n                        isMenuOpen={isMenuOpen}\n                        serverEntityID={serverMenuServerEntityID}\n                        onPress={this.onMenuButtonPress}\n                      />\n                      <ServerSettingsServerMenu\n                        isOpen={isMenuOpen}\n                        selectedServerEntityID={serverMenuServerEntityID}\n                        serverEntityIDs={manageableServerEntityIDs}\n                        settingsGroup={settingsGroup}\n                        settingsSection={settingsSection}\n                        target={this._serverMenuButtonID}\n                        onMenuClose={this.onMenuClose}\n                      />\n                      <ServerSettingsSidebarListConnector\n                        selectedKey={selectedKey}\n                        serverEntityID={serverMenuServerEntityID}\n                      />\n                    </>\n                  ) : null}\n                </div>\n              </SidebarScroller>\n            ) : null}\n          </SidebarContainer>\n        </Measure>\n      </MetricsPageTracker>\n    );\n  }\n}\n\nexport default SettingsSidebar;\n","// extracted by mini-css-extract-plugin\nexport default {\"sidebarContent\":\"MTAUy\"};","/* eslint-plugin-disable @typescript-eslint */\n\nimport { connect } from 'react-redux';\nimport { createSelector } from 'reselect';\nimport selectManageableServerEntityIDs from 'app/js/stores/selectors/server/selectManageableServerEntityIDs';\nimport SettingsSidebar from './SettingsSidebar';\n\nfunction createMapStateToProps() {\n  return createSelector(\n    selectManageableServerEntityIDs,\n\n    (manageableServerEntityIDs) => {\n      return {\n        manageableServerEntityIDs,\n      };\n    }\n  );\n}\n\nexport default connect(createMapStateToProps)(SettingsSidebar);\n","/* eslint-plugin-disable @typescript-eslint */\n\nimport $ from 'jquery';\nimport React from 'react';\nimport * as adapters from 'app/js/adapters/adapters';\nimport BackgroundProcessingListCollection from 'app/js/models/library/convert/BackgroundProcessingListCollection';\nimport BackgroundProcessingQueueCollection from 'app/js/models/library/convert/BackgroundProcessingQueueCollection';\nimport ServerAccountModel from 'app/js/models/server/ServerAccountModel';\nimport ServerSettingCollection from 'app/js/models/server/ServerSettingCollection';\nimport { createServerSettingsSidebarKey } from 'app/js/utils/settingsSidebarKey';\nimport createEntityID from 'app/js/utils/state/createEntityID';\nimport createLibraryProviderEntityID from 'app/js/utils/state/createLibraryProviderEntityID';\nimport * as entityTypes from 'app/js/utils/state/entityTypes';\nimport { scheduleImmediateUpdate } from 'app/js/utils/state/stateUpdateScheduler';\nimport t from 'app/js/utils/t';\nimport AbstractReactView from 'app/js/views/AbstractReactView';\nimport AlertsView from 'app/js/views/activity/AlertsView';\nimport ConversionView from 'app/js/views/activity/ConversionView';\nimport ServerDashboardView from 'app/js/views/activity/ServerDashboardView';\nimport FullPage from 'app/js/views/v3/components/core/pages/FullPage';\nimport ServerSettingsPageConnector from 'app/js/views/v3/components/pages/serverSettings/ServerSettingsPageConnector';\nimport SettingsSidebarConnector from 'app/js/views/v3/components/sidebar/settings/SettingsSidebarConnector';\n\nconst ServerSettingsView = AbstractReactView.extend({\n  //\n  // Init\n\n  initialize(options: any) {\n    const { serverID, settingsSection, settingsGroup } = options;\n\n    const appModel = adapters.resolve('appModel');\n    const servers = appModel.get('servers');\n\n    this.options = {\n      settingsSection,\n      settingsGroup,\n      machineIdentifier: serverID,\n      isViewDataPending: true,\n    };\n\n    servers\n      .findServer(serverID)\n      .done(\n        this.whenRendered((server: any) => {\n          // Ensure server is in the state tree before render\n          // @ts-expect-error ts-migrate(2554) FIXME: Expected 1 arguments, but got 0.\n          scheduleImmediateUpdate();\n\n          // When server is specified; make sure it is the primary server.  From this\n          // point we *try* to use the primaryServer as the selected settings server.\n          appModel.set('primaryServer', server);\n\n          if (!server.get('isConnected')) {\n            this.options.isViewDataPending =\n              !server.get('isUnavailable') && !server.get('isUnauthorized');\n            this.render();\n\n            return;\n          }\n\n          if (server.get('isShared')) {\n            Object.assign(this.options, {\n              viewDataErrorMessage: t('You do not have access to this server'),\n              isViewDataPending: false,\n            });\n\n            this.render();\n            return;\n          }\n\n          if (settingsSection === 'settings' || settingsSection === 'manage') {\n            this.initializeServerSettingsView(server, options);\n          } else if (\n            settingsSection === 'status' &&\n            settingsGroup === 'alerts'\n          ) {\n            this.initializeAlertsView(server);\n          } else if (\n            settingsSection === 'status' &&\n            settingsGroup === 'conversion'\n          ) {\n            this.initializeConversionView(server);\n          } else if (\n            settingsSection === 'status' &&\n            settingsGroup === 'server-dashboard'\n          ) {\n            this.initializeServerDashboardView(server);\n          } else {\n            // Nothing to initialize for this settings section\n            this.options.isViewDataPending = false;\n            this.render();\n          }\n        })\n      )\n      .fail(\n        this.whenRendered(() => {\n          Object.assign(this.options, {\n            viewDataErrorMessage: t(\n              \"The server you're trying to access doesn't seem to exist.\"\n            ),\n            isViewDataPending: false,\n          });\n\n          this.render();\n        })\n      );\n  },\n\n  initializeServerSettingsView(server: any) {\n    const group = this.options.settingsGroup;\n\n    const serverFlexModel = server.get(__PLATFORM__);\n    const settings = serverFlexModel.get('settings');\n    const account = new ServerAccountModel(\n      { key: '/accounts/1' },\n      { server: server }\n    );\n    const cloudAccount = serverFlexModel.get('cloudAccount');\n    const channelSettings = new ServerSettingCollection([], {\n      server: server,\n      url: '/system/:/prefs',\n    });\n\n    // Don't use a scope with the settings request since we generally want\n    // that collection to be updated for the rest of the app as well. It\n    // doesn't help us to abort it.\n\n    const settingsPromise = $.when(\n      settings.fetch(),\n      account.fetch(),\n      cloudAccount.fetch(),\n      channelSettings.fetch()\n    );\n\n    settingsPromise.done(\n      this.whenRendered(() => {\n        Object.assign(this.options, {\n          model: server,\n          collection: settings,\n          account,\n          cloudAccount,\n          channelSettings,\n          subset: 'server',\n          group,\n          isViewDataPending: false,\n        });\n\n        this.render();\n      })\n    );\n\n    settingsPromise.fail(\n      this.whenRendered(() => {\n        Object.assign(this.options, {\n          viewDataErrorMessage: t('Server settings are unavailable.'),\n          isViewDataPending: false,\n        });\n\n        this.render();\n      })\n    );\n  },\n\n  initializeAlertsView(server: any) {\n    const serverFlexModel = server.get(__PLATFORM__);\n\n    Object.assign(this.options, {\n      model: server,\n      collection: serverFlexModel.get('alerts'),\n      subset: 'alerts',\n      contentView: AlertsView,\n      isViewDataPending: false,\n    });\n\n    this.render();\n  },\n\n  initializeConversionView(server: any) {\n    const serverFlexModel = server.get(__PLATFORM__);\n\n    this.options.contentView = ConversionView;\n\n    const playQueues = new BackgroundProcessingQueueCollection([], {\n      server: server,\n      allowInCache: true,\n    });\n\n    const transcodeJobs = serverFlexModel.get('backgroundTranscodeJobs');\n\n    const playlists = new BackgroundProcessingListCollection([], {\n      server: server,\n      allowInCache: true,\n    });\n\n    let playQueue: any;\n    let generators: any;\n\n    const playQueuePromise = $.when(\n      // We don't expect the background processing play queue to change,\n      // so just populate here in case it is already fetched.\n      playQueues.populate(),\n      transcodeJobs.fetch(),\n      // Fetch settings so we have an updated `BackgroundQueueIdlePaused`.\n      serverFlexModel.get('settings').fetch(),\n      // We need the list of generators to check for failed items.\n      playlists.populate()\n    ).then(() => {\n      playQueue = playQueues.first();\n      const playlist = playlists.first();\n\n      if (playQueue && playlist) {\n        generators = playlist.get('children');\n\n        return $.when(playQueue.fetch(), generators.fetch());\n      } else {\n        return $.Deferred().reject().promise();\n      }\n    });\n\n    playQueuePromise.done(\n      this.whenRendered(() => {\n        Object.assign(this.options, {\n          model: server,\n          playQueue,\n          transcodeJobs,\n          generators,\n          subset: 'conversion',\n          isViewDataPending: false,\n        });\n\n        this.render();\n      })\n    );\n\n    playQueuePromise.fail(\n      this.whenRendered(() => {\n        Object.assign(this.options, {\n          viewDataErrorMessage: t('The conversion queue is unavailable.'),\n          isViewDataPending: false,\n        });\n\n        this.render();\n      })\n    );\n  },\n\n  initializeServerDashboardView(server: any) {\n    Object.assign(this.options, {\n      server,\n      subset: 'server-dashboard',\n      contentView: ServerDashboardView,\n      isViewDataPending: false,\n    });\n\n    this.render();\n  },\n\n  //\n  // Control\n\n  component(options: any) {\n    const {\n      machineIdentifier,\n      settingsSection,\n      settingsGroup,\n      sidebarKey,\n      ...otherOptions\n    } = options;\n\n    const serverEntityID = createEntityID(\n      entityTypes.SERVER,\n      machineIdentifier\n    );\n\n    const selectedKey = sidebarKey\n      ? sidebarKey\n      : createServerSettingsSidebarKey(\n          machineIdentifier,\n          settingsSection,\n          settingsGroup\n        );\n\n    return (\n      <FullPage>\n        <SettingsSidebarConnector\n          selectedKey={selectedKey}\n          serverMenuServerEntityID={serverEntityID}\n          settingsGroup={settingsGroup}\n          settingsSection={settingsSection}\n        />\n        <ServerSettingsPageConnector\n          providerEntityID={createLibraryProviderEntityID(serverEntityID)}\n          serverEntityID={serverEntityID}\n          settingsGroup={settingsGroup}\n          settingsSection={settingsSection}\n          {...otherOptions}\n        />\n      </FullPage>\n    );\n  },\n});\n\nexport default ServerSettingsView;\n","import React, { ReactElement } from 'react';\nimport { useSelector } from 'react-redux';\nimport { useParams } from 'react-router-dom';\nimport selectServer from 'app/js/v4/core/servers/selectors/selectServer';\nimport ServerSettingsView from 'app/js/views/settings/server/ServerSettingsView';\nimport MarionetteComponent from 'app/js/views/v3/components/MarionetteComponent';\nimport UserPageConnector from 'app/js/views/v3/components/UserPageConnector';\nimport createKey from 'app/js/views/v3/helpers/createKey';\n\nexport default function ServerSettingsViewPage(): ReactElement {\n  const { settingsSection, settingsGroup } = useParams<{\n    settingsSection: string;\n    settingsGroup: string;\n  }>();\n\n  const server = useSelector(selectServer);\n\n  // When server is connected again we need to refresh the data required for the\n  // views. Easiest way is change the key so the Marionette view re-renders.\n  const key = createKey(\n    'ServerSettingsView',\n    server.machineIdentifier,\n    settingsSection,\n    settingsGroup,\n    server.connectionTestResult\n  );\n\n  return (\n    // @ts-expect-error\n    <UserPageConnector>\n      <MarionetteComponent\n        key={key}\n        view={ServerSettingsView}\n        viewOptions={{\n          settingsSection,\n          settingsGroup,\n          serverID: server.machineIdentifier,\n        }}\n      />\n    </UserPageConnector>\n  );\n}\n","var Handlebars = require(\"../../../../node_modules/handlebars/runtime.js\");\nfunction __default(obj) { return obj && (obj.__esModule ? obj[\"default\"] : obj); }\nmodule.exports = (Handlebars[\"default\"] || Handlebars).template(function (Handlebars,depth0,helpers,partials,data) {\n  this.compilerInfo = [4,'>= 1.0.0'];\nhelpers = this.merge(helpers, Handlebars.helpers); data = data || {};\n  \n\n\n  return \"<svg class=\\\"circle-progress-bar\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\"> <circle fill=\\\"transparent\\\"></circle> </svg> <div class=\\\"circle-progress-text\\\"></div> \";\n  });","module.exports = function(){return \"\";};","var Handlebars = require(\"../../../node_modules/handlebars/runtime.js\");\nfunction __default(obj) { return obj && (obj.__esModule ? obj[\"default\"] : obj); }\nmodule.exports = (Handlebars[\"default\"] || Handlebars).template(function (Handlebars,depth0,helpers,partials,data) {\n  this.compilerInfo = [4,'>= 1.0.0'];\nhelpers = this.merge(helpers, Handlebars.helpers); data = data || {};\n  var buffer = \"\", stack1, self=this, escapeExpression=this.escapeExpression;\n\nfunction program1(depth0,data) {\n  \n  var buffer = \"\", stack1;\n  buffer += \" <div class=\\\"filter-bar-right\\\"> <a class=\\\"previous-btn btn-gray \";\n  stack1 = helpers.unless.call(depth0, (depth0 && depth0.enablePrevious), {hash:{},inverse:self.noop,fn:self.program(2, program2, data),data:data});\n  if(stack1 || stack1 === 0) { buffer += stack1; }\n  buffer += \"\\\" href=\\\"#\\\"> <i class=\\\"glyphicon chevron-left\\\"></i> </a> <a class=\\\"next-btn btn-gray \";\n  stack1 = helpers.unless.call(depth0, (depth0 && depth0.enableNext), {hash:{},inverse:self.noop,fn:self.program(2, program2, data),data:data});\n  if(stack1 || stack1 === 0) { buffer += stack1; }\n  buffer += \"\\\" href=\\\"#\\\"> <i class=\\\"glyphicon chevron-right\\\"></i> </a> </div> \";\n  return buffer;\n  }\nfunction program2(depth0,data) {\n  \n  \n  return \"disabled\";\n  }\n\nfunction program4(depth0,data) {\n  \n  var buffer = \"\";\n  buffer += \" <div class=\\\"row row-padded\\\"> <div class=\\\"col-md-8 col-md-offset-2\\\"> <h4 class=\\\"text-muted text-center\\\">\"\n    + escapeExpression(__default(require(\"../../js/utils/handlebars/t.ts\")).call(depth0, \"Alerts are restricted from shared users.\", {hash:{},data:data}))\n    + \"</h4> </div> </div> \";\n  return buffer;\n  }\n\nfunction program6(depth0,data) {\n  \n  \n  return \" <div class=\\\"alert-list-container\\\"></div> \";\n  }\n\n  buffer += \"<div class=\\\"filter-bar\\\"> <span class=\\\"page-count\\\">\"\n    + escapeExpression(__default(require(\"../../js/utils/handlebars/t.ts\")).call(depth0, \"Page {1} of {2}\", (depth0 && depth0.escapedPage), (depth0 && depth0.escapedPages), {hash:{},data:data}))\n    + \"</span> \";\n  stack1 = helpers.unless.call(depth0, (depth0 && depth0.shared), {hash:{},inverse:self.noop,fn:self.program(1, program1, data),data:data});\n  if(stack1 || stack1 === 0) { buffer += stack1; }\n  buffer += \" </div> \";\n  stack1 = helpers['if'].call(depth0, (depth0 && depth0.shared), {hash:{},inverse:self.program(6, program6, data),fn:self.program(4, program4, data),data:data});\n  if(stack1 || stack1 === 0) { buffer += stack1; }\n  buffer += \" \";\n  return buffer;\n  });","var Handlebars = require(\"../../../node_modules/handlebars/runtime.js\");\nfunction __default(obj) { return obj && (obj.__esModule ? obj[\"default\"] : obj); }\nmodule.exports = (Handlebars[\"default\"] || Handlebars).template(function (Handlebars,depth0,helpers,partials,data) {\n  this.compilerInfo = [4,'>= 1.0.0'];\nhelpers = this.merge(helpers, Handlebars.helpers); data = data || {};\n  var buffer = \"\", stack1, self=this, escapeExpression=this.escapeExpression, functionType=\"function\";\n\nfunction program1(depth0,data) {\n  \n  var buffer = \"\", stack1;\n  buffer += \" <div class=\\\"filter-bar-right\\\"> <button class=\\\"pause-btn btn btn-sm btn-default \";\n  stack1 = helpers['if'].call(depth0, (depth0 && depth0.isPaused), {hash:{},inverse:self.noop,fn:self.program(2, program2, data),data:data});\n  if(stack1 || stack1 === 0) { buffer += stack1; }\n  buffer += \"\\\">\"\n    + escapeExpression(__default(require(\"../../js/utils/handlebars/t.ts\")).call(depth0, \"Pause\", {hash:{},data:data}))\n    + \"</button> <button class=\\\"resume-btn btn btn-sm btn-primary \";\n  stack1 = helpers.unless.call(depth0, (depth0 && depth0.isPaused), {hash:{},inverse:self.noop,fn:self.program(2, program2, data),data:data});\n  if(stack1 || stack1 === 0) { buffer += stack1; }\n  buffer += \"\\\">\"\n    + escapeExpression(__default(require(\"../../js/utils/handlebars/t.ts\")).call(depth0, \"Resume\", {hash:{},data:data}))\n    + \"</button> </div> \";\n  return buffer;\n  }\nfunction program2(depth0,data) {\n  \n  \n  return \"hidden\";\n  }\n\nfunction program4(depth0,data) {\n  \n  var buffer = \"\", stack1;\n  buffer += \" <p class=\\\"conversion-error-message\\\"><i class=\\\"conversion-error-icon glyphicon circle-exclamation-mark text-danger\\\"></i> \"\n    + escapeExpression(((stack1 = (depth0 && depth0.errorMessage)),typeof stack1 === functionType ? stack1.apply(depth0) : stack1))\n    + \" \"\n    + escapeExpression(__default(require(\"../../js/utils/handlebars/t.ts\")).call(depth0, \"Check the status in {1}Optimized Versions Settings{2}.\", \"<a href=\\\"{3}\\\">\", \"</a>\", (depth0 && depth0.manageVersionsRoute), {hash:{},data:data}))\n    + \"</p> \";\n  return buffer;\n  }\n\nfunction program6(depth0,data) {\n  \n  var buffer = \"\";\n  buffer += \" <p class=\\\"conversion-status-message\\\">\"\n    + escapeExpression(__default(require(\"../../js/utils/handlebars/t.ts\")).call(depth0, \"Manage your completed conversions in {1}Optimized Versions Settings{2}.\", \"<a href=\\\"{3}\\\">\", \"</a>\", (depth0 && depth0.manageVersionsRoute), {hash:{},data:data}))\n    + \"</p> \";\n  return buffer;\n  }\n\nfunction program8(depth0,data) {\n  \n  var buffer = \"\", stack1;\n  buffer += \" <div class=\\\"conversion-queue-empty-region\\\"></div> <div class=\\\"conversion-queue-up-next-list-region\\\"></div> <hr class=\\\"conversion-queue-divider \";\n  stack1 = helpers.unless.call(depth0, (depth0 && depth0.shouldShowDivider), {hash:{},inverse:self.noop,fn:self.program(2, program2, data),data:data});\n  if(stack1 || stack1 === 0) { buffer += stack1; }\n  buffer += \"\\\"> <div class=\\\"conversion-queue-after-up-next-list-region\\\"></div> \";\n  return buffer;\n  }\n\nfunction program10(depth0,data) {\n  \n  var buffer = \"\";\n  buffer += \" <div class=\\\"row row-padded\\\"> <h4 class=\\\"text-muted text-center\\\"> \"\n    + escapeExpression(__default(require(\"../../js/utils/handlebars/t.ts\")).call(depth0, \"This requires Plex Media Server {1} or later.\", (depth0 && depth0.escapedMinServerVersion), {hash:{},data:data}))\n    + \" </h4> </div> \";\n  return buffer;\n  }\n\n  buffer += \"<div class=\\\"conversion-filter-bar filter-bar\\\"> \";\n  stack1 = helpers['if'].call(depth0, (depth0 && depth0.hasPausedSetting), {hash:{},inverse:self.noop,fn:self.program(1, program1, data),data:data});\n  if(stack1 || stack1 === 0) { buffer += stack1; }\n  buffer += \" </div> \";\n  stack1 = helpers['if'].call(depth0, (depth0 && depth0.errorMessage), {hash:{},inverse:self.program(6, program6, data),fn:self.program(4, program4, data),data:data});\n  if(stack1 || stack1 === 0) { buffer += stack1; }\n  buffer += \" \";\n  stack1 = helpers['if'].call(depth0, (depth0 && depth0.shouldShowList), {hash:{},inverse:self.program(10, program10, data),fn:self.program(8, program8, data),data:data});\n  if(stack1 || stack1 === 0) { buffer += stack1; }\n  buffer += \" \";\n  return buffer;\n  });","var Handlebars = require(\"../../../node_modules/handlebars/runtime.js\");\nfunction __default(obj) { return obj && (obj.__esModule ? obj[\"default\"] : obj); }\nmodule.exports = (Handlebars[\"default\"] || Handlebars).template(function (Handlebars,depth0,helpers,partials,data) {\n  this.compilerInfo = [4,'>= 1.0.0'];\nhelpers = this.merge(helpers, Handlebars.helpers); data = data || {};\n  var buffer = \"\", stack1, escapeExpression=this.escapeExpression, self=this;\n\nfunction program1(depth0,data) {\n  \n  var buffer = \"\";\n  buffer += \" \"\n    + escapeExpression(__default(require(\"../../js/utils/handlebars/t.ts\")).call(depth0, \"Directory Settings\", {hash:{},data:data}))\n    + \" \";\n  return buffer;\n  }\n\nfunction program3(depth0,data) {\n  \n  var buffer = \"\";\n  buffer += \" \"\n    + escapeExpression(__default(require(\"../../js/utils/handlebars/t.ts\")).call(depth0, \"{1} Settings\", (depth0 && depth0.escapedTitle), {hash:{},data:data}))\n    + \" \";\n  return buffer;\n  }\n\nfunction program5(depth0,data) {\n  \n  var buffer = \"\";\n  buffer += \" \"\n    + escapeExpression(__default(require(\"../../js/utils/handlebars/partial.ts\")).call(depth0, \"setting\", {hash:{\n    'idSuffix': (\"_c\")\n  },data:data}))\n    + \" \";\n  return buffer;\n  }\n\n  buffer += \"<div class=\\\"modal-dialog\\\"> <div class=\\\"modal-content\\\"> <div class=\\\"modal-header\\\"> <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"modal\\\"><i class=\\\"glyphicon remove-2\\\"></i></button> <h4 class=\\\"modal-title\\\"> <i class=\\\"modal-icon glyphicon cogwheel\\\"></i> \";\n  stack1 = __default(require(\"../../js/utils/handlebars/if_eq.ts\")).call(depth0, (depth0 && depth0.title), \"Preferences...\", {hash:{},inverse:self.program(3, program3, data),fn:self.program(1, program1, data),data:data});\n  if(stack1 || stack1 === 0) { buffer += stack1; }\n  buffer += \" </h4> </div> <form id=\\\"channel-settings-form\\\"> <div class=\\\"modal-body settings-container\\\"> \";\n  stack1 = helpers.each.call(depth0, (depth0 && depth0.settings), {hash:{},inverse:self.noop,fn:self.program(5, program5, data),data:data});\n  if(stack1 || stack1 === 0) { buffer += stack1; }\n  buffer += \" </div> <div class=\\\"modal-footer\\\"> <button type=\\\"button\\\" class=\\\"cancel-btn btn btn-lg btn-default\\\" data-dismiss=\\\"modal\\\">\"\n    + escapeExpression(__default(require(\"../../js/utils/handlebars/t.ts\")).call(depth0, \"Cancel\", {hash:{},data:data}))\n    + \"</button> <button type=\\\"submit\\\" class=\\\"submit-btn btn btn-lg btn-primary btn-loading\\\"> <div class=\\\"loading loading-sm\\\"></div> <span class=\\\"btn-label\\\">\"\n    + escapeExpression(__default(require(\"../../js/utils/handlebars/t.ts\")).call(depth0, \"Save\", {hash:{},data:data}))\n    + \"</span> </button> </div> </form> </div> </div> \";\n  return buffer;\n  });","var Handlebars = require(\"../../../node_modules/handlebars/runtime.js\");\nfunction __default(obj) { return obj && (obj.__esModule ? obj[\"default\"] : obj); }\nmodule.exports = (Handlebars[\"default\"] || Handlebars).template(function (Handlebars,depth0,helpers,partials,data) {\n  this.compilerInfo = [4,'>= 1.0.0'];\nhelpers = this.merge(helpers, Handlebars.helpers); data = data || {};\n  var buffer = \"\", stack1, self=this;\n\nfunction program1(depth0,data) {\n  \n  var buffer = \"\", stack1;\n  buffer += \" <div class=\\\"media-poster-overlay\\\"></div> <div class=\\\"media-poster-actions\\\"> \";\n  stack1 = helpers['if'].call(depth0, ((stack1 = (depth0 && depth0.item)),stack1 == null || stack1 === false ? stack1 : stack1.hasPrefs), {hash:{},inverse:self.noop,fn:self.program(2, program2, data),data:data});\n  if(stack1 || stack1 === 0) { buffer += stack1; }\n  buffer += \" <button class=\\\"uninstall-btn media-poster-btn btn-link btn-danger\\\" tabindex=\\\"-1\\\"><i class=\\\"glyphicon remove-2\\\"></i></button> </div> \";\n  return buffer;\n  }\nfunction program2(depth0,data) {\n  \n  \n  return \" <button class=\\\"settings-btn media-poster-btn btn-link\\\" tabindex=\\\"-1\\\"><i class=\\\"glyphicon cogwheel\\\"></i></button> \";\n  }\n\n  buffer += \"<div class=\\\"media-poster-container\\\"> <div class=\\\"media-poster\\\"> \";\n  stack1 = helpers.unless.call(depth0, (depth0 && depth0.shared), {hash:{},inverse:self.noop,fn:self.program(1, program1, data),data:data});\n  if(stack1 || stack1 === 0) { buffer += stack1; }\n  buffer += \" <div class=\\\"loading loading-inline\\\"></div> </div> <div class=\\\"media-title media-heading\\\"></div> <div class=\\\"media-subtitle-1 media-heading secondary\\\"></div> </div> \";\n  return buffer;\n  });","var Handlebars = require(\"../../../node_modules/handlebars/runtime.js\");\nfunction __default(obj) { return obj && (obj.__esModule ? obj[\"default\"] : obj); }\nmodule.exports = (Handlebars[\"default\"] || Handlebars).template(function (Handlebars,depth0,helpers,partials,data) {\n  this.compilerInfo = [4,'>= 1.0.0'];\nhelpers = this.merge(helpers, Handlebars.helpers); data = data || {};\n  var buffer = \"\", stack1, functionType=\"function\", escapeExpression=this.escapeExpression, self=this;\n\nfunction program1(depth0,data) {\n  \n  var buffer = \"\", stack1;\n  buffer += \"<span class=\\\"badge\\\">\"\n    + escapeExpression(((stack1 = (depth0 && depth0.allCount)),typeof stack1 === functionType ? stack1.apply(depth0) : stack1))\n    + \"</span>\";\n  return buffer;\n  }\n\nfunction program3(depth0,data) {\n  \n  var buffer = \"\", stack1;\n  buffer += \"<span class=\\\"badge\\\">\"\n    + escapeExpression(((stack1 = (depth0 && depth0.videoCount)),typeof stack1 === functionType ? stack1.apply(depth0) : stack1))\n    + \"</span>\";\n  return buffer;\n  }\n\nfunction program5(depth0,data) {\n  \n  var buffer = \"\", stack1;\n  buffer += \"<span class=\\\"badge\\\">\"\n    + escapeExpression(((stack1 = (depth0 && depth0.musicCount)),typeof stack1 === functionType ? stack1.apply(depth0) : stack1))\n    + \"</span>\";\n  return buffer;\n  }\n\nfunction program7(depth0,data) {\n  \n  var buffer = \"\", stack1;\n  buffer += \"<span class=\\\"badge\\\">\"\n    + escapeExpression(((stack1 = (depth0 && depth0.photoCount)),typeof stack1 === functionType ? stack1.apply(depth0) : stack1))\n    + \"</span>\";\n  return buffer;\n  }\n\nfunction program9(depth0,data) {\n  \n  var buffer = \"\";\n  buffer += \" <p style=\\\"padding:20px\\\">\"\n    + escapeExpression(__default(require(\"../../js/utils/handlebars/t.ts\")).call(depth0, \"No plugins installed.\", {hash:{},data:data}))\n    + \"</p> \";\n  return buffer;\n  }\n\n  buffer += \"<ul class=\\\"nav nav-header pull-right\\\"> <li><a class=\\\"all-btn btn-gray selected\\\" href=\\\"#\\\">\"\n    + escapeExpression(__default(require(\"../../js/utils/handlebars/t.ts\")).call(depth0, \"All\", {hash:{},data:data}));\n  stack1 = helpers['if'].call(depth0, (depth0 && depth0.allCount), {hash:{},inverse:self.noop,fn:self.program(1, program1, data),data:data});\n  if(stack1 || stack1 === 0) { buffer += stack1; }\n  buffer += \"</a></li> <li><a class=\\\"video-btn btn-gray\\\" href=\\\"#\\\">\"\n    + escapeExpression(__default(require(\"../../js/utils/handlebars/t.ts\")).call(depth0, \"Video\", {hash:{},data:data}));\n  stack1 = helpers['if'].call(depth0, (depth0 && depth0.videoCount), {hash:{},inverse:self.noop,fn:self.program(3, program3, data),data:data});\n  if(stack1 || stack1 === 0) { buffer += stack1; }\n  buffer += \"</a></li> <li><a class=\\\"music-btn btn-gray\\\" href=\\\"#\\\">\"\n    + escapeExpression(__default(require(\"../../js/utils/handlebars/t.ts\")).call(depth0, \"Music\", {hash:{},data:data}));\n  stack1 = helpers['if'].call(depth0, (depth0 && depth0.musicCount), {hash:{},inverse:self.noop,fn:self.program(5, program5, data),data:data});\n  if(stack1 || stack1 === 0) { buffer += stack1; }\n  buffer += \"</a></li> <li><a class=\\\"photo-btn btn-gray\\\" href=\\\"#\\\">\"\n    + escapeExpression(__default(require(\"../../js/utils/handlebars/t.ts\")).call(depth0, \"Photo\", {hash:{},data:data}));\n  stack1 = helpers['if'].call(depth0, (depth0 && depth0.photoCount), {hash:{},inverse:self.noop,fn:self.program(7, program7, data),data:data});\n  if(stack1 || stack1 === 0) { buffer += stack1; }\n  buffer += \"</a></li> </ul> <h2>\"\n    + escapeExpression(__default(require(\"../../js/utils/handlebars/t.ts\")).call(depth0, \"Plugins\", {hash:{},data:data}))\n    + \"</h2> \";\n  stack1 = helpers.unless.call(depth0, (depth0 && depth0.hasInstalledChannels), {hash:{},inverse:self.noop,fn:self.program(9, program9, data),data:data});\n  if(stack1 || stack1 === 0) { buffer += stack1; }\n  buffer += \" <div class=\\\"channels-container\\\"></div> \";\n  return buffer;\n  });","var Handlebars = require(\"../../../../node_modules/handlebars/runtime.js\");\nfunction __default(obj) { return obj && (obj.__esModule ? obj[\"default\"] : obj); }\nmodule.exports = (Handlebars[\"default\"] || Handlebars).template(function (Handlebars,depth0,helpers,partials,data) {\n  this.compilerInfo = [4,'>= 1.0.0'];\nhelpers = this.merge(helpers, Handlebars.helpers); data = data || {};\n  var buffer = \"\", stack1, self=this, escapeExpression=this.escapeExpression, functionType=\"function\";\n\nfunction program1(depth0,data) {\n  \n  \n  return \" <i class=\\\"server-alert-icon glyphicon cogwheel\\\"></i> \";\n  }\n\nfunction program3(depth0,data) {\n  \n  var stack1;\n  stack1 = __default(require(\"../../../js/utils/handlebars/if_eq.ts\")).call(depth0, ((stack1 = (depth0 && depth0.event)),stack1 == null || stack1 === false ? stack1 : stack1._type), \"status\", {hash:{},inverse:self.program(6, program6, data),fn:self.program(4, program4, data),data:data});\n  if(stack1 || stack1 === 0) { return stack1; }\n  else { return ''; }\n  }\nfunction program4(depth0,data) {\n  \n  \n  return \" <i class=\\\"server-alert-icon glyphicon bullhorn\\\"></i> \";\n  }\n\nfunction program6(depth0,data) {\n  \n  var stack1;\n  stack1 = __default(require(\"../../../js/utils/handlebars/if_eq.ts\")).call(depth0, ((stack1 = (depth0 && depth0.event)),stack1 == null || stack1 === false ? stack1 : stack1._type), \"playing\", {hash:{},inverse:self.program(9, program9, data),fn:self.program(7, program7, data),data:data});\n  if(stack1 || stack1 === 0) { return stack1; }\n  else { return ''; }\n  }\nfunction program7(depth0,data) {\n  \n  \n  return \" <i class=\\\"server-alert-icon glyphicon imac\\\"></i> \";\n  }\n\nfunction program9(depth0,data) {\n  \n  var stack1;\n  stack1 = __default(require(\"../../../js/utils/handlebars/if_eq.ts\")).call(depth0, ((stack1 = (depth0 && depth0.event)),stack1 == null || stack1 === false ? stack1 : stack1._type), \"websocket\", {hash:{},inverse:self.program(13, program13, data),fn:self.program(10, program10, data),data:data});\n  if(stack1 || stack1 === 0) { return stack1; }\n  else { return ''; }\n  }\nfunction program10(depth0,data) {\n  \n  var buffer = \"\", stack1;\n  buffer += \" \";\n  stack1 = helpers['if'].call(depth0, ((stack1 = (depth0 && depth0.event)),stack1 == null || stack1 === false ? stack1 : stack1.opened), {hash:{},inverse:self.program(11, program11, data),fn:self.program(4, program4, data),data:data});\n  if(stack1 || stack1 === 0) { buffer += stack1; }\n  buffer += \" \";\n  return buffer;\n  }\nfunction program11(depth0,data) {\n  \n  \n  return \" <i class=\\\"server-alert-icon glyphicon warning-sign\\\"></i> \";\n  }\n\nfunction program13(depth0,data) {\n  \n  var stack1;\n  stack1 = __default(require(\"../../../js/utils/handlebars/if_eq.ts\")).call(depth0, ((stack1 = (depth0 && depth0.event)),stack1 == null || stack1 === false ? stack1 : stack1.state), 0, {hash:{},inverse:self.program(16, program16, data),fn:self.program(14, program14, data),data:data});\n  if(stack1 || stack1 === 0) { return stack1; }\n  else { return ''; }\n  }\nfunction program14(depth0,data) {\n  \n  \n  return \" <i class=\\\"server-alert-icon glyphicon plus\\\"></i> \";\n  }\n\nfunction program16(depth0,data) {\n  \n  var stack1;\n  stack1 = __default(require(\"../../../js/utils/handlebars/if_eq.ts\")).call(depth0, ((stack1 = (depth0 && depth0.event)),stack1 == null || stack1 === false ? stack1 : stack1.state), 5, {hash:{},inverse:self.program(19, program19, data),fn:self.program(17, program17, data),data:data});\n  if(stack1 || stack1 === 0) { return stack1; }\n  else { return ''; }\n  }\nfunction program17(depth0,data) {\n  \n  \n  return \" <i class=\\\"server-alert-icon glyphicon ok-2\\\"></i> \";\n  }\n\nfunction program19(depth0,data) {\n  \n  var stack1;\n  stack1 = __default(require(\"../../../js/utils/handlebars/if_eq.ts\")).call(depth0, ((stack1 = (depth0 && depth0.event)),stack1 == null || stack1 === false ? stack1 : stack1.state), 6, {hash:{},inverse:self.program(22, program22, data),fn:self.program(20, program20, data),data:data});\n  if(stack1 || stack1 === 0) { return stack1; }\n  else { return ''; }\n  }\nfunction program20(depth0,data) {\n  \n  \n  return \" <i class=\\\"server-alert-icon glyphicon magic\\\"></i> \";\n  }\n\nfunction program22(depth0,data) {\n  \n  var stack1;\n  stack1 = __default(require(\"../../../js/utils/handlebars/if_eq.ts\")).call(depth0, ((stack1 = (depth0 && depth0.event)),stack1 == null || stack1 === false ? stack1 : stack1.state), 9, {hash:{},inverse:self.program(25, program25, data),fn:self.program(23, program23, data),data:data});\n  if(stack1 || stack1 === 0) { return stack1; }\n  else { return ''; }\n  }\nfunction program23(depth0,data) {\n  \n  \n  return \" <i class=\\\"server-alert-icon glyphicon bin\\\"></i> \";\n  }\n\nfunction program25(depth0,data) {\n  \n  \n  return \" <i class=\\\"server-alert-icon glyphicon tags\\\"></i> \";\n  }\n\nfunction program27(depth0,data) {\n  \n  var buffer = \"\";\n  buffer += \" \"\n    + escapeExpression(__default(require(\"../../../js/utils/handlebars/t.ts\")).call(depth0, \"{1} set to {2}.\", (depth0 && depth0.escapedEventLabel), (depth0 && depth0.escapedEventValue), {hash:{},data:data}))\n    + \" \";\n  return buffer;\n  }\n\nfunction program29(depth0,data) {\n  \n  var stack1;\n  stack1 = __default(require(\"../../../js/utils/handlebars/if_eq.ts\")).call(depth0, ((stack1 = (depth0 && depth0.event)),stack1 == null || stack1 === false ? stack1 : stack1._type), \"status\", {hash:{},inverse:self.program(36, program36, data),fn:self.program(30, program30, data),data:data});\n  if(stack1 || stack1 === 0) { return stack1; }\n  else { return ''; }\n  }\nfunction program30(depth0,data) {\n  \n  var buffer = \"\", stack1;\n  buffer += \" \";\n  stack1 = helpers['if'].call(depth0, ((stack1 = (depth0 && depth0.event)),stack1 == null || stack1 === false ? stack1 : stack1.message), {hash:{},inverse:self.program(33, program33, data),fn:self.program(31, program31, data),data:data});\n  if(stack1 || stack1 === 0) { buffer += stack1; }\n  buffer += \" \";\n  return buffer;\n  }\nfunction program31(depth0,data) {\n  \n  var buffer = \"\", stack1;\n  buffer += \" \"\n    + escapeExpression(__default(require(\"../../../js/utils/handlebars/t.ts\")).call(depth0, ((stack1 = (depth0 && depth0.event)),stack1 == null || stack1 === false ? stack1 : stack1.message), {hash:{},data:data}))\n    + \" \";\n  return buffer;\n  }\n\nfunction program33(depth0,data) {\n  \n  var buffer = \"\", stack1;\n  buffer += \" \"\n    + escapeExpression(__default(require(\"../../../js/utils/handlebars/t.ts\")).call(depth0, ((stack1 = (depth0 && depth0.event)),stack1 == null || stack1 === false ? stack1 : stack1.title), {hash:{},data:data}));\n  stack1 = helpers['if'].call(depth0, ((stack1 = (depth0 && depth0.event)),stack1 == null || stack1 === false ? stack1 : stack1.description), {hash:{},inverse:self.noop,fn:self.program(34, program34, data),data:data});\n  if(stack1 || stack1 === 0) { buffer += stack1; }\n  buffer += \" \";\n  return buffer;\n  }\nfunction program34(depth0,data) {\n  \n  var buffer = \"\", stack1;\n  buffer += \": \"\n    + escapeExpression(__default(require(\"../../../js/utils/handlebars/t.ts\")).call(depth0, ((stack1 = (depth0 && depth0.event)),stack1 == null || stack1 === false ? stack1 : stack1.description), {hash:{},data:data}));\n  return buffer;\n  }\n\nfunction program36(depth0,data) {\n  \n  var stack1;\n  stack1 = __default(require(\"../../../js/utils/handlebars/if_eq.ts\")).call(depth0, ((stack1 = (depth0 && depth0.event)),stack1 == null || stack1 === false ? stack1 : stack1._type), \"timeline\", {hash:{},inverse:self.program(39, program39, data),fn:self.program(37, program37, data),data:data});\n  if(stack1 || stack1 === 0) { return stack1; }\n  else { return ''; }\n  }\nfunction program37(depth0,data) {\n  \n  var buffer = \"\", stack1;\n  buffer += \" \"\n    + escapeExpression(__default(require(\"../../../js/utils/handlebars/t.ts\")).call(depth0, ((stack1 = (depth0 && depth0.event)),stack1 == null || stack1 === false ? stack1 : stack1.stateString), {hash:{},data:data}))\n    + \" <a href=\\\"#!/server/\"\n    + escapeExpression(__default(require(\"../../../js/utils/handlebars/encodeUrl.ts\")).call(depth0, (depth0 && depth0.serverID), {hash:{},data:data}))\n    + \"/details?key=\"\n    + escapeExpression(__default(require(\"../../../js/utils/handlebars/encodeUrl.ts\")).call(depth0, (depth0 && depth0.itemKey), {hash:{},data:data}))\n    + \"\\\">\"\n    + escapeExpression(((stack1 = ((stack1 = (depth0 && depth0.event)),stack1 == null || stack1 === false ? stack1 : stack1.mediaTitle)),typeof stack1 === functionType ? stack1.apply(depth0) : stack1))\n    + \"</a> \";\n  return buffer;\n  }\n\nfunction program39(depth0,data) {\n  \n  var stack1;\n  stack1 = __default(require(\"../../../js/utils/handlebars/if_eq.ts\")).call(depth0, ((stack1 = (depth0 && depth0.event)),stack1 == null || stack1 === false ? stack1 : stack1._type), \"playing\", {hash:{},inverse:self.program(45, program45, data),fn:self.program(40, program40, data),data:data});\n  if(stack1 || stack1 === 0) { return stack1; }\n  else { return ''; }\n  }\nfunction program40(depth0,data) {\n  \n  var buffer = \"\", stack1;\n  buffer += \" \";\n  stack1 = helpers['if'].call(depth0, ((stack1 = (depth0 && depth0.event)),stack1 == null || stack1 === false ? stack1 : stack1.player), {hash:{},inverse:self.program(43, program43, data),fn:self.program(41, program41, data),data:data});\n  if(stack1 || stack1 === 0) { buffer += stack1; }\n  buffer += \" \";\n  return buffer;\n  }\nfunction program41(depth0,data) {\n  \n  var buffer = \"\";\n  buffer += \" \"\n    + escapeExpression(__default(require(\"../../../js/utils/handlebars/t.ts\")).call(depth0, \"{1} started playing {2} on {3}.\", (depth0 && depth0.escapedEventUsername), (depth0 && depth0.escapedEventTitle), (depth0 && depth0.escapedEventPlayer), {hash:{},data:data}))\n    + \" \";\n  return buffer;\n  }\n\nfunction program43(depth0,data) {\n  \n  var buffer = \"\";\n  buffer += \" \"\n    + escapeExpression(__default(require(\"../../../js/utils/handlebars/t.ts\")).call(depth0, \"{1} started playing {2}.\", (depth0 && depth0.escapedEventUsername), (depth0 && depth0.escapedEventTitle), {hash:{},data:data}))\n    + \" \";\n  return buffer;\n  }\n\nfunction program45(depth0,data) {\n  \n  var stack1;\n  stack1 = __default(require(\"../../../js/utils/handlebars/if_eq.ts\")).call(depth0, ((stack1 = (depth0 && depth0.event)),stack1 == null || stack1 === false ? stack1 : stack1._type), \"websocket\", {hash:{},inverse:self.noop,fn:self.program(46, program46, data),data:data});\n  if(stack1 || stack1 === 0) { return stack1; }\n  else { return ''; }\n  }\nfunction program46(depth0,data) {\n  \n  var buffer = \"\", stack1;\n  buffer += \" \";\n  stack1 = helpers['if'].call(depth0, ((stack1 = (depth0 && depth0.event)),stack1 == null || stack1 === false ? stack1 : stack1.opened), {hash:{},inverse:self.program(49, program49, data),fn:self.program(47, program47, data),data:data});\n  if(stack1 || stack1 === 0) { buffer += stack1; }\n  buffer += \" \";\n  return buffer;\n  }\nfunction program47(depth0,data) {\n  \n  var buffer = \"\";\n  buffer += \" \"\n    + escapeExpression(__default(require(\"../../../js/utils/handlebars/t.ts\")).call(depth0, \"Opened connection to {1}, listening for events.\", (depth0 && depth0.escapedServerName), {hash:{},data:data}))\n    + \" \";\n  return buffer;\n  }\n\nfunction program49(depth0,data) {\n  \n  var stack1;\n  stack1 = helpers['if'].call(depth0, ((stack1 = (depth0 && depth0.event)),stack1 == null || stack1 === false ? stack1 : stack1.closed), {hash:{},inverse:self.program(52, program52, data),fn:self.program(50, program50, data),data:data});\n  if(stack1 || stack1 === 0) { return stack1; }\n  else { return ''; }\n  }\nfunction program50(depth0,data) {\n  \n  var buffer = \"\";\n  buffer += \" \"\n    + escapeExpression(__default(require(\"../../../js/utils/handlebars/t.ts\")).call(depth0, \"Connection to {1} closed.\", (depth0 && depth0.escapedServerName), {hash:{},data:data}))\n    + \" \";\n  return buffer;\n  }\n\nfunction program52(depth0,data) {\n  \n  var buffer = \"\";\n  buffer += \" \"\n    + escapeExpression(__default(require(\"../../../js/utils/handlebars/t.ts\")).call(depth0, \"Unable to listen for events on {1}.\", (depth0 && depth0.escapedServerName), {hash:{},data:data}))\n    + \" \";\n  return buffer;\n  }\n\n  buffer += \"<div class=\\\"striped-list-inner-item alert-list-inner-item\\\"> \";\n  stack1 = __default(require(\"../../../js/utils/handlebars/if_eq.ts\")).call(depth0, ((stack1 = (depth0 && depth0.event)),stack1 == null || stack1 === false ? stack1 : stack1._type), \"setting\", {hash:{},inverse:self.program(3, program3, data),fn:self.program(1, program1, data),data:data});\n  if(stack1 || stack1 === 0) { buffer += stack1; }\n  buffer += \" <div class=\\\"server-alert-details\\\"> <span class=\\\"server-alert-time\\\">\"\n    + escapeExpression(__default(require(\"../../../js/utils/handlebars/dateTime/formatDate.ts\")).call(depth0, ((stack1 = (depth0 && depth0.event)),stack1 == null || stack1 === false ? stack1 : stack1.time), (depth0 && depth0.timeFormat), {hash:{},data:data}))\n    + \"</span> \";\n  stack1 = __default(require(\"../../../js/utils/handlebars/if_eq.ts\")).call(depth0, ((stack1 = (depth0 && depth0.event)),stack1 == null || stack1 === false ? stack1 : stack1._type), \"setting\", {hash:{},inverse:self.program(29, program29, data),fn:self.program(27, program27, data),data:data});\n  if(stack1 || stack1 === 0) { buffer += stack1; }\n  buffer += \" </div> </div> \";\n  return buffer;\n  });","var Handlebars = require(\"../../../../../node_modules/handlebars/runtime.js\");\nfunction __default(obj) { return obj && (obj.__esModule ? obj[\"default\"] : obj); }\nmodule.exports = (Handlebars[\"default\"] || Handlebars).template(function (Handlebars,depth0,helpers,partials,data) {\n  this.compilerInfo = [4,'>= 1.0.0'];\nhelpers = this.merge(helpers, Handlebars.helpers); data = data || {};\n  var buffer = \"\", escapeExpression=this.escapeExpression;\n\n\n  buffer += \"<div class=\\\"row row-padded\\\"> <h4 class=\\\"text-muted text-center\\\"> <p>\"\n    + escapeExpression(__default(require(\"../../../../js/utils/handlebars/t.ts\")).call(depth0, \"Conversions for media optimization will appear here.\", {hash:{},data:data}))\n    + \"</p> <p>\"\n    + escapeExpression(__default(require(\"../../../../js/utils/handlebars/t.ts\")).call(depth0, \"Manage your optimized versions in {1}Optimized Versions Settings{2}.\", \"<a href=\\\"{3}\\\">\", \"</a>\", (depth0 && depth0.manageVersionsRoute), {hash:{},data:data}))\n    + \"</p> </h4> </div> \";\n  return buffer;\n  });","var Handlebars = require(\"../../../../../node_modules/handlebars/runtime.js\");\nfunction __default(obj) { return obj && (obj.__esModule ? obj[\"default\"] : obj); }\nmodule.exports = (Handlebars[\"default\"] || Handlebars).template(function (Handlebars,depth0,helpers,partials,data) {\n  this.compilerInfo = [4,'>= 1.0.0'];\nhelpers = this.merge(helpers, Handlebars.helpers); data = data || {};\n  var buffer = \"\", stack1, helper, functionType=\"function\", escapeExpression=this.escapeExpression, self=this;\n\nfunction program1(depth0,data) {\n  \n  \n  return \" <div class=\\\"sortable-handle btn-gray-link\\\"><i class=\\\"glyphicon show-lines\\\"></i></div> \";\n  }\n\n  buffer += \"<div class=\\\"show-actions striped-list-inner-item playlist-inner-item \";\n  if (helper = helpers.type) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n  else { helper = (depth0 && depth0.type); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n  buffer += escapeExpression(stack1)\n    + \"\\\"> <div class=\\\"media-actions media-reorder\\\"> \";\n  stack1 = helpers.unless.call(depth0, (depth0 && depth0.hideDragHandle), {hash:{},inverse:self.noop,fn:self.program(1, program1, data),data:data});\n  if(stack1 || stack1 === 0) { buffer += stack1; }\n  buffer += \" </div> <div class=\\\"generator-poster-container\\\"> <div class=\\\"media-poster\\\"></div> </div> <div class=\\\"media-actions generator-actions\\\"> <button class=\\\"promote-btn media-action-btn btn-gray-link\\\" tabindex=\\\"-1\\\"><i class=\\\"glyphicon up-arrow\\\"></i></button> <button class=\\\"delete-btn media-action-btn btn-gray-link btn-danger\\\" tabindex=\\\"-1\\\"><i class=\\\"glyphicon remove-2\\\"></i></button> </div> <div class=\\\"media-item\\\"> <div class=\\\"media-details\\\"> <div class=\\\"generator-title col-lg\\\"></div> <div class=\\\"generator-target col-md col-secondary\\\"></div> <div class=\\\"conversion-status-region col-md col-secondary\\\"></div> </div> </div> </div> \";\n  return buffer;\n  });","var Handlebars = require(\"../../../../../node_modules/handlebars/runtime.js\");\nfunction __default(obj) { return obj && (obj.__esModule ? obj[\"default\"] : obj); }\nmodule.exports = (Handlebars[\"default\"] || Handlebars).template(function (Handlebars,depth0,helpers,partials,data) {\n  this.compilerInfo = [4,'>= 1.0.0'];\nhelpers = this.merge(helpers, Handlebars.helpers); data = data || {};\n  var buffer = \"\", stack1, escapeExpression=this.escapeExpression, functionType=\"function\";\n\n\n  buffer += \"<div class=\\\"conversion-status-container conversion-status-converting\\\"> <div class=\\\"progress-bar-region\\\"></div> <div class=\\\"conversion-status-converting-label-container\\\"> <span class=\\\"conversion-status-converting-label\\\">\"\n    + escapeExpression(__default(require(\"../../../../js/utils/handlebars/t.ts\")).call(depth0, \"Converting\", {hash:{},data:data}))\n    + \"</span> <span class=\\\"conversion-status-converting-speed\\\"></span> <div class=\\\"conversion-status-converting-progress\\\"> <span class=\\\"conversion-status-converting-percentage\\\"></span> <span class=\\\"conversion-status-converting-progress-separator\\\">&middot;</span> <span class=\\\"conversion-status-converting-remaining\\\"></span> </div> </div> </div> <div class=\\\"conversion-status-container conversion-status-processed\\\"> <i class=\\\"conversion-status-icon glyphicon ok-2 text-success\\\"></i> \"\n    + escapeExpression(__default(require(\"../../../../js/utils/handlebars/t.ts\")).call(depth0, \"Complete\", {hash:{},data:data}))\n    + \" </div> <div class=\\\"conversion-status-container conversion-status-disabled\\\"> <i class=\\\"conversion-status-icon glyphicon circle-exclamation-mark text-danger\\\"></i> \"\n    + escapeExpression(__default(require(\"../../../../js/utils/handlebars/t.ts\")).call(depth0, \"Deleted\", {hash:{},data:data}))\n    + \" <button class=\\\"enable-btn media-action-btn btn-gray-link\\\" tabindex=\\\"-1\\\"><i class=\\\"glyphicon repeat\\\"></i></button> </div> <div class=\\\"conversion-status-container conversion-status-error\\\"> <i class=\\\"conversion-status-icon glyphicon circle-exclamation-mark text-danger\\\"></i> <span class=\\\"conversion-status-failed-message\\\">\"\n    + escapeExpression(((stack1 = (depth0 && depth0.initialErrorMessage)),typeof stack1 === functionType ? stack1.apply(depth0) : stack1))\n    + \"</span> <button class=\\\"retry-btn media-action-btn btn-gray-link\\\" tabindex=\\\"-1\\\"><i class=\\\"glyphicon repeat\\\"></i></button> </div> <div class=\\\"conversion-status-container conversion-status-pending\\\"> <i class=\\\"conversion-status-icon glyphicon clock\\\"></i> <span class=\\\"conversion-status-pending-label\\\">\"\n    + escapeExpression(__default(require(\"../../../../js/utils/handlebars/t.ts\")).call(depth0, \"Waiting\", {hash:{},data:data}))\n    + \"</span> </div> \";\n  return buffer;\n  });","var Handlebars = require(\"../../../../../node_modules/handlebars/runtime.js\");\nfunction __default(obj) { return obj && (obj.__esModule ? obj[\"default\"] : obj); }\nmodule.exports = (Handlebars[\"default\"] || Handlebars).template(function (Handlebars,depth0,helpers,partials,data) {\n  this.compilerInfo = [4,'>= 1.0.0'];\nhelpers = this.merge(helpers, Handlebars.helpers); data = data || {};\n  var buffer = \"\", escapeExpression=this.escapeExpression;\n\n\n  buffer += \"<div class=\\\"row row-padded\\\"> <h4 class=\\\"text-muted text-center\\\"> <p>\"\n    + escapeExpression(__default(require(\"../../../../js/utils/handlebars/t.ts\")).call(depth0, \"Choose \\\"Optimize...\\\" on items in your library and optimized versions will appear here.\", {hash:{},data:data}))\n    + \"</p> <p>\"\n    + escapeExpression(__default(require(\"../../../../js/utils/handlebars/t.ts\")).call(depth0, \"Monitor conversion progress in {1}Conversion Activity{2}.\", \"<a class=\\\"status-conversion-btn\\\" href=\\\"#\\\">\", \"</a>\", {hash:{},data:data}))\n    + \"</p> </h4> </div> \";\n  return buffer;\n  });","var Handlebars = require(\"../../../../../node_modules/handlebars/runtime.js\");\nfunction __default(obj) { return obj && (obj.__esModule ? obj[\"default\"] : obj); }\nmodule.exports = (Handlebars[\"default\"] || Handlebars).template(function (Handlebars,depth0,helpers,partials,data) {\n  this.compilerInfo = [4,'>= 1.0.0'];\nhelpers = this.merge(helpers, Handlebars.helpers); data = data || {};\n  var buffer = \"\", stack1, functionType=\"function\", escapeExpression=this.escapeExpression;\n\n\n  buffer += \"<a class=\\\"show-actions playlist-inner-item \"\n    + escapeExpression(((stack1 = (depth0 && depth0.type)),typeof stack1 === functionType ? stack1.apply(depth0) : stack1))\n    + \"\\\" href=\\\"#\\\"> <div class=\\\"media-actions media-reorder\\\"> <div class=\\\"sortable-handle btn-gray-link\\\"><i class=\\\"glyphicon show-lines\\\"></i></div> </div> <div class=\\\"generator-poster-container\\\"> <div class=\\\"media-poster\\\"></div> </div> <div class=\\\"media-actions generator-actions\\\"> <button class=\\\"retry-btn media-action-btn btn-gray-link\\\" tabindex=\\\"-1\\\"><i class=\\\"glyphicon repeat\\\"></i></button> <button class=\\\"edit-btn media-action-btn btn-gray-link\\\" tabindex=\\\"-1\\\"><i class=\\\"glyphicon pencil\\\"></i></button> <button class=\\\"delete-btn media-action-btn btn-gray-link btn-danger\\\" tabindex=\\\"-1\\\"><i class=\\\"glyphicon remove-2\\\"></i></button> </div> <div class=\\\"media-item\\\"> <div class=\\\"media-details\\\"> <div class=\\\"generator-title col-lg\\\"></div> <div class=\\\"generator-target col-md col-secondary\\\"></div> <div class=\\\"generator-status col-md col-secondary\\\"> <div class=\\\"generator-status-container generator-status-complete\\\"> <i class=\\\"generator-status-icon glyphicon ok-2 text-success\\\"></i> \"\n    + escapeExpression(__default(require(\"../../../../js/utils/handlebars/t.ts\")).call(depth0, \"Complete\", {hash:{},data:data}))\n    + \" </div> <div class=\\\"generator-status-container generator-status-failed\\\"> <i class=\\\"generator-status-icon glyphicon circle-exclamation-mark text-danger\\\"></i> <span class=\\\"generator-status-failed-message\\\">\"\n    + escapeExpression(__default(require(\"../../../../js/utils/handlebars/t.ts\")).call(depth0, \"Failed\", {hash:{},data:data}))\n    + \"</span> </div> <div class=\\\"generator-status-container generator-status-converting\\\"> <i class=\\\"generator-status-icon glyphicon restart\\\"></i> \"\n    + escapeExpression(__default(require(\"../../../../js/utils/handlebars/t.ts\")).call(depth0, \"Converting\", {hash:{},data:data}))\n    + \" </div> <div class=\\\"generator-status-container generator-status-pending\\\"> <i class=\\\"generator-status-icon glyphicon clock\\\"></i> \"\n    + escapeExpression(__default(require(\"../../../../js/utils/handlebars/t.ts\")).call(depth0, \"Waiting\", {hash:{},data:data}))\n    + \" </div> </div> </div> </div> </a> \";\n  return buffer;\n  });","var Handlebars = require(\"../../../../../node_modules/handlebars/runtime.js\");\nfunction __default(obj) { return obj && (obj.__esModule ? obj[\"default\"] : obj); }\nmodule.exports = (Handlebars[\"default\"] || Handlebars).template(function (Handlebars,depth0,helpers,partials,data) {\n  this.compilerInfo = [4,'>= 1.0.0'];\nhelpers = this.merge(helpers, Handlebars.helpers); data = data || {};\n  var buffer = \"\", stack1, helper, functionType=\"function\", escapeExpression=this.escapeExpression;\n\n\n  buffer += \"<div class=\\\"striped-list-inner-item\\\"> <div class=\\\"generator-poster-container\\\"> <div class=\\\"media-poster\\\"></div> </div> <div class=\\\"conversion-status-region\\\"></div> <div class=\\\"generator-metadata-title\\\">\";\n  if (helper = helpers.title) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n  else { helper = (depth0 && depth0.title); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n  buffer += escapeExpression(stack1)\n    + \"</div> <div class=\\\"generator-metadata-episode-index generator-metadata-subtitle\\\"></div> <div class=\\\"generator-metadata-year generator-metadata-subtitle\\\">\";\n  if (helper = helpers.year) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n  else { helper = (depth0 && depth0.year); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n  buffer += escapeExpression(stack1)\n    + \"</div> </div> \";\n  return buffer;\n  });","var Handlebars = require(\"../../../../node_modules/handlebars/runtime.js\");\nfunction __default(obj) { return obj && (obj.__esModule ? obj[\"default\"] : obj); }\nmodule.exports = (Handlebars[\"default\"] || Handlebars).template(function (Handlebars,depth0,helpers,partials,data) {\n  this.compilerInfo = [4,'>= 1.0.0'];\nhelpers = this.merge(helpers, Handlebars.helpers); data = data || {};\n  var buffer = \"\", stack1, helper, functionType=\"function\", escapeExpression=this.escapeExpression;\n\n\n  buffer += \"<a class=\\\"btn-gray\\\" data-identifier=\\\"\";\n  if (helper = helpers.identifier) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n  else { helper = (depth0 && depth0.identifier); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n  buffer += escapeExpression(stack1)\n    + \"\\\" href=\\\"#\\\">\";\n  if (helper = helpers.name) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n  else { helper = (depth0 && depth0.name); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n  buffer += escapeExpression(stack1)\n    + \"</a> \";\n  return buffer;\n  });","var Handlebars = require(\"../../../../node_modules/handlebars/runtime.js\");\nfunction __default(obj) { return obj && (obj.__esModule ? obj[\"default\"] : obj); }\nmodule.exports = (Handlebars[\"default\"] || Handlebars).template(function (Handlebars,depth0,helpers,partials,data) {\n  this.compilerInfo = [4,'>= 1.0.0'];\nhelpers = this.merge(helpers, Handlebars.helpers); data = data || {};\n  var buffer = \"\", stack1, functionType=\"function\", escapeExpression=this.escapeExpression, self=this;\n\nfunction program1(depth0,data) {\n  \n  \n  return \"checked\";\n  }\n\nfunction program3(depth0,data) {\n  \n  \n  return \"disabled\";\n  }\n\n  buffer += \"<div class=\\\"card-actions\\\"> <button class=\\\"info-btn card-action-btn\\\"><i class=\\\"glyphicon circle-info\\\"></i></button> <button class=\\\"settings-btn card-action-btn\\\"><i class=\\\"glyphicon cogwheel\\\"></i></button> </div> <div class=\\\"card-handle\\\"><i class=\\\"glyphicon show-lines\\\"></i></div> <label for=\\\"\"\n    + escapeExpression(((stack1 = (depth0 && depth0.identifier)),typeof stack1 === functionType ? stack1.apply(depth0) : stack1))\n    + \"\\\"> <input id=\\\"\"\n    + escapeExpression(((stack1 = (depth0 && depth0.identifier)),typeof stack1 === functionType ? stack1.apply(depth0) : stack1))\n    + \"\\\" name=\\\"\"\n    + escapeExpression(((stack1 = (depth0 && depth0.identifier)),typeof stack1 === functionType ? stack1.apply(depth0) : stack1))\n    + \"\\\" type=\\\"checkbox\\\" \";\n  stack1 = helpers['if'].call(depth0, (depth0 && depth0.enabled), {hash:{},inverse:self.noop,fn:self.program(1, program1, data),data:data});\n  if(stack1 || stack1 === 0) { buffer += stack1; }\n  buffer += \" \";\n  stack1 = helpers['if'].call(depth0, (depth0 && depth0.isPrimary), {hash:{},inverse:self.noop,fn:self.program(3, program3, data),data:data});\n  if(stack1 || stack1 === 0) { buffer += stack1; }\n  buffer += \"> \"\n    + escapeExpression(__default(require(\"../../../js/utils/handlebars/t.ts\")).call(depth0, (depth0 && depth0.name), {hash:{},data:data}))\n    + \" </label> \";\n  return buffer;\n  });","var Handlebars = require(\"../../../node_modules/handlebars/runtime.js\");\nfunction __default(obj) { return obj && (obj.__esModule ? obj[\"default\"] : obj); }\nmodule.exports = (Handlebars[\"default\"] || Handlebars).template(function (Handlebars,depth0,helpers,partials,data) {\n  this.compilerInfo = [4,'>= 1.0.0'];\nhelpers = this.merge(helpers, Handlebars.helpers); data = data || {};\n  var buffer = \"\", stack1, helper, functionType=\"function\", escapeExpression=this.escapeExpression;\n\n\n  buffer += \"<div class=\\\"modal-dialog\\\"> <div class=\\\"modal-content\\\"> <div class=\\\"modal-header\\\"> <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"modal\\\"><i class=\\\"glyphicon remove-2\\\"></i></button> <h4 class=\\\"modal-title\\\"> <i class=\\\"modal-icon glyphicon circle-info\\\"></i> \"\n    + escapeExpression(((stack1 = ((stack1 = (depth0 && depth0.agent)),stack1 == null || stack1 === false ? stack1 : stack1.name)),typeof stack1 === functionType ? stack1.apply(depth0) : stack1))\n    + \" </h4> </div> <div class=\\\"modal-body\\\"> <p class=\\\"agent-icon-container\\\"></p> <p>\";\n  if (helper = helpers.attribution) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n  else { helper = (depth0 && depth0.attribution); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n  if(stack1 || stack1 === 0) { buffer += stack1; }\n  buffer += \"</p> </div> </div> </div> \";\n  return buffer;\n  });","var Handlebars = require(\"../../../node_modules/handlebars/runtime.js\");\nfunction __default(obj) { return obj && (obj.__esModule ? obj[\"default\"] : obj); }\nmodule.exports = (Handlebars[\"default\"] || Handlebars).template(function (Handlebars,depth0,helpers,partials,data) {\n  this.compilerInfo = [4,'>= 1.0.0'];\nhelpers = this.merge(helpers, Handlebars.helpers); data = data || {};\n  var buffer = \"\", stack1, functionType=\"function\", escapeExpression=this.escapeExpression, self=this;\n\nfunction program1(depth0,data,depth1) {\n  \n  var buffer = \"\", stack1;\n  buffer += \" <h4 class=\\\"update-list-title\\\">\"\n    + escapeExpression(__default(require(\"../../js/utils/handlebars/t.ts\")).call(depth0, \"New\", {hash:{},data:data}))\n    + \"</h4> <ul> \";\n  stack1 = helpers.each.call(depth0, (depth1 && depth1.added), {hash:{},inverse:self.noop,fn:self.program(2, program2, data),data:data});\n  if(stack1 || stack1 === 0) { buffer += stack1; }\n  buffer += \" </ul> \";\n  return buffer;\n  }\nfunction program2(depth0,data) {\n  \n  var buffer = \"\";\n  buffer += \" <li>\"\n    + escapeExpression((typeof depth0 === functionType ? depth0.apply(depth0) : depth0))\n    + \"</li> \";\n  return buffer;\n  }\n\nfunction program4(depth0,data,depth1) {\n  \n  var buffer = \"\", stack1;\n  buffer += \" <h4 class=\\\"update-list-title\\\">\"\n    + escapeExpression(__default(require(\"../../js/utils/handlebars/t.ts\")).call(depth0, \"Fixes\", {hash:{},data:data}))\n    + \"</h4> <ul> \";\n  stack1 = helpers.each.call(depth0, (depth1 && depth1.fixed), {hash:{},inverse:self.noop,fn:self.program(2, program2, data),data:data});\n  if(stack1 || stack1 === 0) { buffer += stack1; }\n  buffer += \" </ul> \";\n  return buffer;\n  }\n\n  buffer += \"<div class=\\\"modal-dialog\\\"> <div class=\\\"modal-content\\\"> <div class=\\\"modal-header\\\"> <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"modal\\\"><i class=\\\"glyphicon remove-2\\\"></i></button> <h4 class=\\\"modal-title\\\"><i class=\\\"modal-icon glyphicon circle-info\\\"></i> \"\n    + escapeExpression(__default(require(\"../../js/utils/handlebars/t.ts\")).call(depth0, \"Plex Media Server Release Notes\", {hash:{},data:data}))\n    + \"</h4> </div> <div class=\\\"modal-body modal-body-scroll dark-scrollbar\\\"> <span class=\\\"text-muted\\\">\"\n    + escapeExpression(__default(require(\"../../js/utils/handlebars/t.ts\")).call(depth0, \"Version {1}\", (depth0 && depth0.escapedVersion), {hash:{},data:data}))\n    + \"</span> \";\n  stack1 = helpers['if'].call(depth0, (depth0 && depth0.added), {hash:{},inverse:self.noop,fn:self.programWithDepth(1, program1, data, depth0),data:data});\n  if(stack1 || stack1 === 0) { buffer += stack1; }\n  buffer += \" \";\n  stack1 = helpers['if'].call(depth0, (depth0 && depth0.fixed), {hash:{},inverse:self.noop,fn:self.programWithDepth(4, program4, data, depth0),data:data});\n  if(stack1 || stack1 === 0) { buffer += stack1; }\n  buffer += \" </div> </div> </div> \";\n  return buffer;\n  });","var Handlebars = require(\"../../../../node_modules/handlebars/runtime.js\");\nfunction __default(obj) { return obj && (obj.__esModule ? obj[\"default\"] : obj); }\nmodule.exports = (Handlebars[\"default\"] || Handlebars).template(function (Handlebars,depth0,helpers,partials,data) {\n  this.compilerInfo = [4,'>= 1.0.0'];\nhelpers = this.merge(helpers, Handlebars.helpers); data = data || {};\n  var buffer = \"\", escapeExpression=this.escapeExpression;\n\n\n  buffer += \"<div class=\\\"modal-dialog\\\"> <div class=\\\"modal-content\\\"> <div class=\\\"modal-header\\\"> <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"modal\\\"><i class=\\\"glyphicon remove-2\\\"></i></button> <h4 class=\\\"modal-title\\\"><i class=\\\"modal-icon glyphicon restart\\\"></i> <span class=\\\"generator-title\\\"></span></h4> </div> <div class=\\\"modal-body modal-body-scroll dark-scrollbar\\\"> <h4> <span class=\\\"generator-failure-container pull-right\\\"> <i class=\\\"generator-failure-icon glyphicon circle-exclamation-mark text-danger\\\"></i> <span class=\\\"generator-failure-message text-muted\\\"></span> </span> <span class=\\\"generator-items-count\\\"></span> &middot; <span class=\\\"generator-total-size\\\"></span> </h4> <div class=\\\"list-region\\\"></div> <div class=\\\"list-feedback-container\\\"> <span class=\\\"loading hidden\\\"></span> <span class=\\\"error-message text-muted hidden\\\"> \"\n    + escapeExpression(__default(require(\"../../../js/utils/handlebars/t.ts\")).call(depth0, \"There was a problem loading these items.\", {hash:{},data:data}))\n    + \" </span> </div> </div> </div> </div> \";\n  return buffer;\n  });","var Handlebars = require(\"../../../../node_modules/handlebars/runtime.js\");\nfunction __default(obj) { return obj && (obj.__esModule ? obj[\"default\"] : obj); }\nmodule.exports = (Handlebars[\"default\"] || Handlebars).template(function (Handlebars,depth0,helpers,partials,data) {\n  this.compilerInfo = [4,'>= 1.0.0'];\nhelpers = this.merge(helpers, Handlebars.helpers); data = data || {};\n  var buffer = \"\", stack1, self=this, functionType=\"function\", escapeExpression=this.escapeExpression;\n\nfunction program1(depth0,data,depth1) {\n  \n  var buffer = \"\", stack1;\n  buffer += \" <li class=\\\"\";\n  stack1 = __default(require(\"../../../js/utils/handlebars/if_eq.ts\")).call(depth0, ((stack1 = (depth1 && depth1.currentType)),stack1 == null || stack1 === false ? stack1 : stack1.id), (depth0 && depth0.id), {hash:{},inverse:self.noop,fn:self.program(2, program2, data),data:data});\n  if(stack1 || stack1 === 0) { buffer += stack1; }\n  buffer += \"\\\"> <a class=\\\"btn-gray\\\" data-type=\\\"\"\n    + escapeExpression(((stack1 = (depth0 && depth0.typeString)),typeof stack1 === functionType ? stack1.apply(depth0) : stack1))\n    + \"\\\" href=\\\"#\\\">\"\n    + escapeExpression(__default(require(\"../../../js/utils/handlebars/t.ts\")).call(depth0, (depth0 && depth0.plural), {hash:{},data:data}))\n    + \"</a> </li> \";\n  return buffer;\n  }\nfunction program2(depth0,data) {\n  \n  \n  return \"active\";\n  }\n\n  buffer += \"<ul class=\\\"agent-types-nav nav nav-pills\\\"> \";\n  stack1 = helpers.each.call(depth0, (depth0 && depth0.agentTypes), {hash:{},inverse:self.noop,fn:self.programWithDepth(1, program1, data, depth0),data:data});\n  if(stack1 || stack1 === 0) { buffer += stack1; }\n  buffer += \" </ul> <div class=\\\"agents-list-container\\\"></div> <p class=\\\"help-block sortable-help-block\\\">\"\n    + escapeExpression(__default(require(\"../../../js/utils/handlebars/t.ts\")).call(depth0, \"Select which additional agents should contribute to metadata from {1}, and drag them to change the order of preference.\", \"<span class=\\\"agent-label\\\"></span>\", {hash:{},data:data}))\n    + \"</p> <div class=\\\"contributors-list-container\\\"></div> \";\n  return buffer;\n  });","var Handlebars = require(\"../../../../node_modules/handlebars/runtime.js\");\nfunction __default(obj) { return obj && (obj.__esModule ? obj[\"default\"] : obj); }\nmodule.exports = (Handlebars[\"default\"] || Handlebars).template(function (Handlebars,depth0,helpers,partials,data) {\n  this.compilerInfo = [4,'>= 1.0.0'];\nhelpers = this.merge(helpers, Handlebars.helpers); data = data || {};\n  var buffer = \"\", stack1, escapeExpression=this.escapeExpression, self=this;\n\nfunction program1(depth0,data) {\n  \n  var buffer = \"\";\n  buffer += \" \"\n    + escapeExpression(__default(require(\"../../../js/utils/handlebars/partial.ts\")).call(depth0, \"setting\", {hash:{\n    'idSuffix': (\"_c\")\n  },data:data}))\n    + \" \";\n  return buffer;\n  }\n\n  buffer += \"<div class=\\\"sign-in-region\\\"></div> <form id=\\\"server-settings-form\\\"> <div class=\\\"form-group\\\"> <h4 class=\\\"version-header\\\"><span class=\\\"version\\\"></span> <span class=\\\"update-region\\\"></span></h4> </div> \";\n  stack1 = helpers.each.call(depth0, depth0, {hash:{},inverse:self.noop,fn:self.program(1, program1, data),data:data});\n  if(stack1 || stack1 === 0) { buffer += stack1; }\n  buffer += \" <div class=\\\"form-footer\\\"> <button type=\\\"submit\\\" class=\\\"submit-btn btn btn-lg btn-primary btn-loading disabled\\\"> <div class=\\\"loading loading-sm\\\"></div> <span class=\\\"btn-label\\\">\"\n    + escapeExpression(__default(require(\"../../../js/utils/handlebars/t.ts\")).call(depth0, \"Save Changes\", {hash:{},data:data}))\n    + \"</span> </button> <span class=\\\"form-message\\\"></span> </div> </form> \";\n  return buffer;\n  });","var Handlebars = require(\"../../../../node_modules/handlebars/runtime.js\");\nfunction __default(obj) { return obj && (obj.__esModule ? obj[\"default\"] : obj); }\nmodule.exports = (Handlebars[\"default\"] || Handlebars).template(function (Handlebars,depth0,helpers,partials,data) {\n  this.compilerInfo = [4,'>= 1.0.0'];\nhelpers = this.merge(helpers, Handlebars.helpers); data = data || {};\n  var buffer = \"\", stack1, escapeExpression=this.escapeExpression, self=this;\n\nfunction program1(depth0,data) {\n  \n  var buffer = \"\";\n  buffer += \" \"\n    + escapeExpression(__default(require(\"../../../js/utils/handlebars/partial.ts\")).call(depth0, \"setting\", {hash:{\n    'idSuffix': (\"_c\")\n  },data:data}))\n    + \" \";\n  return buffer;\n  }\n\n  buffer += \"<form id=\\\"server-settings-form\\\"> \";\n  stack1 = helpers.each.call(depth0, depth0, {hash:{},inverse:self.noop,fn:self.program(1, program1, data),data:data});\n  if(stack1 || stack1 === 0) { buffer += stack1; }\n  buffer += \" <div class=\\\"form-footer\\\"> <button type=\\\"submit\\\" class=\\\"submit-btn btn btn-lg btn-primary btn-loading disabled\\\"> <div class=\\\"loading loading-sm\\\"></div> <span class=\\\"btn-label\\\">\"\n    + escapeExpression(__default(require(\"../../../js/utils/handlebars/t.ts\")).call(depth0, \"Save Changes\", {hash:{},data:data}))\n    + \"</span> </button> <span class=\\\"form-message\\\"></span> </div> </form> \";\n  return buffer;\n  });","var Handlebars = require(\"../../../../node_modules/handlebars/runtime.js\");\nfunction __default(obj) { return obj && (obj.__esModule ? obj[\"default\"] : obj); }\nmodule.exports = (Handlebars[\"default\"] || Handlebars).template(function (Handlebars,depth0,helpers,partials,data) {\n  this.compilerInfo = [4,'>= 1.0.0'];\nhelpers = this.merge(helpers, Handlebars.helpers); data = data || {};\n  var buffer = \"\", stack1, escapeExpression=this.escapeExpression, self=this, functionType=\"function\";\n\nfunction program1(depth0,data) {\n  \n  var buffer = \"\";\n  buffer += \" <h4 class=\\\"status-header status-header-single\\\"> <span class=\\\"loading loading-sm\\\"></span> \"\n    + escapeExpression(__default(require(\"../../../js/utils/handlebars/t.ts\")).call(depth0, \"Connecting server...\", {hash:{},data:data}))\n    + \" </h4> \";\n  return buffer;\n  }\n\nfunction program3(depth0,data) {\n  \n  var stack1;\n  stack1 = __default(require(\"../../../js/utils/handlebars/if_eq.ts\")).call(depth0, ((stack1 = (depth0 && depth0.cloudAccount)),stack1 == null || stack1 === false ? stack1 : stack1.remoteAccessState), \"disconnecting\", {hash:{},inverse:self.program(6, program6, data),fn:self.program(4, program4, data),data:data});\n  if(stack1 || stack1 === 0) { return stack1; }\n  else { return ''; }\n  }\nfunction program4(depth0,data) {\n  \n  var buffer = \"\";\n  buffer += \" <h4 class=\\\"status-header status-header-single\\\"> <span class=\\\"loading loading-sm\\\"></span> \"\n    + escapeExpression(__default(require(\"../../../js/utils/handlebars/t.ts\")).call(depth0, \"Disconnecting server...\", {hash:{},data:data}))\n    + \" </h4> \";\n  return buffer;\n  }\n\nfunction program6(depth0,data) {\n  \n  var stack1;\n  stack1 = helpers['if'].call(depth0, (depth0 && depth0.isUnavailable), {hash:{},inverse:self.program(12, program12, data),fn:self.program(7, program7, data),data:data});\n  if(stack1 || stack1 === 0) { return stack1; }\n  else { return ''; }\n  }\nfunction program7(depth0,data) {\n  \n  var buffer = \"\", stack1;\n  buffer += \" <h4 class=\\\"status-header text-danger\\\">\"\n    + escapeExpression(__default(require(\"../../../js/utils/handlebars/t.ts\")).call(depth0, \"Not available outside your network\", {hash:{},data:data}))\n    + \"</h4> \";\n  stack1 = helpers['if'].call(depth0, (depth0 && depth0.isSignedOut), {hash:{},inverse:self.program(10, program10, data),fn:self.program(8, program8, data),data:data});\n  if(stack1 || stack1 === 0) { buffer += stack1; }\n  buffer += \" \";\n  return buffer;\n  }\nfunction program8(depth0,data) {\n  \n  var buffer = \"\";\n  buffer += \" <span class=\\\"status-description help-block\\\">\"\n    + escapeExpression(__default(require(\"../../../js/utils/handlebars/t.ts\")).call(depth0, \"First {1}sign in{2} to access your server from anywhere.\", \"<a class=\\\"sign-in-link\\\" href=\\\"#\\\">\", \"</a>\", {hash:{},data:data}))\n    + \"</span> \";\n  return buffer;\n  }\n\nfunction program10(depth0,data) {\n  \n  var buffer = \"\";\n  buffer += \" <span class=\\\"status-description help-block\\\">\"\n    + escapeExpression(__default(require(\"../../../js/utils/handlebars/t.ts\")).call(depth0, \"Enable to access your server from anywhere.\", {hash:{},data:data}))\n    + \"</span> <button class=\\\"remote-access-enable-btn btn btn-sm btn-primary\\\">\"\n    + escapeExpression(__default(require(\"../../../js/utils/handlebars/t.ts\")).call(depth0, \"Enable Remote Access\", {hash:{},data:data}))\n    + \"</button> \";\n  return buffer;\n  }\n\nfunction program12(depth0,data) {\n  \n  var buffer = \"\", stack1;\n  buffer += \" \";\n  stack1 = __default(require(\"../../../js/utils/handlebars/if_eq.ts\")).call(depth0, ((stack1 = (depth0 && depth0.cloudAccount)),stack1 == null || stack1 === false ? stack1 : stack1.remoteAccessState), \"unreachable\", {hash:{},inverse:self.program(19, program19, data),fn:self.program(13, program13, data),data:data});\n  if(stack1 || stack1 === 0) { buffer += stack1; }\n  buffer += \" <button class=\\\"remote-access-disable-btn btn btn-sm btn-default\\\">\"\n    + escapeExpression(__default(require(\"../../../js/utils/handlebars/t.ts\")).call(depth0, \"Disable Remote Access\", {hash:{},data:data}))\n    + \"</button> \";\n  stack1 = helpers['if'].call(depth0, ((stack1 = (depth0 && depth0.mappingModeSetting)),stack1 == null || stack1 === false ? stack1 : stack1.value), {hash:{},inverse:self.noop,fn:self.program(21, program21, data),data:data});\n  if(stack1 || stack1 === 0) { buffer += stack1; }\n  buffer += \" \";\n  return buffer;\n  }\nfunction program13(depth0,data) {\n  \n  var buffer = \"\", stack1;\n  buffer += \" <h4 class=\\\"status-header text-danger\\\">\"\n    + escapeExpression(__default(require(\"../../../js/utils/handlebars/t.ts\")).call(depth0, \"Not available outside your network\", {hash:{},data:data}))\n    + \"</h4> <span class=\\\"unreachable-description status-description help-block\\\">\"\n    + escapeExpression(__default(require(\"../../../js/utils/handlebars/t.ts\")).call(depth0, \"Your server is signed in to Plex, but is not reachable from outside your network. {1}Learn more{2}\", \"<a href=\\\"https://support.plex.tv/articles/200289506/?utm_source=Plex%20Apps&utm_medium=Plex%20Web&utm_campaign=Plex%20Apps\\\" target=\\\"_blank\\\">\", \"</a>\", {hash:{},data:data}))\n    + \"</span> \";\n  stack1 = __default(require(\"../../../js/utils/handlebars/if_eq.ts\")).call(depth0, ((stack1 = (depth0 && depth0.cloudAccount)),stack1 == null || stack1 === false ? stack1 : stack1.mappingError), \"jumboframes\", {hash:{},inverse:self.program(16, program16, data),fn:self.program(14, program14, data),data:data});\n  if(stack1 || stack1 === 0) { buffer += stack1; }\n  buffer += \" \";\n  return buffer;\n  }\nfunction program14(depth0,data) {\n  \n  var buffer = \"\";\n  buffer += \" <span class=\\\"jumbo-frames-description status-details help-block\\\"> <span class=\\\"help-tip\\\">\"\n    + escapeExpression(__default(require(\"../../../js/utils/handlebars/t.ts\")).call(depth0, \"Tip:\", {hash:{},data:data}))\n    + \"</span> \"\n    + escapeExpression(__default(require(\"../../../js/utils/handlebars/t.ts\")).call(depth0, \"It looks like the devices between your server and the internet have \\\"jumbo frames\\\" enabled which can cause issues with remote access. Disable jumbo frames on at least one device and try again.\", {hash:{},data:data}))\n    + \" </span> \";\n  return buffer;\n  }\n\nfunction program16(depth0,data) {\n  \n  var stack1;\n  stack1 = __default(require(\"../../../js/utils/handlebars/if_eq.ts\")).call(depth0, ((stack1 = (depth0 && depth0.cloudAccount)),stack1 == null || stack1 === false ? stack1 : stack1.mappingError), \"doublenat\", {hash:{},inverse:self.noop,fn:self.program(17, program17, data),data:data});\n  if(stack1 || stack1 === 0) { return stack1; }\n  else { return ''; }\n  }\nfunction program17(depth0,data) {\n  \n  var buffer = \"\";\n  buffer += \" <span class=\\\"double-nat-description status-details help-block\\\"> <span class=\\\"help-tip\\\">\"\n    + escapeExpression(__default(require(\"../../../js/utils/handlebars/t.ts\")).call(depth0, \"Tip:\", {hash:{},data:data}))\n    + \"</span> \"\n    + escapeExpression(__default(require(\"../../../js/utils/handlebars/t.ts\")).call(depth0, \"It looks like your server may be connected to the internet through multiple routers or other network devices. Try connecting it directly to your primary device, or visit our support site for more information about troubleshooting this \\\"Double-NAT\\\" scenario. {1}Learn more{2}\", \"<a href=\\\"https://support.plex.tv/articles/200931138/?utm_source=Plex%20Apps&utm_medium=Plex%20Web&utm_campaign=Plex%20Apps\\\" target=\\\"_blank\\\">\", \"</a>\", {hash:{},data:data}))\n    + \" </span> \";\n  return buffer;\n  }\n\nfunction program19(depth0,data) {\n  \n  var buffer = \"\";\n  buffer += \" <h4 class=\\\"status-header text-success\\\">\"\n    + escapeExpression(__default(require(\"../../../js/utils/handlebars/t.ts\")).call(depth0, \"Fully accessible outside your network\", {hash:{},data:data}))\n    + \"</h4> <span class=\\\"status-description help-block\\\"> \"\n    + escapeExpression(__default(require(\"../../../js/utils/handlebars/t.ts\")).call(depth0, \"You can access this server from signed-in Plex apps or in a browser at {1}.\", \"<a href=\\\"https://plex.tv/web\\\" target=\\\"_blank\\\">https://plex.tv/web</a>\", {hash:{},data:data}))\n    + \" </span> \";\n  return buffer;\n  }\n\nfunction program21(depth0,data) {\n  \n  var buffer = \"\";\n  buffer += \" <p class=\\\"remote-access-disable-message help-block\\\"> <i class=\\\"remote-access-disable-warning-icon glyphicon circle-exclamation-mark\\\"></i> \"\n    + escapeExpression(__default(require(\"../../../js/utils/handlebars/t.ts\")).call(depth0, \"You currently have Remote Access enabled through a manually-specified port. If you wish to disable Remote Access, you will need to remove your manual port forwarding from your router.\", {hash:{},data:data}))\n    + \" </p> \";\n  return buffer;\n  }\n\nfunction program23(depth0,data) {\n  \n  var buffer = \"\", stack1;\n  buffer += \" \";\n  stack1 = __default(require(\"../../../js/utils/handlebars/if_neq.ts\")).call(depth0, ((stack1 = (depth0 && depth0.cloudAccount)),stack1 == null || stack1 === false ? stack1 : stack1.remoteAccessState), \"disconnecting\", {hash:{},inverse:self.noop,fn:self.program(24, program24, data),data:data});\n  if(stack1 || stack1 === 0) { buffer += stack1; }\n  buffer += \" \";\n  return buffer;\n  }\nfunction program24(depth0,data) {\n  \n  var buffer = \"\", stack1;\n  buffer += \" <div class=\\\"remote-access-advanced\\\"> <div class=\\\"remote-access-mapping-container \";\n  stack1 = helpers.unless.call(depth0, (depth0 && depth0.forceAdvanced), {hash:{},inverse:self.noop,fn:self.program(25, program25, data),data:data});\n  if(stack1 || stack1 === 0) { buffer += stack1; }\n  buffer += \"\\\"> <hr> <i class=\\\"plex-image server server-xs server-logo\\\"></i> <div class=\\\"remote-access-mapping\\\"> <span class=\\\"mapping-label text-muted\\\">\"\n    + escapeExpression(__default(require(\"../../../js/utils/handlebars/t.ts\")).call(depth0, \"Private\", {hash:{},data:data}))\n    + \"</span> <span class=\\\"mapping-address\\\"> \";\n  stack1 = helpers['if'].call(depth0, (depth0 && depth0.hasPrivateAddress), {hash:{},inverse:self.program(29, program29, data),fn:self.program(27, program27, data),data:data});\n  if(stack1 || stack1 === 0) { buffer += stack1; }\n  buffer += \" </span> \";\n  stack1 = helpers['if'].call(depth0, (depth0 && depth0.hasPublicAddress), {hash:{},inverse:self.program(33, program33, data),fn:self.program(31, program31, data),data:data});\n  if(stack1 || stack1 === 0) { buffer += stack1; }\n  buffer += \" <span class=\\\"mapping-label text-muted\\\">\"\n    + escapeExpression(__default(require(\"../../../js/utils/handlebars/t.ts\")).call(depth0, \"Public\", {hash:{},data:data}))\n    + \"</span> <span class=\\\"mapping-address\\\"> \";\n  stack1 = helpers['if'].call(depth0, (depth0 && depth0.hasPublicAddress), {hash:{},inverse:self.program(29, program29, data),fn:self.program(35, program35, data),data:data});\n  if(stack1 || stack1 === 0) { buffer += stack1; }\n  buffer += \" </span> \";\n  stack1 = __default(require(\"../../../js/utils/handlebars/if_eq.ts\")).call(depth0, ((stack1 = (depth0 && depth0.cloudAccount)),stack1 == null || stack1 === false ? stack1 : stack1.remoteAccessState), \"ok\", {hash:{},inverse:self.program(33, program33, data),fn:self.program(31, program31, data),data:data});\n  if(stack1 || stack1 === 0) { buffer += stack1; }\n  buffer += \" <span class=\\\"mapping-internet \";\n  stack1 = __default(require(\"../../../js/utils/handlebars/if_neq.ts\")).call(depth0, ((stack1 = (depth0 && depth0.cloudAccount)),stack1 == null || stack1 === false ? stack1 : stack1.remoteAccessState), \"ok\", {hash:{},inverse:self.noop,fn:self.program(37, program37, data),data:data});\n  if(stack1 || stack1 === 0) { buffer += stack1; }\n  buffer += \"\\\"> <i class=\\\"mapping-internet-icon glyphicon globe text-muted\\\"></i> \"\n    + escapeExpression(__default(require(\"../../../js/utils/handlebars/t.ts\")).call(depth0, \"Internet\", {hash:{},data:data}))\n    + \" </span> </div> </div> \";\n  stack1 = helpers['if'].call(depth0, (depth0 && depth0.hasMappingSettings), {hash:{},inverse:self.noop,fn:self.program(39, program39, data),data:data});\n  if(stack1 || stack1 === 0) { buffer += stack1; }\n  buffer += \" </div> \";\n  return buffer;\n  }\nfunction program25(depth0,data) {\n  \n  \n  return \"advanced-setting\";\n  }\n\nfunction program27(depth0,data) {\n  \n  var buffer = \"\", stack1;\n  buffer += \" <span class=\\\"mapping-value\\\">\"\n    + escapeExpression(((stack1 = ((stack1 = (depth0 && depth0.cloudAccount)),stack1 == null || stack1 === false ? stack1 : stack1.privateAddress)),typeof stack1 === functionType ? stack1.apply(depth0) : stack1))\n    + \"</span> <span class=\\\"mapping-separator text-muted\\\">:</span> <span class=\\\"mapping-value\\\">\"\n    + escapeExpression(((stack1 = ((stack1 = (depth0 && depth0.cloudAccount)),stack1 == null || stack1 === false ? stack1 : stack1.privatePort)),typeof stack1 === functionType ? stack1.apply(depth0) : stack1))\n    + \"</span> \";\n  return buffer;\n  }\n\nfunction program29(depth0,data) {\n  \n  var buffer = \"\";\n  buffer += \" <span class=\\\"mapping-empty-value\\\">\"\n    + escapeExpression(__default(require(\"../../../js/utils/handlebars/t.ts\")).call(depth0, \"Unknown IP\", {hash:{},data:data}))\n    + \"</span> \";\n  return buffer;\n  }\n\nfunction program31(depth0,data) {\n  \n  \n  return \" <i class=\\\"mapping-icon glyphicon left-arrow text-success\\\"></i> \";\n  }\n\nfunction program33(depth0,data) {\n  \n  \n  return \" <i class=\\\"mapping-icon glyphicon remove-2 text-danger\\\"></i> \";\n  }\n\nfunction program35(depth0,data) {\n  \n  var buffer = \"\", stack1;\n  buffer += \" <span class=\\\"mapping-value\\\">\"\n    + escapeExpression(((stack1 = ((stack1 = (depth0 && depth0.cloudAccount)),stack1 == null || stack1 === false ? stack1 : stack1.publicAddress)),typeof stack1 === functionType ? stack1.apply(depth0) : stack1))\n    + \"</span> <span class=\\\"mapping-separator text-muted\\\">:</span> <span class=\\\"mapping-value\\\">\"\n    + escapeExpression(((stack1 = ((stack1 = (depth0 && depth0.cloudAccount)),stack1 == null || stack1 === false ? stack1 : stack1.publicPort)),typeof stack1 === functionType ? stack1.apply(depth0) : stack1))\n    + \"</span> \";\n  return buffer;\n  }\n\nfunction program37(depth0,data) {\n  \n  \n  return \"unreachable\";\n  }\n\nfunction program39(depth0,data) {\n  \n  var buffer = \"\", stack1;\n  buffer += \" <div class=\\\"remote-access-error-container \";\n  stack1 = helpers.unless.call(depth0, (depth0 && depth0.forceAdvanced), {hash:{},inverse:self.noop,fn:self.program(25, program25, data),data:data});\n  if(stack1 || stack1 === 0) { buffer += stack1; }\n  buffer += \"\\\"> <div class=\\\"form-inline\\\"> <div class=\\\"checkbox\\\"> <label class=\\\"\";\n  stack1 = helpers['if'].call(depth0, (depth0 && depth0.isUnavailable), {hash:{},inverse:self.noop,fn:self.program(40, program40, data),data:data});\n  if(stack1 || stack1 === 0) { buffer += stack1; }\n  buffer += \"\\\"> <input type=\\\"checkbox\\\" id=\\\"\"\n    + escapeExpression(((stack1 = ((stack1 = (depth0 && depth0.mappingModeSetting)),stack1 == null || stack1 === false ? stack1 : stack1.id)),typeof stack1 === functionType ? stack1.apply(depth0) : stack1))\n    + \"\\\" name=\\\"\"\n    + escapeExpression(((stack1 = ((stack1 = (depth0 && depth0.mappingModeSetting)),stack1 == null || stack1 === false ? stack1 : stack1.id)),typeof stack1 === functionType ? stack1.apply(depth0) : stack1))\n    + \"\\\" value=\\\"1\\\" \";\n  stack1 = helpers['if'].call(depth0, (depth0 && depth0.isUnavailable), {hash:{},inverse:self.noop,fn:self.program(40, program40, data),data:data});\n  if(stack1 || stack1 === 0) { buffer += stack1; }\n  buffer += \" \";\n  stack1 = helpers['if'].call(depth0, ((stack1 = (depth0 && depth0.mappingModeSetting)),stack1 == null || stack1 === false ? stack1 : stack1.value), {hash:{},inverse:self.noop,fn:self.program(42, program42, data),data:data});\n  if(stack1 || stack1 === 0) { buffer += stack1; }\n  buffer += \"> \"\n    + escapeExpression(__default(require(\"../../../js/utils/handlebars/t.ts\")).call(depth0, \"Manually specify public port\", {hash:{},data:data}))\n    + \" </label> </div> <div class=\\\"form-group\\\"> <input type=\\\"text\\\" id=\\\"\"\n    + escapeExpression(((stack1 = ((stack1 = (depth0 && depth0.mappingPortSetting)),stack1 == null || stack1 === false ? stack1 : stack1.id)),typeof stack1 === functionType ? stack1.apply(depth0) : stack1))\n    + \"\\\" name=\\\"\"\n    + escapeExpression(((stack1 = ((stack1 = (depth0 && depth0.mappingPortSetting)),stack1 == null || stack1 === false ? stack1 : stack1.id)),typeof stack1 === functionType ? stack1.apply(depth0) : stack1))\n    + \"\\\" class=\\\"form-control\\\" value=\\\"\"\n    + escapeExpression(((stack1 = ((stack1 = (depth0 && depth0.mappingPortSetting)),stack1 == null || stack1 === false ? stack1 : stack1.value)),typeof stack1 === functionType ? stack1.apply(depth0) : stack1))\n    + \"\\\" \";\n  stack1 = helpers.unless.call(depth0, (depth0 && depth0.canEditPort), {hash:{},inverse:self.noop,fn:self.program(40, program40, data),data:data});\n  if(stack1 || stack1 === 0) { buffer += stack1; }\n  buffer += \"> </div> <button class=\\\"retry-btn btn btn-primary btn-loading\\\" \";\n  stack1 = helpers['if'].call(depth0, (depth0 && depth0.isUnavailable), {hash:{},inverse:self.noop,fn:self.program(40, program40, data),data:data});\n  if(stack1 || stack1 === 0) { buffer += stack1; }\n  buffer += \"> <div class=\\\"loading loading-sm\\\"></div> <span class=\\\"btn-label\\\">\";\n  stack1 = __default(require(\"../../../js/utils/handlebars/if_eq.ts\")).call(depth0, ((stack1 = (depth0 && depth0.cloudAccount)),stack1 == null || stack1 === false ? stack1 : stack1.remoteAccessState), \"unreachable\", {hash:{},inverse:self.program(46, program46, data),fn:self.program(44, program44, data),data:data});\n  if(stack1 || stack1 === 0) { buffer += stack1; }\n  buffer += \"</span> </button> </div> <p class=\\\"help-block\\\">\"\n    + escapeExpression(__default(require(\"../../../js/utils/handlebars/t.ts\")).call(depth0, \"You may need to enable this to establish a direct connection from outside your network. You may also need to configure your router. Detailed instructions are available {1}here{2}.\", \"<a href=\\\"https://support.plex.tv/articles/200931138/?utm_source=Plex%20Apps&utm_medium=Plex%20Web&utm_campaign=Plex%20Apps\\\" target=\\\"_blank\\\">\", \"</a>\", {hash:{},data:data}))\n    + \"</p> </div> \";\n  return buffer;\n  }\nfunction program40(depth0,data) {\n  \n  \n  return \"disabled\";\n  }\n\nfunction program42(depth0,data) {\n  \n  \n  return \"checked\";\n  }\n\nfunction program44(depth0,data) {\n  \n  \n  return escapeExpression(__default(require(\"../../../js/utils/handlebars/t.ts\")).call(depth0, \"Retry\", {hash:{},data:data}));\n  }\n\nfunction program46(depth0,data) {\n  \n  \n  return escapeExpression(__default(require(\"../../../js/utils/handlebars/t.ts\")).call(depth0, \"Apply\", {hash:{},data:data}));\n  }\n\nfunction program48(depth0,data) {\n  \n  var buffer = \"\", stack1;\n  buffer += \" <div class=\\\"remote-access-upload-container \";\n  stack1 = helpers.unless.call(depth0, (depth0 && depth0.totalRateSettingValue), {hash:{},inverse:self.noop,fn:self.program(49, program49, data),data:data});\n  if(stack1 || stack1 === 0) { buffer += stack1; }\n  buffer += \"\\\"> <hr> <div class=\\\"remote-access-upload-icon-container\\\"> <i class=\\\"remote-access-upload-icon glyphicon circle-arrow-top\\\"></i> <i class=\\\"remote-access-upload-warning-icon glyphicon circle-exclamation-mark\\\"></i> </div> <form id=\\\"remote-access-upload-form\\\" class=\\\"remote-access-upload-form\\\"> <div class=\\\"remote-access-upload-speed-header\\\">\"\n    + escapeExpression(__default(require(\"../../../js/utils/handlebars/t.ts\")).call(depth0, \"No upload speed set\", {hash:{},data:data}))\n    + \"</div> <div class=\\\"form-group\\\"> <div class=\\\"form-inline\\\"> <div class=\\\"form-group\\\"> \"\n    + escapeExpression(__default(require(\"../../../js/utils/handlebars/t.ts\")).call(depth0, \"Internet upload speed\", {hash:{},data:data}))\n    + \" <input type=\\\"text\\\" id=\\\"\"\n    + escapeExpression(((stack1 = (depth0 && depth0.totalRateSettingID)),typeof stack1 === functionType ? stack1.apply(depth0) : stack1))\n    + \"\\\" name=\\\"\"\n    + escapeExpression(((stack1 = (depth0 && depth0.totalRateSettingID)),typeof stack1 === functionType ? stack1.apply(depth0) : stack1))\n    + \"\\\" class=\\\"remote-access-upload-speed-control form-control\\\" value=\\\"\";\n  stack1 = helpers['if'].call(depth0, (depth0 && depth0.totalRateSettingValue), {hash:{},inverse:self.noop,fn:self.program(51, program51, data),data:data});\n  if(stack1 || stack1 === 0) { buffer += stack1; }\n  buffer += \"\\\" > \"\n    + escapeExpression(__default(require(\"../../../js/utils/handlebars/t.ts\")).call(depth0, \"Mbps\", {hash:{},data:data}))\n    + \" </div> <p class=\\\"help-block\\\"> \"\n    + escapeExpression(__default(require(\"../../../js/utils/handlebars/t.ts\")).call(depth0, \"You can use {1}speedtest.net{2} to determine your internet upload capacity.\", \"<a href=\\\"http://speedtest.net\\\" target=\\\"_blank\\\" rel=\\\"noopener noreferrer\\\">\", \"</a>\", {hash:{},data:data}))\n    + \" <br> \"\n    + escapeExpression(__default(require(\"../../../js/utils/handlebars/t.ts\")).call(depth0, \"Enter an upload speed here and Plex can ensure it operates within this boundary.\", {hash:{},data:data}))\n    + \" </p> </div> </div> \";\n  stack1 = helpers.each.call(depth0, (depth0 && depth0.uploadSettings), {hash:{},inverse:self.noop,fn:self.program(53, program53, data),data:data});\n  if(stack1 || stack1 === 0) { buffer += stack1; }\n  buffer += \" <div class=\\\"form-footer\\\"> <button type=\\\"submit\\\" class=\\\"submit-btn btn btn-lg btn-primary btn-loading disabled\\\"> <div class=\\\"loading loading-sm\\\"></div> <span class=\\\"btn-label\\\">\"\n    + escapeExpression(__default(require(\"../../../js/utils/handlebars/t.ts\")).call(depth0, \"Save Changes\", {hash:{},data:data}))\n    + \"</span> </button> <span class=\\\"form-message\\\"></span> </div> </form> </div> \";\n  return buffer;\n  }\nfunction program49(depth0,data) {\n  \n  \n  return \"show-warning\";\n  }\n\nfunction program51(depth0,data) {\n  \n  var stack1;\n  return escapeExpression(((stack1 = (depth0 && depth0.totalRateSettingValue)),typeof stack1 === functionType ? stack1.apply(depth0) : stack1));\n  }\n\nfunction program53(depth0,data) {\n  \n  var buffer = \"\";\n  buffer += \" \"\n    + escapeExpression(__default(require(\"../../../js/utils/handlebars/partial.ts\")).call(depth0, \"setting\", {hash:{\n    'idSuffix': (\"_c\")\n  },data:data}))\n    + \" \";\n  return buffer;\n  }\n\n  buffer += \"<i class=\\\"remote-access-status-icon glyphicon globe\\\"></i> <div class=\\\"remote-access-status-message\\\"> \";\n  stack1 = __default(require(\"../../../js/utils/handlebars/if_eq.ts\")).call(depth0, ((stack1 = (depth0 && depth0.cloudAccount)),stack1 == null || stack1 === false ? stack1 : stack1.remoteAccessState), \"connecting\", {hash:{},inverse:self.program(3, program3, data),fn:self.program(1, program1, data),data:data});\n  if(stack1 || stack1 === 0) { buffer += stack1; }\n  buffer += \" </div> \";\n  stack1 = __default(require(\"../../../js/utils/handlebars/if_neq.ts\")).call(depth0, ((stack1 = (depth0 && depth0.cloudAccount)),stack1 == null || stack1 === false ? stack1 : stack1.remoteAccessState), \"connecting\", {hash:{},inverse:self.noop,fn:self.program(23, program23, data),data:data});\n  if(stack1 || stack1 === 0) { buffer += stack1; }\n  buffer += \" \";\n  stack1 = helpers['if'].call(depth0, (depth0 && depth0.hasUploadLimitSettings), {hash:{},inverse:self.noop,fn:self.program(48, program48, data),data:data});\n  if(stack1 || stack1 === 0) { buffer += stack1; }\n  buffer += \" \";\n  return buffer;\n  });","var Handlebars = require(\"../../../../node_modules/handlebars/runtime.js\");\nfunction __default(obj) { return obj && (obj.__esModule ? obj[\"default\"] : obj); }\nmodule.exports = (Handlebars[\"default\"] || Handlebars).template(function (Handlebars,depth0,helpers,partials,data) {\n  this.compilerInfo = [4,'>= 1.0.0'];\nhelpers = this.merge(helpers, Handlebars.helpers); data = data || {};\n  var buffer = \"\", stack1, self=this, escapeExpression=this.escapeExpression;\n\nfunction program1(depth0,data) {\n  \n  \n  return \"active\";\n  }\n\n  buffer += \"<a href=\\\"#\\\" class=\\\"check-for-updates-btn label label-btn label-primary \";\n  stack1 = helpers.unless.call(depth0, (depth0 && depth0.canCheckForUpdate), {hash:{},inverse:self.noop,fn:self.program(1, program1, data),data:data});\n  if(stack1 || stack1 === 0) { buffer += stack1; }\n  buffer += \"\\\"> <i class=\\\"label-icon glyphicon upload\\\"></i> \"\n    + escapeExpression(__default(require(\"../../../js/utils/handlebars/t.ts\")).call(depth0, \"Check for Updates\", {hash:{},data:data}))\n    + \" </a> <a href=\\\"#\\\" class=\\\"checking-for-updates-btn label label-btn label-primary active\\\"> <i class=\\\"label-icon glyphicon upload\\\"></i> \"\n    + escapeExpression(__default(require(\"../../../js/utils/handlebars/t.ts\")).call(depth0, \"Checking for Updates\", {hash:{},data:data}))\n    + \" </a> <a href=\\\"#\\\" class=\\\"available-updates-btn label label-btn label-primary\\\"> <i class=\\\"label-icon glyphicon download\\\"></i> \"\n    + escapeExpression(__default(require(\"../../../js/utils/handlebars/t.ts\")).call(depth0, \"Download Updates\", {hash:{},data:data}))\n    + \" </a> <span class=\\\"downloading-updates-container label label-btn label-progress active\\\"> <i class=\\\"label-icon glyphicon download\\\"></i> \"\n    + escapeExpression(__default(require(\"../../../js/utils/handlebars/t.ts\")).call(depth0, \"Downloading Update\", {hash:{},data:data}))\n    + \" <span class=\\\"downloading-progress-container hidden\\\">(<span class=\\\"downloading-progress-label\\\"></span>%)</span ></span> <a href=\\\"#\\\" class=\\\"install-updates-btn label label-btn label-primary\\\"> <i class=\\\"label-icon glyphicon download\\\"></i> \"\n    + escapeExpression(__default(require(\"../../../js/utils/handlebars/t.ts\")).call(depth0, \"Install Update\", {hash:{},data:data}))\n    + \" </a> <a href=\\\"#\\\" class=\\\"installing-updates-btn label label-btn label-primary active\\\"> <i class=\\\"label-icon glyphicon upload\\\"></i> \"\n    + escapeExpression(__default(require(\"../../../js/utils/handlebars/t.ts\")).call(depth0, \"Installing\", {hash:{},data:data}))\n    + \" </a> <span class=\\\"install-info-label up-to-date-label\\\"> <i class=\\\"success-icon glyphicon ok-2\\\"></i> \"\n    + escapeExpression(__default(require(\"../../../js/utils/handlebars/t.ts\")).call(depth0, \"Up to date\", {hash:{},data:data}))\n    + \" </span> <span class=\\\"install-info-label install-error-label\\\"> <i class=\\\"failure-icon glyphicon circle-exclamation-mark\\\"></i> <span class=\\\"update-error-message\\\"></span> <a class=\\\"install-manual-link\\\" href=\\\"https://plex.tv/downloads\\\" target=\\\"_blank\\\">\"\n    + escapeExpression(__default(require(\"../../../js/utils/handlebars/t.ts\")).call(depth0, \"Please install manually.\", {hash:{},data:data}))\n    + \"</a> </span> <a href=\\\"#\\\" class=\\\"release-notes-btn label label-btn label-default\\\"> <i class=\\\"label-icon glyphicon circle-info\\\"></i> \"\n    + escapeExpression(__default(require(\"../../../js/utils/handlebars/t.ts\")).call(depth0, \"What's New\", {hash:{},data:data}))\n    + \" </a> \";\n  return buffer;\n  });","var Handlebars = require(\"../../../../node_modules/handlebars/runtime.js\");\nfunction __default(obj) { return obj && (obj.__esModule ? obj[\"default\"] : obj); }\nmodule.exports = (Handlebars[\"default\"] || Handlebars).template(function (Handlebars,depth0,helpers,partials,data) {\n  this.compilerInfo = [4,'>= 1.0.0'];\nhelpers = this.merge(helpers, Handlebars.helpers); data = data || {};\n  var buffer = \"\", stack1, escapeExpression=this.escapeExpression, self=this;\n\nfunction program1(depth0,data) {\n  \n  var buffer = \"\";\n  buffer += \" \"\n    + escapeExpression(__default(require(\"../../../js/utils/handlebars/t.ts\")).call(depth0, \"Optimized Versions requires Plex Media Server {1} or later.\", (depth0 && depth0.escapedMinServerVersion), {hash:{},data:data}))\n    + \" \";\n  return buffer;\n  }\n\nfunction program3(depth0,data) {\n  \n  var stack1;\n  stack1 = helpers['if'].call(depth0, (depth0 && depth0.isTranscoderRequired), {hash:{},inverse:self.program(6, program6, data),fn:self.program(4, program4, data),data:data});\n  if(stack1 || stack1 === 0) { return stack1; }\n  else { return ''; }\n  }\nfunction program4(depth0,data) {\n  \n  var buffer = \"\";\n  buffer += \" \"\n    + escapeExpression(__default(require(\"../../../js/utils/handlebars/t.ts\")).call(depth0, \"This Plex Media Server platform is not capable of converting video.\", {hash:{},data:data}))\n    + \" \";\n  return buffer;\n  }\n\nfunction program6(depth0,data) {\n  \n  var buffer = \"\";\n  buffer += \" \"\n    + escapeExpression(__default(require(\"../../../js/utils/handlebars/t.ts\")).call(depth0, \"There was a problem requesting media versions from this server.\", {hash:{},data:data}))\n    + \" \";\n  return buffer;\n  }\n\n  buffer += \"<div class=\\\"row row-padded\\\"> <h4 class=\\\"text-muted text-center\\\"> \";\n  stack1 = helpers['if'].call(depth0, (depth0 && depth0.isUpgradeRequired), {hash:{},inverse:self.program(3, program3, data),fn:self.program(1, program1, data),data:data});\n  if(stack1 || stack1 === 0) { buffer += stack1; }\n  buffer += \" </h4> </div> \";\n  return buffer;\n  });","var Handlebars = require(\"../../../../node_modules/handlebars/runtime.js\");\nfunction __default(obj) { return obj && (obj.__esModule ? obj[\"default\"] : obj); }\nmodule.exports = (Handlebars[\"default\"] || Handlebars).template(function (Handlebars,depth0,helpers,partials,data) {\n  this.compilerInfo = [4,'>= 1.0.0'];\nhelpers = this.merge(helpers, Handlebars.helpers); data = data || {};\n  var buffer = \"\", escapeExpression=this.escapeExpression;\n\n\n  buffer += \"<p class=\\\"versions-status-message hidden\\\"> <button class=\\\"delete-all-btn btn btn-sm btn-danger pull-right\\\">\"\n    + escapeExpression(__default(require(\"../../../js/utils/handlebars/t.ts\")).call(depth0, \"Delete All Versions\", {hash:{},data:data}))\n    + \"</button> \"\n    + escapeExpression(__default(require(\"../../../js/utils/handlebars/t.ts\")).call(depth0, \"Monitor conversion progress in {1}Conversion Activity{2}.\", \"<a class=\\\"status-conversion-btn\\\" href=\\\"#\\\">\", \"</a>\", {hash:{},data:data}))\n    + \" </p> <div class=\\\"background-processing-list-region\\\"></div> \";\n  return buffer;\n  });","var Handlebars = require(\"../../../../node_modules/handlebars/runtime.js\");\nfunction __default(obj) { return obj && (obj.__esModule ? obj[\"default\"] : obj); }\nmodule.exports = (Handlebars[\"default\"] || Handlebars).template(function (Handlebars,depth0,helpers,partials,data) {\n  this.compilerInfo = [4,'>= 1.0.0'];\nhelpers = this.merge(helpers, Handlebars.helpers); data = data || {};\n  var buffer = \"\", stack1, escapeExpression=this.escapeExpression, self=this;\n\nfunction program1(depth0,data) {\n  \n  var buffer = \"\";\n  buffer += \" <div class=\\\"filter-bar-right\\\"> <button class=\\\"toggle-advanced-btn btn btn-sm btn-default basic-setting\\\">\"\n    + escapeExpression(__default(require(\"../../../js/utils/handlebars/t.ts\")).call(depth0, \"Show Advanced\", {hash:{},data:data}))\n    + \"</button> <button class=\\\"toggle-advanced-btn btn btn-sm btn-default advanced-setting\\\">\"\n    + escapeExpression(__default(require(\"../../../js/utils/handlebars/t.ts\")).call(depth0, \"Hide Advanced\", {hash:{},data:data}))\n    + \"</button> </div> \";\n  return buffer;\n  }\n\n  buffer += \"<div class=\\\"filter-bar\\\"> \";\n  stack1 = helpers.unless.call(depth0, (depth0 && depth0.shared), {hash:{},inverse:self.noop,fn:self.program(1, program1, data),data:data});\n  if(stack1 || stack1 === 0) { buffer += stack1; }\n  buffer += \" </div> <div class=\\\"settings-row row\\\"> <div class=\\\"pane-region col-sm-12 col-md-12\\\"></div> </div> \";\n  return buffer;\n  });"],"names":["date","format","formatDate","stripOptions","module","exports","str","encodeURIComponent","BaseModel","idAttribute","whitelistedAttrs","url","this","get","convert","xml","json","parser","Account","parse","response","createKey","machineIdentifier","settingsGroup","settingsType","createEntityID","entityTypes","PROVIDER","providerIdentifiers","serverEntityID","tagName","className","template","serializeData","experienceSettingsModel","event","model","toJSON","data","serverID","server","id","itemKey","escapedServerName","escapedEventLabel","label","escapedEventValue","value","escapedEventUsername","username","escapedEventTitle","title","escapedEventPlayer","player","timeFormat","_type","mediaTitle","stateString","t","BaseList","itemView","reversed","ui","pageCount","previousBtn","nextBtn","regions","serverDropdown","list","modelEvents","collectionEvents","add","events","onlyAfterRender","initialize","shared","page","listCollection","collection","clone","reverse","stopListening","pages","escapedPage","escapedPages","enablePrevious","enableNext","updatePages","text","toggleClass","updateList","reset","onRender","append","onSharedChange","render","onAlertAdd","onPreviousClick","preventDefault","isDisabled","onNextClick","BaseClass","mixins","eventMixin","defaultFilterName","whitelistedEvents","blacklistedMethods","constructor","superset","options","_collection","toArray","_proxyCollection","resetFilters","listenTo","onSupersetAdd","remove","onSupersetRemove","onSupersetReset","models","_proxyCollectionMethods","_proxyCollectionLength","_proxyCollectionEvents","methods","method","apply","arguments","updateLength","length","call","eventName","args","isChangeEvent","slice","trigger","contains","addFilter","filterName","filter","_filters","_invalidateCacheForFilter","_createFilter","_execFilters","removeFilter","_invalidateCache","getFilters","hasFilter","name","refilter","arg","cid","destroy","keys","Error","filtered","_execFiltersOnModel","set","_filterResultCache","cache","filteredIndex","i","indexOf","at","playQueue","includeSelectedItem","filterUpNext","listenForUpNextChanges","debouncedPlayQueueChange","onPlayQueueChange","join","playQueueItem","index","range","getUpNextRange","startIndex","start","endIndex","end","filterAfterUpNext","cutoffs","milliseconds","duration","durationOf","days","hours","min","minutes","sec","seconds","hr","isPlural","Infinity","years","months","cutoff","cutoff_","size","lineWidth","strokeColor","hasSize","svg","svgCircle","bindings","modelAttribute","$el","width","height","drawProgressBar","center","radius","circumference","Math","PI","attr","css","percent","onProgressChange","stateMachineMixin","progressBarRegion","initialState","initialErrorMessage","generator","transcodeJobs","pausedSetting","progressModel","progress","remaining","speed","states","pending","onEnter","addClass","onExit","removeClass","converting","processed","disabled","error","bindingsModel","formatter","autohide","factor","round","manual","findTranscodeJob","transcodeJob","find","ratingKey","generatorID","isItemMatch","isGeneratorMatch","enterState","onTranscodeJobRemove","onTranscodeProgressChange","onTranscodeSpeedChange","onTranscodeRemainingChange","poster","statusRegion","attributes","metadataItem","hideDragHandle","type","placeholderClass","posterPlaceholders","posterType","image","MediaPosterImage","getUrl","getPosterUrl","contentUtil","target","playQueueSelectedItemID","queueIndex","currentItem","getCurrentItem","thumb","deleteGenerator","VersionGeneratorModel","playlistID","commands","setElement","show","onClose","close","onCollectionSort","onPromoteClick","listenToOnce","itemID","selectedItemID","moveItem","onDeleteClick","sorted","itemEvents","sort","sortable","el","onAdd","onItemMove","onUpdate","handle","animation","scroll","scrollSensitivity","scrollSpeed","sortableOptions","onSort","movedItemID","item","afterItemID","prev","selectedMetadataItemTitle","confirmModal","ConfirmModal","message","confirmPromise","promise","done","fail","dispatcher","manageVersionsRoute","getServerSettingsRoute","filterBar","pauseBtn","resumeBtn","divider","upNextList","afterUpNextList","emptyRegion","generators","items","upNextItems","afterUpNextItems","settings","onUpNextChange","onAfterUpNextChange","shouldShowList","supports","shouldShowDivider","escapedMinServerVersion","serverFeatures","hasPausedSetting","isPaused","errorMessage","getErrorMessage","toggleEmptyView","hasItems","failedCount","reduce","count","status","max","listOptions","itemViewOptions","group","pull","put","onTogglePauseClick","first","save","provider","features","feature","featureType","featureFlavor","flavor","ProviderProtocol","ProviderFeatureType","ProviderFlavorType","ProviderActionID","ProviderSettingID","ProviderSettingType","PivotType","PivotView","Agent","memoize","selectServers","servers","unknownServer","providerIdentifier","selectAllProviderEntities","createUserAttributeSelector","providerEntities","unstableServer","cloudProviders","matchingProviderEntityID","isCloud","providers","providerEntityID","identifier","unknownProvider","contentFeature","getProviderFeature","Content","directories","contentDirectoryID","contentDirectories","contentDirectory","createDeepEqualSelector","map","toStableServerObject","useContext","SourceContext","children","source","useMemo","Provider","setting","selectUserExperienceSettings","currentValue","delayValue","maxDuration","forcedValue","setForcedValue","useState","useEffect","timeoutID","window","setTimeout","clearTimeout","IconSelected","props","style","svgProps","concat","unshift","propTypes","menuLabelClassName","iconComponent","Icon","isSelected","selectedIconAriaLabel","onPress","onSelect","otherProps","onMenuItemPress","useCallback","MenuItem","aria-label","menuButtonID","useUniqueElementID","isMenuOpen","setMenuState","onMenuButtonPress","onMenuClose","DisclosureArrowButton","direction","directions","UP","sizes","values","activeValue","onSelectFromProps","useMenuState","Menu","isOpen","key","String","BandwidthSourceType","selectFeatures","dashboard","bandwidth","resourceType","All","Remote","Local","timestamp","fromUnixTime","isSameDay","Date","suffixes","bits","digits","toFixed","parseInt","floor","log","pow","errorClassName","isSpinnerVisible","Spinner","Size","secondsAgo","toUpperCase","separator","defaultProps","Component","displayName","WrappedComponent","mapKeys","Object","context","super","state","acc","_pairs","makeCancelable","forEach","cancelable","then","result","setState","cancel","getDisplayName","getPath","x","y","initialRadius","offset","finalY","sign","clockWise","maxRadius","abs","fill","barGap","dataKey","seriesOrdering","seriesIndex","previousSeries","barValues","seriesKey","d","LegendLabel","onMouseEnter","labelColor","onMouseLeave","Link","backgroundColor","ChartTooltip","prevProps","prevState","active","onActive","onInactive","prevActive","payload","series","showTotal","labelFormatter","valueFormatter","finalLabel","total","entry","segment","points","color","areAllSeriesVisible","every","visible","createBar","barProps","BarChart","hoveredDataKey","renderLegend","legendSummary","onLegendPress","isTranslucent","selected","recharts","onChartReady","xAxisKey","stacked","isAnimationActive","showTooltipTotal","chartMargin","gridLinesStyles","legendHeight","tooltipLabelFormatter","tooltipValueFormatter","xAxisDomain","xAxisStyle","xAxisPadding","xAxisTick","xAxisTickMargin","xAxisTickLineStyle","xAxisTickFormatter","yAxisDomain","yAxisWidth","yAxisStyle","yAxisPadding","yAxisTick","yAxisTickMargin","yAxisTickLineStyle","yAxisTickFormatter","CartesianGrid","Legend","RechartsBarChart","Bar","RechartsBar","ResponsiveContainer","Tooltip","XAxis","YAxis","margin","axisLine","domain","minTickGap","padding","tick","tickFormatter","tickLine","tickMargin","tickCount","content","tooltipProps","cursor","shape","stackId","bind","wrapperStyle","paddingLeft","top","right","bottom","left","horizontal","vertical","stroke","fontSize","strokeWidth","visibleTicksCount","textAnchor","transform","dy","LineChart","connectNulls","lineType","lineStrokeWidth","dot","xAxisTickInterval","onTooltipActive","onTooltipInactive","RechartsLineChart","Line","reorderedSeries","interval","tickProps","REAL_TIME_PERIOD_SPAN_SECONDS","isTodayOrAfter","isToday","getUnixTime","startOfDay","activeTimePeriod","dateFormat","today","AveragesLegendSummary","isRemoteVisible","isLocalVisible","summedData","isAllVisible","getBandwidthSourceTypeLabel","TotalsLegendSummary","formatBytes","statistics","activeBandwidthSourceType","responseTimestampMilliseconds","isPending","isPopulated","onGraphBandwidthSourceTypeSelect","onGraphTooltipActive","onGraphTooltipInactive","isChartReady","setIsChartReady","isRealTime","startTimeSeconds","Array","from","_","bandwidthStatistic","lan","bytes","findIndex","Number","timestampData","formatRealTimeData","aggregatedData","atKey","aggregatedTimespan","formatHistoricalData","ChartComponent","LegendSummary","isGraphVisible","realTimeTooltipLabelFormatter","unitOfTime","formatRealTimeAgo","dateTimestamp","startDate","endDateTimestamp","addWeeks","realTimeTooltipValueFormatter","realTimeXAxisTickFormatter","dispatch","useSourceContext","realtimeTimeoutIDRef","useRef","setActiveBandwidthSourceType","bandwidthSourceTypes","setActiveTimePeriod","lockedTimePeriod","setLockedTimePeriod","timePeriods","requestTimestampMilliseconds","isDelayedPending","onFetch","dashboardBandwidthSlice","timespan","after","onAbort","onBandwidthSourceTypeSelect","bandwidthSourceType","onTimePeriodSelect","timePeriod","nextBandwidthSourceType","current","requestLatency","now","delay","ServerDashboardFilterMenuButton","BandwidthGraph","Kind","forwardedRef","to","component","role","kind","onTouchStart","onTouchStartFromProps","onTouchMove","onTouchMoveFromProps","onTouchEnd","onTouchEndFromProps","onTouchCancel","onTouchCancelFromProps","onMouseDown","onMouseDownFromProps","onMouseUp","onMouseUpFromProps","onMouseLeaveFromProps","onClick","onClickFromProps","onFocus","onFocusFromProps","onBlur","onBlurFromProps","linkProps","isActive","setIsActive","isFocused","setIsFocused","isFocusSuppressed","isClickSuppressed","isTouchPress","touches","onWindowMouseMove","addEventListener","removeEventListener","callbacks","ref","href","ResizeObserver","polyfill","PortalWithRef","closeDelayMilliseconds","allowInteractionEventBubbling","onOpen","isOpenInternal","setIsOpenInternal","onInteractionEvent","stopPropagation","document","body","modalSpeedSeconds","cssDurationToSeconds","animations","modalSpeedMilliseconds","opacityTransition","ease","scaleTransition","easings","backdropTransition","opacity","backdropVariants","enter","transition","exit","containerTransition","scale","modalContainerVariants","isBackdropTarget","modalElement","targetElement","nativeEvent","MouseEvent","isMouseEvent","changedTouches","touch","elementFromPoint","clientX","clientY","findEventTarget","modalNode","backdropClassName","containerClassName","shouldTrackOnClose","preventCloseOnBackdropPress","onModalClose","modalRef","isBackdropPressedRef","onBackdropBeginPress","onBackdropEndPress","_event","onKeyDown","keyCode","keyCodes","focusManager","onRef","node","metricsPage","metricsContextTuple","isReady","trackView","metricsProperties","contextTuple","performance","JSON","stringify","useMetricsPageViewEffect","prevIsOpen","usePrevious","action","metricsActions","useMetricsModalDismissEffect","autoFocusTimeoutID","Portal","animate","initial","variants","innerClassName","scrollerProps","isScroller","scrollDirection","Scroller","MetricsContextProvider","unstoppableProducts","unstoppableProductMemo","viewOffset","parseFloat","media","absoluteOffset","part","Part","len","indexes","split","relativeOffset","earlierPart","urlParams","activeConnection","uri","createActiveConnectionURISelector","connectionURI","baseUrl","imageUrl","transcodeKey","isAbsoluteTranscodeKey","isPublicTranscoder","imageTranscoderFeature","ImageTranscoder","isAbsoluteUrl","public","baseURL","params","accessToken","path","pathParts","sizeMemo","widthMemo","sortedImageSizes","imageSizes","a","b","getWidthForSize","imageSize","hasOwnProperty","assign","allowPixelRatioSize","minSize","upscale","pxRatio","getPixelRatio","getSizeForWidth","supportsSize","ceil","assert","bracketedWidth","aspectRatio","getDimensionsParams","filters","quality","queryIndex","urlWithParams","substring","appendTranscodeParams","isHovered","setIsHovered","DEFAULT_DURATION","cssDurationToMilliseconds","ImageFit","memo","src","alt","fit","durationMilliseconds","containerRef","useLayoutEffect","containerEl","imgEl","createElement","position","objectFit","appendChild","onload","loadTime","loadTimeStart","isCached","isComplete","shouldCrossFade","childNodes","animated","onfinish","oncancel","removeChild","onerror","complete","overflow","IconTidalLogo","IconWatchTogether","attributionIcons","attribution","addImageToTop","styleProps","useCrossFade","imageEl","backgroundImage","containerStyle","backgroundSize","backgroundPosition","backgroundRepeat","animateOnMount","disableCrossFade","containerElRef","isInitialRenderRef","finalContainerStyle","isInitialRender","addOptions","animationFrameID","requestAnimationFrame","cancelAnimationFrame","BackgroundImage","display","TranscodeImageConnector","movie","IconMovie","IconTv","season","episode","artist","IconArtist","album","IconMusic","track","photo","IconCamera","photoalbum","clip","IconVideo","station","IconRadio","audiobook","IconBook","icon","IconFolderFilled","getIconByName","iconStyle","lineHeight","isFolder","itemServerEntityID","itemProviderEntityID","isOffscreen","onLoad","onError","iconMap","alexa","android","atv","chrome","dash","iconPairs","findIcon","regex","test","product","platform","ServerConnectionStatusIcon","nextProps","nextState","shouldPureComponentUpdate","isBadge","isConnected","isUnavailable","isSecure","isRelayed","IconExclamationCircledFilled","IconWarning","IconLockLockedCircledFilled","streamTitleComponents","audio","stream","separatorComponent","Separator","details","channels","codec","push","toString","language","finalDetails","ariaLabel","data-testid","subtitles","forced","video","mediaItem","videoCodec","videoStream","getSelectedVideo","scanType","formatResolution","videoResolution","isDisplayTitleSupported","isVersionOrNewer","shortVersion","displayTitle","StreamTitleComponent","StreamOutputRow","isEdge","PlayerLocation","local","relayed","session","internalViewOffset","Media","Player","Session","TranscodeSession","selectedMediaItem","selectedSubtitles","getSelectedSubtitles","selectedAudio","getSelectedAudio","streamType","streamTypes","getStreams","showVideo","showAudio","audioCodec","showSubtitles","getDeviceIcon","secure","replace","txt","charAt","substr","toLowerCase","formatPlayerTime","address","entityID","transcodeHwDecoding","videoDecision","transcodeHwEncoding","audioDecision","subscribe","getState","change","createActionCreator","actionTypes","replaceState","showErrors","handleFormState","newState","inputState","errors","Form","onFormStoreChange","store","onChange","onSubmit","val","actions","formStore","unsubscribe","formState","replaceReducer","childContextTypes","hasError","htmlFor","TextArea","disabledClassName","initialValue","rows","setMessage","grandparentTitle","parentTitle","parentIndex","originallyAvailableAt","User","seasonEpisodeIndex","getSeasonEpisodeIndex","seasonIndex","episodeIndex","noLeadingZero","onStop","serverNowPlayingSessionsSlice","reason","onFormSubmit","metricsPages","AvatarImg","data-autofocus","isLiveTVSession","origin","sessionKey","isDetailsExpanded","canStopSessions","selectSession","createServerNowPlayingSessionsSelector","serverNowPlayingSessions","sessionsByKey","createServerNowPlayingSessionSelector","isPlaying","playerUtil","hoverRef","useIsRefHovered","setInternalViewOffset","isStopSessionModalOpen","setIsStopSessionModalOpen","subtype","showProgressBar","isGame","screenshotUrl","showPreviewThumbnail","prePlayRoute","parentKey","grandparentKey","skipDetails","skipParent","extraType","finalKey","getPrePlayRoute","getTilePrePlayRoute","MediaBackgroundComponent","canShowStopButton","some","isPlayerUnstoppable","titleText","getTitleText","subtitleText","year","parts","getSubtitleText","secondSubtitleText","getSecondSubtitleText","posterUrl","parentThumb","grandparentThumb","posterHeight","posterWidth","metadataContext","LANDSCAPE","PORTRAIT","metadataSubtypes","getAspectRatio","getWidth","previewWidth","imageSrc","useTranscodeImage","onStopPress","intervalID","setInterval","clearInterval","Contain","Cover","Row","align","gap","verticalAlign","IconX","selectServerNowPlayingSessionKeys","sessionKeys","selectServerNowPlayingStopSessionError","stopSessionError","ownerFeatures","includes","hasSessions","onStopErrorDismiss","onTogglePress","dashboardNowPlayingShowDetails","TooltipTrigger","hideOnPress","tooltip","IconListRow","numberOfColumns","columns","mapSessionKeysToColumns","column","accountA","accountB","nameA","trim","nameB","accounts","activeAccount","onAccountSelect","onAccountSelectFromProps","accountID","nextAccount","account","StatisticsMetadataType","playHistory","statisticsMetadataType","Movie","TV","Music","Photo","Game","sortByDate","finalValue","suffix","isMoviesVisible","isTVVisible","isMusicVisible","isPhotosVisible","isGamesVisible","hasGameStatistics","getStatisticsMetadataTypeLabel","activeStatisticsMetadataType","onGraphMetadataTypeSelect","mediaStatistics","metadataType","hasExistingEntry","dateStatistics","formatData","isMoviesSelected","isTVSelected","isMusicSelected","isPhotosSelected","isGamesSelected","setActiveAccount","setActiveStatisticsMetadataType","userStatistics","statisticsMetadataTypes","sortedAccounts","serverAccountComparator","onMetadataTypeSelect","statisticsMetadataTypeKey","nextStatisticsMetadataType","dashboardPlayHistorySlice","getPlayHistoryRoute","ServerDashboardAccountMenuButton","PlayHistoryGraph","ServerResourceType","resources","PlexMediaServer","System","timeAgo","utilization","isPlexMediaServerVisible","isSystemVisible","getServerResourceTypeLabel","TIME_PERIOD_SPAN_SECONDS","activeResourceType","hostKey","processKey","hostColor","processColor","onGraphResourceTypeSelect","intervalStatistics","activeCPUResourceType","setActiveCPUResourceType","activeRAMResourceType","setActiveRAMResourceType","resourceTypes","isUnsupported","dashboardResourcesSlice","onCPUSourceTypeSelect","cpuResourceType","onRAMSourceTypeSelect","ramResourceType","onGraphCPUResourceTypeSelect","nextCPUResourceType","onGraphRAMResourceTypeSelect","nextRAMResourceType","ServerResourceGraph","createServerAccountsSelector","serverAccounts","topPlayed","isEmpty","art","finalTitle","filterTitle","getFullMetadataTitle","isParentType","globalViewCount","userCount","isArtist","isLibraryProvider","getMetadataItemPlayHistoryRoute","backgroundOpacities","getEmptyTitle","moviesStatistics","tvStatistics","musicStatistics","gameStatistics","showList","finalShowList","serverAccountsSlice","dashboardTopPlayedSlice","viewedAt","limit","activeClassName","iconClassName","finalAriaLabel","topUsers","GridDirection","Vertical","overscan","innerHorizontalPadding","innerVerticalPadding","outerPaddingTop","outerPaddingRight","outerPaddingBottom","outerPaddingLeft","getCellWidth","getCellHeight","dimensions","listTop","listLeft","innerViewportWidth","viewportWidth","innerViewportHeight","viewportHeight","cellWidth","cellHeight","cellsPerColumn","cellsPerRow","cellsPerPage","Horizontal","measurements","getColumn","row","getRow","cellX","cellY","scrollTop","scrollLeft","finalCellHeight","finalCellWidth","finalScrollTop","finalScrollLeft","cellsPerGroup","groupIndex","maxRenderedCells","visibleStartIndex","visibleEndIndex","renderStartIndex","renderEndIndex","clampListIndex","keyPropName","totalSize","layout","cellComponentFactory","isWaitingToRestoreScrollPosition","minPageCount","minPageSize","pageRequestDelay","onPageRequest","onListReady","onListUpdate","getListMeasurements","getRangesForPosition","cells","prevRenderStartIndex","isScrollingBackRef","isScrollingBack","renderSize","pageSize","hasMissingItem","isPrepend","isVisible","getPositionForIndex","isVirtual","cellIndex","calculateScrollPosition","cellPositionValue","shouldCenterCell","halfAvailableDimension","viewportDimension","cellDimension","centeredScrollPosition","scrollerKey","scrollerStyle","virtualListClassName","resizeTimeout","targetScrollIndex","shouldCenterScrollIndex","autoScroll","smoothScroll","renderAboveList","renderBelowList","onListReadyFromProps","virtualListProps","scrollPosition","setScrollPosition","setMeasurements","isListMeasured","listMeasurements","setIsListMeasurements","measureRef","callback","elRef","observeRef","observe","disconnect","clientWidth","clientHeight","scrollPositions","cellPosition","calculateScrollPositions","targetScrollTop","targetScrollLeft","onScrollPositionChange","scrollRestoreProps","onScrollPositionReady","shouldRestoreImmediately","onScrollPositionChangeFromProps","storageKey","pageStorage","lastScrollPositionRef","isRestoring","setIsRestoring","setTargetScrollTop","setTargetScrollLeft","restorePosition","lastScrollPosition","useScrollRestore","listMeasurements_","VirtualList","moveDurationMilliseconds","cellRef","prevCellIndex","prevCellX","prevCellY","isDifferentIndex","isPlaceholderRef","finalStyle","willChange","zIndex","pointerEvents","isOffscreenPlaceholder","backgroundColors","colors","getFormattedDuration","virtualCellProps","cell","useVirtualCell","playCount","totalDuration","durations","metadataTypes","columnWidth","rowHeight","createGridLayout","createHorizontalLayout","formattedStatistics","account_","notEnoughDataMessage","finalErrorMessage","cellProps","rangesRef","isPreviousEnabled","setIsPreviousEnabled","isNextEnabled","setIsNextEnabled","setTargetScrollIndex","setSmoothScroll","ranges","onPreviousPress","numVisibleItems","onNextPress","dashboardTopUsersSlice","IconChevronLeft","IconChevronRight","onDismissPress","hasDismissedServerDashboardUpsell","hasChartsFeature","hasDismissedUpsell","TopPlayed","AbstractReactView","SourceContextProvider","ServerDashboardPage","isEPGProvider","normalizeProviderDataIdentifier","uuid","selectUserFeaturesByUUID","spinnerSize","isSpinning","buttonProps","selectClassName","inputProps","selectedRegion","epgCountryRegions","selectEPGSettings","regionsPopulated","regionOptions","region","onCountryRegionSelect","epgSettingsSlice","regionKey","currentTarget","deviceKey","onEdit","selectedCountry","countries","epgCountries","hasAttemptedToSelectCountry","setHasAttemptedToSelectCountry","selectedCountryCode","code","countryOptions","country","onCountrySelect","countryCode","onEditPress","isCountryPresent","postalCode","example","inputContent","hasFocusOnMount","autoFocus","epgPostalCodeTimeoutID","prevSelectedCountry","postalCodeExample","postalCodeInput","setPostalCodeInput","onPostalCodeChange","placeholder","lineupGroups","epgLineupGroups","selectDVRSetup","selectedDVR","dvr","Lineup","lineup","lineupType","onSetStep","selectedDevice","selectedLineupGroups","channelMappings","isChannelMappingsPending","isLineupGroupsPending","lineupGroup","selectedSetupLineups","selectSetupSelectedLineups","selectedDVRLineups","isAddingLineup","setIsAddingLineup","prevSelectedRegion","prevPostalCode","canSwitchLineupProvider","isEverySelectedLineupPopulated","selectedLineupGroup","isSelectedLineupPopulated","isEverySelectedLineupChannelMappingsFetched","isChannelMappingsFetched","hasValidLocation","hasChangedLocation","onBackPress","DVRSetupStep","Mapping","dvrSetupSlice","onContinuePress","onUseXMLTVPress","XMLTV","Device","device","lineups","canContinue","epgLineups","isSubmitting","desktop","activities","activity","devices","mediaGrabberDevices","mediaGrabberDevice","parentID","deviceFallbackImgs","fallbackImg","getSourceTypeTitle","sources","sourceOptions","activeSource","getSourceOptions","onDeviceSourceSelect","activeDeviceKey","onSetupStart","selectDeviceChannels","createDeviceChannelsSelector","deviceChannels","hasXMLTVLineup","canUseXMLTV","make","tuners","Info","onXMLTVPress","onSetupStartPress","channelsMessage","channelCount","getChannelsMessage","tunersCount","DVRSetupDeviceSourceSelectInput","Direction","setupErrorMessage","isAddingDevice","showManualAddress","setShowManualAddress","prevIsAddingDevice","register","handleSubmit","onShowDeviceAddressPress","required","setActiveDeviceKey","isDevicesPending","isDevicesPopulated","isDiscoveringDevices","isCancellingChannelScan","availableDevices","selectChannelScanActivity","channelScanActivity","Context","deviceID","devicesDiscoverTimeoutID","showSpinner","pivot","View","pivots","pageType","getSourceRoute","onSetupPress","epgDownloadActivityID","sourceDirectory","hubKey","guidePivot","Guide","guideRoute","activeStep","step","isDone","isWaiting","loadingStep","setLoadingStep","selectedLineups","isChannelsPending","isChannelsPopulated","selectedLanguage","languages","epgLanguages","isChannelMappingsPopulated","languageCode","activityUUID","LoadingStep","IconDvrClockHour","IconDvrClockMinutes","IconDvrClockSeparator","hasScannedChannels","isDeviceChannelsPopulated","onScanPress","onCancelPress","CircularProgressBar","labelText","firstError","SelectInput","validations","valueItem","initializeInputState","shallowEqual","previousFormState","handleStateChange","transformValue","hasBlurred","calculateErrors","isPlainObject","newValue","isArray","fn","propsErrors","hasPropsErrors","createChainedCallback","contextTypes","formInput","formGroupClassName","formLabelClassName","helpText","CheckInput","setRef","_checkbox","checked","checkedValue","uncheckedValue","setIndeterminate","indeterminate","inputClassName","checkboxText","CheckInputGroup","_select","inputElement","focusOnMount","focus","selectTextOnFocus","selectionStart","selectionEnd","NumberInput","Slider","button","_startDrag","pageX","pageY","onMouseMove","isDragging","_getValueForPosition","trackRect","_trackRef","getBoundingClientRect","isVertical","onMove","positionValue","steppedValue","_getSteppedValue","onDocumentMouseMove","_drag","onDocumentTouchMove","onDocumentMouseUp","_stopDrag","onDocumentTouchEnd","_stopListeningForDrag","isTouch","_changeValue","_listenForDrag","onDragStart","classList","onDragComplete","viewportY","offsetHeight","offsetWidth","stepSize","stickiness","nextValue","positionDelta","trackClassName","secondaryFillClassName","fillClassName","thumbClassName","thumbTrackClassName","tabIndex","secondaryMin","secondaryMax","showSecondaryFill","showFill","autoHideThumb","onWheel","percentage","getPercent","_getStickyValue","scaleProperty","translateProperty","thumbTransform","secondaryStartPercentage","secondaryEndPercentage","fillTransformValue","secondaryScaleTransform","positionStyle","fillStyle","secondaryFillStyle","aria-labelledby","aria-valuemax","aria-valuemin","aria-valuenow","SliderInputGroup","stepSizeString","fractional","fixedValue","valueModifier","TextInputGroup","mapEnumValues","enumValues","valueModifiers","playbackSpeed","SettingInputGroup","summary","initialValueModifier","scanPrefs","scanNetworks","prefs","networks","network","","pref","rowWidth","viewportOptions","sliderTrackSize","sliderThumbSize","serverMenuItemHeight","sourceMenuItemHeight","sourceMenuItemGutter","posterCenterCircleSize","posterBadgeHeight","posterHoverSlideDistance","posterIconPadding","posterProgressHeight","v4CardBorderRadius","v4CardShadowSize","v4CardTitleGap","v4CardTitleHeight","v4CardCircleSize","listButtonHeight","hubCellHeaderBottomPadding","hubCellHeaderTopPadding","v4ListSpacing","v4SpotlightHeight","pagePadding","v4PagePadding","v4PagePaddingAlt","pageHeaderRowHeight","pageHeaderLeftMargin","pageHeaderTabButtonLeftRightMargin","recordingPriorityPaneWidth","recordingPriorityPaneBorderWidth","recordingPriorityDragHandleWidth","channelGridRowHeight","channelGridTitleColumnWidth","channelGridChannelColumnWidth","channelGridChannelOverflowWidth","channelGridChannelIconWidth","channelGridBorderSize","jumpBarCharacterHeight","jumpBarCharacterPadding","jumpBarGutter","jumpBarMargin","playCellWidth","actionsCellWidth","actionsCellPadding","summaryCellHeight","simpleSummaryCellHeight","summaryCellPadding","trackCellHeight","trackCellPadding","mosaicCellPadding","timelineGutter","prePlaySummaryMaxWidth","prePlayPosterMinWidth","prePlayPosterMaxWidth","prePlayPosterWidthRatio","prePlayContentPadding","prePlayRatingBase","v4PrePlayListTitleGap","v4PrePlayDividerHeight","postPlayPosterWidth","postPlayTitleHeight","postPlayAutoPlayHeight","dvrSetupImageWidth","dvrSetupChannelMappingItemHeight","dvrSetupSpinnerSize","playerControlsHeight","playerControlsMinWidth","playerControlsNarrowHeight","playerControlsNarrowBreakpoint","playerControlsPosterHeight","playerControlsPosterLeftGutter","playerControlsPosterBottomGutter","playerControlsNarrowPosterBottomGutter","playerControlsContentSpacing","playerControlsSquarePosterWidth","playerControlsLandscapePosterWidth","playerInfoBarHeight","playerTopControlsHeight","playerSideControlsWidth","playerOverlayActionEdgeGutter","playerIconButtonSize","playerIconButtonSpacing","playerVolumeSliderWidth","playerVolumeSliderHeight","seekBarHeight","seekBarTooltipMarginBottom","seekBarTooltipHeight","seekBarTooltipSmallWidth","seekBarTooltipLargeWidth","playQueueItemHeight","playQueueMoveButtonWidth","playQueueSidePadding","lyricsLineHeight","lyricsLineWidth","playerMediaOverlayInnerMargin","playerMediaOverlayOuterMargin","playlistItemCardWidth","playlistBadgeSize","navigationIconSize","sourceSidebarIconSize","sourceSidebarWidth","sourceSidebarExpandedWidth","sourceSidebarLeftGutter","sourceSidebarItemHeight","sourceSidebarLinkHoverStatusbarAllowance","sourceSidebarServerHeaderIconSize","homeServerListItemHeight","serverSelectMenuWidth","heroBadgeHeight","heroPageMinHeight","serverShareListRowHeight","lineupSettingChannelHeight","spotlightHubCellHeight","spotlightHubCellGap","watchTogetherLobbyPosterWidth","watchTogetherLobbyTitleHeight","downloadCellHeight","liveTVSettingsDeviceGap","liveTVSettingsDeviceWidth","liveTVSettingsBorderRadius","liveTVSettingsDeviceBorderSize","liveTVSettingsChannelItemHeight","liveTVSettingsChannelItemWidth","liveTVSettingsChannelThumbWidth","liveTVSettingsChannelThumbHeight","platformThumbSize","kinds","lineupChannel","callSign","selectSelectedLineupsUnmemoized","dvrLineups","setupLineups","createShallowEqualSelector","lineupChannels","channelsByLineupUUID","channel","getLineupChannelOptionLabel","lineupUUID","selectedChannelKey","selectedLineupIdentifier","groupedLineupChannels","showSelectOptions","setShowSelectOptions","selectedLineupChannel","onSelectPress","selectedValue","channelIndex","signalQuality","channelMappingItem","enabled","channelKey","lineupIdentifier","onEnabledChange","onChannelKeyChange","deviceIdentifier","signalStrength","drm","isDeviceChannelHD","isLineupChannelHD","SignalQuality","LineupChannelSelect","allChannelMappingsEnabled","allChannelMappingsDisabled","onAllChannelMappingsEnabledChange","indeterminateSetter","element","onRescanPress","createVerticalLayout","onChannelMappingChange","setAllChannelMappingsEnabled","setAllChannelMappingsDisabled","formMethods","defaultValues","setValue","watch","watchedFields","allDisabled","allEnabled","_mapping","mapping","onChannelMappingEnabledChange","onChannelMappingChannelKeyChange","parsedData","epgSettings","dvrDevice","ChannelMapping","mappings","deviceChannelIdentifiers","channelMappingDeviceIdentifiers","channelMappingKeys","Set","deviceChannel","channelMapping","hd","isChannelMissing","aSplit","bSplit","aValue","bValue","initialValues","match","selectedLineup","epgLineupOptions","epgLineup","selectedLineupUUID","lineupGroupUUID","DeleteButton","onDeletePress","selectChannelMappings","selectEPGLineupScanActivity","epgLineupScanActivity","isDeviceChannelsPending","matchedChannelsPerLineupUUID","getMatchedChannelsPerLineupUUID","onAddLineupPress","AddLineup","onRemoveLineupGroupPress","FORM_ID","DEVICE_CHANNEL_MAPPING_HEADER_HEIGHT","dvrID","epgLineupsMeasureRef","epgLineupsHeight","modalBodyRef","modalBodyHeight","selectedDVRError","isSavingDVR","prevIsSavingDVR","prevSelectedLineups","Download","scrollUpdate","form","selectedLanguageCode","languageOptions","onLanguageSelect","isLanguagesPopulated","channelMappingsError","hasLanguage","programGuideTitle","xmltvPath","onUseLocationPress","latestLineupGroup","xmltvPathPlaceholder","DVRSetupLanguageSelect","metricsContext","metricsContextName","setStep","nextStep","DVRSetupStepComponent","getDVRSetupStepComponent","epgIdentifier","appState","dvrSettingsUI","selectDVRManagement","dvrManagement","dvrSetup","livetv","guideChannels","usesGridKey","gridKey","usesVcn","vcn","guideChannel","existingChannelIndex","isHd","THUMB_WIDTH","THUMB_HEIGHT","tunerColors","selectDeviceIndices","deviceIndices","moduloIndex","selectEPGLoadActivity","lineupChannelsError","isRefreshing","liveTVSlice","legacyAction","onCancel","onCancelFromProps","isAccordGiven","setIsAccordGiven","trackClick","onAccordChange","isCancelButtonDisabled","isConfirmButtonSpinning","accordMessage","confirmLabel","cancelLabel","hideCancelButton","infoMessage","onConfirm","isAccordRequired","isConfirmButtonDisabled","MetricsClickTracker","dvrs","DVRSettingsModalContent","isSaving","saveError","getErrorMessageFromXHR","DVRSettingsModalContentConnector","saveDVRSettings","clearDVRSettingsSaveError","hidden","IconReload","IconSettings","metricsContexts","hasDVRFeature","hasLiveTVSetupFeature","removeDVRModalState","useDisclosure","dvrSettingsModalState","epgLoadActivity","isCancellingReloadGuide","isDeletingDVR","redispatchLegacyServerAction","useRedispatchLegacyServerAction","onRemoveDVRConfirm","onReloadGuidePress","onCancelReloadGuidePress","hasPrefs","Setting","hasFreeLiveTVDVRSettings","version","showDVRSettings","subtitle","IconToolbarFilterAdd","isSavingChannelMappings","channelMappingsSaveError","isLineupChannelsPending","isLineupChannelsPopulated","prevIsSavingChannelMappings","matchCount","emptySrc","DVRDeviceSettingsModalContent","onDeviceTitleChange","deviceTitle","DVRDeviceSettingsModalContentConnector","formValues","saveDeviceSettings","saveDeviceTitle","clearDeviceSettingsSaveError","tunerCount","canRemoveDevice","deviceSettingsModalState","manageChannelsModalState","selectActiveTunerCount","activeTunerCount","createTuners","isDead","enabledChannelsCount","onRemoveDevicePress","onManageChannelsModalClose","onDeviceSettingsModalClose","tuner","onAddDevicePress","hasUnsupportedServer","moreInfoClassName","moreInfo","PlexPassUpsellButton","onPlexPassPress","isPlexPassModalOpen","onPlexPassModalClose","modalMetricsProperties","PlexPassModal","ServerFeaturePlexPassUpsellButtonConnector","selectUser","user","isClaimed","isSignedIn","signedIn","hasPlexSubscription","IconMarketingDvr","hasDVRSetup","TagInjector","tags","open","upsellOrigins","libraryManagement","canMergeRecentlyAdded","hasSetting","isMergeRecentlyAddedEnabled","isUpdating","libraryManagementSlice","onSettingChanged","IconGames","IconPlaylist","assertNever","timeoutRef","HTMLElement","onBodyClick","alternateClassName","hoveredClassName","isAlternate","AgentUpgradeLibraryModal","allAvailableUpgrades","selectAvailableLibraryUpgrades","availableUpgrades","availableMachineIdentifier","availableSourceDirectory","targetMachineIdentifier","targetSourceDirectory","upgradeAllLibraries","refreshMetadata","submitForm","useModalState","Modal","hasPlexMovieUpgrade","hasPlexSeriesUpgrade","getDirectoryUpgrade","useAgentUpgradeLibraryModal","IconUpCircledFilled","MenuSeparator","onMenuCloseComplete","analyzeModalState","refreshAllModalState","emptyTrashModalState","deleteModalState","providerActions","onAnalyzePress","onRefreshAllPress","onEmptyTrashPress","libraryName","DISMISS_SETTING","onAccept","isDismissed","setIsDismissed","hasDismissedWarning","hasHomeLibraryAccessLabels","onDismissChange","onAcceptPress","IconReorder","sourceURI","onRemoveItem","hubWarningModalState","useIsFocused","onDispatchPromote","promoted","onPromoteToRecommended","e","promotedToRecommended","onPromoteToOwnHome","promotedToOwnHome","onPromoteToSharedHome","promotedToSharedHome","onRemove","onAcceptWarning","rowIdentifier","fieldRecommended","fieldOwnHome","fieldSharedHome","draggableId","provided","snapshot","innerRef","draggableProps","dragHandleProps","deletable","hubs","libraryHubs","onDragEnd","fromIndex","toIndex","destination","newOptions","option","splice","removed","onResetPress","droppableId","droppableProps","hubOptions","isDraggingOver","moreButtonID","actionsMenuState","hubListState","createSourceFromIdentifiers","serverIdentifier","getHubManagementKey","isActionsVisible","route","isScanning","selectProviderContentDirectoryUpdateActivity","librarySectionID","refreshing","useLibraryUpdating","isLoading","canManageHubs","onUpgradeLibraryPress","leafType","getMetadataTypeChild","contentDirectoryType","agent","agentIdentifiers","metadataIcon","hasPlexMusicUpgrade","isLibraryUpgradeAvailable","libraryTitle","onToggle","DisclosureArrow","IconEditFilled","IconOverflowVerticalAlt","LibraryActionsMenu","AbstractModel","identifierUrl","syncedAttrs","attrTypes","title1","title2","prefsKey","searchKey","installed","noCache","allowSync","hasStoreServices","share","lastAccessedAt","syncedRelations","metadataList","relationClass","MetadataListModel","containerKey","skipCache","derivedAttrs","augmentResponseText","responseText","responseType","responseTypes","replaceMetadataXMLElementNames","includeDirectories","has","typeMatch","metadataItems","parser2","Metadata","search","AbstractCollection","comparator","deprecatedPlugin","nextDeprecatedPlugins","paginatedListModelMixin","collectionName","getPaginatedUrl","sessionAttrs","subset","currentPageStart","currentPageSize","populatedRange","viewGroup","rootPropertyName","setOptions","parseOptions","defaults","startPopulatedRangeMonitor","BaseModal","submitBtn","changes","escapedTitle","onInputChange","hide","hasClass","getSaveParams","urlRoot","getXHROptions","always","onSettingsClick","ServerSettingCollection","fetch","onUninstallClick","navLinks","deprecatedPlugins","videoCollection","filterByType","musicCollection","photoCollection","allCount","hasInstalledChannels","videoCount","musicCount","photoCount","onNavClick","onAllClick","onVideoClick","onMusicClick","onPhotoClick","MESSAGE_TYPES","messageTypes","BaseMediaServerEventConnection","socketConnectionUri","resolveUrl","connection","ConnectionModel","appendToken","getMessageTypes","ToolbarButton","hasLabel","tooltipAttachment","tooltipClassName","tooltipFocusedClassName","tooltipAttachments","level","linkClassName","buttonClassName","hasMenu","ServerLogLevelMenu","onMenuPress","onAllPress","onResetLogLevels","onLogLevelSelect","logLevel","onToggleLogLevel","_buttonID","getUniqueElementID","logLevels","mapStateToProps","serverLogPage","IconCircleBackslash","undefined","IconTimer","ServerLogFilterInput","onTextFilterChange","_clearOnTextFilterChangeTimeout","_timeoutID","filterFromStore","ServerLogTimeFilterInputs","_flushValues","onTimeFilterChange","timeFilterStart","timeFilterEnd","onFilterStartChange","onFilterEndChange","timeFilterStartFromStore","timeFilterEndFromStore","isTimeFilterStartValid","isTimeFilterEndValid","ServerLogPageHeader","showTimeFilter","showRawText","unfilteredLogLinesCount","logLines","onToggleTimeFilter","onToggleRaw","onClearLog","hiddenLinesCount","ServerLogLevelMenuConnector","serverLogPageActions","Measure","_requestFrame","_clearTimeout","_cancelFrame","_frameRequestID","_measure","_requestTimeout","_measureTimeoutID","ignoreWidth","ignoreHeight","ignorePosition","ignoreTransforms","isMeasured","scrollWidth","scrollHeight","container","_container","boundingRect","containerWidth","containerHeight","hasMeasuredChanged","hasPositionChanged","hasWidthChanged","hasHeightChanged","_reset","getComputedStyle","paddingRight","paddingTop","paddingBottom","onMeasure","_setContainerRef","onContainerRef","_setExpandContainerRef","_expandContainer","_setShrinkContainerRef","_shrinkContainer","onScroll","expandContainer","shrinkContainer","isControlled","_getListState","_keyPool","pool","itemsByKey","keysByItem","counter","shift","prefix","itemIndex","generateKey","deleteItemByKey","createKeyPool","_shouldRequestPage","_checkForPageRequest","isScrolling","skipRenderCells","cellRenderer","partiallyVisibleStartIndex","partiallyVisibleEndIndex","moveIndex","listStyle","_getListStyle","landmarks","getLandmarks","getListStyle","itemsOffset","hasNestedList","shouldRequestPage","getKeys","renderCells","listState","scrollIndex","onListScrollIndexChange","_currentScrollIndex","isRestoringScrollPosition","scrollPositionStorageKey","_scrollPositionKey","_restoreScrollPosition","isInitialScrollToIndex","hasScrollIndexChanged","hasShouldCenterScrollIndexChanged","scrollerWidth","scrollerHeight","scrollDirections","hasScrollPositionsChanged","scrollerClassName","enableChildrenProps","isCellPlaceholder","prevItem","isSameItemAtDifferentIndex","forceRender","useReducer","isMovingRef","isMoving","transitionDuration","getCellStyle","lastVisibleItemRef","isPlaceholder","highlightedLineIndex","isHighlighted","thread","time","onLogLinePress","lineClassName","getLineClassName","filterText","filterWithThreadRemoved","RegExp","escapeRegExp","getLogContainerStyle","getLevelLabelStyle","ServerLogLineModal","onClosePress","onShowContextPress","onJumpToContext","onFilterFromPress","onFilterToPress","onThreadPress","onTimeMenuPress","isTimeMenuOpen","onTimeMenuClose","_timeMenuButtonID","ServerLogRawText","lines","line","VERTICAL","getListStyleMemoKey","getListStyleMemo","getPositionForIndexCache","fields","memoKey","HORIZONTAL","getRelativeIndex","delta","relativeDirection","directionsAlign","workingDelta","firstIndex","lastIndex","getFirstCellInColumn","lastLogicalColumnIndex","columnLastIndex","getLastCellInColumn","getFirstCellInRow","lastLogicalRowIndex","rowLastIndex","getLastCellInRow","workingIndex","getCoordinateDistance","indexA","indexB","x1","x2","y1","y2","sqrt","cacheKey","ServerLog","scrollerRef","_scrollerRef","isSticky","_lastScrollTop","scrollIndexAfterFilterChange","selectedLogLine","onClearFilter","logLine","onHighlightLine","onJumpToLatestPress","renderLogLine","ServerLogLineConnector","showSelectedLogLineModal","hideLogLinesScroller","getFileDragError","dataTransfer","ServerLogPage","onDragOver","isDraggingFile","fileDragError","onDragLeave","onDrop","isDroppingFile","file","files","fileReader","FileReader","readAsText","metricsPane","draggingFileMessage","PageConnector","pane","ServerLogPageHeaderConnector","mapDispatchToProps","dispatchClearLog","dispatchLoadLogFile","_stopServerEventManager","appModel","_serverEventManager","ServerEventManager","isValidServer","supportsLongPolling","ServerEventConnection","ServerRetryManager","MediaServerEventConnectionRetryManager","isResolved","onServerResolvedChange","_isServerEventManagerStopped","stop","friendlyName","UnconnectedServerLogPageConnector","downloadPath","ServerTroubleshootingPane","cleanBundlesProgressChanged","isCleanBundlesInProgress","optimizeDatabaseProgressChanged","isOptimizeDatabaseInProgress","derivedState","isCleanBundlesComplete","isOptimizeDatabaseComplete","downloadDatabasesUrl","downloadLogsUrl","cleanBundlesError","optimizeDatabaseError","showDownloadDatabases","showDownloadLogs","onCleanBundlesPress","onOptimizeDatabasePress","dispatchCleanBundles","serverActions","dispatchOptimizeDatabase","hideAlerts","createServerDownloadUrlSelector","createServerActivitySelector","cleanBundlesActivity","optimizeDatabaseActivity","diagnostics","ServerTroubleshootingPaneConnector","IconActivity","remoteAccessStateIconProps","IconQuestionCircledFilled","IconCheckForm","remoteAccessState","IconWarningBadge","isOwned","isShared","hasSettings","isSettingsPopulated","nowPlayingSessionsCount","hasConversions","backgroundTranscodeJobs","getRemoteAccessState","cloudAccount","metricsPanePrefix","groups","createStatusIndicator","paneComponent","visibleDirectories","onAddLibraryPress","redirect","onScanLibrariesPress","onCancelScanLibrariesPress","setupModalState","isDVRPending","dvrError","isUIPopulated","isDvrsPending","EmptyPageContent","ErrorPageContent","hasStreamingLogs","pageComponent","ServerLogPageConnector","allowChannelAccess","deprecatedPluginsState","setDeprecatedPluginsState","isDeprecatedPluginsPending","deprecatedPluginsError","useEffectOnce","EmptyPage","ErrorPage","MarionetteComponent","view","viewOptions","evaluateIsVisible","createServerNowPlayingSessionsCountSelector","availableGroups","section","visibleItems","groupAcc","statusIndicator","settingsSection","BaseImage","onInfoClick","update","contributors","$","each","draggable","agentLabel","typeNavItems","agentNavItems","agentsList","contributorsList","bindAllWhenRendered","agentTypes","currentType","populateAgents","agents","AgentCollection","mediaTypeID","populate","filteredAgents","onAgentsReset","selectAgent","currentAgent","additionalAgents","relatedAgentID","primaryAgentID","currentView","onContributorsSave","populateContributors","requests","onContributorsReset","selectedAgent","findWhere","filterByContributors","additionalAgent","onAgentTypeClick","$target","parent","onAgentClick","order","silent","enable","updateModel","onBeforeSave","onAfterSave","isSuccess","channelSettings","channelSetting","unprefixedKey","avatarUrl","isSigningOut","onSignOutPress","ClaimedServerAvatarConnector","selectIsBusy","selectAuthCodeExchange","authCodeExchangeProps","isBusy","dispatchSignOutServer","ClaimedServerConnector","serverCloudAccount","serverCloudAccountUsername","authToken","dispatchClaimServer","ClaimServerSignedInButtonConnector","onClaimServerPress","dispatchReadStoredPIN","dispatchCreatePIN","dispatchSignInThenClaimServer","ClaimServerSignedOutLaunchButtonConnector","shouldCreatePIN","pinID","ServiceAuthUrlConnector","RedirectToConnector","dispatchPreloadPIN","dispatchBeginPolling","dispatchStopPolling","ClaimServerSignedOutPollButtonConnector","onStillTherePress","isAnonymousUser","isUserRestricted","ClaimServerButtonConnectorComponent","SIGNED_IN_BUTTON","SIGNED_OUT_POLL_BUTTON","SIGNED_OUT_LAUNCH_BUTTON","claimComponents","UnclaimedServerConnector","componentType","selectIsAnonymousUser","isUserSignedIn","shouldClientPoll","isServerClaimed","appStore","splitList","escapedVersion","added","fixed","viewStates","serverUpdateStates","CHECKING","checkForUpdatesBtn","downloadUpdatesContainer","downloadProgressContainer","downloadProgressLabel","updateProgressLabel","updateErrorMessage","installManualLink","adapters","canCheckForUpdate","checkForUpdates","download","dismissUpdates","downloadUpdates","installUpdates","waitForInstall","onWaitingForInstallCheck","onServerConnectedChange","setCurrentViewState","viewState","currentViewState","showUpdateState","previous","INSTALLING","AVAILABLE","NOTIFY","hasReleaseNotes","ERROR","cloudServer","DONE","NONE","onViewStateChange","isRendered","onIsCheckingChange","onStateChange","_waitingTimeoutID","xhrOptions","onCheckForUpdatesClick","onDownloadUpdatesClick","onInstallUpdatesClick","onInstallManualClick","signIn","isNinja","languageSettings","enumLanguages","default","advanced","manualPortMappingMode","manualPortMappingPort","wanTotalMaxUploadRate","uploadContainer","publishSetting","mappingModeSetting","mappingPortSetting","totalRateSetting","perStreamRateSetting","isSignedOut","hasPrivateAddress","privateAddress","privatePort","hasPublicAddress","publicAddress","publicPort","forceAdvanced","mappingError","canEditPort","hasMappingSettings","hasUploadLimitSettings","uploadSettings","totalRateSettingID","totalRateSettingValue","enableUploadForm","updateUploadSetting","connect","reconnect","saveChanges","resolve","onErrorInputChange","prop","onSignInClick","navigateToRoute","onEnableClick","onDisableClick","isPrivateConnection","hasManualPortMappingModeEnabled","warningMessage","hasDanger","onRetryClick","onTotalRateChange","bitrate","onPerStreamRateChange","onUploadFormSubmit","showWarning","inline","background","setup","noPlaceholder","pixelRatio","cols","border","repeat","unique","OK","FILE_UNAVAILABLE","METADATA_ERROR","PROFILE_ERROR","IO_ERROR","TRANSCODER_ERROR","UNKNOWN_ERROR","ANALYSIS_ERROR","DOWNLOAD_FAILED","CANNOT_TRANSCODE","processingStateContext","contexts","onProcessingStateChange","processingState","scrollThreshold","loading","listRegion","listModel","handleScroll","whenRendered","base","itemsCount","decimals","failure","populatePage","populateRange","on","off","currentState","innerHeight","compositeImage","posterSizes","onTranscodeJobsChange","resetState","modelListeners","itemsFailedCount","stopImmediatePropagation","onEditClick","ConvertModal","emptyView","previousItemID","isTranscoderRequired","isUpgradeRequired","playlists","BackgroundProcessingListCollection","allowInCache","isSupported","canTranscode","playlist","reject","enterNextState","toggleMessage","onDeleteAllVersionsClick","onStatusConversionClick","remoteAccessDecorators","connecting","disconnecting","unreachable","ok","nav","panes","general","remoteAccess","versions","library","transcoder","dlna","butler","extras","defaultGroup","tempSettings","cloneDeep","tempAccount","tempChannelSettings","showAdvanced","initGroups","onSettingValueChange","representedGroups","availableGroup","paneDef","addGroup","representedGroup","attrs","showPane","paneID","currentPane","flushChanges","PaneViewConstructor","triggerMethod","channelChanges","getPrefixedChanges","accountChanges","channelParams","channelRootUrl","channelUrl","changedKeys","changedKey","tempModel","onButlerUpdateChannelChange","prefixChanges","lastIndexOf","connected","onToggleAdvancedClick","showingAdvanced","showAdvancedSettings","autoCheckSetting","IconAlertRound","activeConnectionUri","shouldRender","encodedMachineIdentifier","localUrl","updateUrl","showButton","hasCommunityFeatures","serverAttrs","sourceTitle","settingsGroupTitle","settingsTitle","shouldRenderDVROutdatedServerBanner","serverTitleAttrs","getServerTitle","detail","getServerDetail","serverTitle","DVROutdatedServerBannerConnector","createVisibleSettingsSectionsSelector","selectStableProvider","visibleSections","settingsSections","sectionKey","groupKey","findGroup","isInstallingServerUpdate","isUnauthorized","isSettingAccessible","isSettingsPending","viewDataErrorMessage","isViewDataPending","Page","Pane","contentView","otherOptions","InstallingServerUpdatePageConnector","ServerUnavailableErrorPageConnector","ServerUnauthorizedErrorPage","getServerSettingsMetricsProps","ServerSettingsPageHeaderConnector","ServerMenuItem","friendlyNameClassName","detailsClassName","isFullOwnedServer","isConnecting","isOutOfDate","relay","isPrivate","statusWithDetail","getServerDetailWithStatus","MAX_HEIGHT","serverEntityIDs","selectedServerEntityID","maxHeight","ServerSettingsServerMenuItemConnector","secondaryTitleClassName","primaryTitle","secondaryTitle","spinnerComponent","CustomSpinner","aria-haspopup","titleClassName","iconSrc","iconNode","sidebarIcon","child","getValidComponents","SidebarServerUnavailableMessage","onRemoveServerPress","isRemoveModalOpen","onRemoveConfirm","onDeleteServerConfirm","onRemoveCancel","onAllowInsecureConnectionPress","isAllowInsecureConnectionModalOpen","onAllowInsecureConnectionCancel","presence","isBundled","isCloudServerResourcesPending","isFullServer","httpsRequired","hasHttpsConnections","hasFallbackConnections","onTryAgainPress","showAllowFallbackButton","showFallback","showWhereIsMyServer","showRemoveServer","serverName","tryAgainLabel","IconRefresh","IconLockUnlockedFilled","AllowHttpFallbackModalConnector","connectHOC","Connector","propsMetricsContext","ConnectWithMetrics","connectWithMetrics","selectCloudServer","isResourcesPending","headerContainerClassName","headerClassName","selectableKey","selectedKey","isFramed","SidebarServerUnavailableMessageConnector","sectionIndex","createServerSettingsSidebarKey","dispatchPopulateSettings","ServerSettingsSidebarListConnector","_populate","SCROLL_TOP_KEY","SettingsSidebar","_serverMenuButtonID","manageableServerEntityIDs","serverMenuServerEntityID","MetricsPageTracker","isDelegated","ServerSettingsServerMenuButtonConnector","selectManageableServerEntityIDs","findServer","initializeServerSettingsView","initializeAlertsView","initializeConversionView","initializeServerDashboardView","serverFlexModel","settingsPromise","playQueues","BackgroundProcessingQueueCollection","playQueuePromise","sidebarKey","SERVER","FullPage","SettingsSidebarConnector","ServerSettingsPageConnector","createLibraryProviderEntityID","selectServer","connectionTestResult","UserPageConnector","Handlebars","depth0","helpers","partials","compilerInfo","merge","__default","obj","__esModule","stack1","buffer","self","escapeExpression","program2","hash","unless","inverse","noop","program","functionType","program4","program6","program9","program7","program13","program10","opened","program11","program16","program14","program19","program17","program22","program20","program25","program23","program30","program33","program31","description","program34","program36","program39","program37","program45","program40","program43","program41","program46","program49","program47","closed","program52","program50","helper","isPrimary","programWithDepth","depth1","typeString","plural","program12","program8","program21","program24","program29","program27","program35","program42","program44","program51","program53"],"sourceRoot":""}